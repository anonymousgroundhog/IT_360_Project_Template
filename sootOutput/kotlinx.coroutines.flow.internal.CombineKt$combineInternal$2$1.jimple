final class kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlinx.coroutines.flow.Flow[] $flows;
    final int $i;
    final java.util.concurrent.atomic.AtomicInteger $nonClosed;
    final kotlinx.coroutines.channels.Channel $resultChannel;
    int label;

    void <init>(kotlinx.coroutines.flow.Flow[], int, java.util.concurrent.atomic.AtomicInteger, kotlinx.coroutines.channels.Channel, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1 r0;
        kotlinx.coroutines.channels.Channel $r3;
        kotlin.coroutines.Continuation $r4;
        kotlinx.coroutines.flow.Flow[] $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        int $i0;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.util.concurrent.atomic.AtomicInteger;

        $r3 := @parameter3: kotlinx.coroutines.channels.Channel;

        $r4 := @parameter4: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.flow.Flow[] $flows> = $r1;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int $i> = $i0;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.util.concurrent.atomic.AtomicInteger $nonClosed> = $r2;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.channels.Channel $resultChannel> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1 r0, $r6;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.channels.Channel $r5;
        kotlinx.coroutines.flow.Flow[] $r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r6 = new kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.flow.Flow[] $flows>;

        $i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int $i>;

        $r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.util.concurrent.atomic.AtomicInteger $nonClosed>;

        $r5 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.channels.Channel $resultChannel>;

        specialinvoke $r6.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: void <init>(kotlinx.coroutines.flow.Flow[],int,java.util.concurrent.atomic.AtomicInteger,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)>($r3, $i0, $r4, $r5, $r2);

        $r2 = (kotlin.coroutines.Continuation) $r6;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1 r0;
        kotlin.coroutines.Continuation $r4;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.CoroutineScope $r3;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1 r0;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;
        kotlinx.coroutines.CoroutineScope $r1;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1;

        $r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.Throwable r4, r13;
        java.lang.IllegalStateException $r3;
        kotlinx.coroutines.channels.Channel $r8;
        kotlin.coroutines.Continuation $r10;
        kotlinx.coroutines.flow.Flow[] $r5;
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1 $r7;
        java.util.concurrent.atomic.AtomicInteger r11;
        kotlinx.coroutines.channels.SendChannel r12;
        int $i0;
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1 r0;
        kotlinx.coroutines.flow.Flow $r6;
        kotlin.Unit r14;
        kotlinx.coroutines.flow.FlowCollector $r9;
        java.lang.Object $r1, $r2;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label05;
            case 1: goto label02;
            default: goto label01;
        };

     label01:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label02:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label03:
        goto label08;

     label04:
        r4 := @caughtexception;

        goto label11;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label06:
        $r5 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.flow.Flow[] $flows>;

        $i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int $i>;

        $r6 = $r5[$i0];

        $r7 = new kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1;

        $r8 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.channels.Channel $resultChannel>;

        $i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int $i>;

        specialinvoke $r7.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: void <init>(kotlinx.coroutines.channels.Channel,int)>($r8, $i0);

        $r9 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int label> = 1;

        $r1 = interfaceinvoke $r6.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r9, $r10);

     label07:
        if $r1 != $r2 goto label08;

        return $r2;

     label08:
        r11 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.util.concurrent.atomic.AtomicInteger $nonClosed>;

        $i0 = virtualinvoke r11.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i0 != 0 goto label09;

        $r8 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.channels.Channel $resultChannel>;

        r12 = (kotlinx.coroutines.channels.SendChannel) $r8;

        staticinvoke <kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)>(r12, null, 1, null);

     label09:
        r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r14;

     label10:
        r13 := @caughtexception;

        r4 = r13;

     label11:
        r11 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.util.concurrent.atomic.AtomicInteger $nonClosed>;

        $i0 = virtualinvoke r11.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i0 != 0 goto label12;

        $r8 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.channels.Channel $resultChannel>;

        r12 = (kotlinx.coroutines.channels.SendChannel) $r8;

        staticinvoke <kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)>(r12, null, 1, null);

     label12:
        throw r4;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label10;
    }
}
