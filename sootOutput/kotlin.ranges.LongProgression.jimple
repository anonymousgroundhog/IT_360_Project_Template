public class kotlin.ranges.LongProgression extends java.lang.Object implements java.lang.Iterable, kotlin.jvm.internal.markers.KMappedMarker
{
    public static final kotlin.ranges.LongProgression$Companion Companion;
    private final long first;
    private final long last;
    private final long step;

    static void <clinit>()
    {
        kotlin.ranges.LongProgression$Companion $r0;

        $r0 = new kotlin.ranges.LongProgression$Companion;

        specialinvoke $r0.<kotlin.ranges.LongProgression$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.ranges.LongProgression: kotlin.ranges.LongProgression$Companion Companion> = $r0;

        return;
    }

    public void <init>(long, long, long)
    {
        byte $b3;
        kotlin.ranges.LongProgression r0;
        long $l0, $l1, $l2;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: kotlin.ranges.LongProgression;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label2;

        $b3 = $l2 cmp -9223372036854775808L;

        if $b3 == 0 goto label1;

        r0.<kotlin.ranges.LongProgression: long first> = $l0;

        $l0 = staticinvoke <kotlin.internal.ProgressionUtilKt: long getProgressionLastElement(long,long,long)>($l0, $l1, $l2);

        r0.<kotlin.ranges.LongProgression: long last> = $l0;

        r0.<kotlin.ranges.LongProgression: long step> = $l2;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Step must be greater than Long.MIN_VALUE to avoid overflow on negation.");

        throw $r1;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Step must be non-zero.");

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        byte $b2;
        kotlin.ranges.LongProgression r0, $r2;
        java.lang.Object $r1;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: kotlin.ranges.LongProgression;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlin.ranges.LongProgression;

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke r0.<kotlin.ranges.LongProgression: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = (kotlin.ranges.LongProgression) $r1;

        $z0 = virtualinvoke $r2.<kotlin.ranges.LongProgression: boolean isEmpty()>();

        if $z0 != 0 goto label2;

     label1:
        $l0 = r0.<kotlin.ranges.LongProgression: long first>;

        $r2 = (kotlin.ranges.LongProgression) $r1;

        $l1 = $r2.<kotlin.ranges.LongProgression: long first>;

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label3;

        $l0 = r0.<kotlin.ranges.LongProgression: long last>;

        $r2 = (kotlin.ranges.LongProgression) $r1;

        $l1 = $r2.<kotlin.ranges.LongProgression: long last>;

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label3;

        $l0 = r0.<kotlin.ranges.LongProgression: long step>;

        r0 = (kotlin.ranges.LongProgression) $r1;

        $l1 = r0.<kotlin.ranges.LongProgression: long step>;

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public final long getFirst()
    {
        long l0;
        kotlin.ranges.LongProgression r0;

        r0 := @this: kotlin.ranges.LongProgression;

        l0 = r0.<kotlin.ranges.LongProgression: long first>;

        return l0;
    }

    public final long getLast()
    {
        long l0;
        kotlin.ranges.LongProgression r0;

        r0 := @this: kotlin.ranges.LongProgression;

        l0 = r0.<kotlin.ranges.LongProgression: long last>;

        return l0;
    }

    public final long getStep()
    {
        long l0;
        kotlin.ranges.LongProgression r0;

        r0 := @this: kotlin.ranges.LongProgression;

        l0 = r0.<kotlin.ranges.LongProgression: long step>;

        return l0;
    }

    public int hashCode()
    {
        kotlin.ranges.LongProgression r0;
        int $i4;
        long $l0, $l1, $l2, $l3;
        boolean $z0;

        r0 := @this: kotlin.ranges.LongProgression;

        $z0 = virtualinvoke r0.<kotlin.ranges.LongProgression: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return -1;

     label1:
        $l0 = (long) 31;

        $l1 = r0.<kotlin.ranges.LongProgression: long first>;

        $l2 = r0.<kotlin.ranges.LongProgression: long first>;

        $l2 = $l2 >>> 32;

        $l1 = $l1 ^ $l2;

        $l1 = $l1 * $l0;

        $l2 = r0.<kotlin.ranges.LongProgression: long last>;

        $l3 = r0.<kotlin.ranges.LongProgression: long last>;

        $l3 = $l3 >>> 32;

        $l2 = $l2 ^ $l3;

        $l1 = $l1 + $l2;

        $l0 = $l0 * $l1;

        $l1 = r0.<kotlin.ranges.LongProgression: long step>;

        $l2 = r0.<kotlin.ranges.LongProgression: long step>;

        $l2 = $l2 >>> 32;

        $l1 = $l1 ^ $l2;

        $l0 = $l0 + $l1;

        $i4 = (int) $l0;

        return $i4;
    }

    public boolean isEmpty()
    {
        byte $b1;
        kotlin.ranges.LongProgression r0;
        int $i3;
        long $l0, $l2;

        r0 := @this: kotlin.ranges.LongProgression;

        $l0 = r0.<kotlin.ranges.LongProgression: long step>;

        $b1 = $l0 cmp 0L;

        $l0 = r0.<kotlin.ranges.LongProgression: long first>;

        $l2 = r0.<kotlin.ranges.LongProgression: long last>;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $b1 = $l0 cmp $l2;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label3;

        goto label2;

     label1:
        $b1 = $l0 cmp $l2;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public volatile java.util.Iterator iterator()
    {
        java.util.Iterator $r2;
        kotlin.collections.LongIterator $r1;
        kotlin.ranges.LongProgression r0;

        r0 := @this: kotlin.ranges.LongProgression;

        $r1 = virtualinvoke r0.<kotlin.ranges.LongProgression: kotlin.collections.LongIterator iterator()>();

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }

    public kotlin.collections.LongIterator iterator()
    {
        kotlin.collections.LongIterator $r2;
        kotlin.ranges.LongProgression r0;
        kotlin.ranges.LongProgressionIterator $r1;
        long $l0, $l1, $l2;

        r0 := @this: kotlin.ranges.LongProgression;

        $r1 = new kotlin.ranges.LongProgressionIterator;

        $l0 = r0.<kotlin.ranges.LongProgression: long first>;

        $l1 = r0.<kotlin.ranges.LongProgression: long last>;

        $l2 = r0.<kotlin.ranges.LongProgression: long step>;

        specialinvoke $r1.<kotlin.ranges.LongProgressionIterator: void <init>(long,long,long)>($l0, $l1, $l2);

        $r2 = (kotlin.collections.LongIterator) $r1;

        return $r2;
    }

    public java.lang.String toString()
    {
        byte $b0;
        kotlin.ranges.LongProgression r0;
        int $i2;
        long $l1;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        r0 := @this: kotlin.ranges.LongProgression;

        $l1 = r0.<kotlin.ranges.LongProgression: long step>;

        $b0 = $l1 cmp 0L;

        $r3 = new java.lang.StringBuilder;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $l1 = r0.<kotlin.ranges.LongProgression: long first>;

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $l1 = r0.<kotlin.ranges.LongProgression: long last>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" step ");

        $l1 = r0.<kotlin.ranges.LongProgression: long step>;

        goto label2;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $l1 = r0.<kotlin.ranges.LongProgression: long first>;

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" downTo ");

        $l1 = r0.<kotlin.ranges.LongProgression: long last>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" step ");

        $l1 = r0.<kotlin.ranges.LongProgression: long step>;

        $l1 = neg $l1;

     label2:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
