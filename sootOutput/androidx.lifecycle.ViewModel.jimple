public abstract class androidx.lifecycle.ViewModel extends java.lang.Object
{
    private final java.util.Map mBagOfTags;
    private volatile boolean mCleared;

    public void <init>()
    {
        androidx.lifecycle.ViewModel r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.lifecycle.ViewModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags> = $r1;

        r0.<androidx.lifecycle.ViewModel: boolean mCleared> = 0;

        return;
    }

    private static void closeWithRuntimeException(java.lang.Object)
    {
        java.io.Closeable r2;
        java.lang.Object $r0;
        java.io.IOException r3;
        java.lang.RuntimeException $r1;
        boolean z0;

        $r0 := @parameter0: java.lang.Object;

        z0 = $r0 instanceof java.io.Closeable;

        if z0 == 0 goto label4;

        r2 = (java.io.Closeable) $r0;

     label1:
        interfaceinvoke r2.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r1;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    final void clear()
    {
        java.lang.Throwable $r6;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        androidx.lifecycle.ViewModel r0;
        java.util.Map $r1, $r2;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: androidx.lifecycle.ViewModel;

        r0.<androidx.lifecycle.ViewModel: boolean mCleared> = 1;

        $r1 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        if $r1 == null goto label7;

        $r1 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        entermonitor $r1;

     label1:
        $r2 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>($r5);

        goto label2;

     label3:
        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

     label7:
        virtualinvoke r0.<androidx.lifecycle.ViewModel: void onCleared()>();

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    java.lang.Object getTag(java.lang.String)
    {
        java.lang.Throwable $r5;
        java.util.Map $r2, $r4;
        androidx.lifecycle.ViewModel r0;
        java.lang.Object $r3;
        java.lang.String $r1;

        r0 := @this: androidx.lifecycle.ViewModel;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        entermonitor $r2;

     label1:
        $r4 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        exitmonitor $r2;

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void onCleared()
    {
        androidx.lifecycle.ViewModel r0;

        r0 := @this: androidx.lifecycle.ViewModel;

        return;
    }

    java.lang.Object setTagIfAbsent(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable r6;
        androidx.lifecycle.ViewModel r0;
        java.util.Map r4, r5;
        java.lang.Object r2, $r3;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: androidx.lifecycle.ViewModel;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r4 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        entermonitor r4;

     label1:
        r5 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $r3 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label2;

        r5 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r2);

     label2:
        exitmonitor r4;

     label3:
        if $r3 != null goto label4;

        goto label5;

     label4:
        r2 = $r3;

     label5:
        $z0 = r0.<androidx.lifecycle.ViewModel: boolean mCleared>;

        if $z0 == 0 goto label9;

        staticinvoke <androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>(r2);

        return r2;

     label6:
        r6 := @caughtexception;

     label7:
        exitmonitor r4;

     label8:
        throw r6;

     label9:
        return r2;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
