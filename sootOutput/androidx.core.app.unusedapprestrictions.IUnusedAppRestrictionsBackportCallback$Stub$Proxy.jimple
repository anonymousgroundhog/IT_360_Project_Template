class androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy extends java.lang.Object implements androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback
{
    public static androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy;

        r1 = r0.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy r0;

        r0 := @this: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy;

        return "androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback";
    }

    public void onIsPermissionRevocationEnabledForAppResult(boolean, boolean) throws android.os.RemoteException
    {
        java.lang.Throwable r4;
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback $r3;
        android.os.Parcel $r1;
        android.os.IBinder r2;
        byte b0, $b1;
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy r0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback");

     label02:
        b0 = 0;

        if $z0 == 0 goto label03;

        $b1 = 1;

        goto label04;

     label03:
        $b1 = 0;

     label04:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b1);

     label05:
        if $z1 == 0 goto label06;

        b0 = 1;

     label06:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>(b0);

        r2 = r0.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r1, null, 1);

     label07:
        if $z2 != 0 goto label12;

     label08:
        $r3 = staticinvoke <androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback getDefaultImpl()>();

     label09:
        if $r3 == null goto label12;

     label10:
        $r3 = staticinvoke <androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback getDefaultImpl()>();

        interfaceinvoke $r3.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback: void onIsPermissionRevocationEnabledForAppResult(boolean,boolean)>($z0, $z1);

     label11:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label13:
        r4 := @caughtexception;

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
