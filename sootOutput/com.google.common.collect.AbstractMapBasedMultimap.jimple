abstract class com.google.common.collect.AbstractMapBasedMultimap extends com.google.common.collect.AbstractMultimap implements java.io.Serializable
{
    private static final long serialVersionUID;
    private transient java.util.Map map;
    private transient int totalSize;

    protected void <init>(java.util.Map)
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Map r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<com.google.common.collect.AbstractMultimap: void <init>()>();

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map> = r1;

        return;
    }

    static java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap)
    {
        com.google.common.collect.AbstractMapBasedMultimap $r0;
        java.util.Map r1;

        $r0 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap;

        r1 = $r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        return r1;
    }

    static java.util.Iterator access$100(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection $r0;

        $r0 := @parameter0: java.util.Collection;

        $r1 = staticinvoke <com.google.common.collect.AbstractMapBasedMultimap: java.util.Iterator iteratorOrListIterator(java.util.Collection)>($r0);

        return $r1;
    }

    static int access$208(com.google.common.collect.AbstractMapBasedMultimap)
    {
        int $i0, $i1;
        com.google.common.collect.AbstractMapBasedMultimap $r0;

        $r0 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap;

        $i0 = $r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i1 = $i0 + 1;

        $r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i1;

        return $i0;
    }

    static int access$210(com.google.common.collect.AbstractMapBasedMultimap)
    {
        int $i0, $i1;
        com.google.common.collect.AbstractMapBasedMultimap $r0;

        $r0 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap;

        $i0 = $r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i1 = $i0 + -1;

        $r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i1;

        return $i0;
    }

    static int access$212(com.google.common.collect.AbstractMapBasedMultimap, int)
    {
        int $i0, $i1;
        com.google.common.collect.AbstractMapBasedMultimap $r0;

        $r0 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap;

        $i0 := @parameter1: int;

        $i1 = $r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i0 = $i1 + $i0;

        $r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i0;

        return $i0;
    }

    static int access$220(com.google.common.collect.AbstractMapBasedMultimap, int)
    {
        int $i0, $i1;
        com.google.common.collect.AbstractMapBasedMultimap $r0;

        $r0 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap;

        $i0 := @parameter1: int;

        $i1 = $r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i0 = $i1 - $i0;

        $r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i0;

        return $i0;
    }

    static void access$300(com.google.common.collect.AbstractMapBasedMultimap, java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 := @parameter1: java.lang.Object;

        specialinvoke $r0.<com.google.common.collect.AbstractMapBasedMultimap: void removeValuesForKey(java.lang.Object)>($r1);

        return;
    }

    private java.util.Collection getOrCreateCollection(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Map $r2;
        java.util.Collection r4;
        java.lang.Object r1, $r3;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Collection) $r3;

        if r4 != null goto label1;

        r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection createCollection(java.lang.Object)>(r1);

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label1:
        return r4;
    }

    private static java.util.Iterator iteratorOrListIterator(java.util.Collection)
    {
        java.util.List $r1;
        java.util.Iterator $r3;
        java.util.ListIterator $r2;
        java.util.Collection r0;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        $z0 = r0 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r1 = (java.util.List) r0;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();

        return $r2;

     label1:
        $r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

        return $r3;
    }

    private void removeValuesForKey(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Map r2;
        java.util.Collection r3;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 := @parameter0: java.lang.Object;

        r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $r1 = staticinvoke <com.google.common.collect.Maps: java.lang.Object safeRemove(java.util.Map,java.lang.Object)>(r2, $r1);

        r3 = (java.util.Collection) $r1;

        if r3 == null goto label1;

        $i0 = interfaceinvoke r3.<java.util.Collection: int size()>();

        interfaceinvoke r3.<java.util.Collection: void clear()>();

        $i1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i0 = $i1 - $i0;

        r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i0;

     label1:
        return;
    }

    java.util.Map backingMap()
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Map r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        return r1;
    }

    public void clear()
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.util.Collection) $r4;

        interfaceinvoke $r2.<java.util.Collection: void clear()>();

        goto label1;

     label2:
        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = 0;

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Map $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    java.util.Map createAsMap()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap $r1;
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Map $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map)>(r0, $r2);

        return $r1;
    }

    abstract java.util.Collection createCollection();

    java.util.Collection createCollection(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.lang.Object r1;
        java.util.Collection $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection createCollection()>();

        return $r2;
    }

    java.util.Collection createEntries()
    {
        com.google.common.collect.AbstractMultimap$Entries $r2;
        com.google.common.collect.AbstractMapBasedMultimap r0;
        com.google.common.collect.AbstractMultimap$EntrySet $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $z0 = r0 instanceof com.google.common.collect.SetMultimap;

        if $z0 == 0 goto label1;

        $r1 = new com.google.common.collect.AbstractMultimap$EntrySet;

        specialinvoke $r1.<com.google.common.collect.AbstractMultimap$EntrySet: void <init>(com.google.common.collect.AbstractMultimap)>(r0);

        return $r1;

     label1:
        $r2 = new com.google.common.collect.AbstractMultimap$Entries;

        specialinvoke $r2.<com.google.common.collect.AbstractMultimap$Entries: void <init>(com.google.common.collect.AbstractMultimap)>(r0);

        return $r2;
    }

    java.util.Set createKeySet()
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        com.google.common.collect.AbstractMapBasedMultimap$KeySet $r1;
        java.util.Map $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$KeySet;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$KeySet: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map)>(r0, $r2);

        return $r1;
    }

    com.google.common.collect.Multiset createKeys()
    {
        com.google.common.collect.Multimaps$Keys $r1;
        com.google.common.collect.AbstractMapBasedMultimap r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = new com.google.common.collect.Multimaps$Keys;

        specialinvoke $r1.<com.google.common.collect.Multimaps$Keys: void <init>(com.google.common.collect.Multimap)>(r0);

        return $r1;
    }

    final java.util.Map createMaybeNavigableAsMap()
    {
        com.google.common.collect.AbstractMapBasedMultimap$AsMap $r6;
        java.util.NavigableMap $r3;
        com.google.common.collect.AbstractMapBasedMultimap r0;
        com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap $r4;
        com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap $r2;
        java.util.Map $r1;
        java.util.SortedMap $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $z0 = $r1 instanceof java.util.NavigableMap;

        if $z0 == 0 goto label1;

        $r2 = new com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $r3 = (java.util.NavigableMap) $r1;

        specialinvoke $r2.<com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap)>(r0, $r3);

        return $r2;

     label1:
        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $z0 = $r1 instanceof java.util.SortedMap;

        if $z0 == 0 goto label2;

        $r4 = new com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $r5 = (java.util.SortedMap) $r1;

        specialinvoke $r4.<com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap)>(r0, $r5);

        return $r4;

     label2:
        $r6 = new com.google.common.collect.AbstractMapBasedMultimap$AsMap;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        specialinvoke $r6.<com.google.common.collect.AbstractMapBasedMultimap$AsMap: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map)>(r0, $r1);

        return $r6;
    }

    final java.util.Set createMaybeNavigableKeySet()
    {
        java.util.NavigableMap $r3;
        com.google.common.collect.AbstractMapBasedMultimap$KeySet $r6;
        com.google.common.collect.AbstractMapBasedMultimap r0;
        com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet $r4;
        java.util.Map $r1;
        java.util.SortedMap $r5;
        boolean $z0;
        com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $z0 = $r1 instanceof java.util.NavigableMap;

        if $z0 == 0 goto label1;

        $r2 = new com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $r3 = (java.util.NavigableMap) $r1;

        specialinvoke $r2.<com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap)>(r0, $r3);

        return $r2;

     label1:
        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $z0 = $r1 instanceof java.util.SortedMap;

        if $z0 == 0 goto label2;

        $r4 = new com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $r5 = (java.util.SortedMap) $r1;

        specialinvoke $r4.<com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap)>(r0, $r5);

        return $r4;

     label2:
        $r6 = new com.google.common.collect.AbstractMapBasedMultimap$KeySet;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        specialinvoke $r6.<com.google.common.collect.AbstractMapBasedMultimap$KeySet: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map)>(r0, $r1);

        return $r6;
    }

    java.util.Collection createUnmodifiableEmptyCollection()
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection createCollection()>();

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection unmodifiableCollectionSubclass(java.util.Collection)>($r1);

        return $r1;
    }

    java.util.Collection createValues()
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        com.google.common.collect.AbstractMultimap$Values $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = new com.google.common.collect.AbstractMultimap$Values;

        specialinvoke $r1.<com.google.common.collect.AbstractMultimap$Values: void <init>(com.google.common.collect.AbstractMultimap)>(r0);

        return $r1;
    }

    public java.util.Collection entries()
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: java.util.Collection entries()>();

        return $r1;
    }

    java.util.Iterator entryIterator()
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        com.google.common.collect.AbstractMapBasedMultimap$2 $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$2;

        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$2: void <init>(com.google.common.collect.AbstractMapBasedMultimap)>(r0);

        return $r1;
    }

    public java.util.Collection get(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Map r2;
        java.util.Collection r4;
        java.lang.Object r1, $r3;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Collection) $r3;

        if r4 != null goto label1;

        r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection createCollection(java.lang.Object)>(r1);

     label1:
        r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection wrapCollection(java.lang.Object,java.util.Collection)>(r1, r4);

        return r4;
    }

    public boolean put(java.lang.Object, java.lang.Object)
    {
        java.util.Collection r5;
        java.lang.AssertionError $r6;
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Map r3;
        int $i0;
        java.lang.Object r1, r2, $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (java.util.Collection) $r4;

        if r5 != null goto label2;

        r5 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection createCollection(java.lang.Object)>(r1);

        $z0 = interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $i0 = r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i0;

        r3 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

        return 1;

     label1:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("New Collection violated the Collection spec");

        throw $r6;

     label2:
        $z0 = interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        $i0 = r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i0;

        return 1;

     label3:
        return 0;
    }

    public java.util.Collection removeAll(java.lang.Object)
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Map r2;
        java.util.Collection r3, $r4;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 := @parameter0: java.lang.Object;

        r2 = r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map>;

        $r1 = interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        r3 = (java.util.Collection) $r1;

        if r3 != null goto label1;

        r3 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection createUnmodifiableEmptyCollection()>();

        return r3;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection createCollection()>();

        interfaceinvoke $r4.<java.util.Collection: boolean addAll(java.util.Collection)>(r3);

        $i0 = r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i1 = interfaceinvoke r3.<java.util.Collection: int size()>();

        $i0 = $i0 - $i1;

        r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i0;

        interfaceinvoke r3.<java.util.Collection: void clear()>();

        r3 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection unmodifiableCollectionSubclass(java.util.Collection)>($r4);

        return r3;
    }

    public java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        java.util.Iterator $r3;
        java.util.Collection $r4, $r5;
        java.lang.Iterable r2;
        com.google.common.collect.AbstractMapBasedMultimap r0;
        int $i0, $i1;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection removeAll(java.lang.Object)>(r1);

        return $r4;

     label1:
        $r4 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection getOrCreateCollection(java.lang.Object)>(r1);

        $r5 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection createCollection()>();

        interfaceinvoke $r5.<java.util.Collection: boolean addAll(java.util.Collection)>($r4);

        $i0 = r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i1 = interfaceinvoke $r4.<java.util.Collection: int size()>();

        $i0 = $i0 - $i1;

        r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i0;

        interfaceinvoke $r4.<java.util.Collection: void clear()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $i0 = r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i0;

        goto label2;

     label3:
        $r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Collection unmodifiableCollectionSubclass(java.util.Collection)>($r5);

        return $r4;
    }

    final void setMap(java.util.Map)
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Map r1;
        int $i0, $i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 := @parameter0: java.util.Map;

        r0.<com.google.common.collect.AbstractMapBasedMultimap: java.util.Map map> = r1;

        r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = 0;

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.util.Collection) $r4;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $i0 = r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        $i1 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        $i0 = $i0 + $i1;

        r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize> = $i0;

        goto label1;

     label2:
        return;
    }

    public int size()
    {
        int i0;
        com.google.common.collect.AbstractMapBasedMultimap r0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        i0 = r0.<com.google.common.collect.AbstractMapBasedMultimap: int totalSize>;

        return i0;
    }

    java.util.Collection unmodifiableCollectionSubclass(java.util.Collection)
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Collection r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 := @parameter0: java.util.Collection;

        r1 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>(r1);

        return r1;
    }

    java.util.Iterator valueIterator()
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        com.google.common.collect.AbstractMapBasedMultimap$1 $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = new com.google.common.collect.AbstractMapBasedMultimap$1;

        specialinvoke $r1.<com.google.common.collect.AbstractMapBasedMultimap$1: void <init>(com.google.common.collect.AbstractMapBasedMultimap)>(r0);

        return $r1;
    }

    public java.util.Collection values()
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMultimap: java.util.Collection values()>();

        return $r1;
    }

    java.util.Collection wrapCollection(java.lang.Object, java.util.Collection)
    {
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.Collection r2;
        java.lang.Object r1;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r3;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Collection;

        $r3 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection;

        specialinvoke $r3.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>(r0, r1, r2, null);

        return $r3;
    }

    final java.util.List wrapList(java.lang.Object, java.util.List, com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)
    {
        com.google.common.collect.AbstractMapBasedMultimap$WrappedList $r5;
        com.google.common.collect.AbstractMapBasedMultimap r0;
        java.util.List r2;
        java.lang.Object r1;
        com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList $r4;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection;

        $z0 = r2 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label1;

        $r4 = new com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList;

        specialinvoke $r4.<com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>(r0, r1, r2, r3);

        return $r4;

     label1:
        $r5 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedList;

        specialinvoke $r5.<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>(r0, r1, r2, r3);

        return $r5;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.AbstractMapBasedMultimap: long serialVersionUID> = 2447537837011683357L;

        return;
    }
}
