class com.google.common.escape.CharEscaperBuilder$CharArrayDecorator extends com.google.common.escape.CharEscaper
{
    private final int replaceLength;
    private final char[][] replacements;

    void <init>(char[][])
    {
        com.google.common.escape.CharEscaperBuilder$CharArrayDecorator r0;
        int $i0;
        char[][] $r1;

        r0 := @this: com.google.common.escape.CharEscaperBuilder$CharArrayDecorator;

        $r1 := @parameter0: char[][];

        specialinvoke r0.<com.google.common.escape.CharEscaper: void <init>()>();

        r0.<com.google.common.escape.CharEscaperBuilder$CharArrayDecorator: char[][] replacements> = $r1;

        $i0 = lengthof $r1;

        r0.<com.google.common.escape.CharEscaperBuilder$CharArrayDecorator: int replaceLength> = $i0;

        return;
    }

    public java.lang.String escape(java.lang.String)
    {
        char $c2;
        char[][] $r2;
        com.google.common.escape.CharEscaperBuilder$CharArrayDecorator r0;
        int $i0, i1, $i3, $i4;
        char[] $r3;
        java.lang.String $r1;

        r0 := @this: com.google.common.escape.CharEscaperBuilder$CharArrayDecorator;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        $r2 = r0.<com.google.common.escape.CharEscaperBuilder$CharArrayDecorator: char[][] replacements>;

        $i3 = lengthof $r2;

        $i4 = (int) $c2;

        if $i4 >= $i3 goto label2;

        $r2 = r0.<com.google.common.escape.CharEscaperBuilder$CharArrayDecorator: char[][] replacements>;

        $i3 = (int) $c2;

        $r3 = $r2[$i3];

        if $r3 == null goto label2;

        $r1 = virtualinvoke r0.<com.google.common.escape.CharEscaperBuilder$CharArrayDecorator: java.lang.String escapeSlow(java.lang.String,int)>($r1, i1);

        return $r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    protected char[] escape(char)
    {
        com.google.common.escape.CharEscaperBuilder$CharArrayDecorator r0;
        int $i1, $i2;
        char[] $r2;
        char $c0;
        char[][] $r1;

        r0 := @this: com.google.common.escape.CharEscaperBuilder$CharArrayDecorator;

        $c0 := @parameter0: char;

        $i1 = r0.<com.google.common.escape.CharEscaperBuilder$CharArrayDecorator: int replaceLength>;

        $i2 = (int) $c0;

        if $i2 >= $i1 goto label1;

        $r1 = r0.<com.google.common.escape.CharEscaperBuilder$CharArrayDecorator: char[][] replacements>;

        $i1 = (int) $c0;

        $r2 = $r1[$i1];

        return $r2;

     label1:
        return null;
    }
}
