class androidx.appcompat.widget.AppCompatDrawableManager$1 extends java.lang.Object implements androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks
{
    private final int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY;
    private final int[] COLORFILTER_COLOR_CONTROL_ACTIVATED;
    private final int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL;
    private final int[] TINT_CHECKABLE_BUTTON_LIST;
    private final int[] TINT_COLOR_CONTROL_NORMAL;
    private final int[] TINT_COLOR_CONTROL_STATE_LIST;

    void <init>()
    {
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <androidx.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha>;

        $i1 = <androidx.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha>;

        $i2 = <androidx.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha>;

        $r1 = newarray (int)[3];

        $r1[0] = $i0;

        $r1[1] = $i1;

        $r1[2] = $i2;

        r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL> = $r1;

        $i0 = <androidx.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha>;

        $i1 = <androidx.appcompat.R$drawable: int abc_seekbar_tick_mark_material>;

        $i2 = <androidx.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha>;

        $i3 = <androidx.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha>;

        $i4 = <androidx.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha>;

        $i5 = <androidx.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha>;

        $i6 = <androidx.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha>;

        $r1 = newarray (int)[7];

        $r1[0] = $i0;

        $r1[1] = $i1;

        $r1[2] = $i2;

        $r1[3] = $i3;

        $r1[4] = $i4;

        $r1[5] = $i5;

        $r1[6] = $i6;

        r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_NORMAL> = $r1;

        $i3 = <androidx.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha>;

        $i4 = <androidx.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha>;

        $i5 = <androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $i6 = <androidx.appcompat.R$drawable: int abc_text_cursor_material>;

        $i7 = <androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_dark>;

        $i8 = <androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_dark>;

        $i9 = <androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_dark>;

        $i0 = <androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_light>;

        $i1 = <androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_light>;

        $i2 = <androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_light>;

        $r1 = newarray (int)[10];

        $r1[0] = $i3;

        $r1[1] = $i4;

        $r1[2] = $i5;

        $r1[3] = $i6;

        $r1[4] = $i7;

        $r1[5] = $i8;

        $r1[6] = $i9;

        $r1[7] = $i0;

        $r1[8] = $i1;

        $r1[9] = $i2;

        r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED> = $r1;

        $i0 = <androidx.appcompat.R$drawable: int abc_popup_background_mtrl_mult>;

        $i1 = <androidx.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $i2 = <androidx.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult>;

        $r1 = newarray (int)[3];

        $r1[0] = $i0;

        $r1[1] = $i1;

        $r1[2] = $i2;

        r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY> = $r1;

        $i0 = <androidx.appcompat.R$drawable: int abc_tab_indicator_material>;

        $i1 = <androidx.appcompat.R$drawable: int abc_textfield_search_material>;

        $r1 = newarray (int)[2];

        $r1[0] = $i0;

        $r1[1] = $i1;

        r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_STATE_LIST> = $r1;

        $i0 = <androidx.appcompat.R$drawable: int abc_btn_check_material>;

        $i1 = <androidx.appcompat.R$drawable: int abc_btn_radio_material>;

        $i2 = <androidx.appcompat.R$drawable: int abc_btn_check_material_anim>;

        $i3 = <androidx.appcompat.R$drawable: int abc_btn_radio_material_anim>;

        $r1 = newarray (int)[4];

        $r1[0] = $i0;

        $r1[1] = $i1;

        $r1[2] = $i2;

        $r1[3] = $i3;

        r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_CHECKABLE_BUTTON_LIST> = $r1;

        return;
    }

    private boolean arrayContains(int[], int)
    {
        int[] $r1;
        int $i0, i1, $i2, $i3;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i2 = lengthof $r1;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        i1 = $r1[$i3];

        if i1 != $i0 goto label2;

        return 1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r1 := @parameter0: android.content.Context;

        $r2 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, 0);

        return $r2;
    }

    private android.content.res.ColorStateList createButtonColorStateList(android.content.Context, int)
    {
        android.content.Context $r1;
        int[][] r2;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;
        android.content.res.ColorStateList $r5;
        int[] r3, $r4;
        int $i0, i1, i2, $i3;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        r2 = newarray (int[])[4];

        r3 = newarray (int)[4];

        i1 = <androidx.appcompat.R$attr: int colorControlHighlight>;

        i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, i1);

        i2 = <androidx.appcompat.R$attr: int colorButtonNormal>;

        i2 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, i2);

        $r4 = <androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r2[0] = $r4;

        r3[0] = i2;

        $r4 = <androidx.appcompat.widget.ThemeUtils: int[] PRESSED_STATE_SET>;

        r2[1] = $r4;

        $i3 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>(i1, $i0);

        r3[1] = $i3;

        i2 = 1 + 1;

        $r4 = <androidx.appcompat.widget.ThemeUtils: int[] FOCUSED_STATE_SET>;

        r2[i2] = $r4;

        i1 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>(i1, $i0);

        r3[i2] = i1;

        i1 = i2 + 1;

        $r4 = <androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r2[i1] = $r4;

        r3[i1] = $i0;

        $r5 = new android.content.res.ColorStateList;

        specialinvoke $r5.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r2, r3);

        return $r5;
    }

    private android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        int $i0;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r1 := @parameter0: android.content.Context;

        $i0 = <androidx.appcompat.R$attr: int colorAccent>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r2 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;
    }

    private android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        int $i0;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r1 := @parameter0: android.content.Context;

        $i0 = <androidx.appcompat.R$attr: int colorButtonNormal>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r2 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;
    }

    private android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
    {
        android.content.Context $r1;
        int[][] r2;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;
        android.content.res.ColorStateList $r4;
        int[] r3, $r5;
        int i0, $i1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r1 := @parameter0: android.content.Context;

        r2 = newarray (int[])[3];

        r3 = newarray (int)[3];

        i0 = <androidx.appcompat.R$attr: int colorSwitchThumbNormal>;

        $r4 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r1, i0);

        if $r4 == null goto label1;

        $z0 = virtualinvoke $r4.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r2[0] = $r5;

        $r5 = r2[0];

        i0 = virtualinvoke $r4.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r5, 0);

        r3[0] = i0;

        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        r2[1] = $r5;

        $i1 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r3[1] = $i1;

        i0 = 1 + 1;

        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r2[i0] = $r5;

        $i1 = virtualinvoke $r4.<android.content.res.ColorStateList: int getDefaultColor()>();

        r3[i0] = $i1;

        goto label2;

     label1:
        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r2[0] = $r5;

        i0 = <androidx.appcompat.R$attr: int colorSwitchThumbNormal>;

        i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, i0);

        r3[0] = i0;

        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        r2[1] = $r5;

        $i1 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r3[1] = $i1;

        i0 = 1 + 1;

        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r2[i0] = $r5;

        $i1 = <androidx.appcompat.R$attr: int colorSwitchThumbNormal>;

        $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r3[i0] = $i1;

     label2:
        $r4 = new android.content.res.ColorStateList;

        specialinvoke $r4.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r2, r3);

        return $r4;
    }

    private void setPorterDuffColorFilter(android.graphics.drawable.Drawable, int, android.graphics.PorterDuff$Mode)
    {
        int $i0;
        android.graphics.PorterDuffColorFilter $r3;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;
        android.graphics.drawable.Drawable $r2;
        android.graphics.PorterDuff$Mode $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r2 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.PorterDuff$Mode;

        $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r2);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        if $r1 != null goto label2;

        $r1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        goto label2;

     label2:
        $r3 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r3);

        return;
    }

    public android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal, android.content.Context, int)
    {
        android.content.Context $r2;
        android.graphics.drawable.LayerDrawable $r3;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;
        android.graphics.drawable.Drawable $r4, $r5;
        androidx.appcompat.widget.ResourceManagerInternal $r1;
        int $i0, $i1;
        android.graphics.drawable.Drawable[] $r6;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r1 := @parameter0: androidx.appcompat.widget.ResourceManagerInternal;

        $r2 := @parameter1: android.content.Context;

        $i0 := @parameter2: int;

        $i1 = <androidx.appcompat.R$drawable: int abc_cab_background_top_material>;

        if $i0 != $i1 goto label1;

        $r3 = new android.graphics.drawable.LayerDrawable;

        $i0 = <androidx.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $r4 = virtualinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r2, $i0);

        $i0 = <androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $r5 = virtualinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r2, $i0);

        $r6 = newarray (android.graphics.drawable.Drawable)[2];

        $r6[0] = $r4;

        $r6[1] = $r5;

        specialinvoke $r3.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r6);

        return $r3;

     label1:
        return null;
    }

    public android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context, int)
    {
        android.content.res.ColorStateList $r2;
        android.content.Context $r1;
        int[] $r3;
        int $i0, $i1;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 = <androidx.appcompat.R$drawable: int abc_edit_text_material>;

        if $i0 != $i1 goto label01;

        $i0 = <androidx.appcompat.R$color: int abc_tint_edittext>;

        $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;

     label01:
        $i1 = <androidx.appcompat.R$drawable: int abc_switch_track_mtrl_alpha>;

        if $i0 != $i1 goto label02;

        $i0 = <androidx.appcompat.R$color: int abc_tint_switch_track>;

        $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;

     label02:
        $i1 = <androidx.appcompat.R$drawable: int abc_switch_thumb_material>;

        if $i0 != $i1 goto label03;

        $r2 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)>($r1);

        return $r2;

     label03:
        $i1 = <androidx.appcompat.R$drawable: int abc_btn_default_mtrl_shape>;

        if $i0 != $i1 goto label04;

        $r2 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)>($r1);

        return $r2;

     label04:
        $i1 = <androidx.appcompat.R$drawable: int abc_btn_borderless_material>;

        if $i0 != $i1 goto label05;

        $r2 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)>($r1);

        return $r2;

     label05:
        $i1 = <androidx.appcompat.R$drawable: int abc_btn_colored_material>;

        if $i0 != $i1 goto label06;

        $r2 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)>($r1);

        return $r2;

     label06:
        $i1 = <androidx.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha>;

        if $i0 == $i1 goto label12;

        $i1 = <androidx.appcompat.R$drawable: int abc_spinner_textfield_background_material>;

        if $i0 != $i1 goto label07;

        goto label12;

     label07:
        $r3 = r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_NORMAL>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($r3, $i0);

        if $z0 == 0 goto label08;

        $i0 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $r2 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;

     label08:
        $r3 = r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_STATE_LIST>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($r3, $i0);

        if $z0 == 0 goto label09;

        $i0 = <androidx.appcompat.R$color: int abc_tint_default>;

        $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;

     label09:
        $r3 = r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_CHECKABLE_BUTTON_LIST>;

        $z0 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>($r3, $i0);

        if $z0 == 0 goto label10;

        $i0 = <androidx.appcompat.R$color: int abc_tint_btn_checkable>;

        $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;

     label10:
        $i1 = <androidx.appcompat.R$drawable: int abc_seekbar_thumb_material>;

        if $i0 != $i1 goto label11;

        $i0 = <androidx.appcompat.R$color: int abc_tint_seek_thumb>;

        $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;

     label11:
        return null;

     label12:
        $i0 = <androidx.appcompat.R$color: int abc_tint_spinner>;

        $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;
    }

    public android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
    {
        int $i0, $i1;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $i0 := @parameter0: int;

        $i1 = <androidx.appcompat.R$drawable: int abc_switch_thumb_material>;

        if $i0 != $i1 goto label1;

        r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        return r1;

     label1:
        return null;
    }

    public boolean tintDrawable(android.content.Context, int, android.graphics.drawable.Drawable)
    {
        android.content.Context $r1;
        android.graphics.drawable.LayerDrawable r3;
        int $i0, i1;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;
        android.graphics.drawable.Drawable $r2;
        android.graphics.PorterDuff$Mode $r4;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.drawable.Drawable;

        i1 = <androidx.appcompat.R$drawable: int abc_seekbar_track_material>;

        if $i0 != i1 goto label1;

        r3 = (android.graphics.drawable.LayerDrawable) $r2;

        $r2 = virtualinvoke r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $i0 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4);

        $r2 = virtualinvoke r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303);

        $i0 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4);

        $r2 = virtualinvoke r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        $i0 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4);

        return 1;

     label1:
        i1 = <androidx.appcompat.R$drawable: int abc_ratingbar_material>;

        if $i0 == i1 goto label3;

        i1 = <androidx.appcompat.R$drawable: int abc_ratingbar_indicator_material>;

        if $i0 == i1 goto label3;

        i1 = <androidx.appcompat.R$drawable: int abc_ratingbar_small_material>;

        if $i0 != i1 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        r3 = (android.graphics.drawable.LayerDrawable) $r2;

        $r2 = virtualinvoke r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $i0 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4);

        $r2 = virtualinvoke r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303);

        $i0 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4);

        $r2 = virtualinvoke r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        $i0 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r4);

        return 1;
    }

    public boolean tintDrawableUsingColorFilter(android.content.Context, int, android.graphics.drawable.Drawable)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.AppCompatDrawableManager$1 r0;
        android.graphics.drawable.Drawable $r2;
        android.graphics.PorterDuff$Mode $r3;
        int[] r4;
        int $i0, i1, i2, i3;
        android.graphics.PorterDuffColorFilter $r5;
        boolean z0, $z1;

        r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager$1;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.drawable.Drawable;

        $r3 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()>();

        z0 = 0;

        i1 = 0;

        i2 = -1;

        r4 = r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL>;

        $z1 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>(r4, $i0);

        if $z1 == 0 goto label1;

        i1 = <androidx.appcompat.R$attr: int colorControlNormal>;

        z0 = 1;

        goto label5;

     label1:
        r4 = r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED>;

        $z1 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>(r4, $i0);

        if $z1 == 0 goto label2;

        i1 = <androidx.appcompat.R$attr: int colorControlActivated>;

        z0 = 1;

        goto label5;

     label2:
        r4 = r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY>;

        $z1 = specialinvoke r0.<androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)>(r4, $i0);

        if $z1 == 0 goto label3;

        i1 = 16842801;

        z0 = 1;

        $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        goto label5;

     label3:
        i3 = <androidx.appcompat.R$drawable: int abc_list_divider_mtrl_alpha>;

        if $i0 != i3 goto label4;

        i1 = 16842800;

        z0 = 1;

        i2 = staticinvoke <java.lang.Math: int round(float)>(40.8F);

        goto label5;

     label4:
        i3 = <androidx.appcompat.R$drawable: int abc_dialog_material_background>;

        if $i0 != i3 goto label5;

        i1 = 16842801;

        z0 = 1;

     label5:
        if z0 == 0 goto label8;

        z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r2);

        if z0 == 0 goto label6;

        $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label6:
        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, i1);

        $r5 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r3);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5);

        if i2 == -1 goto label7;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>(i2);

     label7:
        return 1;

     label8:
        return 0;
    }
}
