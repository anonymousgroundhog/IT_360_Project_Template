public final class kotlin.coroutines.ContinuationKt$Continuation$1 extends java.lang.Object implements kotlin.coroutines.Continuation
{
    final kotlin.coroutines.CoroutineContext $context;
    final kotlin.jvm.functions.Function1 $resumeWith;

    public void <init>(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r2;
        kotlin.coroutines.ContinuationKt$Continuation$1 r0;
        kotlin.coroutines.CoroutineContext $r1;

        r0 := @this: kotlin.coroutines.ContinuationKt$Continuation$1;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        r0.<kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.coroutines.CoroutineContext $context> = $r1;

        r0.<kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.jvm.functions.Function1 $resumeWith> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public kotlin.coroutines.CoroutineContext getContext()
    {
        kotlin.coroutines.ContinuationKt$Continuation$1 r0;
        kotlin.coroutines.CoroutineContext r1;

        r0 := @this: kotlin.coroutines.ContinuationKt$Continuation$1;

        r1 = r0.<kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.coroutines.CoroutineContext $context>;

        return r1;
    }

    public void resumeWith(java.lang.Object)
    {
        kotlin.Result $r3;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function1 $r2;
        kotlin.coroutines.ContinuationKt$Continuation$1 r0;

        r0 := @this: kotlin.coroutines.ContinuationKt$Continuation$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.jvm.functions.Function1 $resumeWith>;

        $r3 = staticinvoke <kotlin.Result: kotlin.Result box-impl(java.lang.Object)>($r1);

        interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return;
    }
}
