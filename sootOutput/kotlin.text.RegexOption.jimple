public final enum class kotlin.text.RegexOption extends java.lang.Enum implements kotlin.text.FlagEnum
{
    private static final kotlin.text.RegexOption[] $VALUES;
    public static final enum kotlin.text.RegexOption CANON_EQ;
    public static final enum kotlin.text.RegexOption COMMENTS;
    public static final enum kotlin.text.RegexOption DOT_MATCHES_ALL;
    public static final enum kotlin.text.RegexOption IGNORE_CASE;
    public static final enum kotlin.text.RegexOption LITERAL;
    public static final enum kotlin.text.RegexOption MULTILINE;
    public static final enum kotlin.text.RegexOption UNIX_LINES;
    private final int mask;
    private final int value;

    private static final kotlin.text.RegexOption[] $values()
    {
        kotlin.text.RegexOption[] $r0;
        kotlin.text.RegexOption $r1;

        $r0 = newarray (kotlin.text.RegexOption)[7];

        $r1 = <kotlin.text.RegexOption: kotlin.text.RegexOption IGNORE_CASE>;

        $r0[0] = $r1;

        $r1 = <kotlin.text.RegexOption: kotlin.text.RegexOption MULTILINE>;

        $r0[1] = $r1;

        $r1 = <kotlin.text.RegexOption: kotlin.text.RegexOption LITERAL>;

        $r0[2] = $r1;

        $r1 = <kotlin.text.RegexOption: kotlin.text.RegexOption UNIX_LINES>;

        $r0[3] = $r1;

        $r1 = <kotlin.text.RegexOption: kotlin.text.RegexOption COMMENTS>;

        $r0[4] = $r1;

        $r1 = <kotlin.text.RegexOption: kotlin.text.RegexOption DOT_MATCHES_ALL>;

        $r0[5] = $r1;

        $r1 = <kotlin.text.RegexOption: kotlin.text.RegexOption CANON_EQ>;

        $r0[6] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        kotlin.text.RegexOption[] $r0;
        kotlin.text.RegexOption $r1;

        $r1 = new kotlin.text.RegexOption;

        specialinvoke $r1.<kotlin.text.RegexOption: void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>("IGNORE_CASE", 0, 2, 0, 2, null);

        <kotlin.text.RegexOption: kotlin.text.RegexOption IGNORE_CASE> = $r1;

        $r1 = new kotlin.text.RegexOption;

        specialinvoke $r1.<kotlin.text.RegexOption: void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>("MULTILINE", 1, 8, 0, 2, null);

        <kotlin.text.RegexOption: kotlin.text.RegexOption MULTILINE> = $r1;

        $r1 = new kotlin.text.RegexOption;

        specialinvoke $r1.<kotlin.text.RegexOption: void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>("LITERAL", 2, 16, 0, 2, null);

        <kotlin.text.RegexOption: kotlin.text.RegexOption LITERAL> = $r1;

        $r1 = new kotlin.text.RegexOption;

        specialinvoke $r1.<kotlin.text.RegexOption: void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>("UNIX_LINES", 3, 1, 0, 2, null);

        <kotlin.text.RegexOption: kotlin.text.RegexOption UNIX_LINES> = $r1;

        $r1 = new kotlin.text.RegexOption;

        specialinvoke $r1.<kotlin.text.RegexOption: void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>("COMMENTS", 4, 4, 0, 2, null);

        <kotlin.text.RegexOption: kotlin.text.RegexOption COMMENTS> = $r1;

        $r1 = new kotlin.text.RegexOption;

        specialinvoke $r1.<kotlin.text.RegexOption: void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>("DOT_MATCHES_ALL", 5, 32, 0, 2, null);

        <kotlin.text.RegexOption: kotlin.text.RegexOption DOT_MATCHES_ALL> = $r1;

        $r1 = new kotlin.text.RegexOption;

        specialinvoke $r1.<kotlin.text.RegexOption: void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>("CANON_EQ", 6, 128, 0, 2, null);

        <kotlin.text.RegexOption: kotlin.text.RegexOption CANON_EQ> = $r1;

        $r0 = staticinvoke <kotlin.text.RegexOption: kotlin.text.RegexOption[] $values()>();

        <kotlin.text.RegexOption: kotlin.text.RegexOption[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int, int, int)
    {
        int $i0, $i1, $i2;
        kotlin.text.RegexOption r0;
        java.lang.String $r1;

        r0 := @this: kotlin.text.RegexOption;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<kotlin.text.RegexOption: int value> = $i1;

        r0.<kotlin.text.RegexOption: int mask> = $i2;

        return;
    }

    void <init>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.jvm.internal.DefaultConstructorMarker $r2;
        int $i0, $i1, $i2, $i3;
        kotlin.text.RegexOption r0;
        java.lang.String $r1;

        r0 := @this: kotlin.text.RegexOption;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i3 = $i3 & 2;

        if $i3 == 0 goto label1;

        $i2 = $i1;

     label1:
        specialinvoke r0.<kotlin.text.RegexOption: void <init>(java.lang.String,int,int,int)>($r1, $i0, $i1, $i2);

        return;
    }

    public static kotlin.text.RegexOption valueOf(java.lang.String)
    {
        java.lang.String $r0;
        kotlin.text.RegexOption $r2;
        java.lang.Enum $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lkotlin/text/RegexOption;", $r0);

        $r2 = (kotlin.text.RegexOption) $r1;

        return $r2;
    }

    public static kotlin.text.RegexOption[] values()
    {
        kotlin.text.RegexOption[] $r1;
        java.lang.Object $r0;

        $r1 = <kotlin.text.RegexOption: kotlin.text.RegexOption[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (kotlin.text.RegexOption[]) $r0;

        return $r1;
    }

    public int getMask()
    {
        int i0;
        kotlin.text.RegexOption r0;

        r0 := @this: kotlin.text.RegexOption;

        i0 = r0.<kotlin.text.RegexOption: int mask>;

        return i0;
    }

    public int getValue()
    {
        int i0;
        kotlin.text.RegexOption r0;

        r0 := @this: kotlin.text.RegexOption;

        i0 = r0.<kotlin.text.RegexOption: int value>;

        return i0;
    }
}
