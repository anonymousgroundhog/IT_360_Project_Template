final class com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper extends com.google.common.util.concurrent.AbstractFuture$AtomicHelper
{

    private void <init>()
    {
        com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: void <init>(com.google.common.util.concurrent.AbstractFuture$1)>(null);

        return;
    }

    void <init>(com.google.common.util.concurrent.AbstractFuture$1)
    {
        com.google.common.util.concurrent.AbstractFuture$1 $r1;
        com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture$1;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: void <init>()>();

        return;
    }

    boolean casListeners(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Listener, com.google.common.util.concurrent.AbstractFuture$Listener)
    {
        java.lang.Throwable $r5;
        com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper r0;
        com.google.common.util.concurrent.AbstractFuture$Listener $r2, $r3, $r4;
        com.google.common.util.concurrent.AbstractFuture r1;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper;

        r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r2 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Listener;

        $r3 := @parameter2: com.google.common.util.concurrent.AbstractFuture$Listener;

        entermonitor r1;

     label1:
        $r4 = staticinvoke <com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener access$700(com.google.common.util.concurrent.AbstractFuture)>(r1);

        if $r4 != $r2 goto label3;

        staticinvoke <com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener access$702(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener)>(r1, $r3);

        exitmonitor r1;

     label2:
        return 1;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        $r5 := @caughtexception;

        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    boolean casValue(com.google.common.util.concurrent.AbstractFuture, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r5;
        com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper r0;
        java.lang.Object $r2, $r3, $r4;
        com.google.common.util.concurrent.AbstractFuture r1;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper;

        r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        entermonitor r1;

     label1:
        $r4 = staticinvoke <com.google.common.util.concurrent.AbstractFuture: java.lang.Object access$300(com.google.common.util.concurrent.AbstractFuture)>(r1);

        if $r4 != $r2 goto label3;

        staticinvoke <com.google.common.util.concurrent.AbstractFuture: java.lang.Object access$302(com.google.common.util.concurrent.AbstractFuture,java.lang.Object)>(r1, $r3);

        exitmonitor r1;

     label2:
        return 1;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        $r5 := @caughtexception;

        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    boolean casWaiters(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter)
    {
        java.lang.Throwable $r5;
        com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper r0;
        com.google.common.util.concurrent.AbstractFuture$Waiter $r2, $r3, $r4;
        com.google.common.util.concurrent.AbstractFuture r1;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper;

        r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r2 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r3 := @parameter2: com.google.common.util.concurrent.AbstractFuture$Waiter;

        entermonitor r1;

     label1:
        $r4 = staticinvoke <com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter access$800(com.google.common.util.concurrent.AbstractFuture)>(r1);

        if $r4 != $r2 goto label3;

        staticinvoke <com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter access$802(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter)>(r1, $r3);

        exitmonitor r1;

     label2:
        return 1;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        $r5 := @caughtexception;

        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    com.google.common.util.concurrent.AbstractFuture$Listener gasListeners(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Listener)
    {
        java.lang.Throwable r4;
        com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper r0;
        com.google.common.util.concurrent.AbstractFuture$Listener $r2, $r3;
        com.google.common.util.concurrent.AbstractFuture r1;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper;

        r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r2 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Listener;

        entermonitor r1;

     label1:
        $r3 = staticinvoke <com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener access$700(com.google.common.util.concurrent.AbstractFuture)>(r1);

        if $r3 == $r2 goto label2;

        staticinvoke <com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener access$702(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener)>(r1, $r2);

     label2:
        exitmonitor r1;

     label3:
        return $r3;

     label4:
        r4 := @caughtexception;

        exitmonitor r1;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    com.google.common.util.concurrent.AbstractFuture$Waiter gasWaiters(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Waiter)
    {
        java.lang.Throwable r4;
        com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper r0;
        com.google.common.util.concurrent.AbstractFuture$Waiter $r2, $r3;
        com.google.common.util.concurrent.AbstractFuture r1;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper;

        r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture;

        $r2 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Waiter;

        entermonitor r1;

     label1:
        $r3 = staticinvoke <com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter access$800(com.google.common.util.concurrent.AbstractFuture)>(r1);

        if $r3 == $r2 goto label2;

        staticinvoke <com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter access$802(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter)>(r1, $r2);

     label2:
        exitmonitor r1;

     label3:
        return $r3;

     label4:
        r4 := @caughtexception;

        exitmonitor r1;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter)
    {
        com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper r0;
        com.google.common.util.concurrent.AbstractFuture$Waiter $r1, $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r2 := @parameter1: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r1.<com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next> = $r2;

        return;
    }

    void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter, java.lang.Thread)
    {
        com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper r0;
        com.google.common.util.concurrent.AbstractFuture$Waiter $r1;
        java.lang.Thread $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture$Waiter;

        $r2 := @parameter1: java.lang.Thread;

        $r1.<com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread> = $r2;

        return;
    }
}
