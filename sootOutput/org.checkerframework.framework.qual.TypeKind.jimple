public final enum class org.checkerframework.framework.qual.TypeKind extends java.lang.Enum
{
    private static final org.checkerframework.framework.qual.TypeKind[] $VALUES;
    public static final enum org.checkerframework.framework.qual.TypeKind ARRAY;
    public static final enum org.checkerframework.framework.qual.TypeKind BOOLEAN;
    public static final enum org.checkerframework.framework.qual.TypeKind BYTE;
    public static final enum org.checkerframework.framework.qual.TypeKind CHAR;
    public static final enum org.checkerframework.framework.qual.TypeKind DECLARED;
    public static final enum org.checkerframework.framework.qual.TypeKind DOUBLE;
    public static final enum org.checkerframework.framework.qual.TypeKind ERROR;
    public static final enum org.checkerframework.framework.qual.TypeKind EXECUTABLE;
    public static final enum org.checkerframework.framework.qual.TypeKind FLOAT;
    public static final enum org.checkerframework.framework.qual.TypeKind INT;
    public static final enum org.checkerframework.framework.qual.TypeKind INTERSECTION;
    public static final enum org.checkerframework.framework.qual.TypeKind LONG;
    public static final enum org.checkerframework.framework.qual.TypeKind NONE;
    public static final enum org.checkerframework.framework.qual.TypeKind NULL;
    public static final enum org.checkerframework.framework.qual.TypeKind OTHER;
    public static final enum org.checkerframework.framework.qual.TypeKind PACKAGE;
    public static final enum org.checkerframework.framework.qual.TypeKind SHORT;
    public static final enum org.checkerframework.framework.qual.TypeKind TYPEVAR;
    public static final enum org.checkerframework.framework.qual.TypeKind UNION;
    public static final enum org.checkerframework.framework.qual.TypeKind VOID;
    public static final enum org.checkerframework.framework.qual.TypeKind WILDCARD;

    static void <clinit>()
    {
        org.checkerframework.framework.qual.TypeKind $r0;
        org.checkerframework.framework.qual.TypeKind[] $r1;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("BOOLEAN", 0);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind BOOLEAN> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("BYTE", 1);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind BYTE> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("SHORT", 2);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind SHORT> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("INT", 3);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind INT> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("LONG", 4);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind LONG> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("CHAR", 5);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind CHAR> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("FLOAT", 6);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind FLOAT> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("DOUBLE", 7);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind DOUBLE> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("VOID", 8);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind VOID> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("NONE", 9);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind NONE> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("NULL", 10);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind NULL> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("ARRAY", 11);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind ARRAY> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("DECLARED", 12);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind DECLARED> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("ERROR", 13);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind ERROR> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("TYPEVAR", 14);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind TYPEVAR> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("WILDCARD", 15);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind WILDCARD> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("PACKAGE", 16);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind PACKAGE> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("EXECUTABLE", 17);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind EXECUTABLE> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("OTHER", 18);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind OTHER> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("UNION", 19);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind UNION> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeKind;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeKind: void <init>(java.lang.String,int)>("INTERSECTION", 20);

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind INTERSECTION> = $r0;

        $r1 = newarray (org.checkerframework.framework.qual.TypeKind)[21];

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind BOOLEAN>;

        $r1[0] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind BYTE>;

        $r1[1] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind SHORT>;

        $r1[2] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind INT>;

        $r1[3] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind LONG>;

        $r1[4] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind CHAR>;

        $r1[5] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind FLOAT>;

        $r1[6] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind DOUBLE>;

        $r1[7] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind VOID>;

        $r1[8] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind NONE>;

        $r1[9] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind NULL>;

        $r1[10] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind ARRAY>;

        $r1[11] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind DECLARED>;

        $r1[12] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind ERROR>;

        $r1[13] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind TYPEVAR>;

        $r1[14] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind WILDCARD>;

        $r1[15] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind PACKAGE>;

        $r1[16] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind EXECUTABLE>;

        $r1[17] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind OTHER>;

        $r1[18] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind UNION>;

        $r1[19] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind INTERSECTION>;

        $r1[20] = $r0;

        <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        org.checkerframework.framework.qual.TypeKind r0;

        r0 := @this: org.checkerframework.framework.qual.TypeKind;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static org.checkerframework.framework.qual.TypeKind valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.checkerframework.framework.qual.TypeKind $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/checkerframework/framework/qual/TypeKind;", $r0);

        $r2 = (org.checkerframework.framework.qual.TypeKind) $r1;

        return $r2;
    }

    public static org.checkerframework.framework.qual.TypeKind[] values()
    {
        java.lang.Object $r0;
        org.checkerframework.framework.qual.TypeKind[] $r1;

        $r1 = <org.checkerframework.framework.qual.TypeKind: org.checkerframework.framework.qual.TypeKind[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.checkerframework.framework.qual.TypeKind[]) $r0;

        return $r1;
    }
}
