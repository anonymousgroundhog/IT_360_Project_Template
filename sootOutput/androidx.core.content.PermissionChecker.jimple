public final class androidx.core.content.PermissionChecker extends java.lang.Object
{
    public static final int PERMISSION_DENIED;
    public static final int PERMISSION_DENIED_APP_OP;
    public static final int PERMISSION_GRANTED;

    private void <init>()
    {
        androidx.core.content.PermissionChecker r0;

        r0 := @this: androidx.core.content.PermissionChecker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int checkCallingOrSelfPermission(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i0 = staticinvoke <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>($r0, $r1, $i0, $i1, $r2);

        return $i0;
    }

    public static int checkCallingPermission(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        return -1;

     label1:
        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i0 = staticinvoke <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>($r0, $r1, $i0, $i1, $r2);

        return $i0;
    }

    public static int checkPermission(android.content.Context, java.lang.String, int, int, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r3;
        java.lang.String[] $r4;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 := @parameter4: java.lang.String;

        $i0 = virtualinvoke $r0.<android.content.Context: int checkPermission(java.lang.String,int,int)>($r1, $i0, $i1);

        if $i0 != -1 goto label01;

        return -1;

     label01:
        $r1 = staticinvoke <androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>($r1);

        if $r1 != null goto label02;

        return 0;

     label02:
        if $r2 != null goto label05;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>($i1);

        if $r4 == null goto label04;

        $i0 = lengthof $r4;

        if $i0 > 0 goto label03;

        return -1;

     label03:
        $r2 = $r4[0];

        goto label05;

     label04:
        return -1;

     label05:
        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        if $i0 != $i1 goto label06;

        $z0 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r2);

        if $z0 == 0 goto label06;

        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        if $z0 == 0 goto label08;

        $i0 = staticinvoke <androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)>($r0, $i1, $r1, $r2);

        goto label09;

     label08:
        $i0 = staticinvoke <androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>($r0, $r1, $r2);

     label09:
        if $i0 != 0 goto label10;

        return 0;

     label10:
        return -2;
    }

    public static int checkSelfPermission(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = staticinvoke <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>($r0, $r1, $i0, $i1, $r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <androidx.core.content.PermissionChecker: int PERMISSION_DENIED_APP_OP> = -2;

        <androidx.core.content.PermissionChecker: int PERMISSION_DENIED> = -1;

        return;
    }
}
