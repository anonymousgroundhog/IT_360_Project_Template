class kotlin.collections.MapsKt___MapsKt extends kotlin.collections.MapsKt___MapsJvmKt
{

    public void <init>()
    {
        kotlin.collections.MapsKt___MapsKt r0;

        r0 := @this: kotlin.collections.MapsKt___MapsKt;

        specialinvoke r0.<kotlin.collections.MapsKt___MapsJvmKt: void <init>()>();

        return;
    }

    public static final boolean all(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.util.Map $r0;
        java.lang.Boolean $r6;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r6 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public static final boolean any(java.util.Map)
    {
        java.util.Map $r0;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.util.Map $r0;
        java.lang.Boolean $r6;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r6 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label3:
        return 0;
    }

    private static final java.lang.Iterable asIterable(java.util.Map)
    {
        java.util.Set $r1;
        java.lang.Iterable $r2;
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = (java.lang.Iterable) $r1;

        return $r2;
    }

    public static final kotlin.sequences.Sequence asSequence(java.util.Map)
    {
        kotlin.sequences.Sequence $r3;
        java.util.Map $r0;
        java.util.Set $r1;
        java.lang.Iterable $r2;

        $r0 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = (java.lang.Iterable) $r1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r2);

        return $r3;
    }

    private static final int count(java.util.Map)
    {
        int $i0;
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        return $i0;
    }

    public static final int count(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.util.Map $r0;
        int i0;
        java.lang.Boolean $r6;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        i0 = 0;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r6 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

        goto label2;

     label3:
        return i0;
    }

    private static final java.lang.Object firstNotNullOf(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.util.Map $r0;
        java.lang.Object $r4, $r6;
        java.util.NoSuchElementException $r7;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = $r4;

        if $r4 != null goto label3;

        goto label1;

     label2:
        $r6 = null;

     label3:
        if $r6 == null goto label4;

        return $r6;

     label4:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No element of the map was transformed to a non-null value.");

        throw $r7;
    }

    private static final java.lang.Object firstNotNullOfOrNull(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Map $r0;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        if $r4 == null goto label1;

        return $r4;

     label2:
        return null;
    }

    public static final java.util.List flatMap(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Collection r3;
        java.util.Set $r4;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable r8;
        java.util.ArrayList r2;
        java.util.List r9;
        java.util.Map $r0;
        java.lang.Object $r6;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.Collection) r2;

        $r4 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r7);

        r8 = (java.lang.Iterable) $r6;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, r8);

        goto label1;

     label2:
        r9 = (java.util.List) r3;

        return r9;
    }

    public static final java.util.List flatMapSequence(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        kotlin.sequences.Sequence r8;
        java.util.Collection r3;
        java.util.Set $r4;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList r2;
        java.util.List r9;
        java.util.Map $r0;
        java.lang.Object $r6;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.Collection) r2;

        $r4 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r7);

        r8 = (kotlin.sequences.Sequence) $r6;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>(r3, r8);

        goto label1;

     label2:
        r9 = (java.util.List) r3;

        return r9;
    }

    public static final java.util.Collection flatMapSequenceTo(java.util.Map, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        kotlin.sequences.Sequence r7;
        java.util.Collection $r1;
        java.util.Set $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.util.Map $r0;
        java.lang.Object $r5;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        r7 = (kotlin.sequences.Sequence) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>($r1, r7);

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(java.util.Map, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Collection $r1;
        java.util.Set $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Iterable r7;
        java.util.Map $r0;
        java.lang.Object $r5;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        r7 = (java.lang.Iterable) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, r7);

        goto label1;

     label2:
        return $r1;
    }

    public static final void forEach(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Map $r0;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        goto label1;

     label2:
        return;
    }

    public static final java.util.List map(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Collection r3;
        java.util.Set $r4;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList r2;
        java.util.List r8;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r6;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r2 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i0);

        r3 = (java.util.Collection) r2;

        $r4 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r7);

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        r8 = (java.util.List) r3;

        return r8;
    }

    public static final java.util.List mapNotNull(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Collection r3;
        java.util.Set $r4;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList r2;
        java.util.List r8;
        java.util.Map $r0;
        java.lang.Object $r6;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.Collection) r2;

        $r4 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r7);

        if $r6 == null goto label2;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r6);

     label2:
        goto label1;

     label3:
        r8 = (java.util.List) r3;

        return r8;
    }

    public static final java.util.Collection mapNotNullTo(java.util.Map, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Collection $r1;
        java.util.Set $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.util.Map $r0;
        java.lang.Object $r5;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        if $r5 == null goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

     label2:
        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection mapTo(java.util.Map, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Collection $r1;
        java.util.Set $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.util.Map $r0;
        java.lang.Object $r5;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Map$Entry maxByOrNull(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r10;
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        int $i0;
        java.lang.Object r5, $r6, $r8;
        java.lang.Comparable r7, r9;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        r5 = null;

        goto label5;

     label1:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = $r6;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        r7 = (java.lang.Comparable) $r6;

     label3:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        r9 = (java.lang.Comparable) $r8;

        $i0 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>(r9);

        if $i0 >= 0 goto label4;

        r5 = $r6;

        r7 = r9;

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

     label5:
        r10 = (java.util.Map$Entry) r5;

        return r10;
    }

    private static final java.util.Map$Entry maxByOrThrow(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r10;
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r5, r6, $r8;
        java.lang.Comparable r7, r9;
        java.util.NoSuchElementException r11;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = $r5;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        goto label4;

     label1:
        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        r7 = (java.lang.Comparable) $r5;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        r9 = (java.lang.Comparable) $r8;

        $i0 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>(r9);

        if $i0 >= 0 goto label3;

        r6 = $r5;

        r7 = r9;

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

     label4:
        r10 = (java.util.Map$Entry) r6;

        return r10;

     label5:
        r11 = new java.util.NoSuchElementException;

        specialinvoke r11.<java.util.NoSuchElementException: void <init>()>();

        throw r11;
    }

    private static final double maxOf(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.util.NoSuchElementException $r7;
        boolean $z0;
        double $d0, $d1;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $d1 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label1;

     label2:
        return $d0;

     label3:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;
    }

    private static final float maxOf(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        float $f0, $f1;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.util.NoSuchElementException $r7;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $f0 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label1;

     label2:
        return $f0;

     label3:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;
    }

    private static final java.lang.Comparable maxOf(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r5;
        java.lang.Comparable $r6, $r7;
        java.util.NoSuchElementException $r8;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Comparable) $r5;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Comparable) $r5;

        $i0 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label1;

        $r6 = $r7;

        goto label1;

     label2:
        return $r6;

     label3:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        throw $r8;
    }

    private static final java.lang.Comparable maxOfOrNull(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r5;
        java.lang.Comparable $r6, $r7;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Comparable) $r5;

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Comparable) $r5;

        $i0 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label2;

        $r6 = $r7;

        goto label2;

     label3:
        return $r6;
    }

    private static final java.lang.Double maxOfOrNull(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        java.lang.Double $r7;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        boolean $z0;
        double $d0, $d1;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $d1 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label2;

     label3:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Float maxOfOrNull(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.lang.Float $r7;
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        float $f0, $f1;
        java.lang.Object $r5;
        java.lang.Number $r6;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $f0 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label2;

     label3:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Object maxOfWith(java.util.Map, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r5;
        java.util.Set $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Iterable $r4;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r6, $r7;
        java.util.Comparator $r1;
        java.util.NoSuchElementException $r8;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Comparator;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "selector");

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = (java.lang.Iterable) $r3;

        $r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $i0 >= 0 goto label1;

        $r6 = $r7;

        goto label1;

     label2:
        return $r6;

     label3:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        throw $r8;
    }

    private static final java.lang.Object maxOfWithOrNull(java.util.Map, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r5;
        java.util.Set $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Iterable $r4;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r6, $r7;
        java.util.Comparator $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Comparator;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "selector");

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = (java.lang.Iterable) $r3;

        $r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $i0 >= 0 goto label2;

        $r6 = $r7;

        goto label2;

     label3:
        return $r6;
    }

    private static final java.util.Map$Entry maxWithOrNull(java.util.Map, java.util.Comparator)
    {
        java.util.Map$Entry $r5;
        java.util.Map $r0;
        java.util.Set $r2;
        java.lang.Object $r4;
        java.util.Comparator $r1;
        java.lang.Iterable $r3;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object maxWithOrNull(java.lang.Iterable,java.util.Comparator)>($r3, $r1);

        $r5 = (java.util.Map$Entry) $r4;

        return $r5;
    }

    private static final java.util.Map$Entry maxWithOrThrow(java.util.Map, java.util.Comparator)
    {
        java.util.Map$Entry $r5;
        java.util.Map $r0;
        java.util.Set $r2;
        java.lang.Object $r4;
        java.util.Comparator $r1;
        java.lang.Iterable $r3;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object maxWithOrThrow(java.lang.Iterable,java.util.Comparator)>($r3, $r1);

        $r5 = (java.util.Map$Entry) $r4;

        return $r5;
    }

    private static final java.util.Map$Entry minByOrNull(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r10;
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        int $i0;
        java.lang.Object r5, $r6, $r8;
        java.lang.Comparable r7, r9;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        r5 = null;

        goto label5;

     label1:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = $r6;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        r7 = (java.lang.Comparable) $r6;

     label3:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        r9 = (java.lang.Comparable) $r8;

        $i0 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>(r9);

        if $i0 <= 0 goto label4;

        r5 = $r6;

        r7 = r9;

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

     label5:
        r10 = (java.util.Map$Entry) r5;

        return r10;
    }

    private static final java.util.Map$Entry minByOrThrow(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r10;
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r5, r6, $r8;
        java.lang.Comparable r7, r9;
        java.util.NoSuchElementException r11;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = $r5;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        goto label4;

     label1:
        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        r7 = (java.lang.Comparable) $r5;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        r9 = (java.lang.Comparable) $r8;

        $i0 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>(r9);

        if $i0 <= 0 goto label3;

        r6 = $r5;

        r7 = r9;

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

     label4:
        r10 = (java.util.Map$Entry) r6;

        return r10;

     label5:
        r11 = new java.util.NoSuchElementException;

        specialinvoke r11.<java.util.NoSuchElementException: void <init>()>();

        throw r11;
    }

    private static final double minOf(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.util.NoSuchElementException $r7;
        boolean $z0;
        double $d0, $d1;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $d1 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label1;

     label2:
        return $d0;

     label3:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;
    }

    private static final float minOf(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        float $f0, $f1;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.util.NoSuchElementException $r7;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $f0 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label1;

     label2:
        return $f0;

     label3:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;
    }

    private static final java.lang.Comparable minOf(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r5;
        java.lang.Comparable $r6, $r7;
        java.util.NoSuchElementException $r8;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Comparable) $r5;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Comparable) $r5;

        $i0 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label1;

        $r6 = $r7;

        goto label1;

     label2:
        return $r6;

     label3:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        throw $r8;
    }

    private static final java.lang.Comparable minOfOrNull(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r5;
        java.lang.Comparable $r6, $r7;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Comparable) $r5;

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Comparable) $r5;

        $i0 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label2;

        $r6 = $r7;

        goto label2;

     label3:
        return $r6;
    }

    private static final java.lang.Double minOfOrNull(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        java.lang.Double $r7;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        boolean $z0;
        double $d0, $d1;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $d1 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label2;

     label3:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Float minOfOrNull(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.lang.Float $r7;
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        float $f0, $f1;
        java.lang.Object $r5;
        java.lang.Number $r6;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $f0 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Number) $r5;

        $f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label2;

     label3:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Object minOfWith(java.util.Map, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r5;
        java.util.Set $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Iterable $r4;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r6, $r7;
        java.util.Comparator $r1;
        java.util.NoSuchElementException $r8;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Comparator;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "selector");

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = (java.lang.Iterable) $r3;

        $r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $i0 <= 0 goto label1;

        $r6 = $r7;

        goto label1;

     label2:
        return $r6;

     label3:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        throw $r8;
    }

    private static final java.lang.Object minOfWithOrNull(java.util.Map, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r5;
        java.util.Set $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Iterable $r4;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r6, $r7;
        java.util.Comparator $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Comparator;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "selector");

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = (java.lang.Iterable) $r3;

        $r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $i0 <= 0 goto label2;

        $r6 = $r7;

        goto label2;

     label3:
        return $r6;
    }

    private static final java.util.Map$Entry minWithOrNull(java.util.Map, java.util.Comparator)
    {
        java.util.Map$Entry $r5;
        java.util.Map $r0;
        java.util.Set $r2;
        java.lang.Object $r4;
        java.util.Comparator $r1;
        java.lang.Iterable $r3;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object minWithOrNull(java.lang.Iterable,java.util.Comparator)>($r3, $r1);

        $r5 = (java.util.Map$Entry) $r4;

        return $r5;
    }

    private static final java.util.Map$Entry minWithOrThrow(java.util.Map, java.util.Comparator)
    {
        java.util.Map$Entry $r5;
        java.util.Map $r0;
        java.util.Set $r2;
        java.lang.Object $r4;
        java.util.Comparator $r1;
        java.lang.Iterable $r3;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object minWithOrThrow(java.lang.Iterable,java.util.Comparator)>($r3, $r1);

        $r5 = (java.util.Map$Entry) $r4;

        return $r5;
    }

    public static final boolean none(java.util.Map)
    {
        java.util.Map $r0;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public static final boolean none(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.util.Map $r0;
        java.lang.Boolean $r6;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r6 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public static final java.util.Map onEach(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Map $r0;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        goto label1;

     label2:
        return $r0;
    }

    public static final java.util.Map onEachIndexed(java.util.Map, kotlin.jvm.functions.Function2)
    {
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Integer $r6;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        int i0, i1;
        java.lang.Object $r5;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        i1 = 0;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        i0 = i1 + 1;

        if i1 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        i1 = i0;

        goto label1;

     label3:
        return $r0;
    }

    public static final java.util.List toList(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        kotlin.Pair r6;
        java.util.Set $r2;
        java.util.ArrayList r8;
        java.util.List $r1;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r4, $r7;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 != 0 goto label1;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        r6 = new kotlin.Pair;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke r6.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r7);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r6);

        return $r1;

     label3:
        r8 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        r6 = new kotlin.Pair;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke r6.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r7);

        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label4:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        r6 = new kotlin.Pair;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke r6.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r7);

        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        $r1 = (java.util.List) r8;

        return $r1;
    }
}
