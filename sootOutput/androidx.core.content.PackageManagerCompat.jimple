public final class androidx.core.content.PackageManagerCompat extends java.lang.Object
{
    public static final java.lang.String ACTION_PERMISSION_REVOCATION_SETTINGS;
    public static final java.lang.String LOG_TAG;

    private void <init>()
    {
        androidx.core.content.PackageManagerCompat r0;

        r0 := @this: androidx.core.content.PackageManagerCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean areUnusedAppRestrictionsAvailable(android.content.pm.PackageManager)
    {
        android.content.pm.PackageManager $r0;
        int i0;
        java.lang.String $r1;
        boolean z0, z1, z2;

        $r0 := @parameter0: android.content.pm.PackageManager;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 30 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 23 goto label3;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 >= 30 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        $r1 = staticinvoke <androidx.core.content.PackageManagerCompat: java.lang.String getPermissionRevocationVerifierApp(android.content.pm.PackageManager)>($r0);

        if $r1 == null goto label5;

        z2 = 1;

        goto label6;

     label5:
        z2 = 0;

     label6:
        if z0 != 0 goto label8;

        if z1 == 0 goto label7;

        if z2 == 0 goto label7;

        return 1;

     label7:
        return 0;

     label8:
        return 1;
    }

    public static java.lang.String getPermissionRevocationVerifierApp(android.content.pm.PackageManager)
    {
        java.util.Iterator $r5;
        android.content.pm.PackageManager $r0;
        android.net.Uri $r2;
        android.content.Intent r1;
        android.content.pm.ResolveInfo r7;
        java.util.List $r3;
        android.content.pm.ActivityInfo r8;
        int $i0;
        java.lang.Object $r6;
        java.lang.String r4, r9;
        boolean $z0;

        $r0 := @parameter0: android.content.pm.PackageManager;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.AUTO_REVOKE_PERMISSIONS");

        $r2 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", "com.example", null);

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r2);

        $r3 = virtualinvoke $r0.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r1, 0);

        r4 = null;

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.content.pm.ResolveInfo) $r6;

        r8 = r7.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r9 = r8.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $i0 = virtualinvoke $r0.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_VERIFICATION_AGENT", r9);

        if $i0 == 0 goto label2;

        goto label1;

     label2:
        if r4 == null goto label3;

        return r4;

     label3:
        r4 = r9;

        goto label1;

     label4:
        return r4;
    }

    public static com.google.common.util.concurrent.ListenableFuture getUnusedAppRestrictionsStatus(android.content.Context)
    {
        android.content.Context $r0;
        androidx.core.content.UnusedAppRestrictionsBackportServiceConnection r5;
        android.content.pm.PackageManager $r3;
        androidx.concurrent.futures.ResolvableFuture $r1;
        java.lang.Integer $r2;
        androidx.core.content.PackageManagerCompat$$ExternalSyntheticLambda0 $r6;
        byte $b2;
        int i0, i1;
        android.content.pm.ApplicationInfo $r4;
        java.util.concurrent.ExecutorService $r7;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $z0 = staticinvoke <androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>($r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r2);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManagerCompat", "User is in locked direct boot mode");

        return $r1;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = staticinvoke <androidx.core.content.PackageManagerCompat: boolean areUnusedAppRestrictionsAvailable(android.content.pm.PackageManager)>($r3);

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r1.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r2);

        return $r1;

     label2:
        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r4.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if i0 >= 30 goto label3;

        virtualinvoke $r1.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r2);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManagerCompat", "Target SDK version below API 30");

        return $r1;

     label3:
        i1 = <android.os.Build$VERSION: int SDK_INT>;

        $b2 = 4;

        if i1 < 31 goto label6;

        $z0 = staticinvoke <androidx.core.content.PackageManagerCompat$Api30Impl: boolean areUnusedAppRestrictionsEnabled(android.content.Context)>($r0);

        if $z0 == 0 goto label5;

        if i0 < 31 goto label4;

        $b2 = 5;

     label4:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b2);

        virtualinvoke $r1.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r2);

        return $r1;

     label5:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r1.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r2);

        return $r1;

     label6:
        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 != 30 goto label9;

        $z0 = staticinvoke <androidx.core.content.PackageManagerCompat$Api30Impl: boolean areUnusedAppRestrictionsEnabled(android.content.Context)>($r0);

        if $z0 == 0 goto label7;

        goto label8;

     label7:
        $b2 = 2;

     label8:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b2);

        virtualinvoke $r1.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r2);

        return $r1;

     label9:
        r5 = new androidx.core.content.UnusedAppRestrictionsBackportServiceConnection;

        specialinvoke r5.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: void <init>(android.content.Context)>($r0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r5);

        $r6 = new androidx.core.content.PackageManagerCompat$$ExternalSyntheticLambda0;

        specialinvoke $r6.<androidx.core.content.PackageManagerCompat$$ExternalSyntheticLambda0: void <init>(androidx.core.content.UnusedAppRestrictionsBackportServiceConnection)>(r5);

        $r7 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        virtualinvoke $r1.<androidx.concurrent.futures.ResolvableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r6, $r7);

        virtualinvoke r5.<androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: void connectAndFetchResult(androidx.concurrent.futures.ResolvableFuture)>($r1);

        return $r1;
    }

    public static void <clinit>()
    {
        <androidx.core.content.PackageManagerCompat: java.lang.String LOG_TAG> = "PackageManagerCompat";

        <androidx.core.content.PackageManagerCompat: java.lang.String ACTION_PERMISSION_REVOCATION_SETTINGS> = "android.intent.action.AUTO_REVOKE_PERMISSIONS";

        return;
    }
}
