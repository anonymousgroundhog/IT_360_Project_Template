public final class kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 extends java.lang.Object implements kotlinx.coroutines.flow.Flow
{
    final kotlin.jvm.functions.Function2 $action$inlined;
    final kotlinx.coroutines.flow.Flow $this_onEmpty$inlined;

    public void <init>(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.jvm.functions.Function2 $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

        r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onEmpty$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $action$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        java.lang.Throwable r9, r19;
        java.lang.IllegalStateException $r7;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 r0, r13;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1 $r3, $r4;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1 $r15;
        int i0;
        boolean $z0;
        kotlin.jvm.internal.Ref$BooleanRef r11;
        kotlin.jvm.functions.Function2 $r18;
        kotlin.coroutines.CoroutineContext $r17;
        kotlinx.coroutines.flow.Flow $r14;
        kotlinx.coroutines.flow.internal.SafeCollector r8;
        kotlin.Unit r20;
        kotlinx.coroutines.flow.FlowCollector $r1, $r12, $r16;
        java.lang.Object $r5, $r6, r10;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1;

        if $z0 == 0 goto label01;

        $r3 = (kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1) $r2;

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label>;

        i0 = i0 & -2147483648;

        if i0 == 0 goto label01;

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label>;

        i0 = i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label> = i0;

        goto label02;

     label01:
        $r3 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)>(r0, $r2);

     label02:
        $r4 = $r3;

        $r5 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object result>;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label04;
            default: goto label03;
        };

     label03:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label04:
        $r6 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        r8 = (kotlinx.coroutines.flow.internal.SafeCollector) $r6;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

     label06:
        goto label13;

     label07:
        r9 := @caughtexception;

        goto label15;

     label08:
        r10 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$2>;

        r11 = (kotlin.jvm.internal.Ref$BooleanRef) r10;

        r10 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$1>;

        $r12 = (kotlinx.coroutines.flow.FlowCollector) r10;

        r10 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        r13 = (kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1) r10;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        goto label10;

     label09:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        r13 = r0;

        $r2 = (kotlin.coroutines.Continuation) $r3;

        $r12 = $r1;

        r11 = new kotlin.jvm.internal.Ref$BooleanRef;

        specialinvoke r11.<kotlin.jvm.internal.Ref$BooleanRef: void <init>()>();

        r11.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = 1;

        $r14 = r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onEmpty$inlined>;

        $r15 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1;

        specialinvoke $r15.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: void <init>(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector)>(r11, $r1);

        $r16 = (kotlinx.coroutines.flow.FlowCollector) $r15;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = r0;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = $r1;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$2> = r11;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label> = 1;

        $r5 = interfaceinvoke $r14.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r16, $r3);

        if $r5 != $r6 goto label10;

        return $r6;

     label10:
        $z0 = r11.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z0 == 0 goto label16;

        r8 = new kotlinx.coroutines.flow.internal.SafeCollector;

        $r17 = interfaceinvoke $r4.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        specialinvoke r8.<kotlinx.coroutines.flow.internal.SafeCollector: void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)>($r12, $r17);

     label11:
        $r18 = r13.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $action$inlined>;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = r8;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = null;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$2> = null;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label> = 2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(6);

        $r5 = interfaceinvoke $r18.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r8, $r4);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(7);

     label12:
        if $r5 != $r6 goto label13;

        return $r6;

     label13:
        virtualinvoke r8.<kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()>();

        goto label16;

     label14:
        r19 := @caughtexception;

        r9 = r19;

     label15:
        virtualinvoke r8.<kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()>();

        throw r9;

     label16:
        r20 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r20;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label11 to label12 with label14;
    }
}
