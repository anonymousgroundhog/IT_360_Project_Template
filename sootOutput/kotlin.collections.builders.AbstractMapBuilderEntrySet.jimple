public abstract class kotlin.collections.builders.AbstractMapBuilderEntrySet extends kotlin.collections.AbstractMutableSet
{

    public void <init>()
    {
        kotlin.collections.builders.AbstractMapBuilderEntrySet r0;

        r0 := @this: kotlin.collections.builders.AbstractMapBuilderEntrySet;

        specialinvoke r0.<kotlin.collections.AbstractMutableSet: void <init>()>();

        return;
    }

    public final volatile boolean contains(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        kotlin.collections.builders.AbstractMapBuilderEntrySet r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlin.collections.builders.AbstractMapBuilderEntrySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (java.util.Map$Entry) $r1;

        $z0 = virtualinvoke r0.<kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean contains(java.util.Map$Entry)>($r2);

        return $z0;
    }

    public final boolean contains(java.util.Map$Entry)
    {
        kotlin.collections.builders.AbstractMapBuilderEntrySet r0;
        java.util.Map$Entry $r1;
        boolean $z0;

        r0 := @this: kotlin.collections.builders.AbstractMapBuilderEntrySet;

        $r1 := @parameter0: java.util.Map$Entry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "element");

        $z0 = virtualinvoke r0.<kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean containsEntry(java.util.Map$Entry)>($r1);

        return $z0;
    }

    public abstract boolean containsEntry(java.util.Map$Entry);

    public final volatile boolean remove(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        kotlin.collections.builders.AbstractMapBuilderEntrySet r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlin.collections.builders.AbstractMapBuilderEntrySet;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (java.util.Map$Entry) $r1;

        $z0 = virtualinvoke r0.<kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean remove(java.util.Map$Entry)>($r2);

        return $z0;
    }

    public volatile boolean remove(java.util.Map$Entry)
    {
        kotlin.collections.builders.AbstractMapBuilderEntrySet r0;
        java.util.Map$Entry $r1;
        boolean $z0;

        r0 := @this: kotlin.collections.builders.AbstractMapBuilderEntrySet;

        $r1 := @parameter0: java.util.Map$Entry;

        $z0 = specialinvoke r0.<kotlin.collections.AbstractMutableSet: boolean remove(java.lang.Object)>($r1);

        return $z0;
    }
}
