public final class kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow;
    final kotlin.jvm.functions.Function2 $transform$inlined;

    public void <init>(kotlinx.coroutines.flow.FlowCollector, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r2;
        kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

        r0.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: kotlin.jvm.functions.Function2 $transform$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        java.lang.IllegalStateException $r8;
        kotlin.coroutines.Continuation $r3;
        kotlin.jvm.functions.Function2 $r1;
        kotlin.Unit r10;
        kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2 r0;
        kotlinx.coroutines.flow.FlowCollector r9;
        int $i0;
        java.lang.Object $r2, $r6, $r7;
        kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1 $r4, $r5;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r3 instanceof kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1;

        if $z0 == 0 goto label1;

        $r4 = (kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1) $r3;

        $i0 = $r4.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r4.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: int label>;

        $i0 = $i0 - -2147483648;

        $r4.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: int label> = $i0;

        goto label2;

     label1:
        $r4 = new kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1;

        specialinvoke $r4.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: void <init>(kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2,kotlin.coroutines.Continuation)>(r0, $r3);

     label2:
        $r5 = $r4;

        $r6 = $r4.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object result>;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r4.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label6;
            case 1: goto label5;
            case 2: goto label4;
            default: goto label3;
        };

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        goto label8;

     label5:
        $r2 = $r4.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object L$0>;

        r9 = (kotlinx.coroutines.flow.FlowCollector) $r2;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        $r2 = $r6;

        goto label7;

     label6:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        r9 = r0.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: kotlin.jvm.functions.Function2 $transform$inlined>;

        $r4.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object L$0> = r9;

        $r4.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: int label> = 1;

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r2 = $r6;

        if $r6 != $r7 goto label7;

        return $r7;

     label7:
        $r5.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object L$0> = null;

        $r5.<kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: int label> = 2;

        $r2 = interfaceinvoke r9.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r2, $r5);

        if $r2 != $r7 goto label8;

        return $r7;

     label8:
        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r10;
    }
}
