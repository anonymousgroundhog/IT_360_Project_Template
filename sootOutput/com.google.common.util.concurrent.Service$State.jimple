public final enum class com.google.common.util.concurrent.Service$State extends java.lang.Enum
{
    private static final com.google.common.util.concurrent.Service$State[] $VALUES;
    public static final enum com.google.common.util.concurrent.Service$State FAILED;
    public static final enum com.google.common.util.concurrent.Service$State NEW;
    public static final enum com.google.common.util.concurrent.Service$State RUNNING;
    public static final enum com.google.common.util.concurrent.Service$State STARTING;
    public static final enum com.google.common.util.concurrent.Service$State STOPPING;
    public static final enum com.google.common.util.concurrent.Service$State TERMINATED;

    private static com.google.common.util.concurrent.Service$State[] $values()
    {
        com.google.common.util.concurrent.Service$State[] $r0;
        com.google.common.util.concurrent.Service$State $r1;

        $r0 = newarray (com.google.common.util.concurrent.Service$State)[6];

        $r1 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW>;

        $r0[0] = $r1;

        $r1 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        $r0[1] = $r1;

        $r1 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        $r0[2] = $r1;

        $r1 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

        $r0[3] = $r1;

        $r1 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        $r0[4] = $r1;

        $r1 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State FAILED>;

        $r0[5] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        com.google.common.util.concurrent.Service$State[] $r0;
        com.google.common.util.concurrent.Service$State $r1;

        $r1 = new com.google.common.util.concurrent.Service$State;

        specialinvoke $r1.<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int)>("NEW", 0);

        <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW> = $r1;

        $r1 = new com.google.common.util.concurrent.Service$State;

        specialinvoke $r1.<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int)>("STARTING", 1);

        <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING> = $r1;

        $r1 = new com.google.common.util.concurrent.Service$State;

        specialinvoke $r1.<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int)>("RUNNING", 2);

        <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING> = $r1;

        $r1 = new com.google.common.util.concurrent.Service$State;

        specialinvoke $r1.<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int)>("STOPPING", 3);

        <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING> = $r1;

        $r1 = new com.google.common.util.concurrent.Service$State;

        specialinvoke $r1.<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int)>("TERMINATED", 4);

        <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED> = $r1;

        $r1 = new com.google.common.util.concurrent.Service$State;

        specialinvoke $r1.<com.google.common.util.concurrent.Service$State: void <init>(java.lang.String,int)>("FAILED", 5);

        <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State FAILED> = $r1;

        $r0 = staticinvoke <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State[] $values()>();

        <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        com.google.common.util.concurrent.Service$State r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.util.concurrent.Service$State;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.google.common.util.concurrent.Service$State valueOf(java.lang.String)
    {
        java.lang.String $r0;
        com.google.common.util.concurrent.Service$State $r2;
        java.lang.Enum $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/common/util/concurrent/Service$State;", $r0);

        $r2 = (com.google.common.util.concurrent.Service$State) $r1;

        return $r2;
    }

    public static com.google.common.util.concurrent.Service$State[] values()
    {
        com.google.common.util.concurrent.Service$State[] $r1;
        java.lang.Object $r0;

        $r1 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.google.common.util.concurrent.Service$State[]) $r0;

        return $r1;
    }
}
