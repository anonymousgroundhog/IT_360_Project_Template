final class kotlin.text.DelimitedRangesSequence extends java.lang.Object implements kotlin.sequences.Sequence
{
    private final kotlin.jvm.functions.Function2 getNextMatch;
    private final java.lang.CharSequence input;
    private final int limit;
    private final int startIndex;

    public void <init>(java.lang.CharSequence, int, int, kotlin.jvm.functions.Function2)
    {
        kotlin.text.DelimitedRangesSequence r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        kotlin.jvm.functions.Function2 $r2;

        r0 := @this: kotlin.text.DelimitedRangesSequence;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "input");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "getNextMatch");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.text.DelimitedRangesSequence: java.lang.CharSequence input> = $r1;

        r0.<kotlin.text.DelimitedRangesSequence: int startIndex> = $i0;

        r0.<kotlin.text.DelimitedRangesSequence: int limit> = $i1;

        r0.<kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 getNextMatch> = $r2;

        return;
    }

    public static final kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence)
    {
        kotlin.text.DelimitedRangesSequence $r0;
        kotlin.jvm.functions.Function2 r1;

        $r0 := @parameter0: kotlin.text.DelimitedRangesSequence;

        r1 = $r0.<kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 getNextMatch>;

        return r1;
    }

    public static final java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence)
    {
        kotlin.text.DelimitedRangesSequence $r0;
        java.lang.CharSequence r1;

        $r0 := @parameter0: kotlin.text.DelimitedRangesSequence;

        r1 = $r0.<kotlin.text.DelimitedRangesSequence: java.lang.CharSequence input>;

        return r1;
    }

    public static final int access$getLimit$p(kotlin.text.DelimitedRangesSequence)
    {
        kotlin.text.DelimitedRangesSequence $r0;
        int i0;

        $r0 := @parameter0: kotlin.text.DelimitedRangesSequence;

        i0 = $r0.<kotlin.text.DelimitedRangesSequence: int limit>;

        return i0;
    }

    public static final int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence)
    {
        kotlin.text.DelimitedRangesSequence $r0;
        int i0;

        $r0 := @parameter0: kotlin.text.DelimitedRangesSequence;

        i0 = $r0.<kotlin.text.DelimitedRangesSequence: int startIndex>;

        return i0;
    }

    public java.util.Iterator iterator()
    {
        kotlin.text.DelimitedRangesSequence r0;
        kotlin.text.DelimitedRangesSequence$iterator$1 $r1;
        java.util.Iterator $r2;

        r0 := @this: kotlin.text.DelimitedRangesSequence;

        $r1 = new kotlin.text.DelimitedRangesSequence$iterator$1;

        specialinvoke $r1.<kotlin.text.DelimitedRangesSequence$iterator$1: void <init>(kotlin.text.DelimitedRangesSequence)>(r0);

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }
}
