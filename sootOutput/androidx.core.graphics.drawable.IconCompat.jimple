public class androidx.core.graphics.drawable.IconCompat extends androidx.versionedparcelable.CustomVersionedParcelable
{
    private static final float ADAPTIVE_ICON_INSET_FACTOR;
    private static final int AMBIENT_SHADOW_ALPHA;
    private static final float BLUR_FACTOR;
    static final android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE;
    private static final float DEFAULT_VIEW_PORT_SCALE;
    static final java.lang.String EXTRA_INT1;
    static final java.lang.String EXTRA_INT2;
    static final java.lang.String EXTRA_OBJ;
    static final java.lang.String EXTRA_STRING1;
    static final java.lang.String EXTRA_TINT_LIST;
    static final java.lang.String EXTRA_TINT_MODE;
    static final java.lang.String EXTRA_TYPE;
    private static final float ICON_DIAMETER_FACTOR;
    private static final int KEY_SHADOW_ALPHA;
    private static final float KEY_SHADOW_OFFSET_FACTOR;
    private static final java.lang.String TAG;
    public static final int TYPE_ADAPTIVE_BITMAP;
    public static final int TYPE_BITMAP;
    public static final int TYPE_DATA;
    public static final int TYPE_RESOURCE;
    public static final int TYPE_UNKNOWN;
    public static final int TYPE_URI;
    public static final int TYPE_URI_ADAPTIVE_BITMAP;
    public byte[] mData;
    public int mInt1;
    public int mInt2;
    java.lang.Object mObj1;
    public android.os.Parcelable mParcelable;
    public java.lang.String mString1;
    public android.content.res.ColorStateList mTintList;
    android.graphics.PorterDuff$Mode mTintMode;
    public java.lang.String mTintModeStr;
    public int mType;

    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $r0;

        <androidx.core.graphics.drawable.IconCompat: int TYPE_URI_ADAPTIVE_BITMAP> = 6;

        <androidx.core.graphics.drawable.IconCompat: int TYPE_URI> = 4;

        <androidx.core.graphics.drawable.IconCompat: int TYPE_UNKNOWN> = -1;

        <androidx.core.graphics.drawable.IconCompat: int TYPE_RESOURCE> = 2;

        <androidx.core.graphics.drawable.IconCompat: int TYPE_DATA> = 3;

        <androidx.core.graphics.drawable.IconCompat: int TYPE_BITMAP> = 1;

        <androidx.core.graphics.drawable.IconCompat: int TYPE_ADAPTIVE_BITMAP> = 5;

        <androidx.core.graphics.drawable.IconCompat: java.lang.String TAG> = "IconCompat";

        <androidx.core.graphics.drawable.IconCompat: float KEY_SHADOW_OFFSET_FACTOR> = 0.020833334F;

        <androidx.core.graphics.drawable.IconCompat: int KEY_SHADOW_ALPHA> = 61;

        <androidx.core.graphics.drawable.IconCompat: float ICON_DIAMETER_FACTOR> = 0.9166667F;

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TYPE> = "type";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TINT_MODE> = "tint_mode";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TINT_LIST> = "tint_list";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_STRING1> = "string1";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_OBJ> = "obj";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_INT2> = "int2";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_INT1> = "int1";

        <androidx.core.graphics.drawable.IconCompat: float DEFAULT_VIEW_PORT_SCALE> = 0.6666667F;

        <androidx.core.graphics.drawable.IconCompat: float BLUR_FACTOR> = 0.010416667F;

        <androidx.core.graphics.drawable.IconCompat: int AMBIENT_SHADOW_ALPHA> = 30;

        <androidx.core.graphics.drawable.IconCompat: float ADAPTIVE_ICON_INSET_FACTOR> = 0.25F;

        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE> = $r0;

        return;
    }

    public void <init>()
    {
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        specialinvoke r0.<androidx.versionedparcelable.CustomVersionedParcelable: void <init>()>();

        r0.<androidx.core.graphics.drawable.IconCompat: int mType> = -1;

        r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData> = null;

        r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable> = null;

        r0.<androidx.core.graphics.drawable.IconCompat: int mInt1> = 0;

        r0.<androidx.core.graphics.drawable.IconCompat: int mInt2> = 0;

        r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList> = null;

        $r1 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode> = $r1;

        r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr> = null;

        return;
    }

    void <init>(int)
    {
        int $i0;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 := @parameter0: int;

        specialinvoke r0.<androidx.versionedparcelable.CustomVersionedParcelable: void <init>()>();

        r0.<androidx.core.graphics.drawable.IconCompat: int mType> = -1;

        r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData> = null;

        r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable> = null;

        r0.<androidx.core.graphics.drawable.IconCompat: int mInt1> = 0;

        r0.<androidx.core.graphics.drawable.IconCompat: int mInt2> = 0;

        r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList> = null;

        $r1 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode> = $r1;

        r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr> = null;

        r0.<androidx.core.graphics.drawable.IconCompat: int mType> = $i0;

        return;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
    {
        byte[] $r7;
        android.os.Bundle $r0;
        android.os.Parcelable $r3;
        android.graphics.PorterDuff$Mode $r5;
        android.content.res.ColorStateList $r4;
        androidx.core.graphics.drawable.IconCompat r1;
        int $i0, $i1;
        java.lang.StringBuilder $r6;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: android.os.Bundle;

        $i0 = virtualinvoke $r0.<android.os.Bundle: int getInt(java.lang.String)>("type");

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>($i0);

        $i1 = virtualinvoke $r0.<android.os.Bundle: int getInt(java.lang.String)>("int1");

        r1.<androidx.core.graphics.drawable.IconCompat: int mInt1> = $i1;

        $i1 = virtualinvoke $r0.<android.os.Bundle: int getInt(java.lang.String)>("int2");

        r1.<androidx.core.graphics.drawable.IconCompat: int mInt2> = $i1;

        $r2 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("string1");

        r1.<androidx.core.graphics.drawable.IconCompat: java.lang.String mString1> = $r2;

        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean containsKey(java.lang.String)>("tint_list");

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r0.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("tint_list");

        $r4 = (android.content.res.ColorStateList) $r3;

        r1.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList> = $r4;

     label1:
        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean containsKey(java.lang.String)>("tint_mode");

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("tint_mode");

        $r5 = staticinvoke <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode valueOf(java.lang.String)>($r2);

        r1.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode> = $r5;

     label2:
        lookupswitch($i0)
        {
            case -1: goto label6;
            case 0: goto label3;
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label5;
            default: goto label3;
        };

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IconCompat", $r2);

        return null;

     label4:
        $r7 = virtualinvoke $r0.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("obj");

        r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r7;

        return r1;

     label5:
        $r2 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("obj");

        r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r2;

        return r1;

     label6:
        $r3 = virtualinvoke $r0.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("obj");

        r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r3;

        return r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context, android.graphics.drawable.Icon)
    {
        android.content.Context $r0;
        android.graphics.drawable.Icon $r1;
        androidx.core.graphics.drawable.IconCompat $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.graphics.drawable.Icon;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>($r0, $r1);

        return $r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
    {
        android.graphics.drawable.Icon $r0;
        androidx.core.graphics.drawable.IconCompat $r1;

        $r0 := @parameter0: android.graphics.drawable.Icon;

        $r1 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: androidx.core.graphics.drawable.IconCompat createFromIconInner(java.lang.Object)>($r0);

        return $r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)
    {
        int $i0;
        android.graphics.drawable.Icon $r0;
        androidx.core.graphics.drawable.IconCompat $r1;

        $r0 := @parameter0: android.graphics.drawable.Icon;

        $i0 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: int getType(java.lang.Object)>($r0);

        if $i0 != 2 goto label1;

        $i0 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: int getResId(java.lang.Object)>($r0);

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: androidx.core.graphics.drawable.IconCompat createFromIconInner(java.lang.Object)>($r0);

        return $r1;
    }

    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap, boolean)
    {
        android.graphics.Shader$TileMode r6, $r7;
        android.graphics.Bitmap$Config r3;
        int $i0, $i1;
        android.graphics.Canvas r1;
        android.graphics.Matrix r8;
        boolean $z0;
        android.graphics.BitmapShader r5;
        android.graphics.Bitmap $r0, $r4;
        float f0, f1, f2, $f3;
        android.graphics.Paint r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        f0 = (float) $i0;

        f0 = f0 * 0.6666667F;

        $i0 = (int) f0;

        r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i0, r3);

        r1 = new android.graphics.Canvas;

        specialinvoke r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r4);

        r2 = new android.graphics.Paint;

        specialinvoke r2.<android.graphics.Paint: void <init>(int)>(3);

        f0 = (float) $i0;

        f0 = f0 * 0.5F;

        f1 = 0.9166667F * f0;

        if $z0 == 0 goto label1;

        f2 = (float) $i0;

        f2 = f2 * 0.010416667F;

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(0);

        $f3 = (float) $i0;

        $f3 = $f3 * 0.020833334F;

        virtualinvoke r2.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(f2, 0.0F, $f3, 1023410176);

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f0, f0, f1, r2);

        virtualinvoke r2.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(f2, 0.0F, 0.0F, 503316480);

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f0, f0, f1, r2);

        virtualinvoke r2.<android.graphics.Paint: void clearShadowLayer()>();

     label1:
        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-16777216);

        r5 = new android.graphics.BitmapShader;

        r6 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r7 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke r5.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r0, r6, $r7);

        r8 = new android.graphics.Matrix;

        specialinvoke r8.<android.graphics.Matrix: void <init>()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = $i1 - $i0;

        $i1 = neg $i1;

        f2 = (float) $i1;

        f2 = f2 / 2.0F;

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i1 - $i0;

        $i0 = neg $i0;

        $f3 = (float) $i0;

        $f3 = $f3 / 2.0F;

        virtualinvoke r8.<android.graphics.Matrix: void setTranslate(float,float)>(f2, $f3);

        virtualinvoke r5.<android.graphics.BitmapShader: void setLocalMatrix(android.graphics.Matrix)>(r8);

        virtualinvoke r2.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r5);

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f0, f0, f1, r2);

        virtualinvoke r1.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return $r4;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    {
        androidx.core.graphics.drawable.IconCompat r1;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0: android.graphics.Bitmap;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>($r0);

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(5);

        r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r1;
        androidx.core.graphics.drawable.IconCompat $r2;

        $r0 := @parameter0: android.net.Uri;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>($r0);

        $r1 = virtualinvoke $r0.<android.net.Uri: java.lang.String toString()>();

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(java.lang.String)>($r1);

        return $r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(java.lang.String)
    {
        java.lang.String $r0;
        androidx.core.graphics.drawable.IconCompat r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>($r0);

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(6);

        r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    {
        androidx.core.graphics.drawable.IconCompat r1;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0: android.graphics.Bitmap;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>($r0);

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(1);

        r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r1;
        androidx.core.graphics.drawable.IconCompat $r2;

        $r0 := @parameter0: android.net.Uri;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>($r0);

        $r1 = virtualinvoke $r0.<android.net.Uri: java.lang.String toString()>();

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)>($r1);

        return $r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    {
        java.lang.String $r0;
        androidx.core.graphics.drawable.IconCompat r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>($r0);

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(4);

        r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithData(byte[], int, int)
    {
        byte[] $r0;
        androidx.core.graphics.drawable.IconCompat r1;
        int $i0, $i1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>($r0);

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(3);

        r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        r1.<androidx.core.graphics.drawable.IconCompat: int mInt1> = $i0;

        r1.<androidx.core.graphics.drawable.IconCompat: int mInt2> = $i1;

        return r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context, int)
    {
        android.content.Context $r0;
        androidx.core.graphics.drawable.IconCompat $r3;
        int $i0;
        java.lang.String $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>($r0);

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)>($r1, $r2, $i0);

        return $r3;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources, java.lang.String, int)
    {
        androidx.core.graphics.drawable.IconCompat r4;
        android.content.res.Resources$NotFoundException r5;
        int $i0;
        java.lang.String $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        android.content.res.Resources $r0;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        if $i0 == 0 goto label6;

        r4 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r4.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(2);

        r4.<androidx.core.graphics.drawable.IconCompat: int mInt1> = $i0;

        if $r0 == null goto label4;

     label1:
        $r3 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0);

     label2:
        r4.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r3;

        goto label5;

     label3:
        r5 := @caughtexception;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Icon resource cannot be found");

        throw $r2;

     label4:
        r4.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r1;

     label5:
        r4.<androidx.core.graphics.drawable.IconCompat: java.lang.String mString1> = $r1;

        return r4;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Drawable resource ID must not be 0");

        throw $r2;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    static android.content.res.Resources getResources(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.Object[] $r7;
        android.content.pm.PackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException r6;
        java.lang.String $r1, r2;
        android.content.pm.ApplicationInfo $r5;
        boolean $z0;
        android.content.res.Resources $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r2 = "android";

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        return $r3;

     label1:
        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label2:
        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 8192);

     label3:
        if $r5 == null goto label6;

     label4:
        $r3 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r5);

     label5:
        return $r3;

     label6:
        return null;

     label7:
        r6 := @caughtexception;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to find pkg=%s for icon", $r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r1, r6);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label7;
    }

    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    {
        android.content.Context $r1;
        byte[] $r8;
        java.lang.Object[] $r14;
        android.graphics.drawable.Drawable $r7;
        java.lang.Integer $r13;
        int i0, i1;
        java.lang.String $r9, r10;
        android.content.res.Resources$Theme $r11;
        boolean $z0;
        android.graphics.drawable.BitmapDrawable $r4;
        java.lang.RuntimeException r12;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap $r6;
        java.lang.Object $r2;
        java.io.InputStream $r3;
        android.content.res.Resources $r5;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Context;

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        lookupswitch(i0)
        {
            case 1: goto label12;
            case 2: goto label07;
            case 3: goto label06;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        $r3 = virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>($r1);

        if $r3 == null goto label13;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 26 goto label03;

        $r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r3);

        specialinvoke $r4.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r5, $r6);

        $r7 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(null, $r4);

        return $r7;

     label03:
        $r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r3);

        $r6 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)>($r6, 0);

        specialinvoke $r4.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r5, $r6);

        return $r4;

     label04:
        $r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r6 = (android.graphics.Bitmap) $r2;

        $r6 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)>($r6, 0);

        specialinvoke $r4.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r5, $r6);

        return $r4;

     label05:
        $r3 = virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>($r1);

        if $r3 == null goto label13;

        $r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r3);

        specialinvoke $r4.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r5, $r6);

        return $r4;

     label06:
        $r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r8 = (byte[]) $r2;

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        i1 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt2>;

        $r6 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r8, i0, i1);

        specialinvoke $r4.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r5, $r6);

        return $r4;

     label07:
        $r9 = virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>();

        r10 = $r9;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r9);

        if $z0 == 0 goto label08;

        r10 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

     label08:
        $r5 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.content.res.Resources getResources(android.content.Context,java.lang.String)>($r1, r10);

     label09:
        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        $r11 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r7 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r5, i0, $r11);

     label10:
        return $r7;

     label11:
        r12 := @caughtexception;

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = $r13;

        $r14[1] = $r2;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to load resource 0x%08x from pkg=%s", $r14);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r9, r12);

        return null;

     label12:
        $r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r6 = (android.graphics.Bitmap) $r2;

        specialinvoke $r4.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r5, $r6);

        return $r4;

     label13:
        return null;

        catch java.lang.RuntimeException from label09 to label10 with label11;
    }

    private static java.lang.String typeToString(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        return "UNKNOWN";

     label2:
        return "URI_MASKABLE";

     label3:
        return "BITMAP_MASKABLE";

     label4:
        return "URI";

     label5:
        return "DATA";

     label6:
        return "RESOURCE";

     label7:
        return "BITMAP";
    }

    public void addToShortcutIntent(android.content.Intent, android.graphics.drawable.Drawable, android.content.Context)
    {
        android.content.Context $r3;
        android.app.ActivityManager r11;
        android.content.pm.PackageManager$NameNotFoundException r13;
        android.content.Intent$ShortcutIconResource $r8;
        android.content.Intent $r1;
        android.graphics.drawable.Drawable $r2, $r9;
        android.graphics.Bitmap$Config $r10;
        int i0, $i1, i2, $i3;
        android.graphics.Canvas r12;
        java.lang.String $r7;
        java.lang.IllegalArgumentException r4;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap r6;
        java.lang.Object r5;
        java.lang.StringBuilder r14;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: android.graphics.drawable.Drawable;

        $r3 := @parameter2: android.content.Context;

        virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)>($r3);

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        lookupswitch(i0)
        {
            case 1: goto label26;
            case 2: goto label03;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label02;
            default: goto label01;
        };

     label01:
        r4 = new java.lang.IllegalArgumentException;

        specialinvoke r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Icon type not supported for intent shortcuts");

        throw r4;

     label02:
        r5 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        r6 = (android.graphics.Bitmap) r5;

        r6 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)>(r6, 1);

        goto label27;

     label03:
        $r7 = virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>();

        $r3 = virtualinvoke $r3.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>($r7, 0);

     label04:
        if $r2 != null goto label07;

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

     label05:
        $r8 = staticinvoke <android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>($r3, i0);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.ICON_RESOURCE", $r8);

     label06:
        return;

     label07:
        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

     label08:
        $r9 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r3, i0);

        i0 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

     label09:
        if i0 <= 0 goto label16;

     label10:
        i0 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

     label11:
        if i0 > 0 goto label12;

        goto label16;

     label12:
        i0 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

     label13:
        $r10 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label14:
        r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, $i1, $r10);

     label15:
        goto label21;

     label16:
        r5 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

     label17:
        r11 = (android.app.ActivityManager) r5;

     label18:
        i0 = virtualinvoke r11.<android.app.ActivityManager: int getLauncherLargeIconSize()>();

     label19:
        $r10 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label20:
        r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i0, $r10);

     label21:
        i0 = virtualinvoke r6.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke r6.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, $i1);

     label22:
        r12 = new android.graphics.Canvas;

     label23:
        specialinvoke r12.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r6);

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r12);

     label24:
        goto label27;

     label25:
        r13 := @caughtexception;

        r4 = new java.lang.IllegalArgumentException;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        r14 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find package ");

        r5 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        r14 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r7 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r13);

        throw r4;

     label26:
        r5 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        r6 = (android.graphics.Bitmap) r5;

        if $r2 == null goto label27;

        $r10 = virtualinvoke r6.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        r6 = virtualinvoke r6.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r10, 1);

     label27:
        if $r2 == null goto label28;

        i0 = virtualinvoke r6.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke r6.<android.graphics.Bitmap: int getHeight()>();

        i2 = i0 / 2;

        $i3 = $i1 / 2;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i2, $i3, i0, $i1);

        r12 = new android.graphics.Canvas;

        specialinvoke r12.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r6);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r12);

     label28:
        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.ICON", r6);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label14 to label15 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label16 to label17 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label18 to label19 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label20 to label21 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label21 to label22 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label23 to label24 with label25;
    }

    public void checkResource(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.String[] $r4;
        androidx.core.graphics.drawable.IconCompat r0;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.StringBuilder $r10, $r11;
        java.lang.String r3, r5, r6, r7, r8;
        boolean $z0;
        android.content.res.Resources $r9;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Context;

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if i0 != 2 goto label3;

        r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        if r2 == null goto label3;

        r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        r3 = (java.lang.String) r2;

        $z0 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(":");

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", -1);

        r5 = $r4[1];

        $r4 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        r6 = $r4[0];

        $r4 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        r5 = $r4[1];

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", -1);

        r7 = $r4[0];

        r8 = "0_resource_name_obfuscated";

        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("IconCompat", "Found obfuscated resource, not trying to update resource id for it");

        return;

     label2:
        r8 = virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>();

        $r9 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.content.res.Resources getResources(android.content.Context,java.lang.String)>($r1, r8);

        i0 = virtualinvoke $r9.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>(r5, r6, r7);

        $i1 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        if $i1 == i0 goto label3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Id has changed for ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("IconCompat", r3);

        r0.<androidx.core.graphics.drawable.IconCompat: int mInt1> = i0;

     label3:
        return;
    }

    public android.graphics.Bitmap getBitmap()
    {
        java.lang.IllegalStateException $r6;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap $r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != -1 goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label2;

        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $z0 = $r1 instanceof android.graphics.Bitmap;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (android.graphics.Bitmap) $r1;

        return $r2;

     label1:
        return null;

     label2:
        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != 1 goto label3;

        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (android.graphics.Bitmap) $r1;

        return $r2;

     label3:
        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != 5 goto label4;

        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (android.graphics.Bitmap) $r1;

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)>($r2, 1);

        return $r2;

     label4:
        $r6 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getBitmap() on ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r6;
    }

    public int getResId()
    {
        java.lang.IllegalStateException $r5;
        androidx.core.graphics.drawable.IconCompat r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String $r3;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != -1 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $i0 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: int getResId(java.lang.Object)>($r1);

        return $i0;

     label1:
        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != 2 goto label2;

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        return $i0;

     label2:
        $r5 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getResId() on ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r5;
    }

    public java.lang.String getResPackage()
    {
        java.lang.IllegalStateException $r6;
        java.lang.String[] $r3;
        androidx.core.graphics.drawable.IconCompat r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r4, $r5;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != -1 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: java.lang.String getResPackage(java.lang.Object)>($r1);

        return $r2;

     label1:
        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != 2 goto label4;

        $r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mString1>;

        if $r2 == null goto label3;

        $r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mString1>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mString1>;

        return $r2;

     label3:
        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (java.lang.String) $r1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", -1);

        $r2 = $r3[0];

        return $r2;

     label4:
        $r6 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getResPackage() on ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r6;
    }

    public int getType()
    {
        int $i0;
        java.lang.Object $r1;
        androidx.core.graphics.drawable.IconCompat r0;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != -1 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $i0 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: int getType(java.lang.Object)>($r1);

        return $i0;

     label1:
        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        return $i0;
    }

    public android.net.Uri getUri()
    {
        java.lang.IllegalStateException $r6;
        android.net.Uri $r2;
        androidx.core.graphics.drawable.IconCompat r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r4;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != -1 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)>($r1);

        return $r2;

     label1:
        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 == 4 goto label3;

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != 6 goto label2;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getUri() on ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r6;

     label3:
        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r4 = (java.lang.String) $r1;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

        return $r2;
    }

    public java.io.InputStream getUriInputStream(android.content.Context)
    {
        android.content.Context $r1;
        android.net.Uri $r2;
        java.io.FileInputStream r5;
        java.io.File $r6;
        java.io.FileNotFoundException r8;
        java.lang.Exception r12;
        androidx.core.graphics.drawable.IconCompat r0;
        android.content.ContentResolver $r10;
        java.lang.Object $r7;
        java.lang.StringBuilder $r9;
        java.lang.String $r3, r4;
        boolean $z0;
        java.io.InputStream $r11;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>();

        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        r4 = "content";

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label5;

        r4 = "file";

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        goto label5;

     label1:
        r5 = new java.io.FileInputStream;

        $r6 = new java.io.File;

        $r7 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r3 = (java.lang.String) $r7;

     label2:
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r3);

        specialinvoke r5.<java.io.FileInputStream: void <init>(java.io.File)>($r6);

     label3:
        return r5;

     label4:
        r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load image from path: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r3, r8);

        goto label8;

     label5:
        $r10 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r11 = virtualinvoke $r10.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r2);

     label6:
        return $r11;

     label7:
        r12 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load image from URI: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r3, r12);

     label8:
        return null;

        catch java.io.FileNotFoundException from label2 to label3 with label4;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    {
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r4;
        android.graphics.PorterDuff$Mode $r2, $r6;
        android.content.res.ColorStateList $r5;
        androidx.core.graphics.drawable.IconCompat r0;
        int i0;
        android.graphics.drawable.Icon $r3;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Context;

        virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)>($r1);

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 23 goto label1;

        $r3 = virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>($r1);

        $r4 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)>($r3, $r1);

        return $r4;

     label1:
        $r4 = specialinvoke r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>($r1);

        if $r4 == null goto label3;

        $r5 = r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        if $r5 != null goto label2;

        $r6 = r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        $r2 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        if $r6 == $r2 goto label3;

     label2:
        virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r5 = r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r4, $r5);

        $r2 = r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r4, $r2);

     label3:
        return $r4;
    }

    public void onPostParceling()
    {
        byte[] $r3;
        android.os.Parcelable $r7;
        java.lang.String[] $r6;
        java.lang.IllegalArgumentException $r9;
        android.graphics.PorterDuff$Mode $r2;
        java.nio.charset.Charset $r4;
        androidx.core.graphics.drawable.IconCompat r0;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r1, $r8;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr>;

        $r2 = staticinvoke <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode valueOf(java.lang.String)>($r1);

        r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode> = $r2;

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        lookupswitch($i0)
        {
            case -1: goto label6;
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label3;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r3 = r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData>;

        r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r3;

        return;

     label3:
        $r8 = new java.lang.String;

        $r3 = r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData>;

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        specialinvoke $r8.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r3, $r4);

        r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r8;

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != 2 goto label8;

        $r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mString1>;

        if $r1 != null goto label8;

        $r5 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r1 = (java.lang.String) $r5;

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", -1);

        $r1 = $r6[0];

        r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mString1> = $r1;

        return;

     label4:
        $r7 = r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable>;

        if $r7 == null goto label5;

        $r7 = r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable>;

        r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r7;

        return;

     label5:
        $r3 = r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData>;

        r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r3;

        r0.<androidx.core.graphics.drawable.IconCompat: int mType> = 3;

        r0.<androidx.core.graphics.drawable.IconCompat: int mInt1> = 0;

        $r3 = r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData>;

        $i0 = lengthof $r3;

        r0.<androidx.core.graphics.drawable.IconCompat: int mInt2> = $i0;

        return;

     label6:
        $r7 = r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable>;

        if $r7 == null goto label7;

        $r7 = r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable>;

        r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r7;

        return;

     label7:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid icon");

        throw $r9;

     label8:
        return;
    }

    public void onPreParceling(boolean)
    {
        byte[] $r5;
        android.os.Parcelable r9;
        java.io.ByteArrayOutputStream r7;
        java.lang.IllegalArgumentException r10;
        android.graphics.PorterDuff$Mode r1;
        java.nio.charset.Charset $r4;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap r6;
        int i0;
        java.lang.Object r3;
        android.graphics.Bitmap$CompressFormat $r8;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $z0 := @parameter0: boolean;

        r1 = r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        $r2 = virtualinvoke r1.<android.graphics.PorterDuff$Mode: java.lang.String name()>();

        r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr> = $r2;

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        lookupswitch(i0)
        {
            case -1: goto label7;
            case 0: goto label1;
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label5;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        return;

     label2:
        r3 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData> = $r5;

        return;

     label3:
        r3 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (byte[]) r3;

        r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData> = $r5;

        return;

     label4:
        r3 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (java.lang.String) r3;

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData> = $r5;

        return;

     label5:
        if $z0 == 0 goto label6;

        r3 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        r6 = (android.graphics.Bitmap) r3;

        r7 = new java.io.ByteArrayOutputStream;

        specialinvoke r7.<java.io.ByteArrayOutputStream: void <init>()>();

        $r8 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke r6.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r8, 90, r7);

        $r5 = virtualinvoke r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData> = $r5;

        return;

     label6:
        r3 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        r9 = (android.os.Parcelable) r3;

        r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable> = r9;

        return;

     label7:
        if $z0 != 0 goto label8;

        r3 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        r9 = (android.os.Parcelable) r3;

        r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable> = r9;

        return;

     label8:
        r10 = new java.lang.IllegalArgumentException;

        specialinvoke r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t serialize Icon created with IconCompat#createFromIcon");

        throw r10;
    }

    public androidx.core.graphics.drawable.IconCompat setTint(int)
    {
        int $i0;
        android.content.res.ColorStateList $r1;
        androidx.core.graphics.drawable.IconCompat r0;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        r0 = virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)>($r1);

        return r0;
    }

    public androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.core.graphics.drawable.IconCompat r0;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList> = $r1;

        return r0;
    }

    public androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode> = $r1;

        return r0;
    }

    public android.os.Bundle toBundle()
    {
        byte[] $r5;
        android.os.Bundle r1;
        android.os.Parcelable $r7;
        java.lang.IllegalArgumentException $r3;
        android.graphics.PorterDuff$Mode $r9, $r10;
        android.content.res.ColorStateList $r8;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap $r6;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r2;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        r1 = new android.os.Bundle;

        specialinvoke r1.<android.os.Bundle: void <init>()>();

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        lookupswitch($i0)
        {
            case -1: goto label5;
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid icon");

        throw $r3;

     label2:
        $r4 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (byte[]) $r4;

        virtualinvoke r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("obj", $r5);

        goto label6;

     label3:
        $r4 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (java.lang.String) $r4;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("obj", $r2);

        goto label6;

     label4:
        $r4 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r6 = (android.graphics.Bitmap) $r4;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("obj", $r6);

        goto label6;

     label5:
        $r4 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r7 = (android.os.Parcelable) $r4;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("obj", $r7);

     label6:
        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("type", $i0);

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("int1", $i0);

        $i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt2>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("int2", $i0);

        $r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mString1>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("string1", $r2);

        $r8 = r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        if $r8 == null goto label7;

        $r8 = r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("tint_list", $r8);

     label7:
        $r9 = r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        $r10 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        if $r9 == $r10 goto label8;

        $r9 = r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        $r2 = virtualinvoke $r9.<android.graphics.PorterDuff$Mode: java.lang.String name()>();

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("tint_mode", $r2);

     label8:
        return r1;
    }

    public android.graphics.drawable.Icon toIcon()
    {
        android.graphics.drawable.Icon $r1;
        androidx.core.graphics.drawable.IconCompat r0;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 = virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>(null);

        return $r1;
    }

    public android.graphics.drawable.Icon toIcon(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.UnsupportedOperationException $r3;
        androidx.core.graphics.drawable.IconCompat r0;
        int $i0;
        android.graphics.drawable.Icon $r2;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)>(r0, $r1);

        return $r2;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This method is only supported on API level 23+");

        throw $r3;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r6;
        java.lang.Integer $r5;
        android.graphics.PorterDuff$Mode $r9, $r10;
        android.content.res.ColorStateList $r8;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap $r7;
        int i0;
        java.lang.Object r1;
        java.lang.StringBuilder r3, $r4;
        java.lang.String $r2;

        r0 := @this: androidx.core.graphics.drawable.IconCompat;

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if i0 != -1 goto label1;

        r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        return $r2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Icon(typ=");

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)>(i0);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        lookupswitch(i0)
        {
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label6;
            case 6: goto label3;
            default: goto label2;
        };

     label2:
        goto label7;

     label3:
        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uri=");

        r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        goto label7;

     label4:
        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len=");

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt2>;

        if i0 == 0 goto label7;

        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" off=");

        i0 = r0.<androidx.core.graphics.drawable.IconCompat: int mInt2>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        goto label7;

     label5:
        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        $r2 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mString1>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        i0 = virtualinvoke r0.<androidx.core.graphics.drawable.IconCompat: int getResId()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r5;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%08x", $r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        goto label7;

     label6:
        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=");

        r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r7 = (android.graphics.Bitmap) r1;

        i0 = virtualinvoke $r7.<android.graphics.Bitmap: int getWidth()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        r1 = r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r7 = (android.graphics.Bitmap) r1;

        i0 = virtualinvoke $r7.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label7:
        $r8 = r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        if $r8 == null goto label8;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tint=");

        $r8 = r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

     label8:
        $r9 = r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        $r10 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        if $r9 == $r10 goto label9;

        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode=");

        $r9 = r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

     label9:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
