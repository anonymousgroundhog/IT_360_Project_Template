public abstract class kotlin.collections.IntIterator extends java.lang.Object implements java.util.Iterator, kotlin.jvm.internal.markers.KMappedMarker
{

    public void <init>()
    {
        kotlin.collections.IntIterator r0;

        r0 := @this: kotlin.collections.IntIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Integer next()
    {
        int $i0;
        kotlin.collections.IntIterator r0;
        java.lang.Integer $r1;

        r0 := @this: kotlin.collections.IntIterator;

        $i0 = virtualinvoke r0.<kotlin.collections.IntIterator: int nextInt()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        int $i0;
        kotlin.collections.IntIterator r0;
        java.lang.Integer $r1;

        r0 := @this: kotlin.collections.IntIterator;

        $i0 = virtualinvoke r0.<kotlin.collections.IntIterator: int nextInt()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    public abstract int nextInt();

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        kotlin.collections.IntIterator r0;

        r0 := @this: kotlin.collections.IntIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }
}
