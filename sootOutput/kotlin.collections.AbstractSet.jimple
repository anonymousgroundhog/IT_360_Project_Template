public abstract class kotlin.collections.AbstractSet extends kotlin.collections.AbstractCollection implements java.util.Set, kotlin.jvm.internal.markers.KMappedMarker
{
    public static final kotlin.collections.AbstractSet$Companion Companion;

    static void <clinit>()
    {
        kotlin.collections.AbstractSet$Companion $r0;

        $r0 = new kotlin.collections.AbstractSet$Companion;

        specialinvoke $r0.<kotlin.collections.AbstractSet$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.collections.AbstractSet: kotlin.collections.AbstractSet$Companion Companion> = $r0;

        return;
    }

    protected void <init>()
    {
        kotlin.collections.AbstractSet r0;

        r0 := @this: kotlin.collections.AbstractSet;

        specialinvoke r0.<kotlin.collections.AbstractCollection: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        kotlin.collections.AbstractSet$Companion $r2;
        kotlin.collections.AbstractSet r0;
        java.util.Set $r3, $r4;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlin.collections.AbstractSet;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof java.util.Set;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = <kotlin.collections.AbstractSet: kotlin.collections.AbstractSet$Companion Companion>;

        $r3 = (java.util.Set) r0;

        $r4 = (java.util.Set) $r1;

        $z0 = virtualinvoke $r2.<kotlin.collections.AbstractSet$Companion: boolean setEquals$kotlin_stdlib(java.util.Set,java.util.Set)>($r3, $r4);

        return $z0;
    }

    public int hashCode()
    {
        kotlin.collections.AbstractSet$Companion $r1;
        kotlin.collections.AbstractSet r0;
        java.util.Collection $r2;
        int $i0;

        r0 := @this: kotlin.collections.AbstractSet;

        $r1 = <kotlin.collections.AbstractSet: kotlin.collections.AbstractSet$Companion Companion>;

        $r2 = (java.util.Collection) r0;

        $i0 = virtualinvoke $r1.<kotlin.collections.AbstractSet$Companion: int unorderedHashCode$kotlin_stdlib(java.util.Collection)>($r2);

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        java.lang.UnsupportedOperationException $r1;
        kotlin.collections.AbstractSet r0;

        r0 := @this: kotlin.collections.AbstractSet;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }
}
