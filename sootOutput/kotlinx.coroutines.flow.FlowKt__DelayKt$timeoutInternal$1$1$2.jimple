final class kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function1
{
    final long $timeout;
    int label;

    void <init>(long, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2 r0;
        long $l0;
        kotlin.coroutines.Continuation $r1;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2;

        $l0 := @parameter0: long;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: long $timeout> = $l0;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(1, $r1);

        return;
    }

    public final kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2 r0, $r2;
        long $l0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2;

        $l0 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: long $timeout>;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: void <init>(long,kotlin.coroutines.Continuation)>($l0, $r1);

        $r1 = (kotlin.coroutines.Continuation) $r2;

        return $r1;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2 r0;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.coroutines.Continuation) $r1;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: java.lang.Object invoke(kotlin.coroutines.Continuation)>($r2);

        return $r1;
    }

    public final java.lang.Object invoke(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r1;
        kotlin.Unit $r2;
        kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2 r0;
        java.lang.Object $r3;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)>($r1);

        r0 = (kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2) $r1;

        $r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r3 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: java.lang.Object invokeSuspend(java.lang.Object)>($r2);

        return $r3;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.IllegalStateException $r3;
        long $l1;
        int i0;
        kotlinx.coroutines.TimeoutCancellationException $r1;
        kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2 r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2;

        $r2 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: int label>;

        lookupswitch(i0)
        {
            case 0: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r1 = new kotlinx.coroutines.TimeoutCancellationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timed out waiting for ");

        $l1 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: long $timeout>;

        $r5 = staticinvoke <kotlin.time.Duration: java.lang.String toString-impl(long)>($l1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<kotlinx.coroutines.TimeoutCancellationException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }
}
