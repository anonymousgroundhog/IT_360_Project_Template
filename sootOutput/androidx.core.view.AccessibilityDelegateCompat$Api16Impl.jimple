class androidx.core.view.AccessibilityDelegateCompat$Api16Impl extends java.lang.Object
{

    private void <init>()
    {
        androidx.core.view.AccessibilityDelegateCompat$Api16Impl r0;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat$Api16Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate, android.view.View)
    {
        android.view.View$AccessibilityDelegate $r0;
        android.view.View $r1;
        android.view.accessibility.AccessibilityNodeProvider $r2;

        $r0 := @parameter0: android.view.View$AccessibilityDelegate;

        $r1 := @parameter1: android.view.View;

        $r2 = virtualinvoke $r0.<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>($r1);

        return $r2;
    }

    static boolean performAccessibilityAction(android.view.View$AccessibilityDelegate, android.view.View, int, android.os.Bundle)
    {
        android.os.Bundle $r2;
        android.view.View$AccessibilityDelegate $r0;
        int $i0;
        android.view.View $r1;
        boolean $z0;

        $r0 := @parameter0: android.view.View$AccessibilityDelegate;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.os.Bundle;

        $z0 = virtualinvoke $r0.<android.view.View$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>($r1, $i0, $r2);

        return $z0;
    }
}
