public abstract class com.google.common.util.concurrent.AbstractIdleService extends java.lang.Object implements com.google.common.util.concurrent.Service
{
    private final com.google.common.util.concurrent.Service delegate;
    private final com.google.common.base.Supplier threadNameSupplier;

    protected void <init>()
    {
        com.google.common.util.concurrent.AbstractIdleService$DelegateService $r2;
        com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier $r1;
        com.google.common.util.concurrent.AbstractIdleService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier;

        specialinvoke $r1.<com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier: void <init>(com.google.common.util.concurrent.AbstractIdleService,com.google.common.util.concurrent.AbstractIdleService$1)>(r0, null);

        r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.base.Supplier threadNameSupplier> = $r1;

        $r2 = new com.google.common.util.concurrent.AbstractIdleService$DelegateService;

        specialinvoke $r2.<com.google.common.util.concurrent.AbstractIdleService$DelegateService: void <init>(com.google.common.util.concurrent.AbstractIdleService,com.google.common.util.concurrent.AbstractIdleService$1)>(r0, null);

        r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate> = $r2;

        return;
    }

    static com.google.common.base.Supplier access$200(com.google.common.util.concurrent.AbstractIdleService)
    {
        com.google.common.base.Supplier r1;
        com.google.common.util.concurrent.AbstractIdleService $r0;

        $r0 := @parameter0: com.google.common.util.concurrent.AbstractIdleService;

        r1 = $r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.base.Supplier threadNameSupplier>;

        return r1;
    }

    public final void addListener(com.google.common.util.concurrent.Service$Listener, java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.AbstractIdleService r0;
        com.google.common.util.concurrent.Service$Listener $r1;
        com.google.common.util.concurrent.Service $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r1 := @parameter0: com.google.common.util.concurrent.Service$Listener;

        $r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate>;

        interfaceinvoke $r3.<com.google.common.util.concurrent.Service: void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor)>($r1, $r2);

        return;
    }

    public final void awaitRunning()
    {
        com.google.common.util.concurrent.AbstractIdleService r0;
        com.google.common.util.concurrent.Service $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate>;

        interfaceinvoke $r1.<com.google.common.util.concurrent.Service: void awaitRunning()>();

        return;
    }

    public final void awaitRunning(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.AbstractIdleService r0;
        long $l0;
        com.google.common.util.concurrent.Service $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate>;

        interfaceinvoke $r2.<com.google.common.util.concurrent.Service: void awaitRunning(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return;
    }

    public final void awaitTerminated()
    {
        com.google.common.util.concurrent.AbstractIdleService r0;
        com.google.common.util.concurrent.Service $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate>;

        interfaceinvoke $r1.<com.google.common.util.concurrent.Service: void awaitTerminated()>();

        return;
    }

    public final void awaitTerminated(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.AbstractIdleService r0;
        long $l0;
        com.google.common.util.concurrent.Service $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate>;

        interfaceinvoke $r2.<com.google.common.util.concurrent.Service: void awaitTerminated(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return;
    }

    protected java.util.concurrent.Executor executor()
    {
        com.google.common.util.concurrent.AbstractIdleService$1 $r1;
        com.google.common.util.concurrent.AbstractIdleService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r1 = new com.google.common.util.concurrent.AbstractIdleService$1;

        specialinvoke $r1.<com.google.common.util.concurrent.AbstractIdleService$1: void <init>(com.google.common.util.concurrent.AbstractIdleService)>(r0);

        return $r1;
    }

    public final java.lang.Throwable failureCause()
    {
        java.lang.Throwable $r1;
        com.google.common.util.concurrent.AbstractIdleService r0;
        com.google.common.util.concurrent.Service $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r2 = r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate>;

        $r1 = interfaceinvoke $r2.<com.google.common.util.concurrent.Service: java.lang.Throwable failureCause()>();

        return $r1;
    }

    public final boolean isRunning()
    {
        com.google.common.util.concurrent.AbstractIdleService r0;
        boolean $z0;
        com.google.common.util.concurrent.Service $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate>;

        $z0 = interfaceinvoke $r1.<com.google.common.util.concurrent.Service: boolean isRunning()>();

        return $z0;
    }

    protected java.lang.String serviceName()
    {
        java.lang.Class $r1;
        java.lang.String $r2;
        com.google.common.util.concurrent.AbstractIdleService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }

    protected abstract void shutDown() throws java.lang.Exception;

    public final com.google.common.util.concurrent.Service startAsync()
    {
        com.google.common.util.concurrent.AbstractIdleService r0;
        com.google.common.util.concurrent.Service $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate>;

        interfaceinvoke $r1.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.Service startAsync()>();

        return r0;
    }

    protected abstract void startUp() throws java.lang.Exception;

    public final com.google.common.util.concurrent.Service$State state()
    {
        com.google.common.util.concurrent.Service$State $r1;
        com.google.common.util.concurrent.AbstractIdleService r0;
        com.google.common.util.concurrent.Service $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r2 = r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate>;

        $r1 = interfaceinvoke $r2.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.Service$State state()>();

        return $r1;
    }

    public final com.google.common.util.concurrent.Service stopAsync()
    {
        com.google.common.util.concurrent.AbstractIdleService r0;
        com.google.common.util.concurrent.Service $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service delegate>;

        interfaceinvoke $r1.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.Service stopAsync()>();

        return r0;
    }

    public java.lang.String toString()
    {
        com.google.common.util.concurrent.Service$State $r2;
        com.google.common.util.concurrent.AbstractIdleService r0;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r3, $r4;

        r0 := @this: com.google.common.util.concurrent.AbstractIdleService;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractIdleService: java.lang.String serviceName()>();

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractIdleService: com.google.common.util.concurrent.Service$State state()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + 3;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
