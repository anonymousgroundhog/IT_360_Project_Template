public final class kotlinx.coroutines.channels.ProduceKt extends java.lang.Object
{

    public static final java.lang.Object awaitClose(kotlinx.coroutines.channels.ProducerScope, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        java.lang.Throwable $r8;
        java.lang.IllegalStateException $r7;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.Job$Key r10;
        kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1 $r15;
        kotlin.coroutines.CoroutineContext$Element $r12;
        kotlinx.coroutines.CancellableContinuationImpl r13;
        int $i0;
        kotlinx.coroutines.channels.ProducerScope $r0;
        java.lang.String r18;
        boolean $z0;
        kotlinx.coroutines.channels.ProduceKt$awaitClose$1 $r3, $r4;
        kotlin.jvm.functions.Function1 $r16;
        kotlin.jvm.functions.Function0 r1;
        kotlin.coroutines.CoroutineContext $r9;
        kotlin.Unit r19;
        kotlinx.coroutines.CancellableContinuation r14;
        kotlin.coroutines.CoroutineContext$Key r11;
        java.lang.Object $r5, $r6, $r17;

        $r0 := @parameter0: kotlinx.coroutines.channels.ProducerScope;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.channels.ProduceKt$awaitClose$1;

        if $z0 == 0 goto label01;

        $r3 = (kotlinx.coroutines.channels.ProduceKt$awaitClose$1) $r2;

        $i0 = $r3.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label01;

        $i0 = $r3.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: int label> = $i0;

        goto label02;

     label01:
        $r3 = new kotlinx.coroutines.channels.ProduceKt$awaitClose$1;

        specialinvoke $r3.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: void <init>(kotlin.coroutines.Continuation)>($r2);

     label02:
        $r4 = $r3;

        $r5 = $r3.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object result>;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r3.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label08;
            case 1: goto label04;
            default: goto label03;
        };

     label03:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label04:
        $r6 = $r3.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object L$1>;

        r1 = (kotlin.jvm.functions.Function0) $r6;

        $r6 = $r3.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object L$0>;

        $r0 = (kotlinx.coroutines.channels.ProducerScope) $r6;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

     label06:
        goto label15;

     label07:
        $r8 := @caughtexception;

        goto label16;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        $r9 = interfaceinvoke $r3.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        r10 = <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key>;

        r11 = (kotlin.coroutines.CoroutineContext$Key) r10;

        $r12 = interfaceinvoke $r9.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>(r11);

        if $r12 != $r0 goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        if $z0 == 0 goto label17;

     label11:
        $r4.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object L$0> = $r0;

        $r4.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object L$1> = r1;

        $r4.<kotlinx.coroutines.channels.ProduceKt$awaitClose$1: int label> = 1;

        $r2 = (kotlin.coroutines.Continuation) $r4;

        r13 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r2);

        specialinvoke r13.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r2, 1);

        virtualinvoke r13.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r14 = (kotlinx.coroutines.CancellableContinuation) r13;

        $r15 = new kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1;

        specialinvoke $r15.<kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: void <init>(kotlinx.coroutines.CancellableContinuation)>(r14);

        $r16 = (kotlin.jvm.functions.Function1) $r15;

        interfaceinvoke $r0.<kotlinx.coroutines.channels.ProducerScope: void invokeOnClose(kotlin.jvm.functions.Function1)>($r16);

        $r5 = virtualinvoke r13.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r17 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

     label12:
        if $r5 != $r17 goto label14;

     label13:
        $r2 = (kotlin.coroutines.Continuation) $r4;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label14:
        if $r5 != $r6 goto label15;

        return $r6;

     label15:
        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r19;

     label16:
        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        throw $r8;

     label17:
        $r7 = new java.lang.IllegalStateException;

        r18 = "awaitClose() can only be invoked from the producer context";

        r18 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r18);

        throw $r7;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
    }

    public static java.lang.Object awaitClose$default(kotlinx.coroutines.channels.ProducerScope, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r0;
        kotlinx.coroutines.channels.ProduceKt$awaitClose$2 $r4;
        int $i0;
        java.lang.Object $r1;
        kotlinx.coroutines.channels.ProducerScope $r2;
        kotlin.jvm.functions.Function0 $r3;

        $r2 := @parameter0: kotlinx.coroutines.channels.ProducerScope;

        $r3 := @parameter1: kotlin.jvm.functions.Function0;

        $r0 := @parameter2: kotlin.coroutines.Continuation;

        $i0 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r4 = <kotlinx.coroutines.channels.ProduceKt$awaitClose$2: kotlinx.coroutines.channels.ProduceKt$awaitClose$2 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function0) $r4;

     label1:
        $r1 = staticinvoke <kotlinx.coroutines.channels.ProduceKt: java.lang.Object awaitClose(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r2, $r3, $r0);

        return $r1;
    }

    public static final kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r5;
        int $i0;
        kotlinx.coroutines.channels.BufferOverflow $r3;
        kotlinx.coroutines.CoroutineStart $r4;
        kotlin.jvm.functions.Function2 $r2;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.CoroutineScope $r0;

        $r0 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        $i0 := @parameter2: int;

        $r2 := @parameter3: kotlin.jvm.functions.Function2;

        $r3 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        $r4 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT>;

        $r5 = staticinvoke <kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)>($r0, $r1, $i0, $r3, $r4, null, $r2);

        return $r5;
    }

    public static final kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r6;
        kotlinx.coroutines.channels.BufferOverflow $r5;
        kotlin.jvm.functions.Function1 $r3;
        kotlin.jvm.functions.Function2 $r4;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.CoroutineScope $r0;
        int $i0;
        kotlinx.coroutines.CoroutineStart $r2;

        $r0 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        $i0 := @parameter2: int;

        $r2 := @parameter3: kotlinx.coroutines.CoroutineStart;

        $r3 := @parameter4: kotlin.jvm.functions.Function1;

        $r4 := @parameter5: kotlin.jvm.functions.Function2;

        $r5 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        $r6 = staticinvoke <kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)>($r0, $r1, $i0, $r5, $r2, $r3, $r4);

        return $r6;
    }

    public static final kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.channels.Channel $r7;
        kotlinx.coroutines.channels.ReceiveChannel $r8;
        kotlinx.coroutines.channels.BufferOverflow $r2;
        kotlin.jvm.functions.Function1 $r4;
        kotlin.jvm.functions.Function2 $r5;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.CoroutineScope $r0;
        int $i0;
        kotlinx.coroutines.CoroutineStart $r3;
        kotlinx.coroutines.channels.ProducerCoroutine r6;

        $r0 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        $i0 := @parameter2: int;

        $r2 := @parameter3: kotlinx.coroutines.channels.BufferOverflow;

        $r3 := @parameter4: kotlinx.coroutines.CoroutineStart;

        $r4 := @parameter5: kotlin.jvm.functions.Function1;

        $r5 := @parameter6: kotlin.jvm.functions.Function2;

        $r7 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>($i0, $r2, null, 4, null);

        $r1 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)>($r0, $r1);

        r6 = new kotlinx.coroutines.channels.ProducerCoroutine;

        specialinvoke r6.<kotlinx.coroutines.channels.ProducerCoroutine: void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel)>($r1, $r7);

        if $r4 == null goto label1;

        virtualinvoke r6.<kotlinx.coroutines.channels.ProducerCoroutine: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r4);

     label1:
        virtualinvoke r6.<kotlinx.coroutines.channels.ProducerCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)>($r3, r6, $r5);

        $r8 = (kotlinx.coroutines.channels.ReceiveChannel) r6;

        return $r8;
    }

    public static kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlin.jvm.functions.Function2, int, java.lang.Object)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r1;
        kotlin.jvm.functions.Function2 $r0;
        kotlin.coroutines.CoroutineContext $r3;
        kotlinx.coroutines.CoroutineScope $r2;
        kotlin.coroutines.EmptyCoroutineContext $r5;
        int $i0, $i1, $i2;
        java.lang.Object $r4;

        $r2 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r3 := @parameter1: kotlin.coroutines.CoroutineContext;

        $i0 := @parameter2: int;

        $r0 := @parameter3: kotlin.jvm.functions.Function2;

        $i1 := @parameter4: int;

        $r4 := @parameter5: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r5 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r3 = (kotlin.coroutines.CoroutineContext) $r5;

     label1:
        $i1 = $i1 & 2;

        if $i1 == 0 goto label2;

        $i0 = 0;

     label2:
        $r1 = staticinvoke <kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2)>($r2, $r3, $i0, $r0);

        return $r1;
    }

    public static kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int, java.lang.Object)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r1;
        kotlin.jvm.functions.Function1 $r5;
        kotlin.jvm.functions.Function2 $r0;
        kotlin.coroutines.CoroutineContext $r3;
        kotlinx.coroutines.CoroutineScope $r2;
        kotlin.coroutines.EmptyCoroutineContext $r7;
        int $i0, $i1, $i2;
        kotlinx.coroutines.CoroutineStart $r4;
        java.lang.Object $r6;

        $r2 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r3 := @parameter1: kotlin.coroutines.CoroutineContext;

        $i1 := @parameter2: int;

        $r4 := @parameter3: kotlinx.coroutines.CoroutineStart;

        $r5 := @parameter4: kotlin.jvm.functions.Function1;

        $r0 := @parameter5: kotlin.jvm.functions.Function2;

        $i0 := @parameter6: int;

        $r6 := @parameter7: java.lang.Object;

        $i2 = $i0 & 1;

        if $i2 == 0 goto label1;

        $r7 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r3 = (kotlin.coroutines.CoroutineContext) $r7;

        goto label1;

     label1:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label2;

        $i1 = 0;

        goto label2;

     label2:
        $i2 = $i0 & 4;

        if $i2 == 0 goto label3;

        $r4 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT>;

        goto label3;

     label3:
        $i0 = $i0 & 8;

        if $i0 == 0 goto label4;

        $r5 = null;

        goto label4;

     label4:
        $r1 = staticinvoke <kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)>($r2, $r3, $i1, $r4, $r5, $r0);

        return $r1;
    }

    public static kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int, java.lang.Object)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r1;
        kotlinx.coroutines.channels.BufferOverflow $r4;
        kotlin.jvm.functions.Function1 $r6;
        kotlin.jvm.functions.Function2 $r0;
        kotlin.coroutines.CoroutineContext $r3;
        kotlinx.coroutines.CoroutineScope $r2;
        kotlin.coroutines.EmptyCoroutineContext $r8;
        int $i0, $i1, $i2;
        kotlinx.coroutines.CoroutineStart $r5;
        java.lang.Object $r7;

        $r2 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r3 := @parameter1: kotlin.coroutines.CoroutineContext;

        $i1 := @parameter2: int;

        $r4 := @parameter3: kotlinx.coroutines.channels.BufferOverflow;

        $r5 := @parameter4: kotlinx.coroutines.CoroutineStart;

        $r6 := @parameter5: kotlin.jvm.functions.Function1;

        $r0 := @parameter6: kotlin.jvm.functions.Function2;

        $i0 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i0 & 1;

        if $i2 == 0 goto label1;

        $r8 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r3 = (kotlin.coroutines.CoroutineContext) $r8;

        goto label1;

     label1:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label2;

        $i1 = 0;

        goto label2;

     label2:
        $i2 = $i0 & 4;

        if $i2 == 0 goto label3;

        $r4 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        goto label3;

     label3:
        $i2 = $i0 & 8;

        if $i2 == 0 goto label4;

        $r5 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT>;

        goto label4;

     label4:
        $i0 = $i0 & 16;

        if $i0 == 0 goto label5;

        $r6 = null;

        goto label5;

     label5:
        $r1 = staticinvoke <kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)>($r2, $r3, $i1, $r4, $r5, $r6, $r0);

        return $r1;
    }
}
