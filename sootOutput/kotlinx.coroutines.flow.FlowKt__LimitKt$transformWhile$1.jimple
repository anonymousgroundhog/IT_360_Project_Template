final class kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlinx.coroutines.flow.Flow $this_transformWhile;
    final kotlin.jvm.functions.Function3 $transform;
    private java.lang.Object L$0;
    int label;

    void <init>(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 r0;
        kotlin.jvm.functions.Function3 $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlinx.coroutines.flow.Flow $this_transformWhile> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlin.jvm.functions.Function3 $transform> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r3;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 r0, $r5;
        kotlin.jvm.functions.Function3 $r4;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r5 = new kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlinx.coroutines.flow.Flow $this_transformWhile>;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlin.jvm.functions.Function3 $transform>;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: void <init>(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r3, $r4, $r2);

        $r5.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r5;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r4;
        kotlinx.coroutines.flow.FlowCollector $r3;
        kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 r0;
        java.lang.Object $r1, $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.flow.FlowCollector) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 r0;
        java.lang.Object $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.IllegalStateException $r3;
        kotlin.coroutines.Continuation $r9;
        kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 r0;
        kotlin.jvm.functions.Function3 r8;
        kotlinx.coroutines.flow.Flow $r7;
        kotlin.Unit r10;
        kotlinx.coroutines.flow.FlowCollector r6;
        int $i0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1 r4;
        kotlinx.coroutines.flow.internal.AbortFlowException $r5;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label06;
            case 1: goto label02;
            default: goto label01;
        };

     label01:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label02:
        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object L$0>;

        r4 = (kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1) $r2;

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label04:
        goto label09;

     label05:
        $r5 := @caughtexception;

        goto label11;

     label06:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object L$0>;

        r6 = (kotlinx.coroutines.flow.FlowCollector) $r1;

        $r7 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlinx.coroutines.flow.Flow $this_transformWhile>;

        r8 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlin.jvm.functions.Function3 $transform>;

        r4 = new kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;

        specialinvoke r4.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: void <init>(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)>(r8, r6);

        r6 = (kotlinx.coroutines.flow.FlowCollector) r4;

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object L$0> = r4;

        r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: int label> = 1;

     label07:
        $r1 = interfaceinvoke $r7.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>(r6, $r9);

     label08:
        if $r1 != $r2 goto label09;

        return $r2;

     label09:
        goto label12;

     label10:
        $r5 := @caughtexception;

     label11:
        r6 = (kotlinx.coroutines.flow.FlowCollector) r4;

        staticinvoke <kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: void checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException,kotlinx.coroutines.flow.FlowCollector)>($r5, r6);

     label12:
        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r10;

        catch kotlinx.coroutines.flow.internal.AbortFlowException from label03 to label04 with label05;
        catch kotlinx.coroutines.flow.internal.AbortFlowException from label07 to label08 with label10;
    }
}
