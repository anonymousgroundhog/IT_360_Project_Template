class com.google.common.graph.StandardValueGraph extends com.google.common.graph.AbstractValueGraph
{
    private final boolean allowsSelfLoops;
    long edgeCount;
    private final boolean isDirected;
    final com.google.common.graph.MapIteratorCache nodeConnections;
    private final com.google.common.graph.ElementOrder nodeOrder;

    void <init>(com.google.common.graph.AbstractGraphBuilder)
    {
        com.google.common.graph.ElementOrder $r2;
        java.lang.Integer $r4;
        com.google.common.base.Optional $r3;
        java.util.Map $r6;
        int $i0;
        com.google.common.graph.AbstractGraphBuilder r1;
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object $r5;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: com.google.common.graph.AbstractGraphBuilder;

        $r2 = r1.<com.google.common.graph.AbstractGraphBuilder: com.google.common.graph.ElementOrder nodeOrder>;

        $r3 = r1.<com.google.common.graph.AbstractGraphBuilder: com.google.common.base.Optional expectedNodeCount>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r5 = virtualinvoke $r3.<com.google.common.base.Optional: java.lang.Object or(java.lang.Object)>($r4);

        $r4 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r6 = virtualinvoke $r2.<com.google.common.graph.ElementOrder: java.util.Map createMap(int)>($i0);

        specialinvoke r0.<com.google.common.graph.StandardValueGraph: void <init>(com.google.common.graph.AbstractGraphBuilder,java.util.Map,long)>(r1, $r6, 0L);

        return;
    }

    void <init>(com.google.common.graph.AbstractGraphBuilder, java.util.Map, long)
    {
        com.google.common.graph.ElementOrder $r3;
        long $l0;
        com.google.common.graph.MapRetrievalCache $r5;
        com.google.common.graph.MapIteratorCache $r4, $r6;
        java.util.Map r2;
        com.google.common.graph.AbstractGraphBuilder r1;
        com.google.common.graph.StandardValueGraph r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: com.google.common.graph.AbstractGraphBuilder;

        r2 := @parameter1: java.util.Map;

        $l0 := @parameter2: long;

        specialinvoke r0.<com.google.common.graph.AbstractValueGraph: void <init>()>();

        $z0 = r1.<com.google.common.graph.AbstractGraphBuilder: boolean directed>;

        r0.<com.google.common.graph.StandardValueGraph: boolean isDirected> = $z0;

        $z0 = r1.<com.google.common.graph.AbstractGraphBuilder: boolean allowsSelfLoops>;

        r0.<com.google.common.graph.StandardValueGraph: boolean allowsSelfLoops> = $z0;

        $r3 = r1.<com.google.common.graph.AbstractGraphBuilder: com.google.common.graph.ElementOrder nodeOrder>;

        $r3 = virtualinvoke $r3.<com.google.common.graph.ElementOrder: com.google.common.graph.ElementOrder cast()>();

        r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.ElementOrder nodeOrder> = $r3;

        $z0 = r2 instanceof java.util.TreeMap;

        if $z0 == 0 goto label1;

        $r5 = new com.google.common.graph.MapRetrievalCache;

        $r4 = $r5;

        specialinvoke $r5.<com.google.common.graph.MapRetrievalCache: void <init>(java.util.Map)>(r2);

        goto label2;

     label1:
        $r6 = new com.google.common.graph.MapIteratorCache;

        $r4 = $r6;

        specialinvoke $r6.<com.google.common.graph.MapIteratorCache: void <init>(java.util.Map)>(r2);

     label2:
        r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.MapIteratorCache nodeConnections> = $r4;

        $l0 = staticinvoke <com.google.common.graph.Graphs: long checkNonNegative(long)>($l0);

        r0.<com.google.common.graph.StandardValueGraph: long edgeCount> = $l0;

        return;
    }

    private final com.google.common.graph.GraphConnections checkedConnections(java.lang.Object)
    {
        java.lang.IllegalArgumentException $r2;
        com.google.common.graph.MapIteratorCache r4;
        int $i0;
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r1, $r5;
        java.lang.StringBuilder $r3;
        java.lang.String $r7, $r8;
        com.google.common.graph.GraphConnections r6;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: java.lang.Object;

        r4 = r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r5 = virtualinvoke r4.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (com.google.common.graph.GraphConnections) $r5;

        if r6 == null goto label1;

        return r6;

     label1:
        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = new java.lang.IllegalArgumentException;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + 38;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an element of this graph.");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    private final java.lang.Object edgeValueOrDefaultInternal(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r1, r2, r3;
        com.google.common.graph.MapIteratorCache r4;
        com.google.common.graph.GraphConnections r5;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 = r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        r1 = virtualinvoke r4.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.google.common.graph.GraphConnections) r1;

        if r5 != null goto label1;

        r1 = null;

        goto label2;

     label1:
        r1 = interfaceinvoke r5.<com.google.common.graph.GraphConnections: java.lang.Object value(java.lang.Object)>(r2);

     label2:
        if r1 != null goto label3;

        return r3;

     label3:
        return r1;
    }

    private final boolean hasEdgeConnectingInternal(java.lang.Object, java.lang.Object)
    {
        java.util.Set $r5;
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r1, r2;
        com.google.common.graph.MapIteratorCache r3;
        com.google.common.graph.GraphConnections r4;
        boolean $z0;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        r1 = virtualinvoke r3.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.google.common.graph.GraphConnections) r1;

        if r4 == null goto label1;

        $r5 = interfaceinvoke r4.<com.google.common.graph.GraphConnections: java.util.Set successors()>();

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Set adjacentNodes(java.lang.Object)
    {
        java.util.Set $r3;
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r1;
        com.google.common.graph.GraphConnections $r2;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.GraphConnections checkedConnections(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<com.google.common.graph.GraphConnections: java.util.Set adjacentNodes()>();

        return $r3;
    }

    public boolean allowsSelfLoops()
    {
        com.google.common.graph.StandardValueGraph r0;
        boolean z0;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        z0 = r0.<com.google.common.graph.StandardValueGraph: boolean allowsSelfLoops>;

        return z0;
    }

    final boolean containsNode(java.lang.Object)
    {
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r1;
        com.google.common.graph.MapIteratorCache $r2;
        boolean $z0;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $z0 = virtualinvoke $r2.<com.google.common.graph.MapIteratorCache: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    protected long edgeCount()
    {
        com.google.common.graph.StandardValueGraph r0;
        long l0;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        l0 = r0.<com.google.common.graph.StandardValueGraph: long edgeCount>;

        return l0;
    }

    public java.lang.Object edgeValueOrDefault(com.google.common.graph.EndpointPair, java.lang.Object)
    {
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r2, $r3, $r4;
        com.google.common.graph.EndpointPair r1;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: com.google.common.graph.EndpointPair;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<com.google.common.graph.StandardValueGraph: void validateEndpoints(com.google.common.graph.EndpointPair)>(r1);

        $r3 = virtualinvoke r1.<com.google.common.graph.EndpointPair: java.lang.Object nodeU()>();

        $r4 = virtualinvoke r1.<com.google.common.graph.EndpointPair: java.lang.Object nodeV()>();

        r2 = specialinvoke r0.<com.google.common.graph.StandardValueGraph: java.lang.Object edgeValueOrDefaultInternal(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, r2);

        return r2;
    }

    public java.lang.Object edgeValueOrDefault(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r1, r2, r3;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r1 = specialinvoke r0.<com.google.common.graph.StandardValueGraph: java.lang.Object edgeValueOrDefaultInternal(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return r1;
    }

    public boolean hasEdgeConnecting(com.google.common.graph.EndpointPair)
    {
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object $r2, $r3;
        com.google.common.graph.EndpointPair r1;
        boolean $z0;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: com.google.common.graph.EndpointPair;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<com.google.common.graph.StandardValueGraph: boolean isOrderingCompatible(com.google.common.graph.EndpointPair)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<com.google.common.graph.EndpointPair: java.lang.Object nodeU()>();

        $r3 = virtualinvoke r1.<com.google.common.graph.EndpointPair: java.lang.Object nodeV()>();

        $z0 = specialinvoke r0.<com.google.common.graph.StandardValueGraph: boolean hasEdgeConnectingInternal(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasEdgeConnecting(java.lang.Object, java.lang.Object)
    {
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $z0 = specialinvoke r0.<com.google.common.graph.StandardValueGraph: boolean hasEdgeConnectingInternal(java.lang.Object,java.lang.Object)>(r1, r2);

        return $z0;
    }

    public java.util.Set incidentEdges(java.lang.Object)
    {
        com.google.common.graph.StandardValueGraph$1 $r2;
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r1;
        com.google.common.graph.GraphConnections $r3;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: java.lang.Object;

        $r3 = specialinvoke r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.GraphConnections checkedConnections(java.lang.Object)>(r1);

        $r2 = new com.google.common.graph.StandardValueGraph$1;

        specialinvoke $r2.<com.google.common.graph.StandardValueGraph$1: void <init>(com.google.common.graph.StandardValueGraph,com.google.common.graph.BaseGraph,java.lang.Object,com.google.common.graph.GraphConnections)>(r0, r0, r1, $r3);

        return $r2;
    }

    public boolean isDirected()
    {
        com.google.common.graph.StandardValueGraph r0;
        boolean z0;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        z0 = r0.<com.google.common.graph.StandardValueGraph: boolean isDirected>;

        return z0;
    }

    public com.google.common.graph.ElementOrder nodeOrder()
    {
        com.google.common.graph.ElementOrder r1;
        com.google.common.graph.StandardValueGraph r0;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 = r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.ElementOrder nodeOrder>;

        return r1;
    }

    public java.util.Set nodes()
    {
        java.util.Set $r1;
        com.google.common.graph.StandardValueGraph r0;
        com.google.common.graph.MapIteratorCache $r2;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        $r2 = r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r1 = virtualinvoke $r2.<com.google.common.graph.MapIteratorCache: java.util.Set unmodifiableKeySet()>();

        return $r1;
    }

    public volatile java.lang.Iterable predecessors(java.lang.Object)
    {
        java.util.Set $r1;
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.graph.StandardValueGraph: java.util.Set predecessors(java.lang.Object)>($r2);

        return $r1;
    }

    public java.util.Set predecessors(java.lang.Object)
    {
        java.util.Set $r3;
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r1;
        com.google.common.graph.GraphConnections $r2;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.GraphConnections checkedConnections(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<com.google.common.graph.GraphConnections: java.util.Set predecessors()>();

        return $r3;
    }

    public volatile java.lang.Iterable successors(java.lang.Object)
    {
        java.util.Set $r1;
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.graph.StandardValueGraph: java.util.Set successors(java.lang.Object)>($r2);

        return $r1;
    }

    public java.util.Set successors(java.lang.Object)
    {
        java.util.Set $r3;
        com.google.common.graph.StandardValueGraph r0;
        java.lang.Object r1;
        com.google.common.graph.GraphConnections $r2;

        r0 := @this: com.google.common.graph.StandardValueGraph;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.common.graph.StandardValueGraph: com.google.common.graph.GraphConnections checkedConnections(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<com.google.common.graph.GraphConnections: java.util.Set successors()>();

        return $r3;
    }
}
