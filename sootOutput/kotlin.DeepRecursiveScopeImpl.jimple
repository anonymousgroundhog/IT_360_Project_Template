final class kotlin.DeepRecursiveScopeImpl extends kotlin.DeepRecursiveScope implements kotlin.coroutines.Continuation
{
    private kotlin.coroutines.Continuation cont;
    private kotlin.jvm.functions.Function3 function;
    private java.lang.Object result;
    private java.lang.Object value;

    public void <init>(kotlin.jvm.functions.Function3, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r3;
        kotlin.jvm.functions.Function3 $r1;
        kotlin.DeepRecursiveScopeImpl r0;
        java.lang.Object $r2;

        r0 := @this: kotlin.DeepRecursiveScopeImpl;

        $r1 := @parameter0: kotlin.jvm.functions.Function3;

        $r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        specialinvoke r0.<kotlin.DeepRecursiveScope: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        r0.<kotlin.DeepRecursiveScopeImpl: kotlin.jvm.functions.Function3 function> = $r1;

        r0.<kotlin.DeepRecursiveScopeImpl: java.lang.Object value> = $r2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r0, "null cannot be cast to non-null type kotlin.coroutines.Continuation<kotlin.Any?>");

        $r3 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation cont> = $r3;

        $r2 = staticinvoke <kotlin.DeepRecursiveKt: java.lang.Object access$getUNDEFINED_RESULT$p()>();

        r0.<kotlin.DeepRecursiveScopeImpl: java.lang.Object result> = $r2;

        return;
    }

    public static final void access$setCont$p(kotlin.DeepRecursiveScopeImpl, kotlin.coroutines.Continuation)
    {
        kotlin.DeepRecursiveScopeImpl $r0;
        kotlin.coroutines.Continuation $r1;

        $r0 := @parameter0: kotlin.DeepRecursiveScopeImpl;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r0.<kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation cont> = $r1;

        return;
    }

    public static final void access$setFunction$p(kotlin.DeepRecursiveScopeImpl, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r1;
        kotlin.DeepRecursiveScopeImpl $r0;

        $r0 := @parameter0: kotlin.DeepRecursiveScopeImpl;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        $r0.<kotlin.DeepRecursiveScopeImpl: kotlin.jvm.functions.Function3 function> = $r1;

        return;
    }

    public static final void access$setResult$p(kotlin.DeepRecursiveScopeImpl, java.lang.Object)
    {
        kotlin.DeepRecursiveScopeImpl $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: kotlin.DeepRecursiveScopeImpl;

        $r1 := @parameter1: java.lang.Object;

        $r0.<kotlin.DeepRecursiveScopeImpl: java.lang.Object result> = $r1;

        return;
    }

    private final kotlin.coroutines.Continuation crossFunctionCompletion(kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1 $r5;
        kotlin.coroutines.EmptyCoroutineContext $r3;
        kotlin.jvm.functions.Function3 $r1;
        kotlin.DeepRecursiveScopeImpl r0;
        kotlin.coroutines.CoroutineContext $r4;

        r0 := @this: kotlin.DeepRecursiveScopeImpl;

        $r1 := @parameter0: kotlin.jvm.functions.Function3;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r4 = (kotlin.coroutines.CoroutineContext) $r3;

        $r5 = new kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1;

        specialinvoke $r5.<kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: void <init>(kotlin.coroutines.CoroutineContext,kotlin.DeepRecursiveScopeImpl,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r4, r0, $r1, $r2);

        $r2 = (kotlin.coroutines.Continuation) $r5;

        return $r2;
    }

    public java.lang.Object callRecursive(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.DeepRecursiveScopeImpl r0;
        java.lang.Object $r1, $r3;

        r0 := @this: kotlin.DeepRecursiveScopeImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.coroutines.Continuation<kotlin.Any?>");

        r0.<kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation cont> = $r2;

        r0.<kotlin.DeepRecursiveScopeImpl: java.lang.Object value> = $r1;

        $r1 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r1 != $r3 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        return $r1;
    }

    public java.lang.Object callRecursive(kotlin.DeepRecursiveFunction, java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r3, $r6;
        kotlin.jvm.functions.Function3 r4, $r5;
        kotlin.DeepRecursiveScopeImpl r0;
        kotlin.DeepRecursiveFunction $r1;
        java.lang.Object $r2, $r7;

        r0 := @this: kotlin.DeepRecursiveScopeImpl;

        $r1 := @parameter0: kotlin.DeepRecursiveFunction;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        $r5 = virtualinvoke $r1.<kotlin.DeepRecursiveFunction: kotlin.jvm.functions.Function3 getBlock$kotlin_stdlib()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r5, "null cannot be cast to non-null type @[ExtensionFunctionType] kotlin.coroutines.SuspendFunction2<kotlin.DeepRecursiveScope<*, *>, kotlin.Any?, kotlin.Any?>{ kotlin.DeepRecursiveKt.DeepRecursiveFunctionBlock }");

        r4 = r0.<kotlin.DeepRecursiveScopeImpl: kotlin.jvm.functions.Function3 function>;

        if $r5 == r4 goto label1;

        r0.<kotlin.DeepRecursiveScopeImpl: kotlin.jvm.functions.Function3 function> = $r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.coroutines.Continuation<kotlin.Any?>");

        $r6 = specialinvoke r0.<kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation crossFunctionCompletion(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>(r4, $r3);

        r0.<kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation cont> = $r6;

        goto label2;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type kotlin.coroutines.Continuation<kotlin.Any?>");

        r0.<kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation cont> = $r3;

     label2:
        r0.<kotlin.DeepRecursiveScopeImpl: java.lang.Object value> = $r2;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r2 != $r7 goto label3;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r3);

     label3:
        return $r2;
    }

    public kotlin.coroutines.CoroutineContext getContext()
    {
        kotlin.DeepRecursiveScopeImpl r0;
        kotlin.coroutines.EmptyCoroutineContext $r1;
        kotlin.coroutines.CoroutineContext $r2;

        r0 := @this: kotlin.DeepRecursiveScopeImpl;

        $r1 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r2 = (kotlin.coroutines.CoroutineContext) $r1;

        return $r2;
    }

    public void resumeWith(java.lang.Object)
    {
        kotlin.DeepRecursiveScopeImpl r0;
        java.lang.Object $r1;

        r0 := @this: kotlin.DeepRecursiveScopeImpl;

        $r1 := @parameter0: java.lang.Object;

        r0.<kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation cont> = null;

        r0.<kotlin.DeepRecursiveScopeImpl: java.lang.Object result> = $r1;

        return;
    }

    public final java.lang.Object runCallLoop()
    {
        java.lang.Throwable r6;
        kotlin.coroutines.Continuation r2;
        kotlin.Result$Companion $r5;
        kotlin.jvm.functions.Function3 r4;
        kotlin.DeepRecursiveScopeImpl r0;
        java.lang.Object r1, $r3;
        boolean $z0;

        r0 := @this: kotlin.DeepRecursiveScopeImpl;

     label1:
        r1 = r0.<kotlin.DeepRecursiveScopeImpl: java.lang.Object result>;

        r2 = r0.<kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation cont>;

        if r2 != null goto label2;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>(r1);

        return r1;

     label2:
        $r3 = staticinvoke <kotlin.DeepRecursiveKt: java.lang.Object access$getUNDEFINED_RESULT$p()>();

        $z0 = staticinvoke <kotlin.Result: boolean equals-impl0(java.lang.Object,java.lang.Object)>($r3, r1);

        if $z0 == 0 goto label6;

     label3:
        r4 = r0.<kotlin.DeepRecursiveScopeImpl: kotlin.jvm.functions.Function3 function>;

        r1 = r0.<kotlin.DeepRecursiveScopeImpl: java.lang.Object value>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r4, "null cannot be cast to non-null type kotlin.Function3<R of kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.startCoroutineUninterceptedOrReturn, P of kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.startCoroutineUninterceptedOrReturn, kotlin.coroutines.Continuation<T of kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.startCoroutineUninterceptedOrReturn>, kotlin.Any?>");

        $r3 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)>(r4, 3);

        r4 = (kotlin.jvm.functions.Function3) $r3;

        r1 = interfaceinvoke r4.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2);

     label4:
        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if r1 == $r3 goto label1;

        $r5 = <kotlin.Result: kotlin.Result$Companion Companion>;

        r1 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r1);

        interfaceinvoke r2.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>(r1);

        goto label1;

     label5:
        r6 := @caughtexception;

        $r5 = <kotlin.Result: kotlin.Result$Companion Companion>;

        r1 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>(r6);

        r1 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r1);

        interfaceinvoke r2.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>(r1);

        goto label1;

     label6:
        $r3 = staticinvoke <kotlin.DeepRecursiveKt: java.lang.Object access$getUNDEFINED_RESULT$p()>();

        r0.<kotlin.DeepRecursiveScopeImpl: java.lang.Object result> = $r3;

        interfaceinvoke r2.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>(r1);

        goto label1;

        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
