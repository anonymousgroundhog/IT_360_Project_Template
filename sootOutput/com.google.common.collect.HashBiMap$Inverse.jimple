class com.google.common.collect.HashBiMap$Inverse extends java.util.AbstractMap implements com.google.common.collect.BiMap, java.io.Serializable
{
    private final com.google.common.collect.HashBiMap forward;
    private transient java.util.Set inverseEntrySet;

    void <init>(com.google.common.collect.HashBiMap)
    {
        com.google.common.collect.HashBiMap r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        r1 := @parameter0: com.google.common.collect.HashBiMap;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward> = r1;

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        java.io.ObjectInputStream $r1;
        com.google.common.collect.HashBiMap $r2;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.BiMap access$302(com.google.common.collect.HashBiMap,com.google.common.collect.BiMap)>($r2, r0);

        return;
    }

    public void clear()
    {
        com.google.common.collect.HashBiMap $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        virtualinvoke $r1.<com.google.common.collect.HashBiMap: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.HashBiMap $r2;
        java.lang.Object $r1;
        com.google.common.collect.HashBiMap$Inverse r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.HashBiMap: boolean containsValue(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        com.google.common.collect.HashBiMap $r2;
        java.lang.Object $r1;
        com.google.common.collect.HashBiMap$Inverse r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.HashBiMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        com.google.common.collect.HashBiMap $r2;
        com.google.common.collect.HashBiMap$InverseEntrySet $r3;
        java.util.Set r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        r1 = r0.<com.google.common.collect.HashBiMap$Inverse: java.util.Set inverseEntrySet>;

        if r1 != null goto label1;

        $r3 = new com.google.common.collect.HashBiMap$InverseEntrySet;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        specialinvoke $r3.<com.google.common.collect.HashBiMap$InverseEntrySet: void <init>(com.google.common.collect.HashBiMap)>($r2);

        r0.<com.google.common.collect.HashBiMap$Inverse: java.util.Set inverseEntrySet> = $r3;

        return $r3;

     label1:
        return r1;
    }

    public java.lang.Object forcePut(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashBiMap $r3;
        java.lang.Object r1, r2;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        r1 = virtualinvoke $r3.<com.google.common.collect.HashBiMap: java.lang.Object putInverse(java.lang.Object,java.lang.Object,boolean)>(r1, r2, 1);

        return r1;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.HashBiMap $r2;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.HashBiMap: java.lang.Object getInverse(java.lang.Object)>($r1);

        return $r1;
    }

    public com.google.common.collect.BiMap inverse()
    {
        com.google.common.collect.HashBiMap r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        r1 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        return r1;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r1;
        com.google.common.collect.HashBiMap $r2;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.HashBiMap: java.util.Set values()>();

        return $r1;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashBiMap $r3;
        java.lang.Object r1, r2;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        r1 = virtualinvoke $r3.<com.google.common.collect.HashBiMap: java.lang.Object putInverse(java.lang.Object,java.lang.Object,boolean)>(r1, r2, 0);

        return r1;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.HashBiMap $r2;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.HashBiMap: java.lang.Object removeInverse(java.lang.Object)>($r1);

        return $r1;
    }

    public int size()
    {
        int i0;
        com.google.common.collect.HashBiMap $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        i0 = $r1.<com.google.common.collect.HashBiMap: int size>;

        return i0;
    }

    public volatile java.util.Collection values()
    {
        java.util.Set $r1;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r1 = virtualinvoke r0.<com.google.common.collect.HashBiMap$Inverse: java.util.Set values()>();

        return $r1;
    }

    public java.util.Set values()
    {
        java.util.Set $r1;
        com.google.common.collect.HashBiMap $r2;
        com.google.common.collect.HashBiMap$Inverse r0;

        r0 := @this: com.google.common.collect.HashBiMap$Inverse;

        $r2 = r0.<com.google.common.collect.HashBiMap$Inverse: com.google.common.collect.HashBiMap forward>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.HashBiMap: java.util.Set keySet()>();

        return $r1;
    }
}
