class androidx.room.InvalidationTracker$ObservedTableTracker extends java.lang.Object
{
    static final int ADD;
    static final int NO_OP;
    static final int REMOVE;
    boolean mNeedsSync;
    boolean mPendingSync;
    final long[] mTableObservers;
    final int[] mTriggerStateChanges;
    final boolean[] mTriggerStates;

    void <init>(int)
    {
        androidx.room.InvalidationTracker$ObservedTableTracker r0;
        long[] $r1;
        int[] $r3;
        int $i0;
        boolean[] $r2;

        r0 := @this: androidx.room.InvalidationTracker$ObservedTableTracker;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (long)[$i0];

        r0.<androidx.room.InvalidationTracker$ObservedTableTracker: long[] mTableObservers> = $r1;

        $r2 = newarray (boolean)[$i0];

        r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean[] mTriggerStates> = $r2;

        $r3 = newarray (int)[$i0];

        r0.<androidx.room.InvalidationTracker$ObservedTableTracker: int[] mTriggerStateChanges> = $r3;

        $r1 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: long[] mTableObservers>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r1, 0L);

        $r2 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean[] mTriggerStates>;

        staticinvoke <java.util.Arrays: void fill(boolean[],boolean)>($r2, 0);

        return;
    }

    int[] getTablesToSync()
    {
        androidx.room.InvalidationTracker$ObservedTableTracker r0;
        java.lang.Throwable r4;
        boolean[] $r2;
        long $l3;
        long[] r1;
        byte $b2, b4;
        int[] $r3;
        int i0, i1, $i5;
        boolean z0, $z1;

        r0 := @this: androidx.room.InvalidationTracker$ObservedTableTracker;

        entermonitor r0;

     label01:
        z0 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean mNeedsSync>;

        if z0 == 0 goto label12;

        z0 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean mPendingSync>;

        if z0 == 0 goto label02;

        goto label12;

     label02:
        r1 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: long[] mTableObservers>;

        i0 = lengthof r1;

        i1 = 0;

     label03:
        $b2 = 1;

        if i1 >= i0 goto label10;

        r1 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: long[] mTableObservers>;

        $l3 = r1[i1];

        b4 = $l3 cmp 0L;

        $i5 = (int) b4;

        if $i5 <= 0 goto label04;

        z0 = 1;

        goto label05;

     label04:
        z0 = 0;

     label05:
        $r2 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean[] mTriggerStates>;

        $z1 = $r2[i1];

        if z0 == $z1 goto label08;

        $r3 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: int[] mTriggerStateChanges>;

        if z0 == 0 goto label06;

        goto label07;

     label06:
        $b2 = 2;

     label07:
        $r3[i1] = $b2;

        goto label09;

     label08:
        $r3 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: int[] mTriggerStateChanges>;

        $r3[i1] = 0;

     label09:
        $r2 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean[] mTriggerStates>;

        $r2[i1] = z0;

        i1 = i1 + 1;

        goto label03;

     label10:
        r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean mPendingSync> = 1;

        r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean mNeedsSync> = 0;

        $r3 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: int[] mTriggerStateChanges>;

        exitmonitor r0;

     label11:
        return $r3;

     label12:
        exitmonitor r0;

     label13:
        return null;

     label14:
        r4 := @caughtexception;

        exitmonitor r0;

     label15:
        throw r4;

        catch java.lang.Throwable from label01 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    transient boolean onAdded(int[])
    {
        androidx.room.InvalidationTracker$ObservedTableTracker r0;
        java.lang.Throwable $r3;
        long $l1, $l5;
        long[] r2;
        byte $b2;
        int[] $r1;
        int i0, $i3, $i4;
        boolean z0;

        r0 := @this: androidx.room.InvalidationTracker$ObservedTableTracker;

        $r1 := @parameter0: int[];

        z0 = 0;

        entermonitor r0;

     label1:
        $i3 = lengthof $r1;

        $i4 = 0;

     label2:
        if $i4 >= $i3 goto label4;

        i0 = $r1[$i4];

        r2 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: long[] mTableObservers>;

        $l1 = r2[i0];

        r2 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: long[] mTableObservers>;

        $l5 = 1L + $l1;

        r2[i0] = $l5;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label3;

        r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean mNeedsSync> = 1;

        z0 = 1;

     label3:
        $i4 = $i4 + 1;

        goto label2;

     label4:
        exitmonitor r0;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    transient boolean onRemoved(int[])
    {
        androidx.room.InvalidationTracker$ObservedTableTracker r0;
        java.lang.Throwable $r3;
        long $l1, $l2;
        long[] r2;
        byte $b5;
        int[] $r1;
        int i0, $i3, $i4;
        boolean z0;

        r0 := @this: androidx.room.InvalidationTracker$ObservedTableTracker;

        $r1 := @parameter0: int[];

        z0 = 0;

        entermonitor r0;

     label1:
        $i3 = lengthof $r1;

        $i4 = 0;

     label2:
        if $i4 >= $i3 goto label4;

        i0 = $r1[$i4];

        r2 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: long[] mTableObservers>;

        $l1 = r2[i0];

        r2 = r0.<androidx.room.InvalidationTracker$ObservedTableTracker: long[] mTableObservers>;

        $l2 = $l1 - 1L;

        r2[i0] = $l2;

        $b5 = $l1 cmp 1L;

        if $b5 != 0 goto label3;

        r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean mNeedsSync> = 1;

        z0 = 1;

     label3:
        $i4 = $i4 + 1;

        goto label2;

     label4:
        exitmonitor r0;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void onSyncCompleted()
    {
        androidx.room.InvalidationTracker$ObservedTableTracker r0;
        java.lang.Throwable $r1;

        r0 := @this: androidx.room.InvalidationTracker$ObservedTableTracker;

        entermonitor r0;

     label1:
        r0.<androidx.room.InvalidationTracker$ObservedTableTracker: boolean mPendingSync> = 0;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <androidx.room.InvalidationTracker$ObservedTableTracker: int REMOVE> = 2;

        <androidx.room.InvalidationTracker$ObservedTableTracker: int NO_OP> = 0;

        <androidx.room.InvalidationTracker$ObservedTableTracker: int ADD> = 1;

        return;
    }
}
