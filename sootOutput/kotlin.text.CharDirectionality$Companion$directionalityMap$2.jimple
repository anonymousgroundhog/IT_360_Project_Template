final class kotlin.text.CharDirectionality$Companion$directionalityMap$2 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function0
{
    public static final kotlin.text.CharDirectionality$Companion$directionalityMap$2 INSTANCE;

    static void <clinit>()
    {
        kotlin.text.CharDirectionality$Companion$directionalityMap$2 $r0;

        $r0 = new kotlin.text.CharDirectionality$Companion$directionalityMap$2;

        specialinvoke $r0.<kotlin.text.CharDirectionality$Companion$directionalityMap$2: void <init>()>();

        <kotlin.text.CharDirectionality$Companion$directionalityMap$2: kotlin.text.CharDirectionality$Companion$directionalityMap$2 INSTANCE> = $r0;

        return;
    }

    void <init>()
    {
        kotlin.text.CharDirectionality$Companion$directionalityMap$2 r0;

        r0 := @this: kotlin.text.CharDirectionality$Companion$directionalityMap$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        kotlin.text.CharDirectionality$Companion$directionalityMap$2 r0;
        java.util.Map $r1;

        r0 := @this: kotlin.text.CharDirectionality$Companion$directionalityMap$2;

        $r1 = virtualinvoke r0.<kotlin.text.CharDirectionality$Companion$directionalityMap$2: java.util.Map invoke()>();

        return $r1;
    }

    public final java.util.Map invoke()
    {
        kotlin.text.CharDirectionality$Companion$directionalityMap$2 r0;
        kotlin.text.CharDirectionality r1;
        java.lang.Integer $r5;
        java.util.LinkedHashMap r3;
        java.util.Map r4;
        int $i0, $i1, $i2;
        kotlin.text.CharDirectionality[] $r2;

        r0 := @this: kotlin.text.CharDirectionality$Companion$directionalityMap$2;

        $r2 = staticinvoke <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] values()>();

        $i0 = lengthof $r2;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r3 = new java.util.LinkedHashMap;

        specialinvoke r3.<java.util.LinkedHashMap: void <init>(int)>($i0);

        r4 = (java.util.Map) r3;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r1 = $r2[$i1];

        $i2 = virtualinvoke r1.<kotlin.text.CharDirectionality: int getValue()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return r4;
    }
}
