class androidx.work.impl.utils.CancelWorkRunnable$1 extends androidx.work.impl.utils.CancelWorkRunnable
{
    final java.util.UUID val$id;
    final androidx.work.impl.WorkManagerImpl val$workManagerImpl;

    void <init>(androidx.work.impl.WorkManagerImpl, java.util.UUID)
    {
        androidx.work.impl.utils.CancelWorkRunnable$1 r0;
        androidx.work.impl.WorkManagerImpl $r1;
        java.util.UUID $r2;

        r0 := @this: androidx.work.impl.utils.CancelWorkRunnable$1;

        $r1 := @parameter0: androidx.work.impl.WorkManagerImpl;

        $r2 := @parameter1: java.util.UUID;

        r0.<androidx.work.impl.utils.CancelWorkRunnable$1: androidx.work.impl.WorkManagerImpl val$workManagerImpl> = $r1;

        r0.<androidx.work.impl.utils.CancelWorkRunnable$1: java.util.UUID val$id> = $r2;

        specialinvoke r0.<androidx.work.impl.utils.CancelWorkRunnable: void <init>()>();

        return;
    }

    void runInternal()
    {
        java.lang.Throwable $r5;
        androidx.work.impl.WorkDatabase $r2;
        androidx.work.impl.utils.CancelWorkRunnable$1 r0;
        androidx.work.impl.WorkManagerImpl r1;
        java.util.UUID $r3;
        java.lang.String $r4;

        r0 := @this: androidx.work.impl.utils.CancelWorkRunnable$1;

        r1 = r0.<androidx.work.impl.utils.CancelWorkRunnable$1: androidx.work.impl.WorkManagerImpl val$workManagerImpl>;

        $r2 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()>();

        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label1:
        r1 = r0.<androidx.work.impl.utils.CancelWorkRunnable$1: androidx.work.impl.WorkManagerImpl val$workManagerImpl>;

        $r3 = r0.<androidx.work.impl.utils.CancelWorkRunnable$1: java.util.UUID val$id>;

        $r4 = virtualinvoke $r3.<java.util.UUID: java.lang.String toString()>();

        virtualinvoke r0.<androidx.work.impl.utils.CancelWorkRunnable$1: void cancel(androidx.work.impl.WorkManagerImpl,java.lang.String)>(r1, $r4);

        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label2:
        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        r1 = r0.<androidx.work.impl.utils.CancelWorkRunnable$1: androidx.work.impl.WorkManagerImpl val$workManagerImpl>;

        virtualinvoke r0.<androidx.work.impl.utils.CancelWorkRunnable$1: void reschedulePendingWorkers(androidx.work.impl.WorkManagerImpl)>(r1);

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
