final class kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlin.jvm.internal.Ref$ObjectRef $result;

    void <init>(kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2 r0;
        kotlin.jvm.internal.Ref$ObjectRef $r1;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2;

        $r1 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        r0.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: kotlin.jvm.internal.Ref$ObjectRef $result> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.internal.Symbol $r6;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2 r0;
        java.lang.IllegalArgumentException $r7;
        kotlin.Unit r8;
        java.lang.Object $r1, $r5;
        java.lang.String $r3;
        kotlin.jvm.internal.Ref$ObjectRef $r4;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: kotlin.jvm.internal.Ref$ObjectRef $result>;

        $r5 = $r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r6 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        if $r5 != $r6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: kotlin.jvm.internal.Ref$ObjectRef $result>;

        $r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r1;

        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r8;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r3 = "Flow has more than one element";

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r7;
    }
}
