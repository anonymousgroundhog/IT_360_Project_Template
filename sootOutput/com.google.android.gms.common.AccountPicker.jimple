public final class com.google.android.gms.common.AccountPicker extends java.lang.Object
{

    private void <init>()
    {
        com.google.android.gms.common.AccountPicker r0;

        r0 := @this: com.google.android.gms.common.AccountPicker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.Intent newChooseAccountIntent(android.accounts.Account, java.util.ArrayList, java.lang.String[], boolean, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)
    {
        android.os.Bundle $r4;
        android.accounts.Account $r6;
        java.lang.String[] $r0, $r3;
        android.content.Intent $r5;
        java.util.ArrayList $r7;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r6 := @parameter0: android.accounts.Account;

        $r7 := @parameter1: java.util.ArrayList;

        $r0 := @parameter2: java.lang.String[];

        $z0 := @parameter3: boolean;

        $r1 := @parameter4: java.lang.String;

        $r2 := @parameter5: java.lang.String;

        $r3 := @parameter6: java.lang.String[];

        $r4 := @parameter7: android.os.Bundle;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>()>();

        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)>(1, "We only support hostedDomain filter for account chip styled account picker");

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.google.android.gms.common.account.CHOOSE_ACCOUNT");

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.google.android.gms");

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("allowableAccounts", $r7);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("allowableAccountTypes", $r0);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("addAccountOptions", $r4);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("selectedAccount", $r6);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("alwaysPromptForAccount", $z0);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("descriptionTextOverride", $r1);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("authTokenType", $r2);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("addAccountRequiredFeatures", $r3);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("setGmsCoreAccount", 0);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("overrideTheme", 0);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("overrideCustomTheme", 0);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("hostedDomainFilter", null);

        return $r5;
    }

    public static android.content.Intent newChooseAccountIntent(com.google.android.gms.common.AccountPicker$AccountChooserOptions)
    {
        java.lang.Object[] $r4;
        android.os.Bundle $r5;
        android.accounts.Account $r6;
        com.google.android.gms.common.AccountPicker$AccountChooserOptions $r1;
        android.content.Intent $r0;
        java.lang.String[] $r3;
        java.util.ArrayList $r2;
        java.lang.String $r7;
        boolean $z0;

        $r1 := @parameter0: com.google.android.gms.common.AccountPicker$AccountChooserOptions;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<android.content.Intent: void <init>()>();

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzD(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zze(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)>(1, "We only support hostedDomain filter for account chip styled account picker");

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: com.google.android.gms.common.zza zzd(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)>(1, "Consent is only valid for account chip styled account picker");

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzB(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)>(1, "Making the selected account non-clickable is only supported for the THEME_DAY_NIGHT_GOOGLE_MATERIAL2, THEME_LIGHT_GOOGLE_MATERIAL3, THEME_DARK_GOOGLE_MATERIAL3 or THEME_DAY_NIGHT_GOOGLE_MATERIAL3 themes");

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzD(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.google.android.gms.common.account.CHOOSE_ACCOUNT");

        virtualinvoke $r0.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.google.android.gms");

        $r2 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.util.ArrayList zzi(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("allowableAccounts", $r2);

        $r2 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.util.ArrayList zzh(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        if $r2 == null goto label1;

        $r2 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.util.ArrayList zzh(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        $r3 = newarray (java.lang.String)[0];

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (java.lang.String[]) $r4;

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("allowableAccountTypes", $r3);

     label1:
        $r5 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: android.os.Bundle zzc(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("addAccountOptions", $r5);

        $r6 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: android.accounts.Account zzb(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("selectedAccount", $r6);

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzB(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("selectedAccountIsNotClickable", 0);

        $z0 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzy(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("alwaysPromptForAccount", $z0);

        $r7 = staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzg(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("descriptionTextOverride", $r7);

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzC(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("setGmsCoreAccount", 0);

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzf(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("realClientPackage", null);

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: int zza(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("overrideTheme", 0);

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzD(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("overrideCustomTheme", 0);

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zze(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("hostedDomainFilter", null);

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzD(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: com.google.android.gms.common.zza zzd(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzz(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        staticinvoke <com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzA(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>($r1);

        $z0 = virtualinvoke $r5.<android.os.Bundle: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("first_party_options_bundle", $r5);

     label2:
        return $r0;
    }
}
