public final class kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1 extends java.lang.Object implements kotlinx.coroutines.flow.Flow
{
    final kotlin.jvm.functions.Function3 $action$inlined;
    final kotlinx.coroutines.flow.Flow $this_onCompletion$inlined;

    public void <init>(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.jvm.functions.Function3 $r2;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1 r0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onCompletion$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $action$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        java.lang.Throwable $r9, r16, $r17;
        java.lang.IllegalStateException $r7;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1 $r3, $r4;
        kotlinx.coroutines.flow.ThrowingCollector $r18;
        int i0;
        boolean $z0;
        kotlin.jvm.functions.Function3 $r15;
        kotlin.coroutines.CoroutineContext $r14;
        kotlinx.coroutines.flow.Flow $r13;
        kotlinx.coroutines.flow.internal.SafeCollector r8;
        kotlin.Unit r19;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1 r0, r12;
        kotlinx.coroutines.flow.FlowCollector $r1, $r11;
        java.lang.Object $r5, $r6, $r10;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1;

        if $z0 == 0 goto label01;

        $r3 = (kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1) $r2;

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: int label>;

        i0 = i0 & -2147483648;

        if i0 == 0 goto label01;

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: int label>;

        i0 = i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: int label> = i0;

        goto label02;

     label01:
        $r3 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)>(r0, $r2);

     label02:
        $r4 = $r3;

        $r5 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object result>;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label12;
            case 1: goto label09;
            case 2: goto label08;
            case 3: goto label04;
            default: goto label03;
        };

     label03:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label04:
        $r6 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        r8 = (kotlinx.coroutines.flow.internal.SafeCollector) $r6;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

     label06:
        goto label18;

     label07:
        $r9 := @caughtexception;

        goto label20;

     label08:
        $r6 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        $r9 = (java.lang.Throwable) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        goto label23;

     label09:
        $r10 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$1>;

        $r11 = (kotlinx.coroutines.flow.FlowCollector) $r10;

        $r10 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        r12 = (kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1) $r10;

     label10:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

     label11:
        goto label15;

     label12:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        r12 = r0;

        $r2 = (kotlin.coroutines.Continuation) $r3;

        $r11 = $r1;

     label13:
        $r13 = r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onCompletion$inlined>;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = r0;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = $r1;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: int label> = 1;

        $r5 = interfaceinvoke $r13.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r1, $r3);

     label14:
        if $r5 != $r6 goto label15;

        return $r6;

     label15:
        r8 = new kotlinx.coroutines.flow.internal.SafeCollector;

        $r14 = interfaceinvoke $r4.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        specialinvoke r8.<kotlinx.coroutines.flow.internal.SafeCollector: void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)>($r11, $r14);

     label16:
        $r15 = r12.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $action$inlined>;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = r8;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = null;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: int label> = 3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(6);

        $r5 = interfaceinvoke $r15.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>(r8, null, $r4);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(7);

     label17:
        if $r5 != $r6 goto label18;

        return $r6;

     label18:
        virtualinvoke r8.<kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()>();

        r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r19;

     label19:
        r16 := @caughtexception;

        $r9 = r16;

     label20:
        virtualinvoke r8.<kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()>();

        throw $r9;

     label21:
        $r17 := @caughtexception;

        $r18 = new kotlinx.coroutines.flow.ThrowingCollector;

        specialinvoke $r18.<kotlinx.coroutines.flow.ThrowingCollector: void <init>(java.lang.Throwable)>($r17);

        $r1 = (kotlinx.coroutines.flow.FlowCollector) $r18;

        $r15 = r12.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $action$inlined>;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = $r17;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = null;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: int label> = 2;

        $r5 = staticinvoke <kotlinx.coroutines.flow.FlowKt__EmittersKt: java.lang.Object access$invokeSafely$FlowKt__EmittersKt(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Throwable,kotlin.coroutines.Continuation)>($r1, $r15, $r17, $r4);

        if $r5 != $r6 goto label22;

        return $r6;

     label22:
        $r9 = $r17;

     label23:
        throw $r9;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label16 to label17 with label19;
    }
}
