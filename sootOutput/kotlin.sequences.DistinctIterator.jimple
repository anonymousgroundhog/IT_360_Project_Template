final class kotlin.sequences.DistinctIterator extends kotlin.collections.AbstractIterator
{
    private final kotlin.jvm.functions.Function1 keySelector;
    private final java.util.HashSet observed;
    private final java.util.Iterator source;

    public void <init>(java.util.Iterator, kotlin.jvm.functions.Function1)
    {
        kotlin.sequences.DistinctIterator r0;
        java.util.HashSet $r3;
        java.util.Iterator $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: kotlin.sequences.DistinctIterator;

        $r1 := @parameter0: java.util.Iterator;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        specialinvoke r0.<kotlin.collections.AbstractIterator: void <init>()>();

        r0.<kotlin.sequences.DistinctIterator: java.util.Iterator source> = $r1;

        r0.<kotlin.sequences.DistinctIterator: kotlin.jvm.functions.Function1 keySelector> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<kotlin.sequences.DistinctIterator: java.util.HashSet observed> = $r3;

        return;
    }

    protected void computeNext()
    {
        kotlin.sequences.DistinctIterator r0;
        java.util.HashSet $r5;
        java.util.Iterator r1;
        java.lang.Object $r2, $r4;
        kotlin.jvm.functions.Function1 r3;
        boolean $z0;

        r0 := @this: kotlin.sequences.DistinctIterator;

     label1:
        r1 = r0.<kotlin.sequences.DistinctIterator: java.util.Iterator source>;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r1 = r0.<kotlin.sequences.DistinctIterator: java.util.Iterator source>;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = r0.<kotlin.sequences.DistinctIterator: kotlin.jvm.functions.Function1 keySelector>;

        $r4 = interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r5 = r0.<kotlin.sequences.DistinctIterator: java.util.HashSet observed>;

        $z0 = virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<kotlin.sequences.DistinctIterator: void setNext(java.lang.Object)>($r2);

        return;

     label2:
        virtualinvoke r0.<kotlin.sequences.DistinctIterator: void done()>();

        return;
    }
}
