public final class kotlin.coroutines.jvm.internal.DebugMetadataKt extends java.lang.Object
{
    private static final int COROUTINES_DEBUG_METADATA_VERSION;

    private static final void checkDebugMetadataVersion(int, int)
    {
        java.lang.IllegalStateException $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 > $i0 goto label1;

        return;

     label1:
        $r0 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Debug metadata version mismatch. Expected: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", got ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Please update the Kotlin standard library.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r0;
    }

    private static final kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        java.lang.'annotation'.Annotation $r2;
        java.lang.Class $r1;
        kotlin.coroutines.jvm.internal.DebugMetadata $r3;

        $r0 := @parameter0: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lkotlin/coroutines/jvm/internal/DebugMetadata;");

        $r3 = (kotlin.coroutines.jvm.internal.DebugMetadata) $r2;

        return $r3;
    }

    private static final int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        java.lang.reflect.Field $r2;
        java.lang.Integer $r4;
        java.lang.Exception r5;
        int $i0;
        java.lang.Class $r1;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @parameter0: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

     label01:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("label");

        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r0);

     label02:
        $z0 = $r3 instanceof java.lang.Integer;

        if $z0 == 0 goto label05;

     label03:
        $r4 = (java.lang.Integer) $r3;

     label04:
        goto label06;

     label05:
        $r4 = null;

     label06:
        if $r4 == null goto label09;

     label07:
        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label08:
        goto label10;

     label09:
        $i0 = 0;

     label10:
        $i0 = $i0 - 1;

        return $i0;

     label11:
        r5 := @caughtexception;

        return -1;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
    }

    public static final java.lang.String[] getSpilledVariableFieldMapping(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
    {
        java.lang.Object[] $r7;
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        java.util.Collection $r6;
        java.lang.String[] $r4;
        kotlin.coroutines.jvm.internal.DebugMetadata $r1;
        java.util.ArrayList r2;
        int[] $r3;
        int i0, $i1, $i2, i3;
        java.lang.String $r5;

        $r0 := @parameter0: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.coroutines.jvm.internal.DebugMetadataKt: kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl)>($r0);

        if $r1 != null goto label1;

        return null;

     label1:
        i0 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.DebugMetadata: int v()>();

        staticinvoke <kotlin.coroutines.jvm.internal.DebugMetadataKt: void checkDebugMetadataVersion(int,int)>(1, i0);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $i1 = staticinvoke <kotlin.coroutines.jvm.internal.DebugMetadataKt: int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl)>($r0);

        $r3 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.DebugMetadata: int[] i()>();

        $i2 = lengthof $r3;

        i3 = 0;

     label2:
        if i3 >= $i2 goto label4;

        i0 = $r3[i3];

        if i0 != $i1 goto label3;

        $r4 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String[] s()>();

        $r5 = $r4[i3];

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r4 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String[] n()>();

        $r5 = $r4[i3];

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r6 = (java.util.Collection) r2;

        $r4 = newarray (java.lang.String)[0];

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r4 = (java.lang.String[]) $r7;

        return $r4;
    }

    public static final java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
    {
        kotlin.coroutines.jvm.internal.BaseContinuationImpl $r0;
        kotlin.coroutines.jvm.internal.DebugMetadata $r1;
        int[] $r2;
        int $i0;
        kotlin.coroutines.jvm.internal.ModuleNameRetriever r3;
        java.lang.StringBuilder r5, $r8;
        java.lang.StackTraceElement $r9;
        java.lang.String $r4, $r6, $r7;

        $r0 := @parameter0: kotlin.coroutines.jvm.internal.BaseContinuationImpl;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.coroutines.jvm.internal.DebugMetadataKt: kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl)>($r0);

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.DebugMetadata: int v()>();

        staticinvoke <kotlin.coroutines.jvm.internal.DebugMetadataKt: void checkDebugMetadataVersion(int,int)>(1, $i0);

        $i0 = staticinvoke <kotlin.coroutines.jvm.internal.DebugMetadataKt: int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl)>($r0);

        if $i0 >= 0 goto label2;

        $i0 = -1;

        goto label3;

     label2:
        $r2 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.DebugMetadata: int[] l()>();

        $i0 = $r2[$i0];

     label3:
        r3 = <kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE>;

        $r4 = virtualinvoke r3.<kotlin.coroutines.jvm.internal.ModuleNameRetriever: java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl)>($r0);

        if $r4 != null goto label4;

        $r4 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String c()>();

        goto label5;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r4 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String c()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $r9 = new java.lang.StackTraceElement;

        $r6 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String m()>();

        $r7 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String f()>();

        specialinvoke $r9.<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r4, $r6, $r7, $i0);

        return $r9;
    }

    public static void <clinit>()
    {
        <kotlin.coroutines.jvm.internal.DebugMetadataKt: int COROUTINES_DEBUG_METADATA_VERSION> = 1;

        return;
    }
}
