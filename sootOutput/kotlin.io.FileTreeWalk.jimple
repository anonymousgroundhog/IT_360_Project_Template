public final class kotlin.io.FileTreeWalk extends java.lang.Object implements kotlin.sequences.Sequence
{
    private final kotlin.io.FileWalkDirection direction;
    private final int maxDepth;
    private final kotlin.jvm.functions.Function1 onEnter;
    private final kotlin.jvm.functions.Function2 onFail;
    private final kotlin.jvm.functions.Function1 onLeave;
    private final java.io.File start;

    public void <init>(java.io.File, kotlin.io.FileWalkDirection)
    {
        java.io.File $r1;
        kotlin.io.FileWalkDirection $r2;
        kotlin.io.FileTreeWalk r0;

        r0 := @this: kotlin.io.FileTreeWalk;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: kotlin.io.FileWalkDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "direction");

        specialinvoke r0.<kotlin.io.FileTreeWalk: void <init>(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r1, $r2, null, null, null, 0, 32, null);

        return;
    }

    public void <init>(java.io.File, kotlin.io.FileWalkDirection, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.jvm.internal.DefaultConstructorMarker $r2;
        kotlin.io.FileWalkDirection $r3;
        int $i0;
        java.io.File $r1;
        kotlin.io.FileTreeWalk r0;

        r0 := @this: kotlin.io.FileTreeWalk;

        $r1 := @parameter0: java.io.File;

        $r3 := @parameter1: kotlin.io.FileWalkDirection;

        $i0 := @parameter2: int;

        $r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $r3 = <kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection TOP_DOWN>;

     label1:
        specialinvoke r0.<kotlin.io.FileTreeWalk: void <init>(java.io.File,kotlin.io.FileWalkDirection)>($r1, $r3);

        return;
    }

    private void <init>(java.io.File, kotlin.io.FileWalkDirection, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int)
    {
        kotlin.io.FileWalkDirection $r2;
        int $i0;
        kotlin.jvm.functions.Function1 $r3, $r4;
        kotlin.jvm.functions.Function2 $r5;
        java.io.File $r1;
        kotlin.io.FileTreeWalk r0;

        r0 := @this: kotlin.io.FileTreeWalk;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: kotlin.io.FileWalkDirection;

        $r3 := @parameter2: kotlin.jvm.functions.Function1;

        $r4 := @parameter3: kotlin.jvm.functions.Function1;

        $r5 := @parameter4: kotlin.jvm.functions.Function2;

        $i0 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.io.FileTreeWalk: java.io.File start> = $r1;

        r0.<kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection direction> = $r2;

        r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onEnter> = $r3;

        r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onLeave> = $r4;

        r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function2 onFail> = $r5;

        r0.<kotlin.io.FileTreeWalk: int maxDepth> = $i0;

        return;
    }

    void <init>(java.io.File, kotlin.io.FileWalkDirection, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.io.FileWalkDirection $r5;
        kotlin.jvm.functions.Function1 $r2, $r3;
        kotlin.jvm.functions.Function2 $r4;
        java.io.File $r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r6;
        int $i0, $i1, $i2;
        kotlin.io.FileTreeWalk r0;

        r0 := @this: kotlin.io.FileTreeWalk;

        $r1 := @parameter0: java.io.File;

        $r5 := @parameter1: kotlin.io.FileWalkDirection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        $r4 := @parameter4: kotlin.jvm.functions.Function2;

        $i1 := @parameter5: int;

        $i0 := @parameter6: int;

        $r6 := @parameter7: kotlin.jvm.internal.DefaultConstructorMarker;

        $i2 = $i0 & 2;

        if $i2 == 0 goto label1;

        $r5 = <kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection TOP_DOWN>;

        goto label1;

     label1:
        $i0 = $i0 & 32;

        if $i0 == 0 goto label2;

        $i1 = 2147483647;

        goto label2;

     label2:
        specialinvoke r0.<kotlin.io.FileTreeWalk: void <init>(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int)>($r1, $r5, $r2, $r3, $r4, $i1);

        return;
    }

    public static final kotlin.io.FileWalkDirection access$getDirection$p(kotlin.io.FileTreeWalk)
    {
        kotlin.io.FileWalkDirection r1;
        kotlin.io.FileTreeWalk $r0;

        $r0 := @parameter0: kotlin.io.FileTreeWalk;

        r1 = $r0.<kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection direction>;

        return r1;
    }

    public static final int access$getMaxDepth$p(kotlin.io.FileTreeWalk)
    {
        int i0;
        kotlin.io.FileTreeWalk $r0;

        $r0 := @parameter0: kotlin.io.FileTreeWalk;

        i0 = $r0.<kotlin.io.FileTreeWalk: int maxDepth>;

        return i0;
    }

    public static final kotlin.jvm.functions.Function1 access$getOnEnter$p(kotlin.io.FileTreeWalk)
    {
        kotlin.jvm.functions.Function1 r1;
        kotlin.io.FileTreeWalk $r0;

        $r0 := @parameter0: kotlin.io.FileTreeWalk;

        r1 = $r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onEnter>;

        return r1;
    }

    public static final kotlin.jvm.functions.Function2 access$getOnFail$p(kotlin.io.FileTreeWalk)
    {
        kotlin.jvm.functions.Function2 r1;
        kotlin.io.FileTreeWalk $r0;

        $r0 := @parameter0: kotlin.io.FileTreeWalk;

        r1 = $r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function2 onFail>;

        return r1;
    }

    public static final kotlin.jvm.functions.Function1 access$getOnLeave$p(kotlin.io.FileTreeWalk)
    {
        kotlin.jvm.functions.Function1 r1;
        kotlin.io.FileTreeWalk $r0;

        $r0 := @parameter0: kotlin.io.FileTreeWalk;

        r1 = $r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onLeave>;

        return r1;
    }

    public static final java.io.File access$getStart$p(kotlin.io.FileTreeWalk)
    {
        java.io.File r1;
        kotlin.io.FileTreeWalk $r0;

        $r0 := @parameter0: kotlin.io.FileTreeWalk;

        r1 = $r0.<kotlin.io.FileTreeWalk: java.io.File start>;

        return r1;
    }

    public java.util.Iterator iterator()
    {
        kotlin.io.FileTreeWalk$FileTreeWalkIterator $r1;
        java.util.Iterator $r2;
        kotlin.io.FileTreeWalk r0;

        r0 := @this: kotlin.io.FileTreeWalk;

        $r1 = new kotlin.io.FileTreeWalk$FileTreeWalkIterator;

        specialinvoke $r1.<kotlin.io.FileTreeWalk$FileTreeWalkIterator: void <init>(kotlin.io.FileTreeWalk)>(r0);

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }

    public final kotlin.io.FileTreeWalk maxDepth(int)
    {
        kotlin.io.FileWalkDirection $r6;
        kotlin.jvm.functions.Function1 $r1, $r2;
        kotlin.jvm.functions.Function2 $r3;
        java.lang.IllegalArgumentException $r7;
        java.io.File $r5;
        int $i0;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        kotlin.io.FileTreeWalk r0, $r4;

        r0 := @this: kotlin.io.FileTreeWalk;

        $i0 := @parameter0: int;

        if $i0 <= 0 goto label1;

        $r4 = new kotlin.io.FileTreeWalk;

        $r5 = r0.<kotlin.io.FileTreeWalk: java.io.File start>;

        $r6 = r0.<kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection direction>;

        $r1 = r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onEnter>;

        $r2 = r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onLeave>;

        $r3 = r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function2 onFail>;

        specialinvoke $r4.<kotlin.io.FileTreeWalk: void <init>(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int)>($r5, $r6, $r1, $r2, $r3, $i0);

        return $r4;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("depth must be positive, but was ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;
    }

    public final kotlin.io.FileTreeWalk onEnter(kotlin.jvm.functions.Function1)
    {
        kotlin.io.FileWalkDirection $r3;
        kotlin.jvm.functions.Function1 $r1, $r4;
        kotlin.jvm.functions.Function2 $r5;
        java.io.File $r2;
        int $i0;
        kotlin.io.FileTreeWalk r0, $r6;

        r0 := @this: kotlin.io.FileTreeWalk;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "function");

        $r6 = new kotlin.io.FileTreeWalk;

        $r2 = r0.<kotlin.io.FileTreeWalk: java.io.File start>;

        $r3 = r0.<kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection direction>;

        $r4 = r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onLeave>;

        $r5 = r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function2 onFail>;

        $i0 = r0.<kotlin.io.FileTreeWalk: int maxDepth>;

        specialinvoke $r6.<kotlin.io.FileTreeWalk: void <init>(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int)>($r2, $r3, $r1, $r4, $r5, $i0);

        return $r6;
    }

    public final kotlin.io.FileTreeWalk onFail(kotlin.jvm.functions.Function2)
    {
        kotlin.io.FileWalkDirection $r3;
        kotlin.jvm.functions.Function1 $r4, $r5;
        kotlin.jvm.functions.Function2 $r1;
        java.io.File $r2;
        int $i0;
        kotlin.io.FileTreeWalk r0, $r6;

        r0 := @this: kotlin.io.FileTreeWalk;

        $r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "function");

        $r6 = new kotlin.io.FileTreeWalk;

        $r2 = r0.<kotlin.io.FileTreeWalk: java.io.File start>;

        $r3 = r0.<kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection direction>;

        $r4 = r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onEnter>;

        $r5 = r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onLeave>;

        $i0 = r0.<kotlin.io.FileTreeWalk: int maxDepth>;

        specialinvoke $r6.<kotlin.io.FileTreeWalk: void <init>(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int)>($r2, $r3, $r4, $r5, $r1, $i0);

        return $r6;
    }

    public final kotlin.io.FileTreeWalk onLeave(kotlin.jvm.functions.Function1)
    {
        kotlin.io.FileWalkDirection $r3;
        kotlin.jvm.functions.Function1 $r1, $r4;
        kotlin.jvm.functions.Function2 $r5;
        java.io.File $r2;
        int $i0;
        kotlin.io.FileTreeWalk r0, $r6;

        r0 := @this: kotlin.io.FileTreeWalk;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "function");

        $r6 = new kotlin.io.FileTreeWalk;

        $r2 = r0.<kotlin.io.FileTreeWalk: java.io.File start>;

        $r3 = r0.<kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection direction>;

        $r4 = r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onEnter>;

        $r5 = r0.<kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function2 onFail>;

        $i0 = r0.<kotlin.io.FileTreeWalk: int maxDepth>;

        specialinvoke $r6.<kotlin.io.FileTreeWalk: void <init>(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int)>($r2, $r3, $r4, $r1, $r5, $i0);

        return $r6;
    }
}
