public final class kotlinx.coroutines.selects.SelectOldKt extends java.lang.Object
{

    public static final void access$resumeUndispatched(kotlinx.coroutines.CancellableContinuation, java.lang.Object)
    {
        java.lang.Object $r1;
        kotlinx.coroutines.CancellableContinuation $r0;

        $r0 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlinx.coroutines.selects.SelectOldKt: void resumeUndispatched(kotlinx.coroutines.CancellableContinuation,java.lang.Object)>($r0, $r1);

        return;
    }

    public static final void access$resumeUndispatchedWithException(kotlinx.coroutines.CancellableContinuation, java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        kotlinx.coroutines.CancellableContinuation $r0;

        $r0 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        $r1 := @parameter1: java.lang.Throwable;

        staticinvoke <kotlinx.coroutines.selects.SelectOldKt: void resumeUndispatchedWithException(kotlinx.coroutines.CancellableContinuation,java.lang.Throwable)>($r0, $r1);

        return;
    }

    private static final void resumeUndispatched(kotlinx.coroutines.CancellableContinuation, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r7;
        kotlinx.coroutines.CoroutineDispatcher$Key $r3;
        kotlin.Result$Companion $r8;
        kotlin.coroutines.CoroutineContext$Element $r5;
        kotlinx.coroutines.CoroutineDispatcher r6;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.CancellableContinuation $r0;
        kotlin.coroutines.CoroutineContext$Key $r4;
        java.lang.Object $r1;

        $r0 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        $r1 := @parameter1: java.lang.Object;

        $r2 = interfaceinvoke $r0.<kotlinx.coroutines.CancellableContinuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r3 = <kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key>;

        $r4 = (kotlin.coroutines.CoroutineContext$Key) $r3;

        $r5 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r4);

        r6 = (kotlinx.coroutines.CoroutineDispatcher) $r5;

        if r6 == null goto label1;

        interfaceinvoke $r0.<kotlinx.coroutines.CancellableContinuation: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)>(r6, $r1);

        return;

     label1:
        $r7 = (kotlin.coroutines.Continuation) $r0;

        $r8 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r1 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r1);

        interfaceinvoke $r7.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r1);

        return;
    }

    private static final void resumeUndispatchedWithException(kotlinx.coroutines.CancellableContinuation, java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        kotlin.coroutines.Continuation $r7;
        kotlinx.coroutines.CoroutineDispatcher$Key $r3;
        kotlin.Result$Companion $r8;
        kotlin.coroutines.CoroutineContext$Element $r5;
        kotlinx.coroutines.CoroutineDispatcher r6;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.CancellableContinuation $r0;
        kotlin.coroutines.CoroutineContext$Key $r4;
        java.lang.Object $r9;

        $r0 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = interfaceinvoke $r0.<kotlinx.coroutines.CancellableContinuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r3 = <kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key>;

        $r4 = (kotlin.coroutines.CoroutineContext$Key) $r3;

        $r5 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r4);

        r6 = (kotlinx.coroutines.CoroutineDispatcher) $r5;

        if r6 == null goto label1;

        interfaceinvoke $r0.<kotlinx.coroutines.CancellableContinuation: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)>(r6, $r1);

        return;

     label1:
        $r7 = (kotlin.coroutines.Continuation) $r0;

        $r8 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r9 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r1);

        $r9 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r9);

        interfaceinvoke $r7.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r9);

        return;
    }

    public static final java.lang.Object selectOld(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.selects.SelectBuilderImpl r2;
        java.lang.Throwable r3;
        kotlin.coroutines.Continuation $r1;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object $r4, $r5;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        r2 = new kotlinx.coroutines.selects.SelectBuilderImpl;

        specialinvoke r2.<kotlinx.coroutines.selects.SelectBuilderImpl: void <init>(kotlin.coroutines.Continuation)>($r1);

     label1:
        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

     label2:
        goto label4;

     label3:
        r3 := @caughtexception;

        virtualinvoke r2.<kotlinx.coroutines.selects.SelectBuilderImpl: void handleBuilderException(java.lang.Throwable)>(r3);

     label4:
        $r4 = virtualinvoke r2.<kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object getResult()>();

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label5;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label5:
        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static final java.lang.Object selectOld$$forInline(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.selects.SelectBuilderImpl r2;
        java.lang.Throwable r3;
        kotlin.coroutines.Continuation $r1;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object $r4, $r5;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        r2 = new kotlinx.coroutines.selects.SelectBuilderImpl;

        specialinvoke r2.<kotlinx.coroutines.selects.SelectBuilderImpl: void <init>(kotlin.coroutines.Continuation)>($r1);

     label1:
        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

     label2:
        goto label4;

     label3:
        r3 := @caughtexception;

        virtualinvoke r2.<kotlinx.coroutines.selects.SelectBuilderImpl: void handleBuilderException(java.lang.Throwable)>(r3);

     label4:
        $r4 = virtualinvoke r2.<kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object getResult()>();

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label5;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label5:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static final java.lang.Object selectUnbiasedOld(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        java.lang.Throwable r3;
        kotlin.coroutines.Continuation $r1;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object $r4, $r5;
        kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl r2;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        r2 = new kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl;

        specialinvoke r2.<kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void <init>(kotlin.coroutines.Continuation)>($r1);

     label1:
        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

     label2:
        goto label4;

     label3:
        r3 := @caughtexception;

        virtualinvoke r2.<kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void handleBuilderException(java.lang.Throwable)>(r3);

     label4:
        $r4 = virtualinvoke r2.<kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: java.lang.Object initSelectResult()>();

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label5;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label5:
        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static final java.lang.Object selectUnbiasedOld$$forInline(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        java.lang.Throwable r3;
        kotlin.coroutines.Continuation $r1;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object $r4, $r5;
        kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl r2;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        r2 = new kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl;

        specialinvoke r2.<kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void <init>(kotlin.coroutines.Continuation)>($r1);

     label1:
        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

     label2:
        goto label4;

     label3:
        r3 := @caughtexception;

        virtualinvoke r2.<kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void handleBuilderException(java.lang.Throwable)>(r3);

     label4:
        $r4 = virtualinvoke r2.<kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: java.lang.Object initSelectResult()>();

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label5;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label5:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
