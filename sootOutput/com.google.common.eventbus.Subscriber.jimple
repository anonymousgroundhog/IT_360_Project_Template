class com.google.common.eventbus.Subscriber extends java.lang.Object
{
    private com.google.common.eventbus.EventBus bus;
    private final java.util.concurrent.Executor executor;
    private final java.lang.reflect.Method method;
    final java.lang.Object target;

    private void <init>(com.google.common.eventbus.EventBus, java.lang.Object, java.lang.reflect.Method)
    {
        com.google.common.eventbus.EventBus $r1;
        java.util.concurrent.Executor $r4;
        com.google.common.eventbus.Subscriber r0;
        java.lang.Object $r2;
        java.lang.reflect.Method $r3;

        r0 := @this: com.google.common.eventbus.Subscriber;

        $r1 := @parameter0: com.google.common.eventbus.EventBus;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.reflect.Method;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.eventbus.Subscriber: com.google.common.eventbus.EventBus bus> = $r1;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        r0.<com.google.common.eventbus.Subscriber: java.lang.Object target> = $r2;

        r0.<com.google.common.eventbus.Subscriber: java.lang.reflect.Method method> = $r3;

        virtualinvoke $r3.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r4 = virtualinvoke $r1.<com.google.common.eventbus.EventBus: java.util.concurrent.Executor executor()>();

        r0.<com.google.common.eventbus.Subscriber: java.util.concurrent.Executor executor> = $r4;

        return;
    }

    void <init>(com.google.common.eventbus.EventBus, java.lang.Object, java.lang.reflect.Method, com.google.common.eventbus.Subscriber$1)
    {
        com.google.common.eventbus.EventBus $r1;
        com.google.common.eventbus.Subscriber r0;
        java.lang.Object $r2;
        java.lang.reflect.Method $r3;
        com.google.common.eventbus.Subscriber$1 $r4;

        r0 := @this: com.google.common.eventbus.Subscriber;

        $r1 := @parameter0: com.google.common.eventbus.EventBus;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.reflect.Method;

        $r4 := @parameter3: com.google.common.eventbus.Subscriber$1;

        specialinvoke r0.<com.google.common.eventbus.Subscriber: void <init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method)>($r1, $r2, $r3);

        return;
    }

    private com.google.common.eventbus.SubscriberExceptionContext context(java.lang.Object)
    {
        com.google.common.eventbus.EventBus $r3;
        com.google.common.eventbus.SubscriberExceptionContext $r2;
        com.google.common.eventbus.Subscriber r0;
        java.lang.Object $r1, $r4;
        java.lang.reflect.Method $r5;

        r0 := @this: com.google.common.eventbus.Subscriber;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new com.google.common.eventbus.SubscriberExceptionContext;

        $r3 = r0.<com.google.common.eventbus.Subscriber: com.google.common.eventbus.EventBus bus>;

        $r4 = r0.<com.google.common.eventbus.Subscriber: java.lang.Object target>;

        $r5 = r0.<com.google.common.eventbus.Subscriber: java.lang.reflect.Method method>;

        specialinvoke $r2.<com.google.common.eventbus.SubscriberExceptionContext: void <init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.Object,java.lang.reflect.Method)>($r3, $r1, $r4, $r5);

        return $r2;
    }

    static com.google.common.eventbus.Subscriber create(com.google.common.eventbus.EventBus, java.lang.Object, java.lang.reflect.Method)
    {
        com.google.common.eventbus.EventBus $r0;
        com.google.common.eventbus.Subscriber $r3;
        java.lang.Object $r1;
        com.google.common.eventbus.Subscriber$SynchronizedSubscriber $r4;
        java.lang.reflect.Method $r2;
        boolean $z0;

        $r0 := @parameter0: com.google.common.eventbus.EventBus;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.reflect.Method;

        $z0 = staticinvoke <com.google.common.eventbus.Subscriber: boolean isDeclaredThreadSafe(java.lang.reflect.Method)>($r2);

        if $z0 == 0 goto label1;

        $r3 = new com.google.common.eventbus.Subscriber;

        specialinvoke $r3.<com.google.common.eventbus.Subscriber: void <init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method)>($r0, $r1, $r2);

        return $r3;

     label1:
        $r4 = new com.google.common.eventbus.Subscriber$SynchronizedSubscriber;

        specialinvoke $r4.<com.google.common.eventbus.Subscriber$SynchronizedSubscriber: void <init>(com.google.common.eventbus.EventBus,java.lang.Object,java.lang.reflect.Method,com.google.common.eventbus.Subscriber$1)>($r0, $r1, $r2, null);

        return $r4;
    }

    private static boolean isDeclaredThreadSafe(java.lang.reflect.Method)
    {
        java.lang.'annotation'.Annotation $r1;
        java.lang.reflect.Method $r0;

        $r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/google/common/eventbus/AllowConcurrentEvents;");

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    final void dispatchEvent(java.lang.Object)
    {
        java.util.concurrent.Executor $r2;
        com.google.common.eventbus.Subscriber$$ExternalSyntheticLambda0 $r3;
        com.google.common.eventbus.Subscriber r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.eventbus.Subscriber;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.eventbus.Subscriber: java.util.concurrent.Executor executor>;

        $r3 = new com.google.common.eventbus.Subscriber$$ExternalSyntheticLambda0;

        specialinvoke $r3.<com.google.common.eventbus.Subscriber$$ExternalSyntheticLambda0: void <init>(com.google.common.eventbus.Subscriber,java.lang.Object)>(r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        com.google.common.eventbus.Subscriber r0, r2;
        java.lang.Object $r1, $r3;
        java.lang.reflect.Method $r4, $r5;
        boolean $z0;

        r0 := @this: com.google.common.eventbus.Subscriber;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.common.eventbus.Subscriber;

        if $z0 == 0 goto label1;

        r2 = (com.google.common.eventbus.Subscriber) $r1;

        $r1 = r0.<com.google.common.eventbus.Subscriber: java.lang.Object target>;

        $r3 = r2.<com.google.common.eventbus.Subscriber: java.lang.Object target>;

        if $r1 != $r3 goto label1;

        $r4 = r0.<com.google.common.eventbus.Subscriber: java.lang.reflect.Method method>;

        $r5 = r2.<com.google.common.eventbus.Subscriber: java.lang.reflect.Method method>;

        $z0 = virtualinvoke $r4.<java.lang.reflect.Method: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final int hashCode()
    {
        int $i0, $i1;
        com.google.common.eventbus.Subscriber r0;
        java.lang.Object $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: com.google.common.eventbus.Subscriber;

        $r1 = r0.<com.google.common.eventbus.Subscriber: java.lang.reflect.Method method>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int hashCode()>();

        $i0 = $i0 + 31;

        $i0 = $i0 * 31;

        $r2 = r0.<com.google.common.eventbus.Subscriber: java.lang.Object target>;

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r2);

        $i0 = $i0 + $i1;

        return $i0;
    }

    void invokeSubscriberMethod(java.lang.Object) throws java.lang.reflect.InvocationTargetException
    {
        java.lang.Throwable $r7;
        java.lang.Object[] $r4;
        java.lang.Error $r8;
        int $i0;
        java.lang.String $r10, $r11;
        java.lang.reflect.Method r2;
        boolean $z0;
        java.lang.IllegalAccessException r9;
        com.google.common.eventbus.Subscriber r0;
        java.lang.IllegalArgumentException r13;
        java.lang.reflect.InvocationTargetException r6;
        java.lang.Object $r1, $r3, $r5;
        java.lang.StringBuilder $r12;

        r0 := @this: com.google.common.eventbus.Subscriber;

        $r1 := @parameter0: java.lang.Object;

        r2 = r0.<com.google.common.eventbus.Subscriber: java.lang.reflect.Method method>;

        $r3 = r0.<com.google.common.eventbus.Subscriber: java.lang.Object target>;

        $r4 = newarray (java.lang.Object)[1];

     label1:
        $r5 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

     label2:
        $r4[0] = $r5;

     label3:
        virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r4);

     label4:
        return;

     label5:
        r6 := @caughtexception;

        $r7 = virtualinvoke r6.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z0 = $r7 instanceof java.lang.Error;

        if $z0 == 0 goto label6;

        $r7 = virtualinvoke r6.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r8 = (java.lang.Error) $r7;

        throw $r8;

     label6:
        throw r6;

     label7:
        r9 := @caughtexception;

        $r8 = new java.lang.Error;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i0 = $i0 + 28;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method became inaccessible: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>($r10, r9);

        throw $r8;

     label8:
        r13 := @caughtexception;

        $r8 = new java.lang.Error;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i0 = $i0 + 33;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method rejected target/argument: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>($r10, r13);

        throw $r8;

        catch java.lang.IllegalArgumentException from label1 to label2 with label8;
        catch java.lang.IllegalArgumentException from label3 to label4 with label8;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.IllegalAccessException from label3 to label4 with label7;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label5;
    }

    void lambda$dispatchEvent$0$com-google-common-eventbus-Subscriber(java.lang.Object)
    {
        com.google.common.eventbus.EventBus $r3;
        java.lang.Throwable $r4;
        com.google.common.eventbus.SubscriberExceptionContext $r5;
        com.google.common.eventbus.Subscriber r0;
        java.lang.Object $r1;
        java.lang.reflect.InvocationTargetException r2;

        r0 := @this: com.google.common.eventbus.Subscriber;

        $r1 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<com.google.common.eventbus.Subscriber: void invokeSubscriberMethod(java.lang.Object)>($r1);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r3 = r0.<com.google.common.eventbus.Subscriber: com.google.common.eventbus.EventBus bus>;

        $r4 = virtualinvoke r2.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r5 = specialinvoke r0.<com.google.common.eventbus.Subscriber: com.google.common.eventbus.SubscriberExceptionContext context(java.lang.Object)>($r1);

        virtualinvoke $r3.<com.google.common.eventbus.EventBus: void handleSubscriberException(java.lang.Throwable,com.google.common.eventbus.SubscriberExceptionContext)>($r4, $r5);

        return;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }
}
