class com.google.common.util.concurrent.ClosingFuture$11 extends java.lang.Object implements java.lang.Runnable
{
    final java.io.Closeable val$closeable;

    void <init>(java.io.Closeable)
    {
        com.google.common.util.concurrent.ClosingFuture$11 r0;
        java.io.Closeable $r1;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$11;

        $r1 := @parameter0: java.io.Closeable;

        r0.<com.google.common.util.concurrent.ClosingFuture$11: java.io.Closeable val$closeable> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.google.common.util.concurrent.ClosingFuture$11 r0;
        java.io.Closeable r3;
        java.util.logging.Logger $r2;
        java.lang.Exception r4;
        java.util.logging.Level $r1;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$11;

     label1:
        r3 = r0.<com.google.common.util.concurrent.ClosingFuture$11: java.io.Closeable val$closeable>;

     label2:
        interfaceinvoke r3.<java.io.Closeable: void close()>();

     label3:
        return;

     label4:
        r4 := @caughtexception;

        goto label6;

     label5:
        r4 := @caughtexception;

     label6:
        $r2 = staticinvoke <com.google.common.util.concurrent.ClosingFuture: java.util.logging.Logger access$3200()>();

        $r1 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r2.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r1, "thrown by close()", r4);

        return;

        catch java.io.IOException from label2 to label3 with label5;
        catch java.lang.RuntimeException from label1 to label3 with label4;
    }
}
