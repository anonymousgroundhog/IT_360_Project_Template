abstract class com.google.common.collect.ArrayTable$ArrayMap extends com.google.common.collect.Maps$IteratorBasedAbstractMap
{
    private final com.google.common.collect.ImmutableMap keyIndex;

    private void <init>(com.google.common.collect.ImmutableMap)
    {
        com.google.common.collect.ArrayTable$ArrayMap r0;
        com.google.common.collect.ImmutableMap r1;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        r1 := @parameter0: com.google.common.collect.ImmutableMap;

        specialinvoke r0.<com.google.common.collect.Maps$IteratorBasedAbstractMap: void <init>()>();

        r0.<com.google.common.collect.ArrayTable$ArrayMap: com.google.common.collect.ImmutableMap keyIndex> = r1;

        return;
    }

    void <init>(com.google.common.collect.ImmutableMap, com.google.common.collect.ArrayTable$1)
    {
        com.google.common.collect.ArrayTable$ArrayMap r0;
        com.google.common.collect.ImmutableMap $r1;
        com.google.common.collect.ArrayTable$1 $r2;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $r1 := @parameter0: com.google.common.collect.ImmutableMap;

        $r2 := @parameter1: com.google.common.collect.ArrayTable$1;

        specialinvoke r0.<com.google.common.collect.ArrayTable$ArrayMap: void <init>(com.google.common.collect.ImmutableMap)>($r1);

        return;
    }

    public void clear()
    {
        com.google.common.collect.ArrayTable$ArrayMap r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.ImmutableMap $r2;
        com.google.common.collect.ArrayTable$ArrayMap r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.ArrayTable$ArrayMap: com.google.common.collect.ImmutableMap keyIndex>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    java.util.Iterator entryIterator()
    {
        int $i0;
        com.google.common.collect.ArrayTable$ArrayMap r0;
        com.google.common.collect.ArrayTable$ArrayMap$2 $r1;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $r1 = new com.google.common.collect.ArrayTable$ArrayMap$2;

        $i0 = virtualinvoke r0.<com.google.common.collect.ArrayTable$ArrayMap: int size()>();

        specialinvoke $r1.<com.google.common.collect.ArrayTable$ArrayMap$2: void <init>(com.google.common.collect.ArrayTable$ArrayMap,int)>(r0, $i0);

        return $r1;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.ImmutableMap r2;
        int $i0;
        com.google.common.collect.ArrayTable$ArrayMap r0;
        java.lang.Object $r1;
        java.lang.Integer r3;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $r1 := @parameter0: java.lang.Object;

        r2 = r0.<com.google.common.collect.ArrayTable$ArrayMap: com.google.common.collect.ImmutableMap keyIndex>;

        $r1 = virtualinvoke r2.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (java.lang.Integer) $r1;

        if r3 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r1 = virtualinvoke r0.<com.google.common.collect.ArrayTable$ArrayMap: java.lang.Object getValue(int)>($i0);

        return $r1;
    }

    java.util.Map$Entry getEntry(int)
    {
        com.google.common.collect.ArrayTable$ArrayMap$1 $r1;
        int $i0, $i1;
        com.google.common.collect.ArrayTable$ArrayMap r0;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.google.common.collect.ArrayTable$ArrayMap: int size()>();

        staticinvoke <com.google.common.base.Preconditions: int checkElementIndex(int,int)>($i0, $i1);

        $r1 = new com.google.common.collect.ArrayTable$ArrayMap$1;

        specialinvoke $r1.<com.google.common.collect.ArrayTable$ArrayMap$1: void <init>(com.google.common.collect.ArrayTable$ArrayMap,int)>(r0, $i0);

        return $r1;
    }

    java.lang.Object getKey(int)
    {
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.collect.ImmutableList $r3;
        com.google.common.collect.ImmutableMap $r1;
        int $i0;
        com.google.common.collect.ArrayTable$ArrayMap r0;
        java.lang.Object $r4;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.common.collect.ArrayTable$ArrayMap: com.google.common.collect.ImmutableMap keyIndex>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>();

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableList asList()>();

        $r4 = virtualinvoke $r3.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>($i0);

        return $r4;
    }

    abstract java.lang.String getKeyRole();

    abstract java.lang.Object getValue(int);

    public boolean isEmpty()
    {
        com.google.common.collect.ArrayTable$ArrayMap r0;
        com.google.common.collect.ImmutableMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $r1 = r0.<com.google.common.collect.ArrayTable$ArrayMap: com.google.common.collect.ImmutableMap keyIndex>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        com.google.common.collect.ArrayTable$ArrayMap r0;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableMap $r2;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $r2 = r0.<com.google.common.collect.ArrayTable$ArrayMap: com.google.common.collect.ImmutableMap keyIndex>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>();

        return $r1;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableSet $r9;
        com.google.common.collect.ImmutableMap r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.Integer r5;
        int $i0, $i1;
        com.google.common.collect.ArrayTable$ArrayMap r0;
        java.lang.Object r1, r2, $r4;
        java.lang.StringBuilder $r12;
        java.lang.String $r7, $r8, $r10, $r11;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = r0.<com.google.common.collect.ArrayTable$ArrayMap: com.google.common.collect.ImmutableMap keyIndex>;

        $r4 = virtualinvoke r3.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (java.lang.Integer) $r4;

        if r5 == null goto label1;

        $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        r1 = virtualinvoke r0.<com.google.common.collect.ArrayTable$ArrayMap: java.lang.Object setValue(int,java.lang.Object)>($i0, r2);

        return r1;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke r0.<com.google.common.collect.ArrayTable$ArrayMap: java.lang.String getKeyRole()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        r3 = r0.<com.google.common.collect.ArrayTable$ArrayMap: com.google.common.collect.ImmutableMap keyIndex>;

        $r9 = virtualinvoke r3.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>();

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i0 = $i0 + 9;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not in ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        com.google.common.collect.ArrayTable$ArrayMap r0;
        java.lang.UnsupportedOperationException $r2;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    abstract java.lang.Object setValue(int, java.lang.Object);

    public int size()
    {
        int $i0;
        com.google.common.collect.ArrayTable$ArrayMap r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.ArrayTable$ArrayMap;

        $r1 = r0.<com.google.common.collect.ArrayTable$ArrayMap: com.google.common.collect.ImmutableMap keyIndex>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: int size()>();

        return $i0;
    }
}
