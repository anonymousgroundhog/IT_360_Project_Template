public final class kotlin.collections.AbstractMap$Companion extends java.lang.Object
{

    private void <init>()
    {
        kotlin.collections.AbstractMap$Companion r0;

        r0 := @this: kotlin.collections.AbstractMap$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.collections.AbstractMap$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: kotlin.collections.AbstractMap$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<kotlin.collections.AbstractMap$Companion: void <init>()>();

        return;
    }

    public final boolean entryEquals$kotlin_stdlib(java.util.Map$Entry, java.lang.Object)
    {
        java.util.Map$Entry $r1, $r4;
        kotlin.collections.AbstractMap$Companion r0;
        java.lang.Object $r2, $r3, $r5;
        boolean $z0;

        r0 := @this: kotlin.collections.AbstractMap$Companion;

        $r1 := @parameter0: java.util.Map$Entry;

        $r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "e");

        $z0 = $r2 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.util.Map$Entry) $r2;

        $r5 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = (java.util.Map$Entry) $r2;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public final int entryHashCode$kotlin_stdlib(java.util.Map$Entry)
    {
        java.util.Map$Entry $r1;
        int $i0, $i1;
        kotlin.collections.AbstractMap$Companion r0;
        java.lang.Object $r2;

        r0 := @this: kotlin.collections.AbstractMap$Companion;

        $r1 := @parameter0: java.util.Map$Entry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "e");

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $i0 = 0;

        if $r2 == null goto label1;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r2 == null goto label3;

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label3:
        $i0 = $i1 ^ $i0;

        return $i0;
    }

    public final java.lang.String entryToString$kotlin_stdlib(java.util.Map$Entry)
    {
        java.util.Map$Entry $r1;
        kotlin.collections.AbstractMap$Companion r0;
        java.lang.StringBuilder $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: kotlin.collections.AbstractMap$Companion;

        $r1 := @parameter0: java.util.Map$Entry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "e");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r3 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
