public class com.google.common.collect.ImmutableMultiset$Builder extends com.google.common.collect.ImmutableCollection$Builder
{
    boolean buildInvoked;
    com.google.common.collect.ObjectCountHashMap contents;
    boolean isLinkedHash;

    public void <init>()
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        specialinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: void <init>(int)>(4);

        return;
    }

    void <init>(int)
    {
        int $i0;
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.ObjectCountHashMap $r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: void <init>()>();

        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean buildInvoked> = 0;

        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean isLinkedHash> = 0;

        $r1 = staticinvoke <com.google.common.collect.ObjectCountHashMap: com.google.common.collect.ObjectCountHashMap createWithExpectedSize(int)>($i0);

        r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents> = $r1;

        return;
    }

    void <init>(boolean)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: void <init>()>();

        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean buildInvoked> = 0;

        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean isLinkedHash> = 0;

        r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents> = null;

        return;
    }

    static com.google.common.collect.ObjectCountHashMap tryGetMap(java.lang.Iterable)
    {
        com.google.common.collect.RegularImmutableMultiset $r1;
        com.google.common.collect.ObjectCountHashMap r3;
        com.google.common.collect.AbstractMapBasedMultiset $r2;
        java.lang.Iterable r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof com.google.common.collect.RegularImmutableMultiset;

        if $z0 == 0 goto label1;

        $r1 = (com.google.common.collect.RegularImmutableMultiset) r0;

        r3 = $r1.<com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.ObjectCountHashMap contents>;

        return r3;

     label1:
        $z0 = r0 instanceof com.google.common.collect.AbstractMapBasedMultiset;

        if $z0 == 0 goto label2;

        $r2 = (com.google.common.collect.AbstractMapBasedMultiset) r0;

        r3 = $r2.<com.google.common.collect.AbstractMapBasedMultiset: com.google.common.collect.ObjectCountHashMap backingMap>;

        return r3;

     label2:
        return null;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ImmutableMultiset$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        $r1 := @parameter0: java.lang.Object;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object)>($r1);

        return r0;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[])
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        java.lang.Object[] $r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        $r1 := @parameter0: java.lang.Object[];

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[])>($r1);

        return r0;
    }

    public com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.common.collect.ImmutableMultiset$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Object;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int)>(r1, 1);

        return r0;
    }

    public transient com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[])
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        java.lang.Object[] r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[])>(r1);

        return r0;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        $r1 := @parameter0: java.lang.Iterable;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable)>($r1);

        return r0;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        java.util.Iterator $r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        $r1 := @parameter0: java.util.Iterator;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator)>($r1);

        return r0;
    }

    public com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable)
    {
        java.util.Iterator $r8;
        com.google.common.collect.Multiset $r3;
        java.util.Set $r7;
        com.google.common.collect.Multiset$Entry r9;
        java.lang.Iterable r1;
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.ObjectCountHashMap r2, r4, $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        boolean z0;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Iterable;

        r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        z0 = r1 instanceof com.google.common.collect.Multiset;

        if z0 == 0 goto label6;

        $r3 = staticinvoke <com.google.common.collect.Multisets: com.google.common.collect.Multiset cast(java.lang.Iterable)>(r1);

        r2 = staticinvoke <com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap tryGetMap(java.lang.Iterable)>($r3);

        if r2 == null goto label3;

        r4 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        $r5 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        $i0 = virtualinvoke $r5.<com.google.common.collect.ObjectCountHashMap: int size()>();

        $i1 = virtualinvoke r2.<com.google.common.collect.ObjectCountHashMap: int size()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        virtualinvoke r4.<com.google.common.collect.ObjectCountHashMap: void ensureCapacity(int)>($i0);

        $i0 = virtualinvoke r2.<com.google.common.collect.ObjectCountHashMap: int firstIndex()>();

     label1:
        if $i0 < 0 goto label2;

        $r6 = virtualinvoke r2.<com.google.common.collect.ObjectCountHashMap: java.lang.Object getKey(int)>($i0);

        $i1 = virtualinvoke r2.<com.google.common.collect.ObjectCountHashMap: int getValue(int)>($i0);

        virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int)>($r6, $i1);

        $i0 = virtualinvoke r2.<com.google.common.collect.ObjectCountHashMap: int nextIndex(int)>($i0);

        goto label1;

     label2:
        goto label5;

     label3:
        $r7 = interfaceinvoke $r3.<com.google.common.collect.Multiset: java.util.Set entrySet()>();

        r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        r4 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        $i0 = virtualinvoke r4.<com.google.common.collect.ObjectCountHashMap: int size()>();

        $i1 = interfaceinvoke $r7.<java.util.Set: int size()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        virtualinvoke r2.<com.google.common.collect.ObjectCountHashMap: void ensureCapacity(int)>($i0);

        $r7 = interfaceinvoke $r3.<com.google.common.collect.Multiset: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label5;

        $r6 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.google.common.collect.Multiset$Entry) $r6;

        $r6 = interfaceinvoke r9.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke r9.<com.google.common.collect.Multiset$Entry: int getCount()>();

        virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int)>($r6, $i0);

        goto label4;

     label5:
        return r0;

     label6:
        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)>(r1);

        return r0;
    }

    public com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        java.util.Iterator r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator)>(r1);

        return r0;
    }

    public com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object, int)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.ObjectCountHashMap $r2, $r3;
        int $i0, $i1;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r2);

        if $i0 != 0 goto label1;

        return r0;

     label1:
        $z0 = r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean buildInvoked>;

        if $z0 == 0 goto label2;

        $r3 = new com.google.common.collect.ObjectCountHashMap;

        $r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        specialinvoke $r3.<com.google.common.collect.ObjectCountHashMap: void <init>(com.google.common.collect.ObjectCountHashMap)>($r2);

        r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents> = $r3;

        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean isLinkedHash> = 0;

     label2:
        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean buildInvoked> = 0;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        $r3 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        $i1 = virtualinvoke $r3.<com.google.common.collect.ObjectCountHashMap: int get(java.lang.Object)>(r1);

        $i0 = $i1 + $i0;

        virtualinvoke $r2.<com.google.common.collect.ObjectCountHashMap: int put(java.lang.Object,int)>(r1, $i0);

        return r0;
    }

    public volatile com.google.common.collect.ImmutableCollection build()
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.ImmutableMultiset $r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset build()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableMultiset build()
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.RegularImmutableMultiset $r4;
        com.google.common.collect.ObjectCountHashMap $r1, $r3;
        com.google.common.collect.ImmutableMultiset $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        $r1 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        $r1 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.ObjectCountHashMap: int size()>();

        if $i0 != 0 goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset of()>();

        return $r2;

     label1:
        $z0 = r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean isLinkedHash>;

        if $z0 == 0 goto label2;

        $r1 = new com.google.common.collect.ObjectCountHashMap;

        $r3 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        specialinvoke $r1.<com.google.common.collect.ObjectCountHashMap: void <init>(com.google.common.collect.ObjectCountHashMap)>($r3);

        r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents> = $r1;

        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean isLinkedHash> = 0;

     label2:
        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean buildInvoked> = 1;

        $r4 = new com.google.common.collect.RegularImmutableMultiset;

        $r1 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        specialinvoke $r4.<com.google.common.collect.RegularImmutableMultiset: void <init>(com.google.common.collect.ObjectCountHashMap)>($r1);

        return $r4;
    }

    public com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object, int)
    {
        com.google.common.collect.ObjectCountLinkedHashMap $r3;
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.ObjectCountHashMap $r2, $r4;
        int $i0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r2);

        if $i0 != 0 goto label1;

        $z0 = r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean isLinkedHash>;

        if $z0 != 0 goto label1;

        $r3 = new com.google.common.collect.ObjectCountLinkedHashMap;

        $r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        specialinvoke $r3.<com.google.common.collect.ObjectCountLinkedHashMap: void <init>(com.google.common.collect.ObjectCountHashMap)>($r2);

        r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents> = $r3;

        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean isLinkedHash> = 1;

        goto label2;

     label1:
        $z0 = r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean buildInvoked>;

        if $z0 == 0 goto label2;

        $r2 = new com.google.common.collect.ObjectCountHashMap;

        $r4 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        specialinvoke $r2.<com.google.common.collect.ObjectCountHashMap: void <init>(com.google.common.collect.ObjectCountHashMap)>($r4);

        r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents> = $r2;

        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean isLinkedHash> = 0;

     label2:
        r0.<com.google.common.collect.ImmutableMultiset$Builder: boolean buildInvoked> = 0;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        if $i0 != 0 goto label3;

        $r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        virtualinvoke $r2.<com.google.common.collect.ObjectCountHashMap: int remove(java.lang.Object)>(r1);

        return r0;

     label3:
        $r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ObjectCountHashMap contents>;

        r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        virtualinvoke $r2.<com.google.common.collect.ObjectCountHashMap: int put(java.lang.Object,int)>(r1, $i0);

        return r0;
    }
}
