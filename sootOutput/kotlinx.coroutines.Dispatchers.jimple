public final class kotlinx.coroutines.Dispatchers extends java.lang.Object
{
    private static final kotlinx.coroutines.CoroutineDispatcher Default;
    public static final kotlinx.coroutines.Dispatchers INSTANCE;
    private static final kotlinx.coroutines.CoroutineDispatcher IO;
    private static final kotlinx.coroutines.CoroutineDispatcher Unconfined;

    static void <clinit>()
    {
        kotlinx.coroutines.scheduling.DefaultIoScheduler $r4;
        kotlinx.coroutines.scheduling.DefaultScheduler $r1;
        kotlinx.coroutines.Unconfined $r3;
        kotlinx.coroutines.Dispatchers $r0;
        kotlinx.coroutines.CoroutineDispatcher $r2;

        $r0 = new kotlinx.coroutines.Dispatchers;

        specialinvoke $r0.<kotlinx.coroutines.Dispatchers: void <init>()>();

        <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE> = $r0;

        $r1 = <kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE>;

        $r2 = (kotlinx.coroutines.CoroutineDispatcher) $r1;

        <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Default> = $r2;

        $r3 = <kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE>;

        $r2 = (kotlinx.coroutines.CoroutineDispatcher) $r3;

        <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Unconfined> = $r2;

        $r4 = <kotlinx.coroutines.scheduling.DefaultIoScheduler: kotlinx.coroutines.scheduling.DefaultIoScheduler INSTANCE>;

        $r2 = (kotlinx.coroutines.CoroutineDispatcher) $r4;

        <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher IO> = $r2;

        return;
    }

    private void <init>()
    {
        kotlinx.coroutines.Dispatchers r0;

        r0 := @this: kotlinx.coroutines.Dispatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final kotlinx.coroutines.CoroutineDispatcher getDefault()
    {
        kotlinx.coroutines.CoroutineDispatcher r0;

        r0 = <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Default>;

        return r0;
    }

    public static void getDefault$annotations()
    {
        return;
    }

    public static final kotlinx.coroutines.CoroutineDispatcher getIO()
    {
        kotlinx.coroutines.CoroutineDispatcher r0;

        r0 = <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher IO>;

        return r0;
    }

    public static void getIO$annotations()
    {
        return;
    }

    public static final kotlinx.coroutines.MainCoroutineDispatcher getMain()
    {
        kotlinx.coroutines.MainCoroutineDispatcher r0;

        r0 = <kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher dispatcher>;

        return r0;
    }

    public static void getMain$annotations()
    {
        return;
    }

    public static final kotlinx.coroutines.CoroutineDispatcher getUnconfined()
    {
        kotlinx.coroutines.CoroutineDispatcher r0;

        r0 = <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Unconfined>;

        return r0;
    }

    public static void getUnconfined$annotations()
    {
        return;
    }

    public final void shutdown()
    {
        kotlinx.coroutines.Dispatchers r0;
        kotlinx.coroutines.DefaultExecutor $r1;
        kotlinx.coroutines.scheduling.DefaultScheduler $r2;

        r0 := @this: kotlinx.coroutines.Dispatchers;

        $r1 = <kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DefaultExecutor INSTANCE>;

        virtualinvoke $r1.<kotlinx.coroutines.DefaultExecutor: void shutdown()>();

        $r2 = <kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE>;

        virtualinvoke $r2.<kotlinx.coroutines.scheduling.DefaultScheduler: void shutdown$kotlinx_coroutines_core()>();

        return;
    }
}
