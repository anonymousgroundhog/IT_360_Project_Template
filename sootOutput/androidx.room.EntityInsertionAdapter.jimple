public abstract class androidx.room.EntityInsertionAdapter extends androidx.room.SharedSQLiteStatement
{

    public void <init>(androidx.room.RoomDatabase)
    {
        androidx.room.RoomDatabase $r1;
        androidx.room.EntityInsertionAdapter r0;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        $r1 := @parameter0: androidx.room.RoomDatabase;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>($r1);

        return;
    }

    protected abstract void bind(androidx.sqlite.db.SupportSQLiteStatement, java.lang.Object);

    public final void insert(java.lang.Iterable)
    {
        java.lang.Throwable $r5;
        java.util.Iterator $r3;
        androidx.room.EntityInsertionAdapter r0;
        java.lang.Object $r4;
        java.lang.Iterable r1;
        androidx.sqlite.db.SupportSQLiteStatement $r2;
        boolean $z0;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = virtualinvoke r0.<androidx.room.EntityInsertionAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        $r3 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label6;

     label4:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>($r2, $r4);

        interfaceinvoke $r2.<androidx.sqlite.db.SupportSQLiteStatement: long executeInsert()>();

     label5:
        goto label2;

     label6:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r2);

        return;

     label7:
        $r5 := @caughtexception;

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r2);

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public final void insert(java.lang.Object)
    {
        java.lang.Throwable $r2;
        androidx.room.EntityInsertionAdapter r0;
        java.lang.Object r1;
        androidx.sqlite.db.SupportSQLiteStatement $r3;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        r1 := @parameter0: java.lang.Object;

        $r3 = virtualinvoke r0.<androidx.room.EntityInsertionAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>($r3, r1);

        interfaceinvoke $r3.<androidx.sqlite.db.SupportSQLiteStatement: long executeInsert()>();

     label2:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r3);

        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r3);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final void insert(java.lang.Object[])
    {
        java.lang.Throwable $r4;
        java.lang.Object[] r1;
        androidx.room.EntityInsertionAdapter r0;
        int $i0, $i1;
        java.lang.Object r2;
        androidx.sqlite.db.SupportSQLiteStatement $r3;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        r1 := @parameter0: java.lang.Object[];

        $r3 = virtualinvoke r0.<androidx.room.EntityInsertionAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        $i0 = lengthof r1;

     label2:
        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label6;

     label4:
        r2 = r1[$i1];

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>($r3, r2);

        interfaceinvoke $r3.<androidx.sqlite.db.SupportSQLiteStatement: long executeInsert()>();

     label5:
        $i1 = $i1 + 1;

        goto label3;

     label6:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r3);

        return;

     label7:
        $r4 := @caughtexception;

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r3);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public final long insertAndReturnId(java.lang.Object)
    {
        java.lang.Throwable $r3;
        androidx.room.EntityInsertionAdapter r0;
        java.lang.Object r1;
        long $l0;
        androidx.sqlite.db.SupportSQLiteStatement $r2;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.room.EntityInsertionAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>($r2, r1);

        $l0 = interfaceinvoke $r2.<androidx.sqlite.db.SupportSQLiteStatement: long executeInsert()>();

     label2:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r2);

        return $l0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r2);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final long[] insertAndReturnIdsArray(java.util.Collection)
    {
        java.lang.Throwable r6;
        java.util.Iterator $r4;
        java.util.Collection r1;
        long $l1;
        long[] r3;
        androidx.room.EntityInsertionAdapter r0;
        int $i0;
        java.lang.Object $r5;
        androidx.sqlite.db.SupportSQLiteStatement $r2;
        boolean $z0;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        r1 := @parameter0: java.util.Collection;

        $r2 = virtualinvoke r0.<androidx.room.EntityInsertionAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        r3 = newarray (long)[$i0];

     label2:
        $i0 = 0;

     label3:
        $r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label5:
        if $z0 == 0 goto label8;

     label6:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>($r2, $r5);

        $l1 = interfaceinvoke $r2.<androidx.sqlite.db.SupportSQLiteStatement: long executeInsert()>();

        r3[$i0] = $l1;

     label7:
        $i0 = $i0 + 1;

        goto label4;

     label8:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r2);

        return r3;

     label9:
        r6 := @caughtexception;

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r2);

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public final long[] insertAndReturnIdsArray(java.lang.Object[])
    {
        java.lang.Throwable r5;
        java.lang.Object[] r1;
        long $l3;
        long[] r4;
        androidx.room.EntityInsertionAdapter r0;
        int $i0, i1, $i2;
        java.lang.Object r2;
        androidx.sqlite.db.SupportSQLiteStatement $r3;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        r1 := @parameter0: java.lang.Object[];

        $r3 = virtualinvoke r0.<androidx.room.EntityInsertionAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        $i0 = lengthof r1;

        r4 = newarray (long)[$i0];

     label2:
        i1 = 0;

     label3:
        $i0 = lengthof r1;

     label4:
        $i2 = 0;

     label5:
        if $i2 >= $i0 goto label8;

     label6:
        r2 = r1[$i2];

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>($r3, r2);

        $l3 = interfaceinvoke $r3.<androidx.sqlite.db.SupportSQLiteStatement: long executeInsert()>();

        r4[i1] = $l3;

     label7:
        i1 = i1 + 1;

        $i2 = $i2 + 1;

        goto label5;

     label8:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r3);

        return r4;

     label9:
        r5 := @caughtexception;

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r3);

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public final java.lang.Long[] insertAndReturnIdsArrayBox(java.util.Collection)
    {
        java.lang.Throwable r7;
        java.lang.Long[] r3;
        java.util.Iterator $r4;
        java.util.Collection r1;
        long $l1;
        java.lang.Long $r6;
        androidx.room.EntityInsertionAdapter r0;
        int $i0;
        java.lang.Object $r5;
        androidx.sqlite.db.SupportSQLiteStatement $r2;
        boolean $z0;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        r1 := @parameter0: java.util.Collection;

        $r2 = virtualinvoke r0.<androidx.room.EntityInsertionAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        r3 = newarray (java.lang.Long)[$i0];

     label2:
        $i0 = 0;

     label3:
        $r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label5:
        if $z0 == 0 goto label8;

     label6:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>($r2, $r5);

        $l1 = interfaceinvoke $r2.<androidx.sqlite.db.SupportSQLiteStatement: long executeInsert()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        r3[$i0] = $r6;

     label7:
        $i0 = $i0 + 1;

        goto label4;

     label8:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r2);

        return r3;

     label9:
        r7 := @caughtexception;

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r2);

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public final java.lang.Long[] insertAndReturnIdsArrayBox(java.lang.Object[])
    {
        java.lang.Throwable r6;
        java.lang.Long[] r4;
        java.lang.Object[] r1;
        long $l3;
        java.lang.Long $r5;
        androidx.room.EntityInsertionAdapter r0;
        int $i0, i1, $i2;
        java.lang.Object r2;
        androidx.sqlite.db.SupportSQLiteStatement $r3;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        r1 := @parameter0: java.lang.Object[];

        $r3 = virtualinvoke r0.<androidx.room.EntityInsertionAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        $i0 = lengthof r1;

        r4 = newarray (java.lang.Long)[$i0];

     label2:
        i1 = 0;

     label3:
        $i0 = lengthof r1;

     label4:
        $i2 = 0;

     label5:
        if $i2 >= $i0 goto label8;

     label6:
        r2 = r1[$i2];

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>($r3, r2);

        $l3 = interfaceinvoke $r3.<androidx.sqlite.db.SupportSQLiteStatement: long executeInsert()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        r4[i1] = $r5;

     label7:
        i1 = i1 + 1;

        $i2 = $i2 + 1;

        goto label5;

     label8:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r3);

        return r4;

     label9:
        r6 := @caughtexception;

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r3);

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public final java.util.List insertAndReturnIdsList(java.util.Collection)
    {
        java.lang.Throwable r7;
        java.util.Iterator $r4;
        java.util.Collection r1;
        long $l1;
        java.util.ArrayList r3;
        java.lang.Long $r6;
        androidx.room.EntityInsertionAdapter r0;
        int $i0;
        java.lang.Object $r5;
        androidx.sqlite.db.SupportSQLiteStatement $r2;
        boolean $z0;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        r1 := @parameter0: java.util.Collection;

        $r2 = virtualinvoke r0.<androidx.room.EntityInsertionAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        r3 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

     label2:
        $i0 = 0;

     label3:
        $r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label5:
        if $z0 == 0 goto label8;

     label6:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>($r2, $r5);

        $l1 = interfaceinvoke $r2.<androidx.sqlite.db.SupportSQLiteStatement: long executeInsert()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke r3.<java.util.List: void add(int,java.lang.Object)>($i0, $r6);

     label7:
        $i0 = $i0 + 1;

        goto label4;

     label8:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r2);

        return r3;

     label9:
        r7 := @caughtexception;

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r2);

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public final java.util.List insertAndReturnIdsList(java.lang.Object[])
    {
        java.lang.Throwable r6;
        java.lang.Object[] r1;
        long $l3;
        java.util.ArrayList r4;
        java.lang.Long $r5;
        androidx.room.EntityInsertionAdapter r0;
        int $i0, i1, $i2;
        java.lang.Object r2;
        androidx.sqlite.db.SupportSQLiteStatement $r3;

        r0 := @this: androidx.room.EntityInsertionAdapter;

        r1 := @parameter0: java.lang.Object[];

        $r3 = virtualinvoke r0.<androidx.room.EntityInsertionAdapter: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

     label1:
        r4 = new java.util.ArrayList;

        $i0 = lengthof r1;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>($i0);

     label2:
        i1 = 0;

     label3:
        $i0 = lengthof r1;

     label4:
        $i2 = 0;

     label5:
        if $i2 >= $i0 goto label8;

     label6:
        r2 = r1[$i2];

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>($r3, r2);

        $l3 = interfaceinvoke $r3.<androidx.sqlite.db.SupportSQLiteStatement: long executeInsert()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke r4.<java.util.List: void add(int,java.lang.Object)>(i1, $r5);

     label7:
        i1 = i1 + 1;

        $i2 = $i2 + 1;

        goto label5;

     label8:
        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r3);

        return r4;

     label9:
        r6 := @caughtexception;

        virtualinvoke r0.<androidx.room.EntityInsertionAdapter: void release(androidx.sqlite.db.SupportSQLiteStatement)>($r3);

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }
}
