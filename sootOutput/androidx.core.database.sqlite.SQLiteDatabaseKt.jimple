public final class androidx.core.database.sqlite.SQLiteDatabaseKt extends java.lang.Object
{

    public static final java.lang.Object transaction(android.database.sqlite.SQLiteDatabase, boolean, kotlin.jvm.functions.Function1)
    {
        java.lang.Throwable r3;
        android.database.sqlite.SQLiteDatabase $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "body");

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

        goto label2;

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>();

     label2:
        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label3:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return $r2;

     label4:
        r3 := @caughtexception;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Throwable r3;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        $i0 := @parameter3: int;

        $r2 := @parameter4: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $z0 = 1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "body");

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

        goto label3;

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>();

     label3:
        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return $r2;

     label5:
        r3 := @caughtexception;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r3;

        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
