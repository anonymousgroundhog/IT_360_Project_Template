public final class kotlin.io.FilePathComponents extends java.lang.Object
{
    private final java.io.File root;
    private final java.util.List segments;

    public void <init>(java.io.File, java.util.List)
    {
        java.util.List $r2;
        kotlin.io.FilePathComponents r0;
        java.io.File $r1;

        r0 := @this: kotlin.io.FilePathComponents;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "root");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "segments");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.io.FilePathComponents: java.io.File root> = $r1;

        r0.<kotlin.io.FilePathComponents: java.util.List segments> = $r2;

        return;
    }

    public static kotlin.io.FilePathComponents copy$default(kotlin.io.FilePathComponents, java.io.File, java.util.List, int, java.lang.Object)
    {
        java.util.List $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        kotlin.io.FilePathComponents $r0;
        java.io.File $r1;

        $r0 := @parameter0: kotlin.io.FilePathComponents;

        $r1 := @parameter1: java.io.File;

        $r2 := @parameter2: java.util.List;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.Object;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r1 = $r0.<kotlin.io.FilePathComponents: java.io.File root>;

     label1:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $r2 = $r0.<kotlin.io.FilePathComponents: java.util.List segments>;

     label2:
        $r0 = virtualinvoke $r0.<kotlin.io.FilePathComponents: kotlin.io.FilePathComponents copy(java.io.File,java.util.List)>($r1, $r2);

        return $r0;
    }

    public final java.io.File component1()
    {
        kotlin.io.FilePathComponents r0;
        java.io.File r1;

        r0 := @this: kotlin.io.FilePathComponents;

        r1 = r0.<kotlin.io.FilePathComponents: java.io.File root>;

        return r1;
    }

    public final java.util.List component2()
    {
        java.util.List r1;
        kotlin.io.FilePathComponents r0;

        r0 := @this: kotlin.io.FilePathComponents;

        r1 = r0.<kotlin.io.FilePathComponents: java.util.List segments>;

        return r1;
    }

    public final kotlin.io.FilePathComponents copy(java.io.File, java.util.List)
    {
        java.util.List $r2;
        kotlin.io.FilePathComponents r0;
        java.io.File $r1;

        r0 := @this: kotlin.io.FilePathComponents;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "root");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "segments");

        r0 = new kotlin.io.FilePathComponents;

        specialinvoke r0.<kotlin.io.FilePathComponents: void <init>(java.io.File,java.util.List)>($r1, $r2);

        return r0;
    }

    public boolean equals(java.lang.Object)
    {
        java.io.File $r2, $r4;
        java.util.List $r5, $r6;
        java.lang.Object $r1;
        kotlin.io.FilePathComponents r0, $r3;
        boolean $z0;

        r0 := @this: kotlin.io.FilePathComponents;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof kotlin.io.FilePathComponents;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = (kotlin.io.FilePathComponents) $r1;

        $r4 = r0.<kotlin.io.FilePathComponents: java.io.File root>;

        $r2 = $r3.<kotlin.io.FilePathComponents: java.io.File root>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r2);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r5 = r0.<kotlin.io.FilePathComponents: java.util.List segments>;

        $r6 = $r3.<kotlin.io.FilePathComponents: java.util.List segments>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public final java.io.File getRoot()
    {
        kotlin.io.FilePathComponents r0;
        java.io.File r1;

        r0 := @this: kotlin.io.FilePathComponents;

        r1 = r0.<kotlin.io.FilePathComponents: java.io.File root>;

        return r1;
    }

    public final java.lang.String getRootName()
    {
        java.lang.String $r1;
        kotlin.io.FilePathComponents r0;
        java.io.File $r2;

        r0 := @this: kotlin.io.FilePathComponents;

        $r2 = r0.<kotlin.io.FilePathComponents: java.io.File root>;

        $r1 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "root.path");

        return $r1;
    }

    public final java.util.List getSegments()
    {
        java.util.List r1;
        kotlin.io.FilePathComponents r0;

        r0 := @this: kotlin.io.FilePathComponents;

        r1 = r0.<kotlin.io.FilePathComponents: java.util.List segments>;

        return r1;
    }

    public final int getSize()
    {
        int $i0;
        java.util.List $r1;
        kotlin.io.FilePathComponents r0;

        r0 := @this: kotlin.io.FilePathComponents;

        $r1 = r0.<kotlin.io.FilePathComponents: java.util.List segments>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public int hashCode()
    {
        java.util.List $r2;
        int $i0, $i1;
        kotlin.io.FilePathComponents r0;
        java.io.File $r1;

        r0 := @this: kotlin.io.FilePathComponents;

        $r1 = r0.<kotlin.io.FilePathComponents: java.io.File root>;

        $i0 = virtualinvoke $r1.<java.io.File: int hashCode()>();

        $i0 = $i0 * 31;

        $r2 = r0.<kotlin.io.FilePathComponents: java.util.List segments>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    public final boolean isRooted()
    {
        java.lang.CharSequence $r3;
        int $i0;
        java.lang.String $r2;
        kotlin.io.FilePathComponents r0;
        java.io.File $r1;

        r0 := @this: kotlin.io.FilePathComponents;

        $r1 = r0.<kotlin.io.FilePathComponents: java.io.File root>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "root.path");

        $r3 = (java.lang.CharSequence) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.io.File subPath(int, int)
    {
        java.lang.CharSequence $r5;
        java.lang.IllegalArgumentException $r6;
        java.io.File $r1;
        java.lang.Iterable $r3;
        java.util.List $r2;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        kotlin.io.FilePathComponents r0;

        r0 := @this: kotlin.io.FilePathComponents;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < 0 goto label1;

        if $i0 > $i1 goto label1;

        $i2 = virtualinvoke r0.<kotlin.io.FilePathComponents: int getSize()>();

        if $i1 > $i2 goto label1;

        $r1 = new java.io.File;

        $r2 = r0.<kotlin.io.FilePathComponents: java.util.List segments>;

        $r2 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

        $r3 = (java.lang.Iterable) $r2;

        $r4 = <java.io.File: java.lang.String separator>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "separator");

        $r5 = (java.lang.CharSequence) $r4;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r3, $r5, null, null, 0, null, null, 62, null);

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r4);

        return $r1;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;
    }

    public java.lang.String toString()
    {
        java.util.List $r3;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        kotlin.io.FilePathComponents r0;
        java.io.File $r2;

        r0 := @this: kotlin.io.FilePathComponents;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FilePathComponents(root=");

        $r2 = r0.<kotlin.io.FilePathComponents: java.io.File root>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", segments=");

        $r3 = r0.<kotlin.io.FilePathComponents: java.util.List segments>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
