public class kotlin.jvm.internal.SpreadBuilder extends java.lang.Object
{
    private final java.util.ArrayList list;

    public void <init>(int)
    {
        int $i0;
        kotlin.jvm.internal.SpreadBuilder r0;
        java.util.ArrayList $r1;

        r0 := @this: kotlin.jvm.internal.SpreadBuilder;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list> = $r1;

        return;
    }

    public void add(java.lang.Object)
    {
        java.lang.Object $r1;
        kotlin.jvm.internal.SpreadBuilder r0;
        java.util.ArrayList $r2;

        r0 := @this: kotlin.jvm.internal.SpreadBuilder;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addSpread(java.lang.Object)
    {
        java.lang.UnsupportedOperationException r8;
        java.lang.Object[] r2;
        java.util.Iterator $r7;
        java.util.Collection r5;
        java.lang.Iterable r6;
        java.util.ArrayList r3, $r4;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.StringBuilder r9;
        java.lang.Class $r10;
        java.lang.String $r11;
        kotlin.jvm.internal.SpreadBuilder r0;
        boolean z0;

        r0 := @this: kotlin.jvm.internal.SpreadBuilder;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        return;

     label01:
        z0 = $r1 instanceof java.lang.Object[];

        if z0 == 0 goto label03;

        r2 = (java.lang.Object[]) $r1;

        $i0 = lengthof r2;

        if $i0 <= 0 goto label02;

        r3 = r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $r4 = r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i0 = lengthof r2;

        $i0 = $i1 + $i0;

        virtualinvoke r3.<java.util.ArrayList: void ensureCapacity(int)>($i0);

        r3 = r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r3, r2);

     label02:
        return;

     label03:
        z0 = $r1 instanceof java.util.Collection;

        if z0 == 0 goto label04;

        r3 = r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        r5 = (java.util.Collection) $r1;

        virtualinvoke r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r5);

        return;

     label04:
        z0 = $r1 instanceof java.lang.Iterable;

        if z0 == 0 goto label07;

        r6 = (java.lang.Iterable) $r1;

        $r7 = interfaceinvoke r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label06;

        $r1 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r3 = r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label05;

     label06:
        return;

     label07:
        z0 = $r1 instanceof java.util.Iterator;

        if z0 == 0 goto label10;

        $r7 = (java.util.Iterator) $r1;

     label08:
        z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label09;

        r3 = r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $r1 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label08;

     label09:
        return;

     label10:
        r8 = new java.lang.UnsupportedOperationException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Don\'t know how to spread ");

        $r10 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r11 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r11);

        throw r8;
    }

    public int size()
    {
        int $i0;
        kotlin.jvm.internal.SpreadBuilder r0;
        java.util.ArrayList $r1;

        r0 := @this: kotlin.jvm.internal.SpreadBuilder;

        $r1 = r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] $r1;
        kotlin.jvm.internal.SpreadBuilder r0;
        java.util.ArrayList $r2;

        r0 := @this: kotlin.jvm.internal.SpreadBuilder;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r1;
    }
}
