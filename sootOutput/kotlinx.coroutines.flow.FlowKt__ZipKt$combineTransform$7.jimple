public final class kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlinx.coroutines.flow.Flow[] $flowArray;
    final kotlin.jvm.functions.Function3 $transform;
    private java.lang.Object L$0;
    int label;

    public void <init>(kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.flow.Flow[] $r1;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7 r0;
        kotlin.jvm.functions.Function3 $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow[];

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlinx.coroutines.flow.Flow[] $flowArray> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.jvm.functions.Function3 $transform> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.Flow[] $r3;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7 r0, $r5;
        kotlin.jvm.functions.Function3 $r4;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r5 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlinx.coroutines.flow.Flow[] $flowArray>;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.jvm.functions.Function3 $transform>;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r3, $r4, $r2);

        $r5.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r5;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r4;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7 r0;
        kotlinx.coroutines.flow.FlowCollector $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.flow.FlowCollector) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        java.lang.Object $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.IllegalStateException $r4;
        kotlin.coroutines.Continuation $r11;
        kotlinx.coroutines.flow.Flow[] $r1, $r7;
        kotlin.jvm.functions.Function3 $r10;
        kotlin.jvm.functions.Function0 $r8;
        kotlin.Unit r12;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7 r0;
        kotlinx.coroutines.flow.FlowCollector $r5;
        int i0;
        java.lang.Object $r2, $r3;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2 $r9;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1 $r6;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7;

        $r2 := @parameter0: java.lang.Object;

        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: int label>;

        lookupswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r4;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        goto label4;

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object L$0>;

        $r5 = (kotlinx.coroutines.flow.FlowCollector) $r2;

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlinx.coroutines.flow.Flow[] $flowArray>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r6 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1;

        $r7 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlinx.coroutines.flow.Flow[] $flowArray>;

        specialinvoke $r6.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: void <init>(kotlinx.coroutines.flow.Flow[])>($r7);

        $r8 = (kotlin.jvm.functions.Function0) $r6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r9 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2;

        $r10 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.jvm.functions.Function3 $transform>;

        specialinvoke $r9.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: void <init>(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r10, null);

        $r10 = (kotlin.jvm.functions.Function3) $r9;

        $r11 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: int label> = 1;

        $r2 = staticinvoke <kotlinx.coroutines.flow.internal.CombineKt: java.lang.Object combineInternal(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r5, $r1, $r8, $r10, $r11);

        if $r2 != $r3 goto label4;

        return $r3;

     label4:
        r12 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r12;
    }

    public final java.lang.Object invokeSuspend$$forInline(java.lang.Object)
    {
        kotlin.coroutines.Continuation $r9;
        kotlinx.coroutines.flow.Flow[] $r3, $r5;
        kotlin.jvm.functions.Function3 $r8;
        kotlin.jvm.functions.Function0 $r6;
        kotlin.Unit r10;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7 r0;
        kotlinx.coroutines.flow.FlowCollector $r2;
        java.lang.Object $r1;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2 $r7;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1 $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7;

        $r1 := @parameter0: java.lang.Object;

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object L$0>;

        $r2 = (kotlinx.coroutines.flow.FlowCollector) $r1;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlinx.coroutines.flow.Flow[] $flowArray>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r4 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1;

        $r5 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlinx.coroutines.flow.Flow[] $flowArray>;

        specialinvoke $r4.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: void <init>(kotlinx.coroutines.flow.Flow[])>($r5);

        $r6 = (kotlin.jvm.functions.Function0) $r4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r7 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2;

        $r8 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.jvm.functions.Function3 $transform>;

        specialinvoke $r7.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: void <init>(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r8, null);

        $r8 = (kotlin.jvm.functions.Function3) $r7;

        $r9 = (kotlin.coroutines.Continuation) r0;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        staticinvoke <kotlinx.coroutines.flow.internal.CombineKt: java.lang.Object combineInternal(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r2, $r3, $r6, $r8, $r9);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r10;
    }
}
