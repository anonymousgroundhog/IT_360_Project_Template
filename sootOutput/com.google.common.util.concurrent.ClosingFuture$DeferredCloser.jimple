public final class com.google.common.util.concurrent.ClosingFuture$DeferredCloser extends java.lang.Object
{
    private final com.google.common.util.concurrent.ClosingFuture$CloseableList list;

    void <init>(com.google.common.util.concurrent.ClosingFuture$CloseableList)
    {
        com.google.common.util.concurrent.ClosingFuture$CloseableList $r1;
        com.google.common.util.concurrent.ClosingFuture$DeferredCloser r0;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$DeferredCloser;

        $r1 := @parameter0: com.google.common.util.concurrent.ClosingFuture$CloseableList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.util.concurrent.ClosingFuture$DeferredCloser: com.google.common.util.concurrent.ClosingFuture$CloseableList list> = $r1;

        return;
    }

    public java.lang.Object eventuallyClose(java.lang.Object, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ClosingFuture$CloseableList $r3;
        com.google.common.util.concurrent.ClosingFuture$DeferredCloser r0;
        java.util.concurrent.Executor $r2;
        java.io.Closeable $r4;
        java.lang.Object r1;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$DeferredCloser;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.util.concurrent.Executor;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        if r1 == null goto label1;

        $r3 = r0.<com.google.common.util.concurrent.ClosingFuture$DeferredCloser: com.google.common.util.concurrent.ClosingFuture$CloseableList list>;

        $r4 = (java.io.Closeable) r1;

        virtualinvoke $r3.<com.google.common.util.concurrent.ClosingFuture$CloseableList: void add(java.io.Closeable,java.util.concurrent.Executor)>($r4, $r2);

     label1:
        return r1;
    }
}
