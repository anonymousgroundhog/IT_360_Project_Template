class androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy extends java.lang.Object implements androidx.work.multiprocess.IWorkManagerImplCallback
{
    public static androidx.work.multiprocess.IWorkManagerImplCallback sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy;

        r1 = r0.<androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy r0;

        r0 := @this: androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy;

        return "androidx.work.multiprocess.IWorkManagerImplCallback";
    }

    public void onFailure(java.lang.String) throws android.os.RemoteException
    {
        java.lang.Throwable r5;
        androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy r0;
        androidx.work.multiprocess.IWorkManagerImplCallback $r4;
        java.lang.String $r1;
        android.os.Parcel $r2;
        android.os.IBinder r3;
        boolean $z0;

        r0 := @this: androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.work.multiprocess.IWorkManagerImplCallback");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        r3 = r0.<androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r2, null, 1);

     label2:
        if $z0 != 0 goto label7;

     label3:
        $r4 = staticinvoke <androidx.work.multiprocess.IWorkManagerImplCallback$Stub: androidx.work.multiprocess.IWorkManagerImplCallback getDefaultImpl()>();

     label4:
        if $r4 == null goto label7;

     label5:
        $r4 = staticinvoke <androidx.work.multiprocess.IWorkManagerImplCallback$Stub: androidx.work.multiprocess.IWorkManagerImplCallback getDefaultImpl()>();

        interfaceinvoke $r4.<androidx.work.multiprocess.IWorkManagerImplCallback: void onFailure(java.lang.String)>($r1);

     label6:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label7:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        r5 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void onSuccess(byte[]) throws android.os.RemoteException
    {
        java.lang.Throwable r5;
        byte[] $r1;
        androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy r0;
        androidx.work.multiprocess.IWorkManagerImplCallback $r4;
        android.os.Parcel $r2;
        android.os.IBinder r3;
        boolean $z0;

        r0 := @this: androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.work.multiprocess.IWorkManagerImplCallback");

        virtualinvoke $r2.<android.os.Parcel: void writeByteArray(byte[])>($r1);

        r3 = r0.<androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r2, null, 1);

     label2:
        if $z0 != 0 goto label7;

     label3:
        $r4 = staticinvoke <androidx.work.multiprocess.IWorkManagerImplCallback$Stub: androidx.work.multiprocess.IWorkManagerImplCallback getDefaultImpl()>();

     label4:
        if $r4 == null goto label7;

     label5:
        $r4 = staticinvoke <androidx.work.multiprocess.IWorkManagerImplCallback$Stub: androidx.work.multiprocess.IWorkManagerImplCallback getDefaultImpl()>();

        interfaceinvoke $r4.<androidx.work.multiprocess.IWorkManagerImplCallback: void onSuccess(byte[])>($r1);

     label6:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label7:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        r5 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
}
