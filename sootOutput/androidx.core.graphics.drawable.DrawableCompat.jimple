public final class androidx.core.graphics.drawable.DrawableCompat extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.lang.reflect.Method sGetLayoutDirectionMethod;
    private static boolean sGetLayoutDirectionMethodFetched;
    private static java.lang.reflect.Method sSetLayoutDirectionMethod;
    private static boolean sSetLayoutDirectionMethodFetched;

    private void <init>()
    {
        androidx.core.graphics.drawable.DrawableCompat r0;

        r0 := @this: androidx.core.graphics.drawable.DrawableCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void applyTheme(android.graphics.drawable.Drawable, android.content.res.Resources$Theme)
    {
        android.graphics.drawable.Drawable $r0;
        android.content.res.Resources$Theme $r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.content.res.Resources$Theme;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)>($r0, $r1);

        return;
    }

    public static boolean canApplyTheme(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        boolean $z0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)>($r0);

        return $z0;
    }

    public static void clearColorFilter(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.DrawableContainer r3;
        android.graphics.drawable.InsetDrawable r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r5;
        android.graphics.drawable.Drawable $r0;
        android.graphics.drawable.Drawable$ConstantState $r4;
        int i0, $i1;
        androidx.core.graphics.drawable.WrappedDrawable r2;
        boolean z0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 23 goto label1;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        return;

     label1:
        virtualinvoke $r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        z0 = $r0 instanceof android.graphics.drawable.InsetDrawable;

        if z0 == 0 goto label2;

        r1 = (android.graphics.drawable.InsetDrawable) $r0;

        $r0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)>(r1);

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>($r0);

        return;

     label2:
        z0 = $r0 instanceof androidx.core.graphics.drawable.WrappedDrawable;

        if z0 == 0 goto label3;

        r2 = (androidx.core.graphics.drawable.WrappedDrawable) $r0;

        $r0 = interfaceinvoke r2.<androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()>();

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>($r0);

        return;

     label3:
        z0 = $r0 instanceof android.graphics.drawable.DrawableContainer;

        if z0 == 0 goto label6;

        r3 = (android.graphics.drawable.DrawableContainer) $r0;

        $r4 = virtualinvoke r3.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        r5 = (android.graphics.drawable.DrawableContainer$DrawableContainerState) $r4;

        if r5 == null goto label6;

        i0 = 0;

        $i1 = virtualinvoke r5.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>();

     label4:
        if i0 >= $i1 goto label6;

        $r0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)>(r5, i0);

        if $r0 == null goto label5;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>($r0);

     label5:
        i0 = i0 + 1;

        goto label4;

     label6:
        return;
    }

    public static int getAlpha(android.graphics.drawable.Drawable)
    {
        int $i0;
        android.graphics.drawable.Drawable $r0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)>($r0);

        return $i0;
    }

    public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
    {
        android.graphics.ColorFilter $r1;
        android.graphics.drawable.Drawable $r0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)>($r0);

        return $r1;
    }

    public static int getLayoutDirection(android.graphics.drawable.Drawable)
    {
        java.lang.Object[] r5;
        java.lang.NoSuchMethodException r4;
        java.lang.Class[] $r1;
        android.graphics.drawable.Drawable $r0;
        java.lang.Integer r7;
        java.lang.Exception r8;
        int i0;
        java.lang.Class r2;
        java.lang.Object $r6;
        java.lang.reflect.Method $r3;
        boolean z0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 23 goto label01;

        i0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)>($r0);

        return i0;

     label01:
        z0 = <androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched>;

        if z0 != 0 goto label08;

        r2 = class "Landroid/graphics/drawable/Drawable;";

        $r1 = newarray (java.lang.Class)[0];

     label02:
        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getLayoutDirection", $r1);

     label03:
        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod> = $r3;

        $r3 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod>;

     label04:
        virtualinvoke $r3.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label05:
        goto label07;

     label06:
        r4 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to retrieve getLayoutDirection() method", r4);

     label07:
        <androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched> = 1;

     label08:
        $r3 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod>;

        if $r3 == null goto label12;

        $r3 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod>;

        r5 = newarray (java.lang.Object)[0];

     label09:
        $r6 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, r5);

        r7 = (java.lang.Integer) $r6;

        i0 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

     label10:
        return i0;

     label11:
        r8 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to invoke getLayoutDirection() via reflection", r8);

        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod> = null;

     label12:
        return 0;

        catch java.lang.NoSuchMethodException from label02 to label03 with label06;
        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static void inflate(android.graphics.drawable.Drawable, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.util.AttributeSet $r3;
        android.graphics.drawable.Drawable $r0;
        android.content.res.Resources$Theme $r4;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter3: android.util.AttributeSet;

        $r4 := @parameter4: android.content.res.Resources$Theme;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r1, $r2, $r3, $r4);

        return;
    }

    public static boolean isAutoMirrored(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        boolean $z0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)>($r0);

        return $z0;
    }

    public static void jumpToCurrentState(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        return;
    }

    public static void setAutoMirrored(android.graphics.drawable.Drawable, boolean)
    {
        android.graphics.drawable.Drawable $r0;
        boolean $z0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 := @parameter1: boolean;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>($r0, $z0);

        return;
    }

    public static void setHotspot(android.graphics.drawable.Drawable, float, float)
    {
        float $f0, $f1;
        android.graphics.drawable.Drawable $r0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)>($r0, $f0, $f1);

        return;
    }

    public static void setHotspotBounds(android.graphics.drawable.Drawable, int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($r0, $i0, $i1, $i2, $i3);

        return;
    }

    public static boolean setLayoutDirection(android.graphics.drawable.Drawable, int)
    {
        java.lang.Object[] $r6;
        java.lang.NoSuchMethodException r5;
        java.lang.Class[] $r3;
        android.graphics.drawable.Drawable $r0;
        java.lang.Integer $r7;
        java.lang.Exception r8;
        int $i0, i1;
        java.lang.Class $r1, r2;
        java.lang.reflect.Method $r4;
        boolean $z0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        i1 = <android.os.Build$VERSION: int SDK_INT>;

        if i1 < 23 goto label01;

        $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>($r0, $i0);

        return $z0;

     label01:
        $z0 = <androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched>;

        if $z0 != 0 goto label08;

        r2 = class "Landroid/graphics/drawable/Drawable;";

        $r3 = newarray (java.lang.Class)[1];

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[0] = $r1;

     label02:
        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setLayoutDirection", $r3);

     label03:
        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod> = $r4;

        $r4 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod>;

     label04:
        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label05:
        goto label07;

     label06:
        r5 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to retrieve setLayoutDirection(int) method", r5);

     label07:
        <androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched> = 1;

     label08:
        $r4 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod>;

        if $r4 == null goto label12;

        $r4 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod>;

        $r6 = newarray (java.lang.Object)[1];

     label09:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[0] = $r7;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r6);

     label10:
        return 1;

     label11:
        r8 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to invoke setLayoutDirection(int) via reflection", r8);

        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod> = null;

     label12:
        return 0;

        catch java.lang.NoSuchMethodException from label02 to label03 with label06;
        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static void setTint(android.graphics.drawable.Drawable, int)
    {
        int $i0;
        android.graphics.drawable.Drawable $r0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)>($r0, $i0);

        return;
    }

    public static void setTintList(android.graphics.drawable.Drawable, android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        android.graphics.drawable.Drawable $r0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.content.res.ColorStateList;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r0, $r1);

        return;
    }

    public static void setTintMode(android.graphics.drawable.Drawable, android.graphics.PorterDuff$Mode)
    {
        android.graphics.drawable.Drawable $r0;
        android.graphics.PorterDuff$Mode $r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.graphics.PorterDuff$Mode;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r0, $r1);

        return;
    }

    public static android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
    {
        androidx.core.graphics.drawable.WrappedDrawable $r1;
        android.graphics.drawable.Drawable $r0;
        boolean $z0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = $r0 instanceof androidx.core.graphics.drawable.WrappedDrawable;

        if $z0 == 0 goto label1;

        $r1 = (androidx.core.graphics.drawable.WrappedDrawable) $r0;

        $r0 = interfaceinvoke $r1.<androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()>();

     label1:
        return $r0;
    }

    public static android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
    {
        int $i0;
        androidx.core.graphics.drawable.WrappedDrawableApi21 $r1;
        android.graphics.drawable.Drawable $r0;
        boolean $z0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        return $r0;

     label1:
        $z0 = $r0 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $z0 != 0 goto label2;

        $r1 = new androidx.core.graphics.drawable.WrappedDrawableApi21;

        specialinvoke $r1.<androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(android.graphics.drawable.Drawable)>($r0);

        return $r1;

     label2:
        return $r0;
    }

    public static void <clinit>()
    {
        <androidx.core.graphics.drawable.DrawableCompat: java.lang.String TAG> = "DrawableCompat";

        return;
    }
}
