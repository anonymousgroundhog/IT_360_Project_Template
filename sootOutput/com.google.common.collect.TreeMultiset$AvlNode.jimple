final class com.google.common.collect.TreeMultiset$AvlNode extends java.lang.Object
{
    private int distinctElements;
    private final java.lang.Object elem;
    private int elemCount;
    private int height;
    private com.google.common.collect.TreeMultiset$AvlNode left;
    private com.google.common.collect.TreeMultiset$AvlNode pred;
    private com.google.common.collect.TreeMultiset$AvlNode right;
    private com.google.common.collect.TreeMultiset$AvlNode succ;
    private long totalCount;

    void <init>()
    {
        com.google.common.collect.TreeMultiset$AvlNode r0;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object elem> = null;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount> = 1;

        return;
    }

    void <init>(java.lang.Object, int)
    {
        int $i0;
        com.google.common.collect.TreeMultiset$AvlNode r0;
        java.lang.Object r1;
        long $l1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object elem> = r1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount> = $i0;

        $l1 = (long) $i0;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int height> = 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = null;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = null;

        return;
    }

    static com.google.common.collect.TreeMultiset$AvlNode access$1000(com.google.common.collect.TreeMultiset$AvlNode, java.util.Comparator, java.lang.Object)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0;
        java.lang.Object $r2;
        java.util.Comparator $r1;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 := @parameter1: java.util.Comparator;

        $r2 := @parameter2: java.lang.Object;

        $r0 = specialinvoke $r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object)>($r1, $r2);

        return $r0;
    }

    static com.google.common.collect.TreeMultiset$AvlNode access$1100(com.google.common.collect.TreeMultiset$AvlNode, java.util.Comparator, java.lang.Object)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0;
        java.lang.Object $r2;
        java.util.Comparator $r1;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 := @parameter1: java.util.Comparator;

        $r2 := @parameter2: java.lang.Object;

        $r0 = specialinvoke $r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode floor(java.util.Comparator,java.lang.Object)>($r1, $r2);

        return $r0;
    }

    static com.google.common.collect.TreeMultiset$AvlNode access$1200(com.google.common.collect.TreeMultiset$AvlNode)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r0 = specialinvoke $r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode pred()>();

        return $r0;
    }

    static int access$200(com.google.common.collect.TreeMultiset$AvlNode)
    {
        int i0;
        com.google.common.collect.TreeMultiset$AvlNode $r0;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        i0 = $r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        return i0;
    }

    static int access$202(com.google.common.collect.TreeMultiset$AvlNode, int)
    {
        int $i0;
        com.google.common.collect.TreeMultiset$AvlNode $r0;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $i0 := @parameter1: int;

        $r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount> = $i0;

        return $i0;
    }

    static long access$300(com.google.common.collect.TreeMultiset$AvlNode)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0;
        long l0;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        l0 = $r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        return l0;
    }

    static int access$400(com.google.common.collect.TreeMultiset$AvlNode)
    {
        int i0;
        com.google.common.collect.TreeMultiset$AvlNode $r0;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        i0 = $r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        return i0;
    }

    static com.google.common.collect.TreeMultiset$AvlNode access$500(com.google.common.collect.TreeMultiset$AvlNode)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r0 = $r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        return $r0;
    }

    static com.google.common.collect.TreeMultiset$AvlNode access$502(com.google.common.collect.TreeMultiset$AvlNode, com.google.common.collect.TreeMultiset$AvlNode)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0, $r1;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 := @parameter1: com.google.common.collect.TreeMultiset$AvlNode;

        $r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = $r1;

        return $r1;
    }

    static com.google.common.collect.TreeMultiset$AvlNode access$600(com.google.common.collect.TreeMultiset$AvlNode)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r0 = $r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        return $r0;
    }

    static com.google.common.collect.TreeMultiset$AvlNode access$602(com.google.common.collect.TreeMultiset$AvlNode, com.google.common.collect.TreeMultiset$AvlNode)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0, $r1;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 := @parameter1: com.google.common.collect.TreeMultiset$AvlNode;

        $r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = $r1;

        return $r1;
    }

    static com.google.common.collect.TreeMultiset$AvlNode access$700(com.google.common.collect.TreeMultiset$AvlNode)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r0 = specialinvoke $r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode succ()>();

        return $r0;
    }

    static com.google.common.collect.TreeMultiset$AvlNode access$802(com.google.common.collect.TreeMultiset$AvlNode, com.google.common.collect.TreeMultiset$AvlNode)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0, $r1;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 := @parameter1: com.google.common.collect.TreeMultiset$AvlNode;

        $r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode pred> = $r1;

        return $r1;
    }

    static com.google.common.collect.TreeMultiset$AvlNode access$902(com.google.common.collect.TreeMultiset$AvlNode, com.google.common.collect.TreeMultiset$AvlNode)
    {
        com.google.common.collect.TreeMultiset$AvlNode $r0, $r1;

        $r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 := @parameter1: com.google.common.collect.TreeMultiset$AvlNode;

        $r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode succ> = $r1;

        return $r1;
    }

    private com.google.common.collect.TreeMultiset$AvlNode addLeftChild(java.lang.Object, int)
    {
        long $l1, $l3;
        int $i0, $i2;
        com.google.common.collect.TreeMultiset$AvlNode r0, $r2, $r3;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = new com.google.common.collect.TreeMultiset$AvlNode;

        specialinvoke $r2.<com.google.common.collect.TreeMultiset$AvlNode: void <init>(java.lang.Object,int)>(r1, $i0);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = $r2;

        $r2 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode pred()>();

        $r3 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        staticinvoke <com.google.common.collect.TreeMultiset: void access$1800(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode)>($r2, $r3, r0);

        $i2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int height>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(2, $i2);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int height> = $i2;

        $i2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i2 = $i2 + 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i2;

        $l3 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $l1 = (long) $i0;

        $l1 = $l3 + $l1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l1;

        return r0;
    }

    private com.google.common.collect.TreeMultiset$AvlNode addRightChild(java.lang.Object, int)
    {
        long $l1, $l3;
        int $i0, $i2;
        com.google.common.collect.TreeMultiset$AvlNode r0, $r2, $r3;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = new com.google.common.collect.TreeMultiset$AvlNode;

        specialinvoke $r2.<com.google.common.collect.TreeMultiset$AvlNode: void <init>(java.lang.Object,int)>(r1, $i0);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = $r2;

        $r2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $r3 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode succ()>();

        staticinvoke <com.google.common.collect.TreeMultiset: void access$1800(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode)>(r0, $r2, $r3);

        $i2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int height>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(2, $i2);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int height> = $i2;

        $i2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i2 = $i2 + 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i2;

        $l3 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $l1 = (long) $i0;

        $l1 = $l3 + $l1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l1;

        return r0;
    }

    private int balanceFactor()
    {
        int $i0, $i1;
        com.google.common.collect.TreeMultiset$AvlNode r0, $r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $i0 = staticinvoke <com.google.common.collect.TreeMultiset$AvlNode: int height(com.google.common.collect.TreeMultiset$AvlNode)>($r1);

        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $i1 = staticinvoke <com.google.common.collect.TreeMultiset$AvlNode: int height(com.google.common.collect.TreeMultiset$AvlNode)>(r0);

        $i0 = $i0 - $i1;

        return $i0;
    }

    private com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator, java.lang.Object)
    {
        int $i0;
        com.google.common.collect.TreeMultiset$AvlNode r0, $r4;
        java.lang.Object r2, $r3;
        java.util.Comparator r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object getElement()>();

        $i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r3);

        if $i0 >= 0 goto label2;

        $r4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        if $r4 != null goto label1;

        return r0;

     label1:
        $r4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $r4 = specialinvoke $r4.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object)>(r1, r2);

        r2 = staticinvoke <com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>($r4, r0);

        r0 = (com.google.common.collect.TreeMultiset$AvlNode) r2;

        return r0;

     label2:
        if $i0 != 0 goto label3;

        return r0;

     label3:
        $r4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        if $r4 != null goto label4;

        return null;

     label4:
        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object)>(r1, r2);

        return r0;
    }

    private com.google.common.collect.TreeMultiset$AvlNode deleteMe()
    {
        long $l3, $l4;
        int i0, i1, $i2;
        com.google.common.collect.TreeMultiset$AvlNode r0, $r1, $r2;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount> = 0;

        $r1 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode pred()>();

        $r2 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode succ()>();

        staticinvoke <com.google.common.collect.TreeMultiset: void access$1900(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode)>($r1, $r2);

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        if $r1 != null goto label1;

        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        return r0;

     label1:
        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        if $r1 != null goto label2;

        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        return r0;

     label2:
        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        i1 = $r1.<com.google.common.collect.TreeMultiset$AvlNode: int height>;

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $i2 = $r1.<com.google.common.collect.TreeMultiset$AvlNode: int height>;

        if i1 < $i2 goto label3;

        $r1 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode pred()>();

        $r2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $r2 = specialinvoke $r2.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode removeMax(com.google.common.collect.TreeMultiset$AvlNode)>($r1);

        $r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = $r2;

        $r2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = $r2;

        i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        i1 = i1 + -1;

        $r1.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = i1;

        $l3 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $l4 = (long) i0;

        $l3 = $l3 - $l4;

        $r1.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l3;

        r0 = specialinvoke $r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;

     label3:
        $r1 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode succ()>();

        $r2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $r2 = specialinvoke $r2.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode removeMin(com.google.common.collect.TreeMultiset$AvlNode)>($r1);

        $r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = $r2;

        $r2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = $r2;

        i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        i1 = i1 + -1;

        $r1.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = i1;

        $l3 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $l4 = (long) i0;

        $l3 = $l3 - $l4;

        $r1.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l3;

        r0 = specialinvoke $r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;
    }

    private com.google.common.collect.TreeMultiset$AvlNode floor(java.util.Comparator, java.lang.Object)
    {
        int $i0;
        com.google.common.collect.TreeMultiset$AvlNode r0, $r4;
        java.lang.Object r2, $r3;
        java.util.Comparator r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object getElement()>();

        $i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r3);

        if $i0 <= 0 goto label2;

        $r4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        if $r4 != null goto label1;

        return r0;

     label1:
        $r4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $r4 = specialinvoke $r4.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode floor(java.util.Comparator,java.lang.Object)>(r1, r2);

        r2 = staticinvoke <com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>($r4, r0);

        r0 = (com.google.common.collect.TreeMultiset$AvlNode) r2;

        return r0;

     label2:
        if $i0 != 0 goto label3;

        return r0;

     label3:
        $r4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        if $r4 != null goto label4;

        return null;

     label4:
        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode floor(java.util.Comparator,java.lang.Object)>(r1, r2);

        return r0;
    }

    private static int height(com.google.common.collect.TreeMultiset$AvlNode)
    {
        int i0;
        com.google.common.collect.TreeMultiset$AvlNode r0;

        r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        if r0 != null goto label1;

        return 0;

     label1:
        i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int height>;

        return i0;
    }

    private com.google.common.collect.TreeMultiset$AvlNode pred()
    {
        com.google.common.collect.TreeMultiset$AvlNode r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode pred>;

        $r1 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        r0 = (com.google.common.collect.TreeMultiset$AvlNode) $r1;

        return r0;
    }

    private com.google.common.collect.TreeMultiset$AvlNode rebalance()
    {
        int $i0;
        com.google.common.collect.TreeMultiset$AvlNode r0, $r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        $i0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: int balanceFactor()>();

        lookupswitch($i0)
        {
            case -2: goto label4;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: void recomputeHeight()>();

        return r0;

     label2:
        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $i0 = specialinvoke $r1.<com.google.common.collect.TreeMultiset$AvlNode: int balanceFactor()>();

        if $i0 >= 0 goto label3;

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $r1 = specialinvoke $r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rotateLeft()>();

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = $r1;

     label3:
        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rotateRight()>();

        return r0;

     label4:
        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $i0 = specialinvoke $r1.<com.google.common.collect.TreeMultiset$AvlNode: int balanceFactor()>();

        if $i0 <= 0 goto label5;

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $r1 = specialinvoke $r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rotateRight()>();

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = $r1;

     label5:
        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rotateLeft()>();

        return r0;
    }

    private void recompute()
    {
        com.google.common.collect.TreeMultiset$AvlNode r0;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: void recomputeMultiset()>();

        specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: void recomputeHeight()>();

        return;
    }

    private void recomputeHeight()
    {
        int $i0, $i1;
        com.google.common.collect.TreeMultiset$AvlNode r0, $r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $i0 = staticinvoke <com.google.common.collect.TreeMultiset$AvlNode: int height(com.google.common.collect.TreeMultiset$AvlNode)>($r1);

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $i1 = staticinvoke <com.google.common.collect.TreeMultiset$AvlNode: int height(com.google.common.collect.TreeMultiset$AvlNode)>($r1);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int height> = $i0;

        return;
    }

    private void recomputeMultiset()
    {
        int $i0, $i1;
        com.google.common.collect.TreeMultiset$AvlNode r0, $r1;
        long $l2, $l3;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $i0 = staticinvoke <com.google.common.collect.TreeMultiset: int distinctElements(com.google.common.collect.TreeMultiset$AvlNode)>($r1);

        $i0 = $i0 + 1;

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $i1 = staticinvoke <com.google.common.collect.TreeMultiset: int distinctElements(com.google.common.collect.TreeMultiset$AvlNode)>($r1);

        $i0 = $i0 + $i1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i0;

        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $l2 = (long) $i0;

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $l3 = staticinvoke <com.google.common.collect.TreeMultiset$AvlNode: long totalCount(com.google.common.collect.TreeMultiset$AvlNode)>($r1);

        $l2 = $l2 + $l3;

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $l3 = staticinvoke <com.google.common.collect.TreeMultiset$AvlNode: long totalCount(com.google.common.collect.TreeMultiset$AvlNode)>($r1);

        $l2 = $l2 + $l3;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l2;

        return;
    }

    private com.google.common.collect.TreeMultiset$AvlNode removeMax(com.google.common.collect.TreeMultiset$AvlNode)
    {
        int $i0;
        com.google.common.collect.TreeMultiset$AvlNode r0, r1, $r2;
        long $l1, $l2;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        if $r2 != null goto label1;

        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        return r0;

     label1:
        $r2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $r2 = specialinvoke $r2.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode removeMax(com.google.common.collect.TreeMultiset$AvlNode)>(r1);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = $r2;

        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i0 = $i0 + -1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i0;

        $l1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $i0 = r1.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $l2 = (long) $i0;

        $l1 = $l1 - $l2;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l1;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;
    }

    private com.google.common.collect.TreeMultiset$AvlNode removeMin(com.google.common.collect.TreeMultiset$AvlNode)
    {
        int $i0;
        com.google.common.collect.TreeMultiset$AvlNode r0, r1, $r2;
        long $l1, $l2;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        $r2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        if $r2 != null goto label1;

        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        return r0;

     label1:
        $r2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $r2 = specialinvoke $r2.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode removeMin(com.google.common.collect.TreeMultiset$AvlNode)>(r1);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = $r2;

        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i0 = $i0 + -1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i0;

        $l1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $i0 = r1.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $l2 = (long) $i0;

        $l1 = $l1 - $l2;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l1;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;
    }

    private com.google.common.collect.TreeMultiset$AvlNode rotateLeft()
    {
        int $i1;
        com.google.common.collect.TreeMultiset$AvlNode r0, r1, $r2;
        long $l0;
        boolean z0;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        if r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>(z0);

        r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $r2 = r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = $r2;

        r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = r0;

        $l0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        r1.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l0;

        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        r1.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i1;

        specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: void recompute()>();

        specialinvoke r1.<com.google.common.collect.TreeMultiset$AvlNode: void recomputeHeight()>();

        return r1;
    }

    private com.google.common.collect.TreeMultiset$AvlNode rotateRight()
    {
        int $i1;
        com.google.common.collect.TreeMultiset$AvlNode r0, r1, $r2;
        long $l0;
        boolean z0;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        if r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>(z0);

        r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $r2 = r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = $r2;

        r1.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = r0;

        $l0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        r1.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l0;

        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        r1.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i1;

        specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: void recompute()>();

        specialinvoke r1.<com.google.common.collect.TreeMultiset$AvlNode: void recomputeHeight()>();

        return r1;
    }

    private com.google.common.collect.TreeMultiset$AvlNode succ()
    {
        com.google.common.collect.TreeMultiset$AvlNode r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode succ>;

        $r1 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        r0 = (com.google.common.collect.TreeMultiset$AvlNode) $r1;

        return r0;
    }

    private static long totalCount(com.google.common.collect.TreeMultiset$AvlNode)
    {
        com.google.common.collect.TreeMultiset$AvlNode r0;
        long l0;

        r0 := @parameter0: com.google.common.collect.TreeMultiset$AvlNode;

        if r0 != null goto label1;

        return 0L;

     label1:
        l0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        return l0;
    }

    com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator, java.lang.Object, int, int[])
    {
        long $l4, $l5;
        byte $b1;
        int[] $r3;
        int $i0, $i2, $i3;
        com.google.common.collect.TreeMultiset$AvlNode r0, r5;
        java.lang.Object r2, $r4;
        java.util.Comparator r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $r3 := @parameter3: int[];

        $r4 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object getElement()>();

        $i2 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r4);

        $z0 = 1;

        if $i2 >= 0 goto label04;

        r5 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        if r5 != null goto label01;

        $r3[0] = 0;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode addLeftChild(java.lang.Object,int)>(r2, $i0);

        return r0;

     label01:
        $i2 = r5.<com.google.common.collect.TreeMultiset$AvlNode: int height>;

        r5 = virtualinvoke r5.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator,java.lang.Object,int,int[])>(r1, r2, $i0, $r3);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = r5;

        $i3 = $r3[0];

        if $i3 != 0 goto label02;

        $i3 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i3 = $i3 + 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i3;

     label02:
        $l4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $l5 = (long) $i0;

        $l4 = $l4 + $l5;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l4;

        r5 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $i0 = r5.<com.google.common.collect.TreeMultiset$AvlNode: int height>;

        if $i0 != $i2 goto label03;

        return r0;

     label03:
        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;

     label04:
        if $i2 <= 0 goto label08;

        r5 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        if r5 != null goto label05;

        $r3[0] = 0;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode addRightChild(java.lang.Object,int)>(r2, $i0);

        return r0;

     label05:
        $i2 = r5.<com.google.common.collect.TreeMultiset$AvlNode: int height>;

        r5 = virtualinvoke r5.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator,java.lang.Object,int,int[])>(r1, r2, $i0, $r3);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = r5;

        $i3 = $r3[0];

        if $i3 != 0 goto label06;

        $i3 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i3 = $i3 + 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i3;

     label06:
        $l4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $l5 = (long) $i0;

        $l4 = $l4 + $l5;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l4;

        r5 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $i0 = r5.<com.google.common.collect.TreeMultiset$AvlNode: int height>;

        if $i0 != $i2 goto label07;

        return r0;

     label07:
        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;

     label08:
        $i2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $r3[0] = $i2;

        $i2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $l4 = (long) $i2;

        $l5 = (long) $i0;

        $l4 = $l4 + $l5;

        $b1 = $l4 cmp 2147483647L;

        $i2 = (int) $b1;

        if $i2 > 0 goto label09;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $i2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $i2 = $i2 + $i0;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount> = $i2;

        $l4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $l5 = (long) $i0;

        $l4 = $l4 + $l5;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l4;

        return r0;
    }

    int count(java.util.Comparator, java.lang.Object)
    {
        int $i0;
        com.google.common.collect.TreeMultiset$AvlNode r0, $r4;
        java.lang.Object r2, $r3;
        java.util.Comparator r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object getElement()>();

        $i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r3);

        if $i0 >= 0 goto label2;

        $r4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        if $r4 != null goto label1;

        return 0;

     label1:
        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        $i0 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: int count(java.util.Comparator,java.lang.Object)>(r1, r2);

        return $i0;

     label2:
        if $i0 <= 0 goto label4;

        $r4 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        if $r4 != null goto label3;

        return 0;

     label3:
        r0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        $i0 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: int count(java.util.Comparator,java.lang.Object)>(r1, r2);

        return $i0;

     label4:
        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        return $i0;
    }

    int getCount()
    {
        int i0;
        com.google.common.collect.TreeMultiset$AvlNode r0;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        return i0;
    }

    java.lang.Object getElement()
    {
        com.google.common.collect.TreeMultiset$AvlNode r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object elem>;

        $r1 = staticinvoke <com.google.common.collect.NullnessCasts: java.lang.Object uncheckedCastNullableTToT(java.lang.Object)>($r1);

        return $r1;
    }

    com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator, java.lang.Object, int, int[])
    {
        long $l2, $l3;
        int[] $r3;
        int $i0, $i1;
        com.google.common.collect.TreeMultiset$AvlNode r0, r5;
        java.lang.Object r2, $r4;
        java.util.Comparator r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $r3 := @parameter3: int[];

        $r4 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object getElement()>();

        $i1 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $i1 >= 0 goto label05;

        r5 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        if r5 != null goto label01;

        $r3[0] = 0;

        return r0;

     label01:
        r5 = virtualinvoke r5.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator,java.lang.Object,int,int[])>(r1, r2, $i0, $r3);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = r5;

        $i1 = $r3[0];

        if $i1 <= 0 goto label03;

        $i1 = $r3[0];

        if $i0 < $i1 goto label02;

        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i0 = $i0 + -1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i0;

        $l2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $i0 = $r3[0];

        $l3 = (long) $i0;

        $l2 = $l2 - $l3;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l2;

        goto label03;

     label02:
        $l2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $l3 = (long) $i0;

        $l2 = $l2 - $l3;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l2;

     label03:
        $i0 = $r3[0];

        if $i0 != 0 goto label04;

        return r0;

     label04:
        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;

     label05:
        if $i1 <= 0 goto label09;

        r5 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        if r5 != null goto label06;

        $r3[0] = 0;

        return r0;

     label06:
        r5 = virtualinvoke r5.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator,java.lang.Object,int,int[])>(r1, r2, $i0, $r3);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = r5;

        $i1 = $r3[0];

        if $i1 <= 0 goto label08;

        $i1 = $r3[0];

        if $i0 < $i1 goto label07;

        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i0 = $i0 + -1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i0;

        $l2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $i0 = $r3[0];

        $l3 = (long) $i0;

        $l2 = $l2 - $l3;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l2;

        goto label08;

     label07:
        $l2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $l3 = (long) $i0;

        $l2 = $l2 - $l3;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l2;

     label08:
        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;

     label09:
        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $r3[0] = $i1;

        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        if $i0 < $i1 goto label10;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode deleteMe()>();

        return r0;

     label10:
        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $i1 = $i1 - $i0;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount> = $i1;

        $l2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $l3 = (long) $i0;

        $l2 = $l2 - $l3;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l2;

        return r0;
    }

    com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator, java.lang.Object, int, int, int[])
    {
        long $l3, $l4;
        int[] $r3;
        int $i0, $i1, $i2;
        com.google.common.collect.TreeMultiset$AvlNode r0, r5;
        java.lang.Object r2, $r4;
        java.util.Comparator r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: int[];

        $r4 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object getElement()>();

        $i2 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $i2 >= 0 goto label06;

        r5 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        if r5 != null goto label02;

        $r3[0] = 0;

        if $i0 != 0 goto label01;

        if $i1 <= 0 goto label14;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode addLeftChild(java.lang.Object,int)>(r2, $i1);

     label01:
        return r0;

     label02:
        r5 = virtualinvoke r5.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int,int[])>(r1, r2, $i0, $i1, $r3);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = r5;

        $i2 = $r3[0];

        if $i2 != $i0 goto label05;

        if $i1 != 0 goto label03;

        $i0 = $r3[0];

        if $i0 == 0 goto label03;

        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i0 = $i0 + -1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i0;

        goto label04;

     label03:
        if $i1 <= 0 goto label04;

        $i0 = $r3[0];

        if $i0 != 0 goto label04;

        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i0;

     label04:
        $l3 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $i0 = $r3[0];

        $i0 = $i1 - $i0;

        $l4 = (long) $i0;

        $l3 = $l3 + $l4;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l3;

     label05:
        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;

     label06:
        if $i2 <= 0 goto label12;

        r5 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        if r5 != null goto label08;

        $r3[0] = 0;

        if $i0 != 0 goto label07;

        if $i1 <= 0 goto label14;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode addRightChild(java.lang.Object,int)>(r2, $i1);

     label07:
        return r0;

     label08:
        r5 = virtualinvoke r5.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int,int[])>(r1, r2, $i0, $i1, $r3);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = r5;

        $i2 = $r3[0];

        if $i2 != $i0 goto label11;

        if $i1 != 0 goto label09;

        $i0 = $r3[0];

        if $i0 == 0 goto label09;

        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i0 = $i0 + -1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i0;

        goto label10;

     label09:
        if $i1 <= 0 goto label10;

        $i0 = $r3[0];

        if $i0 != 0 goto label10;

        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i0 = $i0 + 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i0;

     label10:
        $l3 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $i0 = $r3[0];

        $i0 = $i1 - $i0;

        $l4 = (long) $i0;

        $l3 = $l3 + $l4;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l3;

     label11:
        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;

     label12:
        $i2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $r3[0] = $i2;

        $i2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        if $i0 != $i2 goto label14;

        if $i1 != 0 goto label13;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode deleteMe()>();

        return r0;

     label13:
        $l3 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $i0 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $i0 = $i1 - $i0;

        $l4 = (long) $i0;

        $l3 = $l3 + $l4;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l3;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount> = $i1;

     label14:
        return r0;
    }

    com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator, java.lang.Object, int, int[])
    {
        long $l2, $l3;
        int[] $r3;
        int $i0, $i1;
        com.google.common.collect.TreeMultiset$AvlNode r0, r5;
        java.lang.Object r2, $r4;
        java.util.Comparator r1;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $r3 := @parameter3: int[];

        $r4 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object getElement()>();

        $i1 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $i1 >= 0 goto label05;

        r5 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left>;

        if r5 != null goto label02;

        $r3[0] = 0;

        if $i0 <= 0 goto label01;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode addLeftChild(java.lang.Object,int)>(r2, $i0);

     label01:
        return r0;

     label02:
        r5 = virtualinvoke r5.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int[])>(r1, r2, $i0, $r3);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode left> = r5;

        if $i0 != 0 goto label03;

        $i1 = $r3[0];

        if $i1 == 0 goto label03;

        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i1 = $i1 + -1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i1;

        goto label04;

     label03:
        if $i0 <= 0 goto label04;

        $i1 = $r3[0];

        if $i1 != 0 goto label04;

        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i1 = $i1 + 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i1;

     label04:
        $l2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $i1 = $r3[0];

        $i0 = $i0 - $i1;

        $l3 = (long) $i0;

        $l2 = $l2 + $l3;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l2;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;

     label05:
        if $i1 <= 0 goto label10;

        r5 = r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right>;

        if r5 != null goto label07;

        $r3[0] = 0;

        if $i0 <= 0 goto label06;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode addRightChild(java.lang.Object,int)>(r2, $i0);

     label06:
        return r0;

     label07:
        r5 = virtualinvoke r5.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int[])>(r1, r2, $i0, $r3);

        r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode right> = r5;

        if $i0 != 0 goto label08;

        $i1 = $r3[0];

        if $i1 == 0 goto label08;

        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i1 = $i1 + -1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i1;

        goto label09;

     label08:
        if $i0 <= 0 goto label09;

        $i1 = $r3[0];

        if $i1 != 0 goto label09;

        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements>;

        $i1 = $i1 + 1;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int distinctElements> = $i1;

     label09:
        $l2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $i1 = $r3[0];

        $i0 = $i0 - $i1;

        $l3 = (long) $i0;

        $l2 = $l2 + $l3;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l2;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode rebalance()>();

        return r0;

     label10:
        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $r3[0] = $i1;

        if $i0 != 0 goto label11;

        r0 = specialinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: com.google.common.collect.TreeMultiset$AvlNode deleteMe()>();

        return r0;

     label11:
        $l2 = r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount>;

        $i1 = r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount>;

        $i1 = $i0 - $i1;

        $l3 = (long) $i1;

        $l2 = $l2 + $l3;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: long totalCount> = $l2;

        r0.<com.google.common.collect.TreeMultiset$AvlNode: int elemCount> = $i0;

        return r0;
    }

    public java.lang.String toString()
    {
        int $i0;
        com.google.common.collect.TreeMultiset$AvlNode r0;
        java.lang.Object $r1;
        java.lang.String $r3;
        com.google.common.collect.Multiset$Entry $r2;

        r0 := @this: com.google.common.collect.TreeMultiset$AvlNode;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: java.lang.Object getElement()>();

        $i0 = virtualinvoke r0.<com.google.common.collect.TreeMultiset$AvlNode: int getCount()>();

        $r2 = staticinvoke <com.google.common.collect.Multisets: com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int)>($r1, $i0);

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Multiset$Entry: java.lang.String toString()>();

        return $r3;
    }
}
