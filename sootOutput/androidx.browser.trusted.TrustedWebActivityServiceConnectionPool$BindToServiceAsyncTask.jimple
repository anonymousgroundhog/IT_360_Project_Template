class androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask extends android.os.AsyncTask
{
    private final android.content.Context mAppContext;
    private final androidx.browser.trusted.ConnectionHolder mConnection;
    private final android.content.Intent mIntent;

    void <init>(android.content.Context, android.content.Intent, androidx.browser.trusted.ConnectionHolder)
    {
        androidx.browser.trusted.ConnectionHolder $r3;
        android.content.Context $r1;
        androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask r0;
        android.content.Intent $r2;

        r0 := @this: androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        $r3 := @parameter2: androidx.browser.trusted.ConnectionHolder;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: android.content.Context mAppContext> = $r1;

        r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: android.content.Intent mIntent> = $r2;

        r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: androidx.browser.trusted.ConnectionHolder mConnection> = $r3;

        return;
    }

    protected transient java.lang.Exception doInBackground(java.lang.Void[])
    {
        androidx.browser.trusted.ConnectionHolder $r4;
        android.content.Context r2;
        java.lang.IllegalStateException r5;
        android.content.Intent $r3;
        androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask r0;
        java.lang.SecurityException r6;
        java.lang.Void[] $r1;
        boolean $z0;

        r0 := @this: androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask;

        $r1 := @parameter0: java.lang.Void[];

        r2 = r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: android.content.Context mAppContext>;

        $r3 = r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: android.content.Intent mIntent>;

        $r4 = r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: androidx.browser.trusted.ConnectionHolder mConnection>;

     label1:
        $z0 = virtualinvoke r2.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r3, $r4, 4097);

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        r2 = r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: android.content.Context mAppContext>;

        $r4 = r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: androidx.browser.trusted.ConnectionHolder mConnection>;

     label4:
        virtualinvoke r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r4);

     label5:
        r5 = new java.lang.IllegalStateException;

     label6:
        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not bind to the service");

     label7:
        return r5;

     label8:
        r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TWAConnectionPool", "SecurityException while binding.", r6);

        return r6;

        catch java.lang.SecurityException from label1 to label2 with label8;
        catch java.lang.SecurityException from label4 to label5 with label8;
        catch java.lang.SecurityException from label6 to label7 with label8;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        java.lang.Object[] $r2;
        androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask r0;
        java.lang.Exception $r1;
        java.lang.Void[] $r3;

        r0 := @this: androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r2;

        $r1 = virtualinvoke r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: java.lang.Exception doInBackground(java.lang.Void[])>($r3);

        return $r1;
    }

    protected void onPostExecute(java.lang.Exception)
    {
        androidx.browser.trusted.ConnectionHolder $r2;
        androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask r0;
        java.lang.Exception $r1;

        r0 := @this: androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask;

        $r1 := @parameter0: java.lang.Exception;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: androidx.browser.trusted.ConnectionHolder mConnection>;

        virtualinvoke $r2.<androidx.browser.trusted.ConnectionHolder: void cancel(java.lang.Exception)>($r1);

     label1:
        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        java.lang.Object $r1;
        androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask r0;
        java.lang.Exception $r2;

        r0 := @this: androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Exception) $r1;

        virtualinvoke r0.<androidx.browser.trusted.TrustedWebActivityServiceConnectionPool$BindToServiceAsyncTask: void onPostExecute(java.lang.Exception)>($r2);

        return;
    }
}
