public final class com.google.android.gms.internal.ads.zzaxy extends java.lang.Object
{
    private final java.util.Map zza;

    public void <init>()
    {
        com.google.android.gms.internal.ads.zzaxy r0;
        java.util.HashMap $r1;

        r0 := @this: com.google.android.gms.internal.ads.zzaxy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.google.android.gms.internal.ads.zzaxy: java.util.Map zza> = $r1;

        return;
    }

    public final java.util.concurrent.atomic.AtomicReference zza(java.lang.String)
    {
        com.google.android.gms.internal.ads.zzaxy r0;
        java.lang.Throwable $r5;
        java.util.Map $r1;
        java.lang.Object $r4;
        java.lang.String $r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        boolean $z0;

        r0 := @this: com.google.android.gms.internal.ads.zzaxy;

        $r2 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r1 = r0.<com.google.android.gms.internal.ads.zzaxy: java.util.Map zza>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r3 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        $r1 = r0.<com.google.android.gms.internal.ads.zzaxy: java.util.Map zza>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

     label2:
        exitmonitor r0;

     label3:
        $r1 = r0.<com.google.android.gms.internal.ads.zzaxy: java.util.Map zza>;

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r3 = (java.util.concurrent.atomic.AtomicReference) $r4;

        return $r3;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
