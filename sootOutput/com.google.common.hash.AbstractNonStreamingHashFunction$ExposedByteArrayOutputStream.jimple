final class com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream extends java.io.ByteArrayOutputStream
{

    void <init>(int)
    {
        int $i0;
        com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        return;
    }

    byte[] byteArray()
    {
        byte[] r1;
        com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream;

        r1 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: byte[] buf>;

        return r1;
    }

    int length()
    {
        int i0;
        com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream r0;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream;

        i0 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: int count>;

        return i0;
    }

    void write(java.nio.ByteBuffer)
    {
        byte[] $r2;
        com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream r0;
        int $i0, $i1, $i2;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        $i1 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: int count>;

        $i1 = $i1 + $i0;

        $r2 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: byte[] buf>;

        $i2 = lengthof $r2;

        if $i1 <= $i2 goto label1;

        $r2 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: byte[] buf>;

        $i1 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: int count>;

        $i1 = $i1 + $i0;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r2, $i1);

        r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: byte[] buf> = $r2;

     label1:
        $r2 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: byte[] buf>;

        $i1 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: int count>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r2, $i1, $i0);

        $i1 = r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: int count>;

        $i0 = $i1 + $i0;

        r0.<com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream: int count> = $i0;

        return;
    }
}
