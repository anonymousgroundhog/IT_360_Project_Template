final class kotlin.sequences.GeneratorSequence extends java.lang.Object implements kotlin.sequences.Sequence
{
    private final kotlin.jvm.functions.Function0 getInitialValue;
    private final kotlin.jvm.functions.Function1 getNextValue;

    public void <init>(kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1)
    {
        kotlin.sequences.GeneratorSequence r0;
        kotlin.jvm.functions.Function1 $r2;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: kotlin.sequences.GeneratorSequence;

        $r1 := @parameter0: kotlin.jvm.functions.Function0;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "getInitialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "getNextValue");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function0 getInitialValue> = $r1;

        r0.<kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function1 getNextValue> = $r2;

        return;
    }

    public static final kotlin.jvm.functions.Function0 access$getGetInitialValue$p(kotlin.sequences.GeneratorSequence)
    {
        kotlin.sequences.GeneratorSequence $r0;
        kotlin.jvm.functions.Function0 r1;

        $r0 := @parameter0: kotlin.sequences.GeneratorSequence;

        r1 = $r0.<kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function0 getInitialValue>;

        return r1;
    }

    public static final kotlin.jvm.functions.Function1 access$getGetNextValue$p(kotlin.sequences.GeneratorSequence)
    {
        kotlin.sequences.GeneratorSequence $r0;
        kotlin.jvm.functions.Function1 r1;

        $r0 := @parameter0: kotlin.sequences.GeneratorSequence;

        r1 = $r0.<kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function1 getNextValue>;

        return r1;
    }

    public java.util.Iterator iterator()
    {
        kotlin.sequences.GeneratorSequence r0;
        java.util.Iterator $r2;
        kotlin.sequences.GeneratorSequence$iterator$1 $r1;

        r0 := @this: kotlin.sequences.GeneratorSequence;

        $r1 = new kotlin.sequences.GeneratorSequence$iterator$1;

        specialinvoke $r1.<kotlin.sequences.GeneratorSequence$iterator$1: void <init>(kotlin.sequences.GeneratorSequence)>(r0);

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }
}
