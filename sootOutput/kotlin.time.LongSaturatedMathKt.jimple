public final class kotlin.time.LongSaturatedMathKt extends java.lang.Object
{

    private static final long checkInfiniteSumDefined-PjuGub4(long, long, long)
    {
        byte $b3;
        int $i4;
        long $l0, $l1, $l2;
        java.lang.IllegalArgumentException $r0;
        boolean $z0;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $z0 = staticinvoke <kotlin.time.Duration: boolean isInfinite-impl(long)>($l1);

        if $z0 == 0 goto label2;

        $l1 = $l0 ^ $l2;

        $b3 = $l1 cmp 0L;

        $i4 = (int) $b3;

        if $i4 < 0 goto label1;

        return $l0;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Summing infinities of different signs");

        throw $r0;

     label2:
        return $l0;
    }

    private static final boolean isSaturated(long)
    {
        long $l0;
        byte $b1;

        $l0 := @parameter0: long;

        $l0 = $l0 - 1L;

        $l0 = 1L | $l0;

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final long saturatingAdd-pTJri5U(long, long)
    {
        long $l0, $l1, $l3, $l4;
        byte $b2;
        int $i5;
        boolean $z0, $z1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l3 = staticinvoke <kotlin.time.Duration: long getInWholeNanoseconds-impl(long)>($l1);

        $l4 = $l0 - 1L;

        $l4 = $l4 | 1L;

        $z0 = 1;

        $b2 = $l4 cmp 9223372036854775807L;

        if $b2 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $l0 = staticinvoke <kotlin.time.LongSaturatedMathKt: long checkInfiniteSumDefined-PjuGub4(long,long,long)>($l0, $l1, $l3);

        return $l0;

     label3:
        $l4 = $l3 - 1L;

        $l4 = 1L | $l4;

        $b2 = $l4 cmp 9223372036854775807L;

        if $b2 != 0 goto label4;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        if $z0 == 0 goto label6;

        $l0 = staticinvoke <kotlin.time.LongSaturatedMathKt: long saturatingAddInHalves-pTJri5U(long,long)>($l0, $l1);

        return $l0;

     label6:
        $l1 = $l0 + $l3;

        $l4 = $l0 ^ $l1;

        $l3 = $l3 ^ $l1;

        $l3 = $l4 & $l3;

        $b2 = $l3 cmp 0L;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label7;

        $b2 = $l0 cmp 0L;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label8;

        return -9223372036854775808L;

     label7:
        return $l1;

     label8:
        return 9223372036854775807L;
    }

    private static final long saturatingAddInHalves-pTJri5U(long, long)
    {
        kotlin.time.DurationUnit $r0;
        long $l0, $l1, $l3, $l4;
        byte $b2;
        boolean $z0;
        double $d0, $d1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l3 = staticinvoke <kotlin.time.Duration: long div-UwyO8pc(long,int)>($l1, 2);

        $l4 = staticinvoke <kotlin.time.Duration: long getInWholeNanoseconds-impl(long)>($l3);

        $l4 = $l4 - 1L;

        $l4 = 1L | $l4;

        $b2 = $l4 cmp 9223372036854775807L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $d0 = (double) $l0;

        $r0 = <kotlin.time.DurationUnit: kotlin.time.DurationUnit NANOSECONDS>;

        $d1 = staticinvoke <kotlin.time.Duration: double toDouble-impl(long,kotlin.time.DurationUnit)>($l1, $r0);

        $d0 = $d0 + $d1;

        $l0 = (long) $d0;

        return $l0;

     label3:
        $l0 = staticinvoke <kotlin.time.LongSaturatedMathKt: long saturatingAdd-pTJri5U(long,long)>($l0, $l3);

        $l1 = staticinvoke <kotlin.time.Duration: long minus-LRDsOJo(long,long)>($l1, $l3);

        $l0 = staticinvoke <kotlin.time.LongSaturatedMathKt: long saturatingAdd-pTJri5U(long,long)>($l0, $l1);

        return $l0;
    }

    public static final long saturatingDiff(long, long)
    {
        byte $b2;
        kotlin.time.DurationUnit $r0;
        long $l0, $l1, $l3;
        boolean $z0;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l3 = $l1 - 1L;

        $l3 = 1L | $l3;

        $b2 = $l3 cmp 9223372036854775807L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = <kotlin.time.DurationUnit: kotlin.time.DurationUnit DAYS>;

        $l0 = staticinvoke <kotlin.time.DurationKt: long toDuration(long,kotlin.time.DurationUnit)>($l1, $r0);

        $l0 = staticinvoke <kotlin.time.Duration: long unaryMinus-UwyO8pc(long)>($l0);

        return $l0;

     label3:
        $l0 = staticinvoke <kotlin.time.LongSaturatedMathKt: long saturatingFiniteDiff(long,long)>($l0, $l1);

        return $l0;
    }

    private static final long saturatingFiniteDiff(long, long)
    {
        kotlin.time.DurationUnit $r1;
        long $l0, $l1, l2, $l3, l4;
        kotlin.time.Duration$Companion $r0;
        byte b5;
        int $i6;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        l2 = $l0 - $l1;

        $l3 = l2 ^ $l0;

        l4 = l2 ^ $l1;

        l4 = l4 ^ -1L;

        $l3 = $l3 & l4;

        b5 = $l3 cmp 0L;

        $i6 = (int) b5;

        if $i6 >= 0 goto label1;

        l2 = (long) 1000000;

        $l3 = $l0 / l2;

        l4 = $l1 / l2;

        $l3 = $l3 - l4;

        $l0 = $l0 % l2;

        $l1 = $l1 % l2;

        $l0 = $l0 - $l1;

        $r0 = <kotlin.time.Duration: kotlin.time.Duration$Companion Companion>;

        $r1 = <kotlin.time.DurationUnit: kotlin.time.DurationUnit MILLISECONDS>;

        $l1 = staticinvoke <kotlin.time.DurationKt: long toDuration(long,kotlin.time.DurationUnit)>($l3, $r1);

        $r0 = <kotlin.time.Duration: kotlin.time.Duration$Companion Companion>;

        $r1 = <kotlin.time.DurationUnit: kotlin.time.DurationUnit NANOSECONDS>;

        $l0 = staticinvoke <kotlin.time.DurationKt: long toDuration(long,kotlin.time.DurationUnit)>($l0, $r1);

        $l0 = staticinvoke <kotlin.time.Duration: long plus-LRDsOJo(long,long)>($l1, $l0);

        return $l0;

     label1:
        $r0 = <kotlin.time.Duration: kotlin.time.Duration$Companion Companion>;

        $r1 = <kotlin.time.DurationUnit: kotlin.time.DurationUnit NANOSECONDS>;

        $l0 = staticinvoke <kotlin.time.DurationKt: long toDuration(long,kotlin.time.DurationUnit)>(l2, $r1);

        return $l0;
    }

    public static final long saturatingOriginsDiff(long, long)
    {
        kotlin.time.DurationUnit $r1;
        long $l0, $l1, $l3;
        kotlin.time.Duration$Companion $r0;
        byte $b2;
        boolean $z0, $z1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l3 = $l1 - 1L;

        $l3 = $l3 | 1L;

        $z0 = 1;

        $b2 = $l3 cmp 9223372036854775807L;

        if $b2 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label4;

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label3;

        $r0 = <kotlin.time.Duration: kotlin.time.Duration$Companion Companion>;

        $l0 = virtualinvoke $r0.<kotlin.time.Duration$Companion: long getZERO-UwyO8pc()>();

        return $l0;

     label3:
        $r1 = <kotlin.time.DurationUnit: kotlin.time.DurationUnit DAYS>;

        $l0 = staticinvoke <kotlin.time.DurationKt: long toDuration(long,kotlin.time.DurationUnit)>($l1, $r1);

        $l0 = staticinvoke <kotlin.time.Duration: long unaryMinus-UwyO8pc(long)>($l0);

        return $l0;

     label4:
        $l3 = $l0 - 1L;

        $l3 = 1L | $l3;

        $b2 = $l3 cmp 9223372036854775807L;

        if $b2 != 0 goto label5;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        if $z0 == 0 goto label7;

        $r1 = <kotlin.time.DurationUnit: kotlin.time.DurationUnit DAYS>;

        $l0 = staticinvoke <kotlin.time.DurationKt: long toDuration(long,kotlin.time.DurationUnit)>($l0, $r1);

        return $l0;

     label7:
        $l0 = staticinvoke <kotlin.time.LongSaturatedMathKt: long saturatingFiniteDiff(long,long)>($l0, $l1);

        return $l0;
    }
}
