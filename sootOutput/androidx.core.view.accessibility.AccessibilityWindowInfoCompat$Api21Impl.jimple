class androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl extends java.lang.Object
{

    private void <init>()
    {
        androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void getBoundsInScreen(android.view.accessibility.AccessibilityWindowInfo, android.graphics.Rect)
    {
        android.view.accessibility.AccessibilityWindowInfo $r0;
        android.graphics.Rect $r1;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $r1 := @parameter1: android.graphics.Rect;

        virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: void getBoundsInScreen(android.graphics.Rect)>($r1);

        return;
    }

    static android.view.accessibility.AccessibilityWindowInfo getChild(android.view.accessibility.AccessibilityWindowInfo, int)
    {
        int $i0;
        android.view.accessibility.AccessibilityWindowInfo $r0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $i0 := @parameter1: int;

        $r0 = virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getChild(int)>($i0);

        return $r0;
    }

    static int getChildCount(android.view.accessibility.AccessibilityWindowInfo)
    {
        int $i0;
        android.view.accessibility.AccessibilityWindowInfo $r0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: int getChildCount()>();

        return $i0;
    }

    static int getId(android.view.accessibility.AccessibilityWindowInfo)
    {
        int $i0;
        android.view.accessibility.AccessibilityWindowInfo $r0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        return $i0;
    }

    static int getLayer(android.view.accessibility.AccessibilityWindowInfo)
    {
        int $i0;
        android.view.accessibility.AccessibilityWindowInfo $r0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: int getLayer()>();

        return $i0;
    }

    static android.view.accessibility.AccessibilityWindowInfo getParent(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo $r0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $r0 = virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getParent()>();

        return $r0;
    }

    static android.view.accessibility.AccessibilityNodeInfo getRoot(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo $r0;
        android.view.accessibility.AccessibilityNodeInfo $r1;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $r1 = virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getRoot()>();

        return $r1;
    }

    static int getType(android.view.accessibility.AccessibilityWindowInfo)
    {
        int $i0;
        android.view.accessibility.AccessibilityWindowInfo $r0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: int getType()>();

        return $i0;
    }

    static boolean isAccessibilityFocused(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $z0 = virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: boolean isAccessibilityFocused()>();

        return $z0;
    }

    static boolean isActive(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $z0 = virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: boolean isActive()>();

        return $z0;
    }

    static boolean isFocused(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $z0 = virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()>();

        return $z0;
    }

    static android.view.accessibility.AccessibilityWindowInfo obtain()
    {
        android.view.accessibility.AccessibilityWindowInfo $r0;

        $r0 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain()>();

        return $r0;
    }

    static android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo $r0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $r0 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>($r0);

        return $r0;
    }

    static void recycle(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo $r0;

        $r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        virtualinvoke $r0.<android.view.accessibility.AccessibilityWindowInfo: void recycle()>();

        return;
    }
}
