class com.google.common.util.concurrent.ClosingFuture$1 extends java.lang.Object implements com.google.common.util.concurrent.FutureCallback
{
    final java.util.concurrent.Executor val$closingExecutor;
    final com.google.common.util.concurrent.ClosingFuture val$closingFuture;

    void <init>(com.google.common.util.concurrent.ClosingFuture, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ClosingFuture $r1;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.ClosingFuture$1 r0;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$1;

        $r1 := @parameter0: com.google.common.util.concurrent.ClosingFuture;

        $r2 := @parameter1: java.util.concurrent.Executor;

        r0.<com.google.common.util.concurrent.ClosingFuture$1: com.google.common.util.concurrent.ClosingFuture val$closingFuture> = $r1;

        r0.<com.google.common.util.concurrent.ClosingFuture$1: java.util.concurrent.Executor val$closingExecutor> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFailure(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        com.google.common.util.concurrent.ClosingFuture$1 r0;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$1;

        $r1 := @parameter0: java.lang.Throwable;

        return;
    }

    public void onSuccess(java.io.Closeable)
    {
        com.google.common.util.concurrent.ClosingFuture$CloseableList $r4;
        com.google.common.util.concurrent.ClosingFuture$DeferredCloser $r5;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.ClosingFuture$1 r0;
        java.io.Closeable $r1;
        com.google.common.util.concurrent.ClosingFuture $r3;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$1;

        $r1 := @parameter0: java.io.Closeable;

        $r3 = r0.<com.google.common.util.concurrent.ClosingFuture$1: com.google.common.util.concurrent.ClosingFuture val$closingFuture>;

        $r4 = staticinvoke <com.google.common.util.concurrent.ClosingFuture: com.google.common.util.concurrent.ClosingFuture$CloseableList access$200(com.google.common.util.concurrent.ClosingFuture)>($r3);

        $r5 = staticinvoke <com.google.common.util.concurrent.ClosingFuture$CloseableList: com.google.common.util.concurrent.ClosingFuture$DeferredCloser access$300(com.google.common.util.concurrent.ClosingFuture$CloseableList)>($r4);

        $r2 = r0.<com.google.common.util.concurrent.ClosingFuture$1: java.util.concurrent.Executor val$closingExecutor>;

        virtualinvoke $r5.<com.google.common.util.concurrent.ClosingFuture$DeferredCloser: java.lang.Object eventuallyClose(java.lang.Object,java.util.concurrent.Executor)>($r1, $r2);

        return;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.util.concurrent.ClosingFuture$1 r0;
        java.io.Closeable $r2;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.io.Closeable) $r1;

        virtualinvoke r0.<com.google.common.util.concurrent.ClosingFuture$1: void onSuccess(java.io.Closeable)>($r2);

        return;
    }
}
