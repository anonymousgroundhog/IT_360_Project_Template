public abstract class com.google.common.util.concurrent.AbstractListeningExecutorService extends java.util.concurrent.AbstractExecutorService implements com.google.common.util.concurrent.ListeningExecutorService
{

    public void <init>()
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        specialinvoke r0.<java.util.concurrent.AbstractExecutorService: void <init>()>();

        return;
    }

    protected final java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable, java.lang.Object)
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        com.google.common.util.concurrent.TrustedListenableFutureTask $r3;
        java.lang.Object r2;
        java.lang.Runnable $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        $r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        $r3 = staticinvoke <com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.TrustedListenableFutureTask create(java.lang.Runnable,java.lang.Object)>($r1, r2);

        return $r3;
    }

    protected final java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)
    {
        com.google.common.util.concurrent.TrustedListenableFutureTask $r2;
        java.util.concurrent.Callable r1;
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = staticinvoke <com.google.common.util.concurrent.TrustedListenableFutureTask: com.google.common.util.concurrent.TrustedListenableFutureTask create(java.util.concurrent.Callable)>(r1);

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable)
    {
        java.util.concurrent.Future $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.lang.Runnable $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = specialinvoke r0.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r1);

        $r3 = (com.google.common.util.concurrent.ListenableFuture) $r2;

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable, java.lang.Object)
    {
        java.util.concurrent.Future $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.lang.Object r2;
        java.lang.Runnable $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        $r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>($r1, r2);

        $r4 = (com.google.common.util.concurrent.ListenableFuture) $r3;

        return $r4;
    }

    public com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)
    {
        java.util.concurrent.Future $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.util.concurrent.Callable r1;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = specialinvoke r0.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>(r1);

        $r3 = (com.google.common.util.concurrent.ListenableFuture) $r2;

        return $r3;
    }

    public volatile java.util.concurrent.Future submit(java.lang.Runnable)
    {
        com.google.common.util.concurrent.ListenableFuture $r1;
        java.lang.Runnable $r2;
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        $r2 := @parameter0: java.lang.Runnable;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable)>($r2);

        return $r1;
    }

    public volatile java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object)
    {
        com.google.common.util.concurrent.ListenableFuture $r2;
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.lang.Object $r1;
        java.lang.Runnable $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        $r3 := @parameter0: java.lang.Runnable;

        $r1 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object)>($r3, $r1);

        return $r2;
    }

    public volatile java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        java.util.concurrent.Callable $r2;
        com.google.common.util.concurrent.ListenableFuture $r1;
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        $r2 := @parameter0: java.util.concurrent.Callable;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)>($r2);

        return $r1;
    }
}
