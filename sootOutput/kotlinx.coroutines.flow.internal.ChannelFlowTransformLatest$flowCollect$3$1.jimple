final class kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlinx.coroutines.CoroutineScope $$this$coroutineScope;
    final kotlinx.coroutines.flow.FlowCollector $collector;
    final kotlin.jvm.internal.Ref$ObjectRef $previousFlow;
    final kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0;

    void <init>(kotlin.jvm.internal.Ref$ObjectRef, kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest, kotlinx.coroutines.flow.FlowCollector)
    {
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest $r3;
        kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1 r0;
        kotlin.jvm.internal.Ref$ObjectRef $r1;
        kotlinx.coroutines.CoroutineScope $r2;

        r0 := @this: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1;

        $r1 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r2 := @parameter1: kotlinx.coroutines.CoroutineScope;

        $r3 := @parameter2: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest;

        $r4 := @parameter3: kotlinx.coroutines.flow.FlowCollector;

        r0.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlin.jvm.internal.Ref$ObjectRef $previousFlow> = $r1;

        r0.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.CoroutineScope $$this$coroutineScope> = $r2;

        r0.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0> = $r3;

        r0.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.flow.FlowCollector $collector> = $r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        java.lang.IllegalStateException $r6;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1 $r3;
        kotlinx.coroutines.Job r7;
        kotlinx.coroutines.CoroutineScope $r12;
        int i0;
        kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1 r0, r8;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef $r9;
        java.util.concurrent.CancellationException $r11;
        kotlin.jvm.functions.Function2 $r17;
        kotlinx.coroutines.flow.internal.ChildCancelledException $r10;
        kotlin.Unit r18;
        kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2 $r14;
        kotlinx.coroutines.flow.FlowCollector $r16;
        kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest $r15;
        kotlinx.coroutines.CoroutineStart $r13;
        java.lang.Object $r1, $r4, $r5;

        r0 := @this: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1;

        if $z0 == 0 goto label1;

        $r3 = (kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1) $r2;

        i0 = $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: int label>;

        i0 = i0 & -2147483648;

        if i0 == 0 goto label1;

        i0 = $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: int label>;

        i0 = i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: int label> = i0;

        goto label2;

     label1:
        $r3 = new kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: void <init>(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1,kotlin.coroutines.Continuation)>(r0, $r2);

     label2:
        $r4 = $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            default: goto label3;
        };

     label3:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;

     label4:
        $r1 = $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$2>;

        r7 = (kotlinx.coroutines.Job) $r1;

        $r1 = $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$1>;

        $r5 = $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$0>;

        r8 = (kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1) $r5;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        goto label6;

     label5:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        r8 = r0;

        $r9 = r0.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlin.jvm.internal.Ref$ObjectRef $previousFlow>;

        $r4 = $r9.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r7 = (kotlinx.coroutines.Job) $r4;

        if r7 == null goto label6;

        $r10 = new kotlinx.coroutines.flow.internal.ChildCancelledException;

        specialinvoke $r10.<kotlinx.coroutines.flow.internal.ChildCancelledException: void <init>()>();

        $r11 = (java.util.concurrent.CancellationException) $r10;

        interfaceinvoke r7.<kotlinx.coroutines.Job: void cancel(java.util.concurrent.CancellationException)>($r11);

        $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$0> = r0;

        $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$1> = $r1;

        $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$2> = r7;

        $r3.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: int label> = 1;

        $r4 = interfaceinvoke r7.<kotlinx.coroutines.Job: java.lang.Object join(kotlin.coroutines.Continuation)>($r3);

        if $r4 != $r5 goto label6;

        return $r5;

     label6:
        $r9 = r8.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlin.jvm.internal.Ref$ObjectRef $previousFlow>;

        $r12 = r8.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.CoroutineScope $$this$coroutineScope>;

        $r13 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED>;

        $r14 = new kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2;

        $r15 = r8.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0>;

        $r16 = r8.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.flow.FlowCollector $collector>;

        specialinvoke $r14.<kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: void <init>(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest,kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)>($r15, $r16, $r1, null);

        $r17 = (kotlin.jvm.functions.Function2) $r14;

        r7 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r12, null, $r13, $r17, 1, null);

        $r9.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r7;

        r18 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r18;
    }
}
