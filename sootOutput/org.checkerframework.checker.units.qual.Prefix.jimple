public final enum class org.checkerframework.checker.units.qual.Prefix extends java.lang.Enum
{
    private static final org.checkerframework.checker.units.qual.Prefix[] $VALUES;
    public static final enum org.checkerframework.checker.units.qual.Prefix atto;
    public static final enum org.checkerframework.checker.units.qual.Prefix centi;
    public static final enum org.checkerframework.checker.units.qual.Prefix deca;
    public static final enum org.checkerframework.checker.units.qual.Prefix deci;
    public static final enum org.checkerframework.checker.units.qual.Prefix exa;
    public static final enum org.checkerframework.checker.units.qual.Prefix femto;
    public static final enum org.checkerframework.checker.units.qual.Prefix giga;
    public static final enum org.checkerframework.checker.units.qual.Prefix hecto;
    public static final enum org.checkerframework.checker.units.qual.Prefix kilo;
    public static final enum org.checkerframework.checker.units.qual.Prefix mega;
    public static final enum org.checkerframework.checker.units.qual.Prefix micro;
    public static final enum org.checkerframework.checker.units.qual.Prefix milli;
    public static final enum org.checkerframework.checker.units.qual.Prefix nano;
    public static final enum org.checkerframework.checker.units.qual.Prefix one;
    public static final enum org.checkerframework.checker.units.qual.Prefix peta;
    public static final enum org.checkerframework.checker.units.qual.Prefix pico;
    public static final enum org.checkerframework.checker.units.qual.Prefix tera;
    public static final enum org.checkerframework.checker.units.qual.Prefix yocto;
    public static final enum org.checkerframework.checker.units.qual.Prefix yotta;
    public static final enum org.checkerframework.checker.units.qual.Prefix zepto;
    public static final enum org.checkerframework.checker.units.qual.Prefix zetta;

    static void <clinit>()
    {
        org.checkerframework.checker.units.qual.Prefix $r0;
        org.checkerframework.checker.units.qual.Prefix[] $r1;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("yotta", 0);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix yotta> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("zetta", 1);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix zetta> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("exa", 2);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix exa> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("peta", 3);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix peta> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("tera", 4);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix tera> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("giga", 5);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix giga> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("mega", 6);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix mega> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("kilo", 7);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix kilo> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("hecto", 8);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix hecto> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("deca", 9);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix deca> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("one", 10);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix one> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("deci", 11);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix deci> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("centi", 12);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix centi> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("milli", 13);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix milli> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("micro", 14);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix micro> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("nano", 15);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix nano> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("pico", 16);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix pico> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("femto", 17);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix femto> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("atto", 18);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix atto> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("zepto", 19);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix zepto> = $r0;

        $r0 = new org.checkerframework.checker.units.qual.Prefix;

        specialinvoke $r0.<org.checkerframework.checker.units.qual.Prefix: void <init>(java.lang.String,int)>("yocto", 20);

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix yocto> = $r0;

        $r1 = newarray (org.checkerframework.checker.units.qual.Prefix)[21];

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix yotta>;

        $r1[0] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix zetta>;

        $r1[1] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix exa>;

        $r1[2] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix peta>;

        $r1[3] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix tera>;

        $r1[4] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix giga>;

        $r1[5] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix mega>;

        $r1[6] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix kilo>;

        $r1[7] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix hecto>;

        $r1[8] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix deca>;

        $r1[9] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix one>;

        $r1[10] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix deci>;

        $r1[11] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix centi>;

        $r1[12] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix milli>;

        $r1[13] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix micro>;

        $r1[14] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix nano>;

        $r1[15] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix pico>;

        $r1[16] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix femto>;

        $r1[17] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix atto>;

        $r1[18] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix zepto>;

        $r1[19] = $r0;

        $r0 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix yocto>;

        $r1[20] = $r0;

        <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        org.checkerframework.checker.units.qual.Prefix r0;

        r0 := @this: org.checkerframework.checker.units.qual.Prefix;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static org.checkerframework.checker.units.qual.Prefix valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.checkerframework.checker.units.qual.Prefix $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/checkerframework/checker/units/qual/Prefix;", $r0);

        $r2 = (org.checkerframework.checker.units.qual.Prefix) $r1;

        return $r2;
    }

    public static org.checkerframework.checker.units.qual.Prefix[] values()
    {
        java.lang.Object $r0;
        org.checkerframework.checker.units.qual.Prefix[] $r1;

        $r1 = <org.checkerframework.checker.units.qual.Prefix: org.checkerframework.checker.units.qual.Prefix[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.checkerframework.checker.units.qual.Prefix[]) $r0;

        return $r1;
    }
}
