class com.google.common.collect.StandardTable$Column$Values extends com.google.common.collect.Maps$Values
{
    final com.google.common.collect.StandardTable$Column this$1;

    void <init>(com.google.common.collect.StandardTable$Column)
    {
        com.google.common.collect.StandardTable$Column $r1;
        com.google.common.collect.StandardTable$Column$Values r0;

        r0 := @this: com.google.common.collect.StandardTable$Column$Values;

        $r1 := @parameter0: com.google.common.collect.StandardTable$Column;

        r0.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1> = $r1;

        specialinvoke r0.<com.google.common.collect.Maps$Values: void <init>(java.util.Map)>($r1);

        return;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.common.base.Predicate $r3;
        com.google.common.collect.StandardTable$Column $r2;
        java.lang.Object $r1;
        com.google.common.collect.StandardTable$Column$Values r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$Column$Values;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $r2 = r0.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate equalTo(java.lang.Object)>($r1);

        $r3 = staticinvoke <com.google.common.collect.Maps: com.google.common.base.Predicate valuePredicateOnEntries(com.google.common.base.Predicate)>($r3);

        $z0 = virtualinvoke $r2.<com.google.common.collect.StandardTable$Column: boolean removeFromColumnIf(com.google.common.base.Predicate)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        com.google.common.base.Predicate $r3;
        java.util.Collection r1;
        com.google.common.collect.StandardTable$Column $r2;
        com.google.common.collect.StandardTable$Column$Values r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$Column$Values;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate in(java.util.Collection)>(r1);

        $r3 = staticinvoke <com.google.common.collect.Maps: com.google.common.base.Predicate valuePredicateOnEntries(com.google.common.base.Predicate)>($r3);

        $z0 = virtualinvoke $r2.<com.google.common.collect.StandardTable$Column: boolean removeFromColumnIf(com.google.common.base.Predicate)>($r3);

        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        com.google.common.base.Predicate $r3;
        java.util.Collection r1;
        com.google.common.collect.StandardTable$Column $r2;
        com.google.common.collect.StandardTable$Column$Values r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$Column$Values;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate in(java.util.Collection)>(r1);

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate not(com.google.common.base.Predicate)>($r3);

        $r3 = staticinvoke <com.google.common.collect.Maps: com.google.common.base.Predicate valuePredicateOnEntries(com.google.common.base.Predicate)>($r3);

        $z0 = virtualinvoke $r2.<com.google.common.collect.StandardTable$Column: boolean removeFromColumnIf(com.google.common.base.Predicate)>($r3);

        return $z0;
    }
}
