class com.google.common.util.concurrent.AtomicLongMap$1 extends java.lang.Object implements com.google.common.base.Function
{

    void <init>(com.google.common.util.concurrent.AtomicLongMap)
    {
        com.google.common.util.concurrent.AtomicLongMap $r1;
        com.google.common.util.concurrent.AtomicLongMap$1 r0;

        r0 := @this: com.google.common.util.concurrent.AtomicLongMap$1;

        $r1 := @parameter0: com.google.common.util.concurrent.AtomicLongMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Long apply(java.util.concurrent.atomic.AtomicLong)
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        java.lang.Long $r2;
        long $l0;
        com.google.common.util.concurrent.AtomicLongMap$1 r0;

        r0 := @this: com.google.common.util.concurrent.AtomicLongMap$1;

        $r1 := @parameter0: java.util.concurrent.atomic.AtomicLong;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r2;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        java.util.concurrent.atomic.AtomicLong $r3;
        java.lang.Long $r1;
        java.lang.Object $r2;
        com.google.common.util.concurrent.AtomicLongMap$1 r0;

        r0 := @this: com.google.common.util.concurrent.AtomicLongMap$1;

        $r2 := @parameter0: java.lang.Object;

        $r3 = (java.util.concurrent.atomic.AtomicLong) $r2;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.AtomicLongMap$1: java.lang.Long apply(java.util.concurrent.atomic.AtomicLong)>($r3);

        return $r1;
    }
}
