abstract class com.google.common.cache.CacheBuilderSpec$IntegerParser extends java.lang.Object implements com.google.common.cache.CacheBuilderSpec$ValueParser
{

    void <init>()
    {
        com.google.common.cache.CacheBuilderSpec$IntegerParser r0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec$IntegerParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r6;
        java.lang.NumberFormatException r4;
        java.lang.IllegalArgumentException $r5;
        com.google.common.cache.CacheBuilderSpec$IntegerParser r0;
        int $i0;
        java.lang.StringBuilder $r7;
        java.lang.String $r2, $r3;
        com.google.common.cache.CacheBuilderSpec $r1;
        boolean $z0;

        r0 := @this: com.google.common.cache.CacheBuilderSpec$IntegerParser;

        $r1 := @parameter0: com.google.common.cache.CacheBuilderSpec;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>($r3);

        if $z0 != 0 goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        virtualinvoke r0.<com.google.common.cache.CacheBuilderSpec$IntegerParser: void parseInteger(com.google.common.cache.CacheBuilderSpec,int)>($r1, $i0);

     label2:
        return;

     label3:
        r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r2;

        $r6[1] = $r3;

        $r2 = staticinvoke <com.google.common.cache.CacheBuilderSpec: java.lang.String access$000(java.lang.String,java.lang.Object[])>("key %s value set to %s, must be integer", $r6);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r2, r4);

        throw $r5;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + 21;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value of key ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" omitted");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected abstract void parseInteger(com.google.common.cache.CacheBuilderSpec, int);
}
