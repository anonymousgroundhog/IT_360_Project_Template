final class com.google.common.hash.Murmur3_128HashFunction extends com.google.common.hash.AbstractHashFunction implements java.io.Serializable
{
    static final com.google.common.hash.HashFunction GOOD_FAST_HASH_128;
    static final com.google.common.hash.HashFunction MURMUR3_128;
    private static final long serialVersionUID;
    private final int seed;

    static void <clinit>()
    {
        int $i0;
        com.google.common.hash.Murmur3_128HashFunction $r0;

        $r0 = new com.google.common.hash.Murmur3_128HashFunction;

        specialinvoke $r0.<com.google.common.hash.Murmur3_128HashFunction: void <init>(int)>(0);

        <com.google.common.hash.Murmur3_128HashFunction: com.google.common.hash.HashFunction MURMUR3_128> = $r0;

        $r0 = new com.google.common.hash.Murmur3_128HashFunction;

        $i0 = <com.google.common.hash.Hashing: int GOOD_FAST_HASH_SEED>;

        specialinvoke $r0.<com.google.common.hash.Murmur3_128HashFunction: void <init>(int)>($i0);

        <com.google.common.hash.Murmur3_128HashFunction: com.google.common.hash.HashFunction GOOD_FAST_HASH_128> = $r0;

        return;
    }

    void <init>(int)
    {
        int $i0;
        com.google.common.hash.Murmur3_128HashFunction r0;

        r0 := @this: com.google.common.hash.Murmur3_128HashFunction;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.common.hash.AbstractHashFunction: void <init>()>();

        r0.<com.google.common.hash.Murmur3_128HashFunction: int seed> = $i0;

        return;
    }

    public int bits()
    {
        com.google.common.hash.Murmur3_128HashFunction r0;

        r0 := @this: com.google.common.hash.Murmur3_128HashFunction;

        return 128;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.hash.Murmur3_128HashFunction r0, r2;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean z0;

        r0 := @this: com.google.common.hash.Murmur3_128HashFunction;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof com.google.common.hash.Murmur3_128HashFunction;

        if z0 == 0 goto label1;

        r2 = (com.google.common.hash.Murmur3_128HashFunction) $r1;

        $i0 = r0.<com.google.common.hash.Murmur3_128HashFunction: int seed>;

        $i1 = r2.<com.google.common.hash.Murmur3_128HashFunction: int seed>;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        com.google.common.hash.Murmur3_128HashFunction r0;
        int $i0, $i1;
        java.lang.Class $r1;

        r0 := @this: com.google.common.hash.Murmur3_128HashFunction;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = r0.<com.google.common.hash.Murmur3_128HashFunction: int seed>;

        $i0 = $i1 ^ $i0;

        return $i0;
    }

    public com.google.common.hash.Hasher newHasher()
    {
        int $i0;
        com.google.common.hash.Murmur3_128HashFunction r0;
        com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher $r1;

        r0 := @this: com.google.common.hash.Murmur3_128HashFunction;

        $r1 = new com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher;

        $i0 = r0.<com.google.common.hash.Murmur3_128HashFunction: int seed>;

        specialinvoke $r1.<com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher: void <init>(int)>($i0);

        return $r1;
    }

    public java.lang.String toString()
    {
        com.google.common.hash.Murmur3_128HashFunction r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.google.common.hash.Murmur3_128HashFunction;

        $i0 = r0.<com.google.common.hash.Murmur3_128HashFunction: int seed>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(32);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hashing.murmur3_128(");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
