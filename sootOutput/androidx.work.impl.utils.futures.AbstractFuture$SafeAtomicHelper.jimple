final class androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper extends androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper
{
    final java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater;
    final java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater;
    final java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater;
    final java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater;
    final java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater;

    void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.util.concurrent.atomic.AtomicReferenceFieldUpdater)
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater r1, r2, r3, r4, r5;
        androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper r0;

        r0 := @this: androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        r3 := @parameter2: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        r4 := @parameter3: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        r5 := @parameter4: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        specialinvoke r0.<androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper: void <init>(androidx.work.impl.utils.futures.AbstractFuture$1)>(null);

        r0.<androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater> = r1;

        r0.<androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater> = r2;

        r0.<androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater> = r3;

        r0.<androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater> = r4;

        r0.<androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater> = r5;

        return;
    }

    boolean casListeners(androidx.work.impl.utils.futures.AbstractFuture, androidx.work.impl.utils.futures.AbstractFuture$Listener, androidx.work.impl.utils.futures.AbstractFuture$Listener)
    {
        androidx.work.impl.utils.futures.AbstractFuture r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper r0;
        androidx.work.impl.utils.futures.AbstractFuture$Listener $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: androidx.work.impl.utils.futures.AbstractFuture;

        $r2 := @parameter1: androidx.work.impl.utils.futures.AbstractFuture$Listener;

        $r3 := @parameter2: androidx.work.impl.utils.futures.AbstractFuture$Listener;

        $r4 = r0.<androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r1, $r2, $r3);

        return $z0;
    }

    boolean casValue(androidx.work.impl.utils.futures.AbstractFuture, java.lang.Object, java.lang.Object)
    {
        androidx.work.impl.utils.futures.AbstractFuture r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper r0;
        java.lang.Object $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: androidx.work.impl.utils.futures.AbstractFuture;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r4 = r0.<androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r1, $r2, $r3);

        return $z0;
    }

    boolean casWaiters(androidx.work.impl.utils.futures.AbstractFuture, androidx.work.impl.utils.futures.AbstractFuture$Waiter, androidx.work.impl.utils.futures.AbstractFuture$Waiter)
    {
        androidx.work.impl.utils.futures.AbstractFuture r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper r0;
        androidx.work.impl.utils.futures.AbstractFuture$Waiter $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper;

        r1 := @parameter0: androidx.work.impl.utils.futures.AbstractFuture;

        $r2 := @parameter1: androidx.work.impl.utils.futures.AbstractFuture$Waiter;

        $r3 := @parameter2: androidx.work.impl.utils.futures.AbstractFuture$Waiter;

        $r4 = r0.<androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r1, $r2, $r3);

        return $z0;
    }

    void putNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter, androidx.work.impl.utils.futures.AbstractFuture$Waiter)
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper r0;
        androidx.work.impl.utils.futures.AbstractFuture$Waiter $r1, $r2;

        r0 := @this: androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper;

        $r1 := @parameter0: androidx.work.impl.utils.futures.AbstractFuture$Waiter;

        $r2 := @parameter1: androidx.work.impl.utils.futures.AbstractFuture$Waiter;

        $r3 = r0.<androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void lazySet(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    void putThread(androidx.work.impl.utils.futures.AbstractFuture$Waiter, java.lang.Thread)
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        java.lang.Thread $r2;
        androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper r0;
        androidx.work.impl.utils.futures.AbstractFuture$Waiter $r1;

        r0 := @this: androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper;

        $r1 := @parameter0: androidx.work.impl.utils.futures.AbstractFuture$Waiter;

        $r2 := @parameter1: java.lang.Thread;

        $r3 = r0.<androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void lazySet(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
}
