final class kotlin.collections.builders.MapBuilder$Companion extends java.lang.Object
{

    private void <init>()
    {
        kotlin.collections.builders.MapBuilder$Companion r0;

        r0 := @this: kotlin.collections.builders.MapBuilder$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.collections.builders.MapBuilder$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: kotlin.collections.builders.MapBuilder$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<kotlin.collections.builders.MapBuilder$Companion: void <init>()>();

        return;
    }

    public static final int access$computeHashSize(kotlin.collections.builders.MapBuilder$Companion, int)
    {
        int $i0;
        kotlin.collections.builders.MapBuilder$Companion $r0;

        $r0 := @parameter0: kotlin.collections.builders.MapBuilder$Companion;

        $i0 := @parameter1: int;

        $i0 = specialinvoke $r0.<kotlin.collections.builders.MapBuilder$Companion: int computeHashSize(int)>($i0);

        return $i0;
    }

    public static final int access$computeShift(kotlin.collections.builders.MapBuilder$Companion, int)
    {
        int $i0;
        kotlin.collections.builders.MapBuilder$Companion $r0;

        $r0 := @parameter0: kotlin.collections.builders.MapBuilder$Companion;

        $i0 := @parameter1: int;

        $i0 = specialinvoke $r0.<kotlin.collections.builders.MapBuilder$Companion: int computeShift(int)>($i0);

        return $i0;
    }

    private final int computeHashSize(int)
    {
        int $i0;
        kotlin.collections.builders.MapBuilder$Companion r0;

        r0 := @this: kotlin.collections.builders.MapBuilder$Companion;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 1);

        $i0 = $i0 * 3;

        $i0 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i0);

        return $i0;
    }

    private final int computeShift(int)
    {
        int $i0;
        kotlin.collections.builders.MapBuilder$Companion r0;

        r0 := @this: kotlin.collections.builders.MapBuilder$Companion;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>($i0);

        $i0 = $i0 + 1;

        return $i0;
    }
}
