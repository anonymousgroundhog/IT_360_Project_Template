public final class kotlin.collections.RingBuffer$iterator$1 extends kotlin.collections.AbstractIterator
{
    private int count;
    private int index;
    final kotlin.collections.RingBuffer this$0;

    void <init>(kotlin.collections.RingBuffer)
    {
        int $i0;
        kotlin.collections.RingBuffer $r1;
        kotlin.collections.RingBuffer$iterator$1 r0;

        r0 := @this: kotlin.collections.RingBuffer$iterator$1;

        $r1 := @parameter0: kotlin.collections.RingBuffer;

        r0.<kotlin.collections.RingBuffer$iterator$1: kotlin.collections.RingBuffer this$0> = $r1;

        specialinvoke r0.<kotlin.collections.AbstractIterator: void <init>()>();

        $i0 = virtualinvoke $r1.<kotlin.collections.RingBuffer: int size()>();

        r0.<kotlin.collections.RingBuffer$iterator$1: int count> = $i0;

        $i0 = staticinvoke <kotlin.collections.RingBuffer: int access$getStartIndex$p(kotlin.collections.RingBuffer)>($r1);

        r0.<kotlin.collections.RingBuffer$iterator$1: int index> = $i0;

        return;
    }

    protected void computeNext()
    {
        kotlin.collections.RingBuffer r1;
        java.lang.Object[] $r2;
        int i0, $i1;
        java.lang.Object r3;
        kotlin.collections.RingBuffer$iterator$1 r0;

        r0 := @this: kotlin.collections.RingBuffer$iterator$1;

        i0 = r0.<kotlin.collections.RingBuffer$iterator$1: int count>;

        if i0 != 0 goto label1;

        virtualinvoke r0.<kotlin.collections.RingBuffer$iterator$1: void done()>();

        return;

     label1:
        r1 = r0.<kotlin.collections.RingBuffer$iterator$1: kotlin.collections.RingBuffer this$0>;

        $r2 = staticinvoke <kotlin.collections.RingBuffer: java.lang.Object[] access$getBuffer$p(kotlin.collections.RingBuffer)>(r1);

        i0 = r0.<kotlin.collections.RingBuffer$iterator$1: int index>;

        r3 = $r2[i0];

        virtualinvoke r0.<kotlin.collections.RingBuffer$iterator$1: void setNext(java.lang.Object)>(r3);

        r1 = r0.<kotlin.collections.RingBuffer$iterator$1: kotlin.collections.RingBuffer this$0>;

        i0 = r0.<kotlin.collections.RingBuffer$iterator$1: int index>;

        i0 = i0 + 1;

        $i1 = staticinvoke <kotlin.collections.RingBuffer: int access$getCapacity$p(kotlin.collections.RingBuffer)>(r1);

        i0 = i0 % $i1;

        r0.<kotlin.collections.RingBuffer$iterator$1: int index> = i0;

        i0 = r0.<kotlin.collections.RingBuffer$iterator$1: int count>;

        i0 = i0 + -1;

        r0.<kotlin.collections.RingBuffer$iterator$1: int count> = i0;

        return;
    }
}
