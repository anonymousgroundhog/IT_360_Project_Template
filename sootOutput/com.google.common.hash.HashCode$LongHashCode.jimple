final class com.google.common.hash.HashCode$LongHashCode extends com.google.common.hash.HashCode implements java.io.Serializable
{
    private static final long serialVersionUID;
    final long hash;

    void <init>(long)
    {
        com.google.common.hash.HashCode$LongHashCode r0;
        long $l0;

        r0 := @this: com.google.common.hash.HashCode$LongHashCode;

        $l0 := @parameter0: long;

        specialinvoke r0.<com.google.common.hash.HashCode: void <init>()>();

        r0.<com.google.common.hash.HashCode$LongHashCode: long hash> = $l0;

        return;
    }

    public byte[] asBytes()
    {
        com.google.common.hash.HashCode$LongHashCode r0;
        byte[] $r1;
        long $l0;
        byte $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9;
        int $i1;

        r0 := @this: com.google.common.hash.HashCode$LongHashCode;

        $l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $i1 = (int) $l0;

        $b2 = (byte) $i1;

        $l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $l0 = $l0 >> 8;

        $i1 = (int) $l0;

        $b3 = (byte) $i1;

        $l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $l0 = $l0 >> 16;

        $i1 = (int) $l0;

        $b4 = (byte) $i1;

        $l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $l0 = $l0 >> 24;

        $i1 = (int) $l0;

        $b5 = (byte) $i1;

        $l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $l0 = $l0 >> 32;

        $i1 = (int) $l0;

        $b6 = (byte) $i1;

        $l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $l0 = $l0 >> 40;

        $i1 = (int) $l0;

        $b7 = (byte) $i1;

        $l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $l0 = $l0 >> 48;

        $i1 = (int) $l0;

        $b8 = (byte) $i1;

        $l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $l0 = $l0 >> 56;

        $i1 = (int) $l0;

        $b9 = (byte) $i1;

        $r1 = newarray (byte)[8];

        $r1[0] = $b2;

        $r1[1] = $b3;

        $r1[2] = $b4;

        $r1[3] = $b5;

        $r1[4] = $b6;

        $r1[5] = $b7;

        $r1[6] = $b8;

        $r1[7] = $b9;

        return $r1;
    }

    public int asInt()
    {
        com.google.common.hash.HashCode$LongHashCode r0;
        int $i1;
        long $l0;

        r0 := @this: com.google.common.hash.HashCode$LongHashCode;

        $l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $i1 = (int) $l0;

        return $i1;
    }

    public long asLong()
    {
        com.google.common.hash.HashCode$LongHashCode r0;
        long l0;

        r0 := @this: com.google.common.hash.HashCode$LongHashCode;

        l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        return l0;
    }

    public int bits()
    {
        com.google.common.hash.HashCode$LongHashCode r0;

        r0 := @this: com.google.common.hash.HashCode$LongHashCode;

        return 64;
    }

    boolean equalsSameBits(com.google.common.hash.HashCode)
    {
        com.google.common.hash.HashCode$LongHashCode r0;
        byte $b0;
        com.google.common.hash.HashCode $r1;
        long $l1, $l2;

        r0 := @this: com.google.common.hash.HashCode$LongHashCode;

        $r1 := @parameter0: com.google.common.hash.HashCode;

        $l2 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $l1 = virtualinvoke $r1.<com.google.common.hash.HashCode: long asLong()>();

        $b0 = $l2 cmp $l1;

        if $b0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public long padToLong()
    {
        com.google.common.hash.HashCode$LongHashCode r0;
        long l0;

        r0 := @this: com.google.common.hash.HashCode$LongHashCode;

        l0 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        return l0;
    }

    void writeBytesToImpl(byte[], int, int)
    {
        com.google.common.hash.HashCode$LongHashCode r0;
        byte[] $r1;
        long $l5;
        byte $b6;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: com.google.common.hash.HashCode$LongHashCode;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        i4 = 0;

     label1:
        if i4 >= $i1 goto label2;

        $i2 = $i0 + i4;

        $l5 = r0.<com.google.common.hash.HashCode$LongHashCode: long hash>;

        $i3 = i4 * 8;

        $l5 = $l5 >> $i3;

        $i3 = (int) $l5;

        $b6 = (byte) $i3;

        $r1[$i2] = $b6;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }
}
