class com.google.common.util.concurrent.SequentialExecutor$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.Runnable val$task;

    void <init>(com.google.common.util.concurrent.SequentialExecutor, java.lang.Runnable)
    {
        com.google.common.util.concurrent.SequentialExecutor $r1;
        com.google.common.util.concurrent.SequentialExecutor$1 r0;
        java.lang.Runnable $r2;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$1;

        $r1 := @parameter0: com.google.common.util.concurrent.SequentialExecutor;

        $r2 := @parameter1: java.lang.Runnable;

        r0.<com.google.common.util.concurrent.SequentialExecutor$1: java.lang.Runnable val$task> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.google.common.util.concurrent.SequentialExecutor$1 r0;
        java.lang.Runnable $r1;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$1;

        $r1 = r0.<com.google.common.util.concurrent.SequentialExecutor$1: java.lang.Runnable val$task>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.util.concurrent.SequentialExecutor$1 r0;
        java.lang.Runnable $r2;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$1;

        $r2 = r0.<com.google.common.util.concurrent.SequentialExecutor$1: java.lang.Runnable val$task>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }
}
