public final class kotlin.jvm.JvmClassMappingKt extends java.lang.Object
{

    public static final kotlin.reflect.KClass getAnnotationClass(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation $r0;
        java.lang.Class $r1;
        kotlin.reflect.KClass $r2;

        $r0 := @parameter0: java.lang.'annotation'.Annotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "this as java.lang.annota\u2026otation).annotationType()");

        $r2 = staticinvoke <kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.reflect.KClass<out T of kotlin.jvm.JvmClassMappingKt.<get-annotationClass>>");

        return $r2;
    }

    private static final java.lang.Class getDeclaringJavaClass(java.lang.Enum)
    {
        java.lang.Class $r1;
        java.lang.Enum $r0;

        $r0 := @parameter0: java.lang.Enum;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "this as java.lang.Enum<E>).declaringClass");

        return $r1;
    }

    public static void getDeclaringJavaClass$annotations(java.lang.Enum)
    {
        java.lang.Enum $r0;

        $r0 := @parameter0: java.lang.Enum;

        return;
    }

    public static final java.lang.Class getJavaClass(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.Class $r1;

        $r0 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type java.lang.Class<T of kotlin.jvm.JvmClassMappingKt.<get-javaClass>>");

        return $r1;
    }

    public static final java.lang.Class getJavaClass(kotlin.reflect.KClass)
    {
        java.lang.Class $r1;
        kotlin.reflect.KClass $r0;
        kotlin.jvm.internal.ClassBasedDeclarationContainer $r2;

        $r0 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = (kotlin.jvm.internal.ClassBasedDeclarationContainer) $r0;

        $r1 = interfaceinvoke $r2.<kotlin.jvm.internal.ClassBasedDeclarationContainer: java.lang.Class getJClass()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type java.lang.Class<T of kotlin.jvm.JvmClassMappingKt.<get-java>>");

        return $r1;
    }

    public static void getJavaClass$annotations(kotlin.reflect.KClass)
    {
        kotlin.reflect.KClass $r0;

        $r0 := @parameter0: kotlin.reflect.KClass;

        return;
    }

    public static final java.lang.Class getJavaObjectType(kotlin.reflect.KClass)
    {
        kotlin.reflect.KClass $r0;
        kotlin.jvm.internal.ClassBasedDeclarationContainer r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = (kotlin.jvm.internal.ClassBasedDeclarationContainer) $r0;

        $r2 = interfaceinvoke r1.<kotlin.jvm.internal.ClassBasedDeclarationContainer: java.lang.Class getJClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label01;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type java.lang.Class<T of kotlin.jvm.JvmClassMappingKt.<get-javaObjectType>>");

        return $r2;

     label01:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        if $r3 == null goto label21;

        $i0 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1325958191: goto label19;
            case 104431: goto label17;
            case 3039496: goto label15;
            case 3052374: goto label13;
            case 3327612: goto label11;
            case 3625364: goto label09;
            case 64711720: goto label07;
            case 97526364: goto label05;
            case 109413500: goto label03;
            default: goto label02;
        };

     label02:
        goto label21;

     label03:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 != 0 goto label04;

        goto label21;

     label04:
        $r2 = class "Ljava/lang/Short;";

        goto label21;

     label05:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 != 0 goto label06;

        goto label21;

     label06:
        $r2 = class "Ljava/lang/Float;";

        goto label21;

     label07:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z0 != 0 goto label08;

        goto label21;

     label08:
        $r2 = class "Ljava/lang/Boolean;";

        goto label21;

     label09:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("void");

        if $z0 != 0 goto label10;

        goto label21;

     label10:
        $r2 = class "Ljava/lang/Void;";

        goto label21;

     label11:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z0 != 0 goto label12;

        goto label21;

     label12:
        $r2 = class "Ljava/lang/Long;";

        goto label21;

     label13:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z0 != 0 goto label14;

        goto label21;

     label14:
        $r2 = class "Ljava/lang/Character;";

        goto label21;

     label15:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z0 != 0 goto label16;

        goto label21;

     label16:
        $r2 = class "Ljava/lang/Byte;";

        goto label21;

     label17:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z0 != 0 goto label18;

        goto label21;

     label18:
        $r2 = class "Ljava/lang/Integer;";

        goto label21;

     label19:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z0 != 0 goto label20;

        goto label21;

     label20:
        $r2 = class "Ljava/lang/Double;";

        goto label21;

     label21:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type java.lang.Class<T of kotlin.jvm.JvmClassMappingKt.<get-javaObjectType>>");

        return $r2;
    }

    public static final java.lang.Class getJavaPrimitiveType(kotlin.reflect.KClass)
    {
        kotlin.reflect.KClass $r0;
        kotlin.jvm.internal.ClassBasedDeclarationContainer r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = (kotlin.jvm.internal.ClassBasedDeclarationContainer) $r0;

        $r2 = interfaceinvoke r1.<kotlin.jvm.internal.ClassBasedDeclarationContainer: java.lang.Class getJClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label01;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type java.lang.Class<T of kotlin.jvm.JvmClassMappingKt.<get-javaPrimitiveType>>");

        return $r2;

     label01:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        if $r3 == null goto label21;

        $i0 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2056817302: goto label19;
            case -527879800: goto label17;
            case -515992664: goto label15;
            case 155276373: goto label13;
            case 344809556: goto label11;
            case 398507100: goto label09;
            case 398795216: goto label07;
            case 399092968: goto label05;
            case 761287205: goto label03;
            default: goto label02;
        };

     label02:
        goto label21;

     label03:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Double");

        if $z0 != 0 goto label04;

        goto label21;

     label04:
        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        return $r2;

     label05:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Void");

        if $z0 != 0 goto label06;

        goto label21;

     label06:
        $r2 = <java.lang.Void: java.lang.Class TYPE>;

        return $r2;

     label07:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Long");

        if $z0 != 0 goto label08;

        goto label21;

     label08:
        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        return $r2;

     label09:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Byte");

        if $z0 != 0 goto label10;

        goto label21;

     label10:
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        return $r2;

     label11:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Boolean");

        if $z0 != 0 goto label12;

        goto label21;

     label12:
        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        return $r2;

     label13:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Character");

        if $z0 != 0 goto label14;

        goto label21;

     label14:
        $r2 = <java.lang.Character: java.lang.Class TYPE>;

        return $r2;

     label15:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Short");

        if $z0 != 0 goto label16;

        goto label21;

     label16:
        $r2 = <java.lang.Short: java.lang.Class TYPE>;

        return $r2;

     label17:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Float");

        if $z0 != 0 goto label18;

        goto label21;

     label18:
        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        return $r2;

     label19:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Integer");

        if $z0 != 0 goto label20;

        goto label21;

     label20:
        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        return $r2;

     label21:
        return null;
    }

    public static final kotlin.reflect.KClass getKotlinClass(java.lang.Class)
    {
        java.lang.Class $r0;
        kotlin.reflect.KClass $r1;

        $r0 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>($r0);

        return $r1;
    }

    public static final java.lang.Class getRuntimeClassOfKClassInstance(kotlin.reflect.KClass)
    {
        java.lang.Class $r1;
        java.lang.Object $r2;
        kotlin.reflect.KClass $r0;

        $r0 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = (java.lang.Object) $r0;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type java.lang.Class<kotlin.reflect.KClass<T of kotlin.jvm.JvmClassMappingKt.<get-javaClass>>>");

        return $r1;
    }

    public static void getRuntimeClassOfKClassInstance$annotations(kotlin.reflect.KClass)
    {
        kotlin.reflect.KClass $r0;

        $r0 := @parameter0: kotlin.reflect.KClass;

        return;
    }

    public static final boolean isArrayOf(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Class $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(4, "T");

        $r1 = class "Ljava/lang/Object;";

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        return $z0;
    }
}
