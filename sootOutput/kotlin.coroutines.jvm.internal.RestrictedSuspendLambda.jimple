public abstract class kotlin.coroutines.jvm.internal.RestrictedSuspendLambda extends kotlin.coroutines.jvm.internal.RestrictedContinuationImpl implements kotlin.jvm.internal.FunctionBase, kotlin.coroutines.jvm.internal.SuspendFunction
{
    private final int arity;

    public void <init>(int)
    {
        int $i0;
        kotlin.coroutines.jvm.internal.RestrictedSuspendLambda r0;

        r0 := @this: kotlin.coroutines.jvm.internal.RestrictedSuspendLambda;

        $i0 := @parameter0: int;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>($i0, null);

        return;
    }

    public void <init>(int, kotlin.coroutines.Continuation)
    {
        int $i0;
        kotlin.coroutines.Continuation $r1;
        kotlin.coroutines.jvm.internal.RestrictedSuspendLambda r0;

        r0 := @this: kotlin.coroutines.jvm.internal.RestrictedSuspendLambda;

        $i0 := @parameter0: int;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r1);

        r0.<kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int arity> = $i0;

        return;
    }

    public int getArity()
    {
        int i0;
        kotlin.coroutines.jvm.internal.RestrictedSuspendLambda r0;

        r0 := @this: kotlin.coroutines.jvm.internal.RestrictedSuspendLambda;

        i0 = r0.<kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int arity>;

        return i0;
    }

    public java.lang.String toString()
    {
        kotlin.coroutines.Continuation $r1;
        kotlin.coroutines.jvm.internal.RestrictedSuspendLambda r0;
        java.lang.String $r3;
        kotlin.jvm.internal.FunctionBase $r2;

        r0 := @this: kotlin.coroutines.jvm.internal.RestrictedSuspendLambda;

        $r1 = virtualinvoke r0.<kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: kotlin.coroutines.Continuation getCompletion()>();

        if $r1 != null goto label1;

        $r2 = (kotlin.jvm.internal.FunctionBase) r0;

        $r3 = staticinvoke <kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "renderLambdaToString(this)");

        return $r3;

     label1:
        $r3 = specialinvoke r0.<kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: java.lang.String toString()>();

        return $r3;
    }
}
