public final class com.google.common.collect.LinkedHashMultiset extends com.google.common.collect.AbstractMapBasedMultiset
{

    void <init>(int)
    {
        com.google.common.collect.LinkedHashMultiset r0;
        int $i0;

        r0 := @this: com.google.common.collect.LinkedHashMultiset;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: void <init>(int)>($i0);

        return;
    }

    public static com.google.common.collect.LinkedHashMultiset create()
    {
        com.google.common.collect.LinkedHashMultiset $r0;

        $r0 = staticinvoke <com.google.common.collect.LinkedHashMultiset: com.google.common.collect.LinkedHashMultiset create(int)>(3);

        return $r0;
    }

    public static com.google.common.collect.LinkedHashMultiset create(int)
    {
        int $i0;
        com.google.common.collect.LinkedHashMultiset $r0;

        $i0 := @parameter0: int;

        $r0 = new com.google.common.collect.LinkedHashMultiset;

        specialinvoke $r0.<com.google.common.collect.LinkedHashMultiset: void <init>(int)>($i0);

        return $r0;
    }

    public static com.google.common.collect.LinkedHashMultiset create(java.lang.Iterable)
    {
        int $i0;
        com.google.common.collect.LinkedHashMultiset $r1;
        java.lang.Iterable r0;

        r0 := @parameter0: java.lang.Iterable;

        $i0 = staticinvoke <com.google.common.collect.Multisets: int inferDistinctElements(java.lang.Iterable)>(r0);

        $r1 = staticinvoke <com.google.common.collect.LinkedHashMultiset: com.google.common.collect.LinkedHashMultiset create(int)>($i0);

        staticinvoke <com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, r0);

        return $r1;
    }

    public volatile boolean contains(java.lang.Object)
    {
        com.google.common.collect.LinkedHashMultiset r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultiset;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }

    public volatile java.util.Set elementSet()
    {
        com.google.common.collect.LinkedHashMultiset r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultiset;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: java.util.Set elementSet()>();

        return $r1;
    }

    public volatile java.util.Set entrySet()
    {
        com.google.common.collect.LinkedHashMultiset r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultiset;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: java.util.Set entrySet()>();

        return $r1;
    }

    public volatile boolean isEmpty()
    {
        com.google.common.collect.LinkedHashMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.LinkedHashMultiset;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: boolean isEmpty()>();

        return $z0;
    }

    com.google.common.collect.ObjectCountHashMap newBackingMap(int)
    {
        com.google.common.collect.LinkedHashMultiset r0;
        int $i0;
        com.google.common.collect.ObjectCountLinkedHashMap $r1;

        r0 := @this: com.google.common.collect.LinkedHashMultiset;

        $i0 := @parameter0: int;

        $r1 = new com.google.common.collect.ObjectCountLinkedHashMap;

        specialinvoke $r1.<com.google.common.collect.ObjectCountLinkedHashMap: void <init>(int)>($i0);

        return $r1;
    }
}
