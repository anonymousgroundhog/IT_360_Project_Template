final class com.google.common.eventbus.EventBus$LoggingHandler extends java.lang.Object implements com.google.common.eventbus.SubscriberExceptionHandler
{
    static final com.google.common.eventbus.EventBus$LoggingHandler INSTANCE;

    static void <clinit>()
    {
        com.google.common.eventbus.EventBus$LoggingHandler $r0;

        $r0 = new com.google.common.eventbus.EventBus$LoggingHandler;

        specialinvoke $r0.<com.google.common.eventbus.EventBus$LoggingHandler: void <init>()>();

        <com.google.common.eventbus.EventBus$LoggingHandler: com.google.common.eventbus.EventBus$LoggingHandler INSTANCE> = $r0;

        return;
    }

    void <init>()
    {
        com.google.common.eventbus.EventBus$LoggingHandler r0;

        r0 := @this: com.google.common.eventbus.EventBus$LoggingHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.util.logging.Logger logger(com.google.common.eventbus.SubscriberExceptionContext)
    {
        com.google.common.eventbus.SubscriberExceptionContext $r0;
        java.util.logging.Logger $r7;
        com.google.common.eventbus.EventBus $r3;
        int $i0, $i1;
        java.lang.Class $r1;
        java.lang.StringBuilder $r6;
        java.lang.String $r2, $r4, $r5;

        $r0 := @parameter0: com.google.common.eventbus.SubscriberExceptionContext;

        $r1 = class "Lcom/google/common/eventbus/EventBus;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<com.google.common.eventbus.SubscriberExceptionContext: com.google.common.eventbus.EventBus getEventBus()>();

        $r4 = virtualinvoke $r3.<com.google.common.eventbus.EventBus: java.lang.String identifier()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + 1;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        return $r7;
    }

    private static java.lang.String message(com.google.common.eventbus.SubscriberExceptionContext)
    {
        com.google.common.eventbus.SubscriberExceptionContext $r0;
        java.lang.Class[] $r3;
        int $i0, $i1;
        java.lang.Class $r4;
        java.lang.Object $r6;
        java.lang.StringBuilder $r10;
        java.lang.String $r2, $r5, $r7, $r8, $r9;
        java.lang.reflect.Method $r1;

        $r0 := @parameter0: com.google.common.eventbus.SubscriberExceptionContext;

        $r1 = virtualinvoke $r0.<com.google.common.eventbus.SubscriberExceptionContext: java.lang.reflect.Method getSubscriberMethod()>();

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r4 = $r3[0];

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r0.<com.google.common.eventbus.SubscriberExceptionContext: java.lang.Object getSubscriber()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r6 = virtualinvoke $r0.<com.google.common.eventbus.SubscriberExceptionContext: java.lang.Object getEvent()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i0 = $i0 + 80;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown by subscriber method ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on subscriber ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when dispatching event: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public void handleException(java.lang.Throwable, com.google.common.eventbus.SubscriberExceptionContext)
    {
        java.lang.Throwable $r1;
        com.google.common.eventbus.SubscriberExceptionContext $r2;
        com.google.common.eventbus.EventBus$LoggingHandler r0;
        java.lang.String $r5;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r4;
        boolean $z0;

        r0 := @this: com.google.common.eventbus.EventBus$LoggingHandler;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: com.google.common.eventbus.SubscriberExceptionContext;

        $r3 = staticinvoke <com.google.common.eventbus.EventBus$LoggingHandler: java.util.logging.Logger logger(com.google.common.eventbus.SubscriberExceptionContext)>($r2);

        $r4 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $z0 = virtualinvoke $r3.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);

        if $z0 == 0 goto label1;

        $r4 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r5 = staticinvoke <com.google.common.eventbus.EventBus$LoggingHandler: java.lang.String message(com.google.common.eventbus.SubscriberExceptionContext)>($r2);

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r4, $r5, $r1);

     label1:
        return;
    }
}
