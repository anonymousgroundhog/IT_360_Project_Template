public final class kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1 extends java.lang.Object implements kotlin.sequences.Sequence
{
    final boolean $partialWindows$inlined;
    final boolean $reuseBuffer$inlined;
    final int $size$inlined;
    final int $step$inlined;
    final kotlin.sequences.Sequence $this_windowedSequence$inlined;

    public void <init>(kotlin.sequences.Sequence, int, int, boolean, boolean)
    {
        kotlin.sequences.Sequence $r1;
        int $i0, $i1;
        kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1 r0;
        boolean $z0, $z1;

        r0 := @this: kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1;

        $r1 := @parameter0: kotlin.sequences.Sequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        r0.<kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: kotlin.sequences.Sequence $this_windowedSequence$inlined> = $r1;

        r0.<kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: int $size$inlined> = $i0;

        r0.<kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: int $step$inlined> = $i1;

        r0.<kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: boolean $partialWindows$inlined> = $z0;

        r0.<kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: boolean $reuseBuffer$inlined> = $z1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r2;
        kotlin.sequences.Sequence $r1;
        int $i0, $i1;
        kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1 r0;
        boolean $z0, $z1;

        r0 := @this: kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1;

        $r1 = r0.<kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: kotlin.sequences.Sequence $this_windowedSequence$inlined>;

        $r2 = interfaceinvoke $r1.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

        $i0 = r0.<kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: int $size$inlined>;

        $i1 = r0.<kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: int $step$inlined>;

        $z0 = r0.<kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: boolean $partialWindows$inlined>;

        $z1 = r0.<kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: boolean $reuseBuffer$inlined>;

        $r2 = staticinvoke <kotlin.collections.SlidingWindowKt: java.util.Iterator windowedIterator(java.util.Iterator,int,int,boolean,boolean)>($r2, $i0, $i1, $z0, $z1);

        return $r2;
    }
}
