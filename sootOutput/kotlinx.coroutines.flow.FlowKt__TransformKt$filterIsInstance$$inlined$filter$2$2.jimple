public final class kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlin.reflect.KClass $klass$inlined;
    final kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow;

    public void <init>(kotlinx.coroutines.flow.FlowCollector, kotlin.reflect.KClass)
    {
        kotlin.reflect.KClass $r2;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2 r0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.reflect.KClass;

        r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: kotlin.reflect.KClass $klass$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        java.lang.IllegalStateException $r8;
        kotlin.coroutines.Continuation $r4;
        kotlin.reflect.KClass $r2;
        kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2 r0;
        kotlin.Unit r9;
        kotlinx.coroutines.flow.FlowCollector $r1;
        int $i0;
        java.lang.Object $r3, $r6, $r7;
        kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1 $r5;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2;

        $r3 := @parameter0: java.lang.Object;

        $r4 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r4 instanceof kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1;

        if $z0 == 0 goto label1;

        $r5 = (kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1) $r4;

        $i0 = $r5.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r5.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: int label>;

        $i0 = $i0 - -2147483648;

        $r5.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: int label> = $i0;

        goto label2;

     label1:
        $r5 = new kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2,kotlin.coroutines.Continuation)>(r0, $r4);

     label2:
        $r6 = $r5.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: java.lang.Object result>;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r5.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            default: goto label3;
        };

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        goto label6;

     label5:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        $r4 = (kotlin.coroutines.Continuation) $r5;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: kotlin.reflect.KClass $klass$inlined>;

        $z0 = interfaceinvoke $r2.<kotlin.reflect.KClass: boolean isInstance(java.lang.Object)>($r3);

        if $z0 == 0 goto label7;

        $r5.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: int label> = 1;

        $r3 = interfaceinvoke $r1.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r3, $r5);

        if $r3 != $r7 goto label6;

        return $r7;

     label6:
        goto label7;

     label7:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r9;
    }
}
