class androidx.work.Configuration$1 extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    private final java.util.concurrent.atomic.AtomicInteger mThreadCount;
    final androidx.work.Configuration this$0;
    final boolean val$isTaskExecutor;

    void <init>(androidx.work.Configuration, boolean)
    {
        androidx.work.Configuration $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        androidx.work.Configuration$1 r0;
        boolean $z0;

        r0 := @this: androidx.work.Configuration$1;

        $r1 := @parameter0: androidx.work.Configuration;

        $z0 := @parameter1: boolean;

        r0.<androidx.work.Configuration$1: androidx.work.Configuration this$0> = $r1;

        r0.<androidx.work.Configuration$1: boolean val$isTaskExecutor> = $z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<androidx.work.Configuration$1: java.util.concurrent.atomic.AtomicInteger mThreadCount> = $r2;

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        androidx.work.Configuration$1 r0;
        java.lang.Runnable $r1;
        java.util.concurrent.atomic.AtomicInteger $r5;
        java.lang.Thread $r2;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String r3;
        boolean z0;

        r0 := @this: androidx.work.Configuration$1;

        $r1 := @parameter0: java.lang.Runnable;

        z0 = r0.<androidx.work.Configuration$1: boolean val$isTaskExecutor>;

        if z0 == 0 goto label1;

        r3 = "WM.task-";

        goto label2;

     label1:
        r3 = "androidx.work-";

     label2:
        $r2 = new java.lang.Thread;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = r0.<androidx.work.Configuration$1: java.util.concurrent.atomic.AtomicInteger mThreadCount>;

        $i0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r1, r3);

        return $r2;
    }
}
