public final class androidx.core.text.HtmlKt extends java.lang.Object
{

    public static final android.text.Spanned parseAsHtml(java.lang.String, int, android.text.Html$ImageGetter, android.text.Html$TagHandler)
    {
        android.text.Spanned $r3;
        int $i0;
        android.text.Html$ImageGetter $r1;
        java.lang.String $r0;
        android.text.Html$TagHandler $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.text.Html$ImageGetter;

        $r2 := @parameter3: android.text.Html$TagHandler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r3 = staticinvoke <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)>($r0, $i0, $r1, $r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "fromHtml(this, flags, imageGetter, tagHandler)");

        return $r3;
    }

    public static android.text.Spanned parseAsHtml$default(java.lang.String, int, android.text.Html$ImageGetter, android.text.Html$TagHandler, int, java.lang.Object)
    {
        android.text.Spanned $r1;
        android.text.Html$TagHandler $r3;
        int $i0, $i1, $i2;
        android.text.Html$ImageGetter $r2;
        java.lang.Object $r4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.text.Html$ImageGetter;

        $r3 := @parameter3: android.text.Html$TagHandler;

        $i1 := @parameter4: int;

        $r4 := @parameter5: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $i0 = 0;

     label1:
        $i2 = $i1 & 2;

        if $i2 == 0 goto label2;

        $r2 = null;

     label2:
        $i1 = $i1 & 4;

        if $i1 == 0 goto label3;

        $r3 = null;

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)>($r0, $i0, $r2, $r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "fromHtml(this, flags, imageGetter, tagHandler)");

        return $r1;
    }

    public static final java.lang.String toHtml(android.text.Spanned, int)
    {
        int $i0;
        android.text.Spanned $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.text.Spanned;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "toHtml(this, option)");

        return $r1;
    }

    public static java.lang.String toHtml$default(android.text.Spanned, int, int, java.lang.Object)
    {
        android.text.Spanned $r0;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r1;

        $r0 := @parameter0: android.text.Spanned;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.lang.Object;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label1;

        $i0 = 0;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "toHtml(this, option)");

        return $r1;
    }
}
