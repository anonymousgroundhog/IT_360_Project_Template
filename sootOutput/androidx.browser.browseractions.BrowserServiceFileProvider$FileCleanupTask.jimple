class androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask extends android.os.AsyncTask
{
    private static final long CLEANUP_REQUIRED_TIME_SPAN;
    private static final long DELETION_FAILED_REATTEMPT_DURATION;
    private static final long IMAGE_RETENTION_DURATION;
    private final android.content.Context mAppContext;

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0;
        long $l0;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(7L);

        <androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: long IMAGE_RETENTION_DURATION> = $l0;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(7L);

        <androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: long CLEANUP_REQUIRED_TIME_SPAN> = $l0;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);

        <androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: long DELETION_FAILED_REATTEMPT_DURATION> = $l0;

        return;
    }

    void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask r0;

        r0 := @this: androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: android.content.Context mAppContext> = $r1;

        return;
    }

    private static boolean isImageFile(java.io.File)
    {
        java.lang.String $r1;
        java.io.File $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("..png");

        return $z0;
    }

    private static boolean shouldCleanUp(android.content.SharedPreferences)
    {
        android.content.SharedPreferences $r0;
        byte $b0;
        int $i4;
        long $l1, $l2, $l3;

        $r0 := @parameter0: android.content.SharedPreferences;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = interfaceinvoke $r0.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("last_cleanup_time", $l1);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = <androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: long CLEANUP_REQUIRED_TIME_SPAN>;

        $l2 = $l3 + $l2;

        $b0 = $l1 cmp $l2;

        $i4 = (int) $b0;

        if $i4 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        java.lang.Void $r1;
        java.lang.Object[] $r2;
        androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask r0;
        java.lang.Void[] $r3;

        r0 := @this: androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r2;

        $r1 = virtualinvoke r0.<androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: java.lang.Void doInBackground(java.lang.Void[])>($r3);

        return $r1;
    }

    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        android.content.SharedPreferences$Editor $r11;
        java.lang.Throwable r12;
        android.content.Context r4, r6;
        long $l1, l2;
        androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask r0;
        byte $b4;
        int i0, i3, $i5;
        java.lang.String $r7;
        java.lang.Void[] $r1;
        boolean $z0, $z1;
        java.io.File r3, $r9, $r14;
        android.content.SharedPreferences $r8;
        java.lang.Object $r2;
        java.lang.StringBuilder r5, $r13;
        java.io.File[] $r10;

        r0 := @this: androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask;

        $r1 := @parameter0: java.lang.Void[];

        r4 = r0.<androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: android.content.Context mAppContext>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        r6 = r0.<androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: android.content.Context mAppContext>;

        $r7 = virtualinvoke r6.<android.content.Context: java.lang.String getPackageName()>();

        r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".image_provider");

        $r7 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = 0;

        $r8 = virtualinvoke r4.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r7, 0);

        $z0 = staticinvoke <androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: boolean shouldCleanUp(android.content.SharedPreferences)>($r8);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r2 = <androidx.browser.browseractions.BrowserServiceFileProvider: java.lang.Object sFileCleanupLock>;

        entermonitor $r2;

        $z0 = 1;

     label02:
        $r14 = new java.io.File;

        r4 = r0.<androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: android.content.Context mAppContext>;

        $r9 = virtualinvoke r4.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "image_provider");

        $z1 = virtualinvoke $r14.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label04;

        exitmonitor $r2;

     label03:
        return null;

     label04:
        $r10 = virtualinvoke $r14.<java.io.File: java.io.File[] listFiles()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = <androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: long IMAGE_RETENTION_DURATION>;

        $l1 = $l1 - l2;

        i3 = lengthof $r10;

     label05:
        if i0 >= i3 goto label08;

        r3 = $r10[i0];

        $z1 = staticinvoke <androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: boolean isImageFile(java.io.File)>(r3);

        if $z1 != 0 goto label06;

        goto label07;

     label06:
        l2 = virtualinvoke r3.<java.io.File: long lastModified()>();

        $b4 = l2 cmp $l1;

        $i5 = (int) $b4;

        if $i5 >= 0 goto label07;

        $z1 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label07;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to delete image: ");

        r3 = virtualinvoke r3.<java.io.File: java.io.File getAbsoluteFile()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r7 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BrowserServiceFP", $r7);

        $z0 = 0;

     label07:
        i0 = i0 + 1;

        goto label05;

     label08:
        if $z0 == 0 goto label09;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        goto label10;

     label09:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = <androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: long CLEANUP_REQUIRED_TIME_SPAN>;

        $l1 = $l1 - l2;

        l2 = <androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask: long DELETION_FAILED_REATTEMPT_DURATION>;

        $l1 = $l1 + l2;

     label10:
        $r11 = interfaceinvoke $r8.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r11.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("last_cleanup_time", $l1);

        interfaceinvoke $r11.<android.content.SharedPreferences$Editor: void apply()>();

        exitmonitor $r2;

     label11:
        return null;

     label12:
        r12 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw r12;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }
}
