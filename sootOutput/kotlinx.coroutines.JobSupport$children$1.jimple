final class kotlinx.coroutines.JobSupport$children$1 extends kotlin.coroutines.jvm.internal.RestrictedSuspendLambda implements kotlin.jvm.functions.Function2
{
    private java.lang.Object L$0;
    java.lang.Object L$1;
    java.lang.Object L$2;
    int label;
    final kotlinx.coroutines.JobSupport this$0;

    void <init>(kotlinx.coroutines.JobSupport, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.JobSupport$children$1 r0;
        kotlinx.coroutines.JobSupport $r1;

        r0 := @this: kotlinx.coroutines.JobSupport$children$1;

        $r1 := @parameter0: kotlinx.coroutines.JobSupport;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.JobSupport$children$1: kotlinx.coroutines.JobSupport this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.JobSupport $r3;
        java.lang.Object $r1;
        kotlinx.coroutines.JobSupport$children$1 r0, $r4;

        r0 := @this: kotlinx.coroutines.JobSupport$children$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new kotlinx.coroutines.JobSupport$children$1;

        $r3 = r0.<kotlinx.coroutines.JobSupport$children$1: kotlinx.coroutines.JobSupport this$0>;

        specialinvoke $r4.<kotlinx.coroutines.JobSupport$children$1: void <init>(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)>($r3, $r2);

        $r4.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r4;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r4;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.JobSupport$children$1 r0;
        kotlin.sequences.SequenceScope $r3;

        r0 := @this: kotlinx.coroutines.JobSupport$children$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.sequences.SequenceScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlin.sequences.SequenceScope, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;
        kotlinx.coroutines.JobSupport$children$1 r0;
        kotlin.sequences.SequenceScope $r1;

        r0 := @this: kotlinx.coroutines.JobSupport$children$1;

        $r1 := @parameter0: kotlin.sequences.SequenceScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$children$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.JobSupport$children$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.IllegalStateException $r4;
        kotlin.coroutines.Continuation r12;
        kotlinx.coroutines.JobSupport $r10;
        kotlinx.coroutines.JobSupport$children$1 r0, r5;
        kotlinx.coroutines.NodeList $r14;
        kotlinx.coroutines.internal.LockFreeLinkedListHead r8;
        kotlinx.coroutines.ChildJob $r1;
        int i0;
        kotlin.sequences.SequenceScope $r9;
        boolean $z0;
        kotlinx.coroutines.ChildHandleNode $r11;
        kotlin.Unit r15;
        kotlinx.coroutines.Incomplete $r13;
        java.lang.Object $r2, $r3, r6;
        kotlinx.coroutines.internal.LockFreeLinkedListNode r7;

        r0 := @this: kotlinx.coroutines.JobSupport$children$1;

        $r2 := @parameter0: java.lang.Object;

        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = r0.<kotlinx.coroutines.JobSupport$children$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r4;

     label2:
        r5 = r0;

        r6 = r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$2>;

        r7 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) r6;

        r6 = r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$1>;

        r8 = (kotlinx.coroutines.internal.LockFreeLinkedListHead) r6;

        r6 = r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0>;

        $r9 = (kotlin.sequences.SequenceScope) r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        goto label8;

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        goto label5;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        r5 = r0;

        $r2 = r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0>;

        $r9 = (kotlin.sequences.SequenceScope) $r2;

        $r10 = r0.<kotlinx.coroutines.JobSupport$children$1: kotlinx.coroutines.JobSupport this$0>;

        $r2 = virtualinvoke $r10.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r2 instanceof kotlinx.coroutines.ChildHandleNode;

        if $z0 == 0 goto label6;

        $r11 = (kotlinx.coroutines.ChildHandleNode) $r2;

        $r1 = $r11.<kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob>;

        r12 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.JobSupport$children$1: int label> = 1;

        $r2 = virtualinvoke $r9.<kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)>($r1, r12);

        if $r2 != $r3 goto label5;

        return $r3;

     label5:
        goto label9;

     label6:
        $z0 = $r2 instanceof kotlinx.coroutines.Incomplete;

        if $z0 == 0 goto label9;

        $r13 = (kotlinx.coroutines.Incomplete) $r2;

        $r14 = interfaceinvoke $r13.<kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()>();

        if $r14 == null goto label9;

        r8 = (kotlinx.coroutines.internal.LockFreeLinkedListHead) $r14;

        $r2 = virtualinvoke r8.<kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Object getNext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlinx.coroutines.internal.LockFreeLinkedListNode{ kotlinx.coroutines.internal.LockFreeLinkedListKt.Node }");

        r7 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r2;

     label7:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r7, r8);

        if $z0 != 0 goto label9;

        $z0 = r7 instanceof kotlinx.coroutines.ChildHandleNode;

        if $z0 == 0 goto label8;

        $r11 = (kotlinx.coroutines.ChildHandleNode) r7;

        $r1 = $r11.<kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob>;

        r5.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0> = $r9;

        r5.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$1> = r8;

        r5.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$2> = r7;

        r5.<kotlinx.coroutines.JobSupport$children$1: int label> = 2;

        $r2 = virtualinvoke $r9.<kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)>($r1, r5);

        if $r2 != $r3 goto label8;

        return $r3;

     label8:
        r7 = virtualinvoke r7.<kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()>();

        goto label7;

     label9:
        r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r15;
    }
}
