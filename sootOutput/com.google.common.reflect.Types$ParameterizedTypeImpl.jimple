final class com.google.common.reflect.Types$ParameterizedTypeImpl extends java.lang.Object implements java.lang.reflect.ParameterizedType, java.io.Serializable
{
    private static final long serialVersionUID;
    private final com.google.common.collect.ImmutableList argumentsList;
    private final java.lang.reflect.Type ownerType;
    private final java.lang.Class rawType;

    void <init>(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type[])
    {
        com.google.common.reflect.Types$JavaVersion $r5;
        com.google.common.collect.ImmutableList $r6;
        java.lang.reflect.Type $r1;
        java.lang.reflect.TypeVariable[] $r4;
        java.lang.reflect.Type[] $r3;
        int $i0, $i1;
        com.google.common.reflect.Types$ParameterizedTypeImpl r0;
        java.lang.Class r2;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Types$ParameterizedTypeImpl;

        $r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.lang.reflect.Type[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $i0 = lengthof $r3;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $i1 = lengthof $r4;

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        staticinvoke <com.google.common.reflect.Types: void access$200(java.lang.reflect.Type[],java.lang.String)>($r3, "type parameter");

        r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType> = $r1;

        r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.Class rawType> = r2;

        $r5 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT>;

        $r6 = virtualinvoke $r5.<com.google.common.reflect.Types$JavaVersion: com.google.common.collect.ImmutableList usedInGenericType(java.lang.reflect.Type[])>($r3);

        r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: com.google.common.collect.ImmutableList argumentsList> = $r6;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.reflect.ParameterizedType r2;
        java.lang.reflect.Type $r3, $r4;
        java.lang.reflect.Type[] $r5, $r6;
        com.google.common.reflect.Types$ParameterizedTypeImpl r0;
        java.lang.Object $r1;
        boolean z0;

        r0 := @this: com.google.common.reflect.Types$ParameterizedTypeImpl;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.lang.reflect.ParameterizedType) $r1;

        $r3 = virtualinvoke r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()>();

        $r4 = interfaceinvoke r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()>();

        $r4 = interfaceinvoke r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();

        z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4);

        if z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r6 = interfaceinvoke r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6);

        if z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.reflect.Type[] getActualTypeArguments()
    {
        java.lang.reflect.Type[] $r1;
        com.google.common.reflect.Types$ParameterizedTypeImpl r0;
        com.google.common.collect.ImmutableList $r2;

        r0 := @this: com.google.common.reflect.Types$ParameterizedTypeImpl;

        $r2 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: com.google.common.collect.ImmutableList argumentsList>;

        $r1 = staticinvoke <com.google.common.reflect.Types: java.lang.reflect.Type[] access$300(java.util.Collection)>($r2);

        return $r1;
    }

    public java.lang.reflect.Type getOwnerType()
    {
        com.google.common.reflect.Types$ParameterizedTypeImpl r0;
        java.lang.reflect.Type r1;

        r0 := @this: com.google.common.reflect.Types$ParameterizedTypeImpl;

        r1 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        return r1;
    }

    public java.lang.reflect.Type getRawType()
    {
        com.google.common.reflect.Types$ParameterizedTypeImpl r0;
        java.lang.Class r1;

        r0 := @this: com.google.common.reflect.Types$ParameterizedTypeImpl;

        r1 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.Class rawType>;

        return r1;
    }

    public int hashCode()
    {
        com.google.common.collect.ImmutableList $r2;
        java.lang.reflect.Type $r1;
        int $i0, $i1;
        com.google.common.reflect.Types$ParameterizedTypeImpl r0;
        java.lang.Class $r3;

        r0 := @this: com.google.common.reflect.Types$ParameterizedTypeImpl;

        $r1 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r1 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

     label2:
        $r2 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: com.google.common.collect.ImmutableList argumentsList>;

        $i1 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: int hashCode()>();

        $i0 = $i0 ^ $i1;

        $r3 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.Class rawType>;

        $i1 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        $i0 = $i0 ^ $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.reflect.Types$JavaVersion $r2;
        java.lang.Iterable $r10;
        com.google.common.collect.ImmutableList $r9;
        java.lang.reflect.Type $r4;
        com.google.common.reflect.Types$ParameterizedTypeImpl r0;
        java.lang.StringBuilder r1, $r6;
        java.lang.Class $r7;
        java.lang.String $r5;
        com.google.common.reflect.Types$ParameterizedTypeImpl$$ExternalSyntheticLambda0 $r3;
        boolean $z0;
        com.google.common.base.Joiner $r8;

        r0 := @this: com.google.common.reflect.Types$ParameterizedTypeImpl;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        if $r4 == null goto label1;

        $r2 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT>;

        $z0 = virtualinvoke $r2.<com.google.common.reflect.Types$JavaVersion: boolean jdkTypeDuplicatesOwnerName()>();

        if $z0 == 0 goto label1;

        $r2 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT>;

        $r4 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        $r5 = virtualinvoke $r2.<com.google.common.reflect.Types$JavaVersion: java.lang.String typeName(java.lang.reflect.Type)>($r4);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

     label1:
        $r7 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: java.lang.Class rawType>;

        $r5 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);

        $r8 = staticinvoke <com.google.common.reflect.Types: com.google.common.base.Joiner access$400()>();

        $r9 = r0.<com.google.common.reflect.Types$ParameterizedTypeImpl: com.google.common.collect.ImmutableList argumentsList>;

        $r2 = <com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r2);

        $r3 = new com.google.common.reflect.Types$ParameterizedTypeImpl$$ExternalSyntheticLambda0;

        specialinvoke $r3.<com.google.common.reflect.Types$ParameterizedTypeImpl$$ExternalSyntheticLambda0: void <init>(com.google.common.reflect.Types$JavaVersion)>($r2);

        $r10 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function)>($r9, $r3);

        $r5 = virtualinvoke $r8.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r10);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
