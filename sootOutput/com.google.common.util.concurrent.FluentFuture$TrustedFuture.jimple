abstract class com.google.common.util.concurrent.FluentFuture$TrustedFuture extends com.google.common.util.concurrent.FluentFuture implements com.google.common.util.concurrent.AbstractFuture$Trusted
{

    void <init>()
    {
        com.google.common.util.concurrent.FluentFuture$TrustedFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture$TrustedFuture;

        specialinvoke r0.<com.google.common.util.concurrent.FluentFuture: void <init>()>();

        return;
    }

    public final void addListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        java.lang.Runnable $r1;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.FluentFuture$TrustedFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture$TrustedFuture;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<com.google.common.util.concurrent.FluentFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r1, $r2);

        return;
    }

    public final boolean cancel(boolean)
    {
        com.google.common.util.concurrent.FluentFuture$TrustedFuture r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture$TrustedFuture;

        $z0 := @parameter0: boolean;

        $z0 = specialinvoke r0.<com.google.common.util.concurrent.FluentFuture: boolean cancel(boolean)>($z0);

        return $z0;
    }

    public final java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.lang.Object $r1;
        com.google.common.util.concurrent.FluentFuture$TrustedFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture$TrustedFuture;

        $r1 = specialinvoke r0.<com.google.common.util.concurrent.FluentFuture: java.lang.Object get()>();

        return $r1;
    }

    public final java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeUnit $r1;
        long $l0;
        java.lang.Object $r2;
        com.google.common.util.concurrent.FluentFuture$TrustedFuture r0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture$TrustedFuture;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = specialinvoke r0.<com.google.common.util.concurrent.FluentFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return $r2;
    }

    public final boolean isCancelled()
    {
        com.google.common.util.concurrent.FluentFuture$TrustedFuture r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture$TrustedFuture;

        $z0 = specialinvoke r0.<com.google.common.util.concurrent.FluentFuture: boolean isCancelled()>();

        return $z0;
    }

    public final boolean isDone()
    {
        com.google.common.util.concurrent.FluentFuture$TrustedFuture r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.FluentFuture$TrustedFuture;

        $z0 = specialinvoke r0.<com.google.common.util.concurrent.FluentFuture: boolean isDone()>();

        return $z0;
    }
}
