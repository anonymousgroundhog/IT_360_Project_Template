class kotlin.collections.UCollectionsKt___UCollectionsKt extends java.lang.Object
{

    public void <init>()
    {
        kotlin.collections.UCollectionsKt___UCollectionsKt r0;

        r0 := @this: kotlin.collections.UCollectionsKt___UCollectionsKt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final int sumOfUByte(java.lang.Iterable)
    {
        java.util.Iterator $r1;
        java.lang.Iterable $r0;
        short $s2;
        byte $b1;
        kotlin.UByte r3;
        int i0, $i3;
        java.lang.Object $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        i0 = 0;

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (kotlin.UByte) $r2;

        $b1 = virtualinvoke r3.<kotlin.UByte: byte unbox-impl()>();

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i3 = (int) $s2;

        $i3 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i3);

        i0 = $i3 + i0;

        i0 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(i0);

        goto label1;

     label2:
        return i0;
    }

    public static final int sumOfUInt(java.lang.Iterable)
    {
        java.util.Iterator $r1;
        kotlin.UInt r3;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Iterable $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = 0;

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (kotlin.UInt) $r2;

        $i1 = virtualinvoke r3.<kotlin.UInt: int unbox-impl()>();

        $i0 = $i0 + $i1;

        $i0 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i0);

        goto label1;

     label2:
        return $i0;
    }

    public static final long sumOfULong(java.lang.Iterable)
    {
        java.util.Iterator $r1;
        long $l0, $l1;
        java.lang.Object $r2;
        kotlin.ULong r3;
        java.lang.Iterable $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $l0 = 0L;

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (kotlin.ULong) $r2;

        $l1 = virtualinvoke r3.<kotlin.ULong: long unbox-impl()>();

        $l0 = $l0 + $l1;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        goto label1;

     label2:
        return $l0;
    }

    public static final int sumOfUShort(java.lang.Iterable)
    {
        java.util.Iterator $r1;
        java.lang.Iterable $r0;
        short $s1;
        kotlin.UShort r3;
        int i0, $i2, $i3;
        java.lang.Object $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        i0 = 0;

        $r1 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (kotlin.UShort) $r2;

        $s1 = virtualinvoke r3.<kotlin.UShort: short unbox-impl()>();

        $i3 = (int) $s1;

        $i2 = 65535 & $i3;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i2);

        i0 = $i2 + i0;

        i0 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(i0);

        goto label1;

     label2:
        return i0;
    }

    public static final byte[] toUByteArray(java.util.Collection)
    {
        byte[] $r1;
        java.util.Iterator $r2;
        java.util.Collection $r0;
        byte $b2;
        kotlin.UByte r4;
        int i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = staticinvoke <kotlin.UByteArray: byte[] constructor-impl(int)>(i0);

        i1 = 0;

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (kotlin.UByte) $r3;

        $b2 = virtualinvoke r4.<kotlin.UByte: byte unbox-impl()>();

        staticinvoke <kotlin.UByteArray: void set-VurrAj0(byte[],int,byte)>($r1, i1, $b2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final int[] toUIntArray(java.util.Collection)
    {
        java.util.Iterator $r2;
        kotlin.UInt r4;
        java.util.Collection $r0;
        int[] $r1;
        int i0, i1, $i2;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = staticinvoke <kotlin.UIntArray: int[] constructor-impl(int)>(i0);

        i1 = 0;

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (kotlin.UInt) $r3;

        $i2 = virtualinvoke r4.<kotlin.UInt: int unbox-impl()>();

        staticinvoke <kotlin.UIntArray: void set-VXSXFK8(int[],int,int)>($r1, i1, $i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final long[] toULongArray(java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection $r0;
        long $l2;
        kotlin.ULong r4;
        long[] $r1;
        int i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = staticinvoke <kotlin.ULongArray: long[] constructor-impl(int)>(i0);

        i1 = 0;

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (kotlin.ULong) $r3;

        $l2 = virtualinvoke r4.<kotlin.ULong: long unbox-impl()>();

        staticinvoke <kotlin.ULongArray: void set-k8EXiF4(long[],int,long)>($r1, i1, $l2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final short[] toUShortArray(java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection $r0;
        short $s2;
        kotlin.UShort r4;
        int i0, i1;
        java.lang.Object $r3;
        short[] $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r1 = staticinvoke <kotlin.UShortArray: short[] constructor-impl(int)>(i0);

        i1 = 0;

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (kotlin.UShort) $r3;

        $s2 = virtualinvoke r4.<kotlin.UShort: short unbox-impl()>();

        staticinvoke <kotlin.UShortArray: void set-01HTLdE(short[],int,short)>($r1, i1, $s2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }
}
