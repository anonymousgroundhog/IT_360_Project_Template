public abstract class com.google.common.io.CharSource extends java.lang.Object
{

    protected void <init>()
    {
        com.google.common.io.CharSource r0;

        r0 := @this: com.google.common.io.CharSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.io.CharSource concat(java.lang.Iterable)
    {
        com.google.common.io.CharSource$ConcatenatedCharSource $r1;
        java.lang.Iterable r0;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = new com.google.common.io.CharSource$ConcatenatedCharSource;

        specialinvoke $r1.<com.google.common.io.CharSource$ConcatenatedCharSource: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static com.google.common.io.CharSource concat(java.util.Iterator)
    {
        com.google.common.io.CharSource $r2;
        java.util.Iterator r0;
        com.google.common.collect.ImmutableList $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Iterator)>(r0);

        $r2 = staticinvoke <com.google.common.io.CharSource: com.google.common.io.CharSource concat(java.lang.Iterable)>($r1);

        return $r2;
    }

    public static transient com.google.common.io.CharSource concat(com.google.common.io.CharSource[])
    {
        com.google.common.io.CharSource $r2;
        com.google.common.io.CharSource[] $r0;
        com.google.common.collect.ImmutableList $r1;

        $r0 := @parameter0: com.google.common.io.CharSource[];

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Object[])>($r0);

        $r2 = staticinvoke <com.google.common.io.CharSource: com.google.common.io.CharSource concat(java.lang.Iterable)>($r1);

        return $r2;
    }

    private long countBySkipping(java.io.Reader) throws java.io.IOException
    {
        byte $b0;
        long $l1, l2;
        com.google.common.io.CharSource r0;
        java.io.Reader $r1;

        r0 := @this: com.google.common.io.CharSource;

        $r1 := @parameter0: java.io.Reader;

        l2 = 0L;

     label1:
        $l1 = virtualinvoke $r1.<java.io.Reader: long skip(long)>(9223372036854775807L);

        $b0 = $l1 cmp 0L;

        if $b0 == 0 goto label2;

        l2 = l2 + $l1;

        goto label1;

     label2:
        return l2;
    }

    public static com.google.common.io.CharSource empty()
    {
        com.google.common.io.CharSource$EmptyCharSource $r0;

        $r0 = staticinvoke <com.google.common.io.CharSource$EmptyCharSource: com.google.common.io.CharSource$EmptyCharSource access$000()>();

        return $r0;
    }

    public static com.google.common.io.CharSource wrap(java.lang.CharSequence)
    {
        com.google.common.io.CharSource$CharSequenceCharSource $r3;
        java.lang.CharSequence $r0;
        com.google.common.io.CharSource$StringCharSource $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 = $r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r1 = new com.google.common.io.CharSource$StringCharSource;

        $r2 = (java.lang.String) $r0;

        specialinvoke $r1.<com.google.common.io.CharSource$StringCharSource: void <init>(java.lang.String)>($r2);

        return $r1;

     label1:
        $r3 = new com.google.common.io.CharSource$CharSequenceCharSource;

        specialinvoke $r3.<com.google.common.io.CharSource$CharSequenceCharSource: void <init>(java.lang.CharSequence)>($r0);

        return $r3;
    }

    public com.google.common.io.ByteSource asByteSource(java.nio.charset.Charset)
    {
        com.google.common.io.CharSource$AsByteSource $r2;
        com.google.common.io.CharSource r0;
        java.nio.charset.Charset $r1;

        r0 := @this: com.google.common.io.CharSource;

        $r1 := @parameter0: java.nio.charset.Charset;

        $r2 = new com.google.common.io.CharSource$AsByteSource;

        specialinvoke $r2.<com.google.common.io.CharSource$AsByteSource: void <init>(com.google.common.io.CharSource,java.nio.charset.Charset)>(r0, $r1);

        return $r2;
    }

    public long copyTo(com.google.common.io.CharSink) throws java.io.IOException
    {
        java.lang.Throwable r6, r8;
        long $l0;
        java.io.Reader $r3;
        java.lang.RuntimeException $r7;
        com.google.common.io.CharSink r1;
        com.google.common.io.Closer $r2;
        java.io.Closeable $r4;
        java.io.Writer $r5;
        com.google.common.io.CharSource r0;

        r0 := @this: com.google.common.io.CharSource;

        r1 := @parameter0: com.google.common.io.CharSink;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label1:
        $r3 = virtualinvoke r0.<com.google.common.io.CharSource: java.io.Reader openStream()>();

        $r4 = virtualinvoke $r2.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r3);

        $r3 = (java.io.Reader) $r4;

        $r5 = virtualinvoke r1.<com.google.common.io.CharSink: java.io.Writer openStream()>();

        $r4 = virtualinvoke $r2.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r5);

        $r5 = (java.io.Writer) $r4;

        $l0 = staticinvoke <com.google.common.io.CharStreams: long copy(java.lang.Readable,java.lang.Appendable)>($r3, $r5);

     label2:
        virtualinvoke $r2.<com.google.common.io.Closer: void close()>();

        return $l0;

     label3:
        r6 := @caughtexception;

     label4:
        $r7 = virtualinvoke $r2.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>(r6);

        throw $r7;

     label5:
        r8 := @caughtexception;

        virtualinvoke $r2.<com.google.common.io.Closer: void close()>();

        throw r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public long copyTo(java.lang.Appendable) throws java.io.IOException
    {
        java.lang.Throwable r5, r7;
        java.lang.Appendable r1;
        long $l0;
        java.io.Reader $r3;
        java.lang.RuntimeException $r6;
        com.google.common.io.Closer $r2;
        java.io.Closeable $r4;
        com.google.common.io.CharSource r0;

        r0 := @this: com.google.common.io.CharSource;

        r1 := @parameter0: java.lang.Appendable;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label1:
        $r3 = virtualinvoke r0.<com.google.common.io.CharSource: java.io.Reader openStream()>();

        $r4 = virtualinvoke $r2.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r3);

        $r3 = (java.io.Reader) $r4;

        $l0 = staticinvoke <com.google.common.io.CharStreams: long copy(java.lang.Readable,java.lang.Appendable)>($r3, r1);

     label2:
        virtualinvoke $r2.<com.google.common.io.Closer: void close()>();

        return $l0;

     label3:
        r5 := @caughtexception;

     label4:
        $r6 = virtualinvoke $r2.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>(r5);

        throw $r6;

     label5:
        r7 := @caughtexception;

        virtualinvoke $r2.<com.google.common.io.Closer: void close()>();

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public boolean isEmpty() throws java.io.IOException
    {
        java.lang.Throwable r7, r9;
        long $l0;
        java.io.Reader $r5;
        java.lang.RuntimeException $r8;
        byte b1;
        java.lang.Long r3;
        com.google.common.io.Closer $r4;
        com.google.common.base.Optional $r1;
        java.io.Closeable $r6;
        int $i2;
        java.lang.Object $r2;
        com.google.common.io.CharSource r0;
        boolean $z0, z1;

        r0 := @this: com.google.common.io.CharSource;

        $r1 = virtualinvoke r0.<com.google.common.io.CharSource: com.google.common.base.Optional lengthIfKnown()>();

        $z0 = virtualinvoke $r1.<com.google.common.base.Optional: boolean isPresent()>();

        z1 = 1;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r1.<com.google.common.base.Optional: java.lang.Object get()>();

        r3 = (java.lang.Long) $r2;

        $l0 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        b1 = $l0 cmp 0L;

        if b1 != 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r4 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label3:
        $r5 = virtualinvoke r0.<com.google.common.io.CharSource: java.io.Reader openStream()>();

        $r6 = virtualinvoke $r4.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r5);

        $r5 = (java.io.Reader) $r6;

        $i2 = virtualinvoke $r5.<java.io.Reader: int read()>();

     label4:
        if $i2 != -1 goto label5;

        goto label6;

     label5:
        z1 = 0;

     label6:
        virtualinvoke $r4.<com.google.common.io.Closer: void close()>();

        return z1;

     label7:
        r7 := @caughtexception;

     label8:
        $r8 = virtualinvoke $r4.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>(r7);

        throw $r8;

     label9:
        r9 := @caughtexception;

        virtualinvoke $r4.<com.google.common.io.Closer: void close()>();

        throw r9;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label9;
    }

    public long length() throws java.io.IOException
    {
        java.lang.Throwable r7, r9;
        long $l0;
        java.io.Reader $r5;
        java.lang.RuntimeException $r8;
        java.lang.Long r3;
        com.google.common.io.Closer $r4;
        com.google.common.base.Optional $r1;
        java.io.Closeable $r6;
        java.lang.Object $r2;
        com.google.common.io.CharSource r0;
        boolean $z0;

        r0 := @this: com.google.common.io.CharSource;

        $r1 = virtualinvoke r0.<com.google.common.io.CharSource: com.google.common.base.Optional lengthIfKnown()>();

        $z0 = virtualinvoke $r1.<com.google.common.base.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<com.google.common.base.Optional: java.lang.Object get()>();

        r3 = (java.lang.Long) $r2;

        $l0 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        return $l0;

     label1:
        $r4 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label2:
        $r5 = virtualinvoke r0.<com.google.common.io.CharSource: java.io.Reader openStream()>();

        $r6 = virtualinvoke $r4.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r5);

        $r5 = (java.io.Reader) $r6;

        $l0 = specialinvoke r0.<com.google.common.io.CharSource: long countBySkipping(java.io.Reader)>($r5);

     label3:
        virtualinvoke $r4.<com.google.common.io.Closer: void close()>();

        return $l0;

     label4:
        r7 := @caughtexception;

     label5:
        $r8 = virtualinvoke $r4.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>(r7);

        throw $r8;

     label6:
        r9 := @caughtexception;

        virtualinvoke $r4.<com.google.common.io.Closer: void close()>();

        throw r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public com.google.common.base.Optional lengthIfKnown()
    {
        com.google.common.io.CharSource r0;
        com.google.common.base.Optional $r1;

        r0 := @this: com.google.common.io.CharSource;

        $r1 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>();

        return $r1;
    }

    public java.io.BufferedReader openBufferedStream() throws java.io.IOException
    {
        com.google.common.io.CharSource r0;
        java.io.Reader $r1;
        java.io.BufferedReader $r2;
        boolean $z0;

        r0 := @this: com.google.common.io.CharSource;

        $r1 = virtualinvoke r0.<com.google.common.io.CharSource: java.io.Reader openStream()>();

        $z0 = $r1 instanceof java.io.BufferedReader;

        if $z0 == 0 goto label1;

        $r2 = (java.io.BufferedReader) $r1;

        return $r2;

     label1:
        $r2 = new java.io.BufferedReader;

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

        return $r2;
    }

    public abstract java.io.Reader openStream() throws java.io.IOException;

    public java.lang.String read() throws java.io.IOException
    {
        java.lang.Throwable r5, r7;
        java.io.Reader $r2;
        java.lang.RuntimeException $r6;
        com.google.common.io.Closer $r1;
        java.io.Closeable $r3;
        com.google.common.io.CharSource r0;
        java.lang.String $r4;

        r0 := @this: com.google.common.io.CharSource;

        $r1 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label1:
        $r2 = virtualinvoke r0.<com.google.common.io.CharSource: java.io.Reader openStream()>();

        $r3 = virtualinvoke $r1.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r2);

        $r2 = (java.io.Reader) $r3;

        $r4 = staticinvoke <com.google.common.io.CharStreams: java.lang.String toString(java.lang.Readable)>($r2);

     label2:
        virtualinvoke $r1.<com.google.common.io.Closer: void close()>();

        return $r4;

     label3:
        r5 := @caughtexception;

     label4:
        $r6 = virtualinvoke $r1.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>(r5);

        throw $r6;

     label5:
        r7 := @caughtexception;

        virtualinvoke $r1.<com.google.common.io.Closer: void close()>();

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public java.lang.String readFirstLine() throws java.io.IOException
    {
        java.lang.Throwable r5, r7;
        java.lang.RuntimeException $r6;
        com.google.common.io.Closer $r1;
        java.io.Closeable $r3;
        com.google.common.io.CharSource r0;
        java.io.BufferedReader $r2;
        java.lang.String $r4;

        r0 := @this: com.google.common.io.CharSource;

        $r1 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label1:
        $r2 = virtualinvoke r0.<com.google.common.io.CharSource: java.io.BufferedReader openBufferedStream()>();

        $r3 = virtualinvoke $r1.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r2);

        $r2 = (java.io.BufferedReader) $r3;

        $r4 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label2:
        virtualinvoke $r1.<com.google.common.io.Closer: void close()>();

        return $r4;

     label3:
        r5 := @caughtexception;

     label4:
        $r6 = virtualinvoke $r1.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>(r5);

        throw $r6;

     label5:
        r7 := @caughtexception;

        virtualinvoke $r1.<com.google.common.io.Closer: void close()>();

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public com.google.common.collect.ImmutableList readLines() throws java.io.IOException
    {
        java.lang.Throwable r7, r9;
        java.lang.RuntimeException $r8;
        java.util.ArrayList $r4;
        com.google.common.collect.ImmutableList $r6;
        com.google.common.io.Closer $r1;
        java.io.Closeable $r3;
        com.google.common.io.CharSource r0;
        java.io.BufferedReader $r2;
        java.lang.String $r5;

        r0 := @this: com.google.common.io.CharSource;

        $r1 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label01:
        $r2 = virtualinvoke r0.<com.google.common.io.CharSource: java.io.BufferedReader openBufferedStream()>();

        $r3 = virtualinvoke $r1.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r2);

        $r2 = (java.io.BufferedReader) $r3;

        $r4 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

     label02:
        $r5 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if $r5 == null goto label06;

     label04:
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label05:
        goto label02;

     label06:
        $r6 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>($r4);

     label07:
        virtualinvoke $r1.<com.google.common.io.Closer: void close()>();

        return $r6;

     label08:
        r7 := @caughtexception;

     label09:
        $r8 = virtualinvoke $r1.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>(r7);

        throw $r8;

     label10:
        r9 := @caughtexception;

        virtualinvoke $r1.<com.google.common.io.Closer: void close()>();

        throw r9;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public java.lang.Object readLines(com.google.common.io.LineProcessor) throws java.io.IOException
    {
        java.lang.Throwable r6, r8;
        java.io.Reader $r3;
        java.lang.RuntimeException $r7;
        com.google.common.io.LineProcessor r1;
        com.google.common.io.Closer $r2;
        java.io.Closeable $r4;
        java.lang.Object $r5;
        com.google.common.io.CharSource r0;

        r0 := @this: com.google.common.io.CharSource;

        r1 := @parameter0: com.google.common.io.LineProcessor;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = staticinvoke <com.google.common.io.Closer: com.google.common.io.Closer create()>();

     label1:
        $r3 = virtualinvoke r0.<com.google.common.io.CharSource: java.io.Reader openStream()>();

        $r4 = virtualinvoke $r2.<com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r3);

        $r3 = (java.io.Reader) $r4;

        $r5 = staticinvoke <com.google.common.io.CharStreams: java.lang.Object readLines(java.lang.Readable,com.google.common.io.LineProcessor)>($r3, r1);

     label2:
        virtualinvoke $r2.<com.google.common.io.Closer: void close()>();

        return $r5;

     label3:
        r6 := @caughtexception;

     label4:
        $r7 = virtualinvoke $r2.<com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>(r6);

        throw $r7;

     label5:
        r8 := @caughtexception;

        virtualinvoke $r2.<com.google.common.io.Closer: void close()>();

        throw r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label5;
    }
}
