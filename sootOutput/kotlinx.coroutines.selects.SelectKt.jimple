public final class kotlinx.coroutines.selects.SelectKt extends java.lang.Object
{
    private static final kotlin.jvm.functions.Function3 DUMMY_PROCESS_RESULT_FUNCTION;
    private static final kotlinx.coroutines.internal.Symbol NO_RESULT;
    private static final kotlinx.coroutines.internal.Symbol PARAM_CLAUSE_0;
    private static final kotlinx.coroutines.internal.Symbol STATE_CANCELLED;
    private static final kotlinx.coroutines.internal.Symbol STATE_COMPLETED;
    private static final kotlinx.coroutines.internal.Symbol STATE_REG;
    private static final int TRY_SELECT_ALREADY_SELECTED;
    private static final int TRY_SELECT_CANCELLED;
    private static final int TRY_SELECT_REREGISTER;
    private static final int TRY_SELECT_SUCCESSFUL;

    static void <clinit>()
    {
        kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1 $r0;
        kotlin.jvm.functions.Function3 $r1;
        kotlinx.coroutines.internal.Symbol $r2;

        <kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_REREGISTER> = 1;

        <kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_CANCELLED> = 2;

        <kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_ALREADY_SELECTED> = 3;

        $r0 = <kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1: kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1 INSTANCE>;

        $r1 = (kotlin.jvm.functions.Function3) $r0;

        <kotlinx.coroutines.selects.SelectKt: kotlin.jvm.functions.Function3 DUMMY_PROCESS_RESULT_FUNCTION> = $r1;

        $r2 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r2.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("STATE_REG");

        <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_REG> = $r2;

        $r2 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r2.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("STATE_COMPLETED");

        <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_COMPLETED> = $r2;

        $r2 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r2.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("STATE_CANCELLED");

        <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_CANCELLED> = $r2;

        $r2 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r2.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("NO_RESULT");

        <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol NO_RESULT> = $r2;

        $r2 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r2.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("PARAM_CLAUSE_0");

        <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol PARAM_CLAUSE_0> = $r2;

        return;
    }

    public static void OnCancellationConstructor$annotations()
    {
        return;
    }

    public static void ProcessResultFunction$annotations()
    {
        return;
    }

    public static void RegistrationFunction$annotations()
    {
        return;
    }

    private static final kotlinx.coroutines.selects.TrySelectDetailedResult TrySelectDetailedResult(int)
    {
        java.lang.IllegalStateException $r0;
        kotlinx.coroutines.selects.TrySelectDetailedResult r3;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected internal result: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label2:
        r3 = <kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult ALREADY_SELECTED>;

        return r3;

     label3:
        r3 = <kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult CANCELLED>;

        return r3;

     label4:
        r3 = <kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult REREGISTER>;

        return r3;

     label5:
        r3 = <kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult SUCCESSFUL>;

        return r3;
    }

    public static final kotlinx.coroutines.selects.TrySelectDetailedResult access$TrySelectDetailedResult(int)
    {
        int $i0;
        kotlinx.coroutines.selects.TrySelectDetailedResult $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.selects.TrySelectDetailedResult TrySelectDetailedResult(int)>($i0);

        return $r0;
    }

    public static final kotlin.jvm.functions.Function3 access$getDUMMY_PROCESS_RESULT_FUNCTION$p()
    {
        kotlin.jvm.functions.Function3 r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: kotlin.jvm.functions.Function3 DUMMY_PROCESS_RESULT_FUNCTION>;

        return r0;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getNO_RESULT$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol NO_RESULT>;

        return r0;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getSTATE_CANCELLED$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_CANCELLED>;

        return r0;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getSTATE_COMPLETED$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_COMPLETED>;

        return r0;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getSTATE_REG$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_REG>;

        return r0;
    }

    public static final boolean access$tryResume(kotlinx.coroutines.CancellableContinuation, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r1;
        kotlinx.coroutines.CancellableContinuation $r0;
        boolean $z0;

        $r0 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $z0 = staticinvoke <kotlinx.coroutines.selects.SelectKt: boolean tryResume(kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function1)>($r0, $r1);

        return $z0;
    }

    public static final kotlinx.coroutines.internal.Symbol getPARAM_CLAUSE_0()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol PARAM_CLAUSE_0>;

        return r0;
    }

    public static final java.lang.Object select(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r1;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object $r4;
        kotlinx.coroutines.selects.SelectImplementation $r2;
        kotlin.coroutines.CoroutineContext $r3;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = new kotlinx.coroutines.selects.SelectImplementation;

        $r3 = interfaceinvoke $r1.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        specialinvoke $r2.<kotlinx.coroutines.selects.SelectImplementation: void <init>(kotlin.coroutines.CoroutineContext)>($r3);

        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r2.<kotlinx.coroutines.selects.SelectImplementation: java.lang.Object doSelect(kotlin.coroutines.Continuation)>($r1);

        return $r4;
    }

    private static final java.lang.Object select$$forInline(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlinx.coroutines.selects.SelectImplementation $r2;
        java.lang.NullPointerException r3;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = new kotlinx.coroutines.selects.SelectImplementation;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r3 = new java.lang.NullPointerException;

        specialinvoke r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: interfaceinvoke $u0#4.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r3;
    }

    private static final boolean tryResume(kotlinx.coroutines.CancellableContinuation, kotlin.jvm.functions.Function1)
    {
        kotlin.Unit r3;
        kotlinx.coroutines.CancellableContinuation $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r2 = interfaceinvoke $r0.<kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)>(r3, null, $r1);

        if $r2 != null goto label1;

        return 0;

     label1:
        interfaceinvoke $r0.<kotlinx.coroutines.CancellableContinuation: void completeResume(java.lang.Object)>($r2);

        return 1;
    }
}
