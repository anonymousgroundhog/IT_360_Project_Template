public class kotlin.internal.jdk8.JDK8PlatformImplementations extends kotlin.internal.jdk7.JDK7PlatformImplementations
{

    public void <init>()
    {
        kotlin.internal.jdk8.JDK8PlatformImplementations r0;

        r0 := @this: kotlin.internal.jdk8.JDK8PlatformImplementations;

        specialinvoke r0.<kotlin.internal.jdk7.JDK7PlatformImplementations: void <init>()>();

        return;
    }

    private final boolean sdkIsNullOrAtLeast(int)
    {
        kotlin.internal.jdk8.JDK8PlatformImplementations r0;
        int $i0, $i1;
        java.lang.Integer $r1;

        r0 := @this: kotlin.internal.jdk8.JDK8PlatformImplementations;

        $i0 := @parameter0: int;

        $r1 = <kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion: java.lang.Integer sdkVersion>;

        if $r1 == null goto label2;

        $r1 = <kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion: java.lang.Integer sdkVersion>;

        $i1 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        if $i1 < $i0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public kotlin.random.Random defaultPlatformRandom()
    {
        kotlin.internal.jdk8.JDK8PlatformImplementations r0;
        kotlin.random.jdk8.PlatformThreadLocalRandom $r1;
        kotlin.random.Random $r2;
        boolean $z0;

        r0 := @this: kotlin.internal.jdk8.JDK8PlatformImplementations;

        $z0 = specialinvoke r0.<kotlin.internal.jdk8.JDK8PlatformImplementations: boolean sdkIsNullOrAtLeast(int)>(34);

        if $z0 == 0 goto label1;

        $r1 = new kotlin.random.jdk8.PlatformThreadLocalRandom;

        specialinvoke $r1.<kotlin.random.jdk8.PlatformThreadLocalRandom: void <init>()>();

        $r2 = (kotlin.random.Random) $r1;

        return $r2;

     label1:
        $r2 = specialinvoke r0.<kotlin.internal.jdk7.JDK7PlatformImplementations: kotlin.random.Random defaultPlatformRandom()>();

        return $r2;
    }

    public kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult, java.lang.String)
    {
        java.lang.UnsupportedOperationException $r7;
        kotlin.internal.jdk8.JDK8PlatformImplementations r0;
        java.util.regex.MatchResult $r1;
        java.lang.Integer $r4;
        java.util.regex.Matcher r3;
        int $i0, $i1;
        java.lang.String $r2;
        boolean z0;
        kotlin.ranges.IntRange $r5;
        kotlin.text.MatchGroup $r6;

        r0 := @this: kotlin.internal.jdk8.JDK8PlatformImplementations;

        $r1 := @parameter0: java.util.regex.MatchResult;

        $r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "matchResult");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "name");

        z0 = $r1 instanceof java.util.regex.Matcher;

        if z0 == 0 goto label1;

        r3 = (java.util.regex.Matcher) $r1;

        goto label2;

     label1:
        r3 = null;

     label2:
        if r3 == null goto label4;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = virtualinvoke r3.<java.util.regex.Matcher: int start(java.lang.String)>($r2);

        $i1 = virtualinvoke r3.<java.util.regex.Matcher: int end(java.lang.String)>($r2);

        $i1 = $i1 + -1;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>($i0, $i1);

        $r4 = virtualinvoke $r5.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        if $i0 < 0 goto label3;

        $r6 = new kotlin.text.MatchGroup;

        $r2 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(java.lang.String)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "matcher.group(name)");

        specialinvoke $r6.<kotlin.text.MatchGroup: void <init>(java.lang.String,kotlin.ranges.IntRange)>($r2, $r5);

        return $r6;

     label3:
        return null;

     label4:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Retrieving groups by name is not supported on this platform.");

        throw $r7;
    }
}
