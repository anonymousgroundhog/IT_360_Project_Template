public final class androidx.core.graphics.BitmapCompat extends java.lang.Object
{

    private void <init>()
    {
        androidx.core.graphics.BitmapCompat r0;

        r0 := @this: androidx.core.graphics.BitmapCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap, int, int, android.graphics.Rect, boolean)
    {
        android.graphics.Rect $r1, r7, $r12;
        android.graphics.Bitmap$Config $r3;
        byte b9, b15;
        android.graphics.Canvas $r11;
        boolean $z0, $z1, z2, $z3;
        float f0, f1, f2;
        android.graphics.Paint $r9;
        int $i0, $i1, i2, i3, i4, $i5, i6, i7, i8, i10, i11, i12, i13, i14;
        double $d0, d1;
        java.lang.IllegalArgumentException $r8;
        android.graphics.PorterDuff$Mode r4;
        android.graphics.PorterDuffXfermode $r10;
        android.graphics.Bitmap $r0, r2, r5, $r6;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: android.graphics.Rect;

        $z0 := @parameter4: boolean;

        i2 = $i0;

        i3 = $i1;

        if $i0 <= 0 goto label53;

        if $i1 <= 0 goto label53;

        if $r1 == null goto label02;

        $z1 = virtualinvoke $r1.<android.graphics.Rect: boolean isEmpty()>();

        if $z1 != 0 goto label01;

        i4 = $r1.<android.graphics.Rect: int left>;

        if i4 < 0 goto label01;

        i4 = $r1.<android.graphics.Rect: int right>;

        $i5 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        if i4 > $i5 goto label01;

        i4 = $r1.<android.graphics.Rect: int top>;

        if i4 < 0 goto label01;

        i4 = $r1.<android.graphics.Rect: int bottom>;

        $i5 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        if i4 > $i5 goto label01;

        goto label02;

     label01:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("srcRect must be contained by srcBm!");

        throw $r8;

     label02:
        r2 = $r0;

        i4 = <android.os.Build$VERSION: int SDK_INT>;

        if i4 < 27 goto label03;

        r2 = staticinvoke <androidx.core.graphics.BitmapCompat$Api27Impl: android.graphics.Bitmap copyBitmapIfHardware(android.graphics.Bitmap)>($r0);

     label03:
        if $r1 == null goto label04;

        i4 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        goto label05;

     label04:
        i4 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

     label05:
        if $r1 == null goto label06;

        i6 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        goto label07;

     label06:
        i6 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

     label07:
        f0 = (float) $i0;

        f1 = (float) i4;

        f0 = f0 / f1;

        f1 = (float) $i1;

        f2 = (float) i6;

        f1 = f1 / f2;

        if $r1 == null goto label08;

        i7 = $r1.<android.graphics.Rect: int left>;

        goto label09;

     label08:
        i7 = 0;

     label09:
        if $r1 == null goto label10;

        i8 = $r1.<android.graphics.Rect: int top>;

        goto label11;

     label10:
        i8 = 0;

     label11:
        if i7 != 0 goto label13;

        if i8 != 0 goto label13;

        $i5 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        if $i0 != $i5 goto label13;

        $i5 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        if $i1 != $i5 goto label13;

        $z0 = virtualinvoke $r0.<android.graphics.Bitmap: boolean isMutable()>();

        if $z0 == 0 goto label12;

        if $r0 != r2 goto label54;

        $r3 = virtualinvoke $r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r0 = virtualinvoke $r0.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r3, 1);

        return $r0;

     label12:
        return r2;

     label13:
        $r9 = new android.graphics.Paint;

        specialinvoke $r9.<android.graphics.Paint: void <init>(int)>(1);

        virtualinvoke $r9.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        $i5 = <android.os.Build$VERSION: int SDK_INT>;

        if $i5 < 29 goto label14;

        staticinvoke <androidx.core.graphics.BitmapCompat$Api29Impl: void setPaintBlendMode(android.graphics.Paint)>($r9);

        goto label15;

     label14:
        $r10 = new android.graphics.PorterDuffXfermode;

        r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC>;

        specialinvoke $r10.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>(r4);

        virtualinvoke $r9.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r10);

     label15:
        if i4 != $i0 goto label16;

        if i6 != $i1 goto label16;

        $r3 = virtualinvoke r2.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r3);

        $r11 = new android.graphics.Canvas;

        specialinvoke $r11.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r0);

        $i0 = neg i7;

        f0 = (float) $i0;

        $i0 = neg i8;

        f1 = (float) $i0;

        virtualinvoke $r11.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r2, f0, f1, $r9);

        return $r0;

     label16:
        $d0 = staticinvoke <java.lang.Math: double log(double)>(2.0);

        b9 = f0 cmpl 1.0F;

        $i5 = (int) b9;

        if $i5 <= 0 goto label17;

        d1 = (double) f0;

        d1 = staticinvoke <java.lang.Math: double log(double)>(d1);

        d1 = d1 / $d0;

        d1 = staticinvoke <java.lang.Math: double ceil(double)>(d1);

        $i5 = (int) d1;

        goto label18;

     label17:
        d1 = (double) f0;

        d1 = staticinvoke <java.lang.Math: double log(double)>(d1);

        d1 = d1 / $d0;

        d1 = staticinvoke <java.lang.Math: double floor(double)>(d1);

        $i5 = (int) d1;

     label18:
        b9 = f1 cmpl 1.0F;

        i11 = (int) b9;

        if i11 <= 0 goto label19;

        d1 = (double) f1;

        d1 = staticinvoke <java.lang.Math: double log(double)>(d1);

        $d0 = d1 / $d0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i10 = (int) $d0;

        goto label20;

     label19:
        d1 = (double) f1;

        d1 = staticinvoke <java.lang.Math: double log(double)>(d1);

        $d0 = d1 / $d0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        i10 = (int) $d0;

     label20:
        i11 = $i5;

        i12 = i10;

        r5 = null;

        b9 = 0;

        if $z0 == 0 goto label26;

        i13 = <android.os.Build$VERSION: int SDK_INT>;

        if i13 < 27 goto label25;

        $z1 = staticinvoke <androidx.core.graphics.BitmapCompat$Api27Impl: boolean isAlreadyF16AndLinear(android.graphics.Bitmap)>($r0);

        if $z1 != 0 goto label25;

        if $i5 <= 0 goto label21;

        i13 = staticinvoke <androidx.core.graphics.BitmapCompat: int sizeAtStep(int,int,int,int)>(i4, $i0, 1, $i5);

        goto label22;

     label21:
        i13 = i4;

     label22:
        i14 = i13;

        if i10 <= 0 goto label23;

        i13 = i12;

        i12 = staticinvoke <androidx.core.graphics.BitmapCompat: int sizeAtStep(int,int,int,int)>(i6, $i1, 1, i12);

        goto label24;

     label23:
        i13 = i12;

        i12 = i6;

     label24:
        $r6 = staticinvoke <androidx.core.graphics.BitmapCompat$Api27Impl: android.graphics.Bitmap createBitmapWithSourceColorspace(int,int,android.graphics.Bitmap,boolean)>(i14, i12, $r0, 1);

        $r11 = new android.graphics.Canvas;

        specialinvoke $r11.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r6);

        i7 = neg i7;

        f0 = (float) i7;

        i8 = neg i8;

        f1 = (float) i8;

        virtualinvoke $r11.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r2, f0, f1, $r9);

        i7 = 0;

        i8 = 0;

        r5 = r2;

        r2 = $r6;

        b9 = 1;

        goto label27;

     label25:
        i13 = i12;

        goto label27;

     label26:
        i13 = i10;

     label27:
        r7 = new android.graphics.Rect;

        specialinvoke r7.<android.graphics.Rect: void <init>(int,int,int,int)>(i7, i8, i4, i6);

        $r12 = new android.graphics.Rect;

        specialinvoke $r12.<android.graphics.Rect: void <init>()>();

     label28:
        if $i5 != 0 goto label30;

        if i10 == 0 goto label29;

        goto label30;

     label29:
        if r5 == $r0 goto label54;

        if r5 == null goto label54;

        virtualinvoke r5.<android.graphics.Bitmap: void recycle()>();

        return r2;

     label30:
        if $i5 >= 0 goto label31;

        $i5 = $i5 + 1;

        goto label32;

     label31:
        if $i5 <= 0 goto label32;

        $i5 = $i5 + -1;

     label32:
        if i10 >= 0 goto label33;

        i8 = i10 + 1;

        goto label35;

     label33:
        if i10 <= 0 goto label34;

        i8 = i10 + -1;

        goto label35;

     label34:
        i8 = i10;

     label35:
        i7 = staticinvoke <androidx.core.graphics.BitmapCompat: int sizeAtStep(int,int,int,int)>(i4, i2, $i5, i11);

        i10 = staticinvoke <androidx.core.graphics.BitmapCompat: int sizeAtStep(int,int,int,int)>(i6, i3, i8, i13);

        virtualinvoke $r12.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, i7, i10);

        if $i5 != 0 goto label36;

        if i8 != 0 goto label36;

        $z1 = 1;

        goto label37;

     label36:
        $z1 = 0;

     label37:
        if r5 == null goto label38;

        i7 = virtualinvoke r5.<android.graphics.Bitmap: int getWidth()>();

        if i7 != i2 goto label38;

        i7 = virtualinvoke r5.<android.graphics.Bitmap: int getHeight()>();

        if i7 != i3 goto label38;

        z2 = 1;

        goto label39;

     label38:
        z2 = 0;

     label39:
        if r5 == null goto label43;

        if r5 == $r0 goto label43;

        if $z0 == 0 goto label40;

        i7 = <android.os.Build$VERSION: int SDK_INT>;

        if i7 < 27 goto label40;

        $z3 = staticinvoke <androidx.core.graphics.BitmapCompat$Api27Impl: boolean isAlreadyF16AndLinear(android.graphics.Bitmap)>(r5);

        if $z3 == 0 goto label41;

        goto label40;

     label40:
        if $z1 == 0 goto label42;

        if z2 == 0 goto label41;

        if b9 == 0 goto label42;

     label41:
        goto label43;

     label42:
        goto label52;

     label43:
        if r5 == $r0 goto label44;

        if r5 == null goto label44;

        virtualinvoke r5.<android.graphics.Bitmap: void recycle()>();

     label44:
        b15 = b9;

        if $i5 <= 0 goto label45;

        i7 = b9;

        goto label46;

     label45:
        i7 = $i5;

     label46:
        i2 = staticinvoke <androidx.core.graphics.BitmapCompat: int sizeAtStep(int,int,int,int)>(i4, i2, i7, i11);

        if i8 <= 0 goto label47;

        i7 = b15;

        goto label48;

     label47:
        i7 = i8;

     label48:
        i3 = staticinvoke <androidx.core.graphics.BitmapCompat: int sizeAtStep(int,int,int,int)>(i6, i3, i7, i13);

        i7 = <android.os.Build$VERSION: int SDK_INT>;

        if i7 < 27 goto label51;

        if $z0 == 0 goto label49;

        if $z1 != 0 goto label49;

        $z1 = 1;

        goto label50;

     label49:
        $z1 = 0;

     label50:
        r5 = staticinvoke <androidx.core.graphics.BitmapCompat$Api27Impl: android.graphics.Bitmap createBitmapWithSourceColorspace(int,int,android.graphics.Bitmap,boolean)>(i2, i3, $r0, $z1);

        goto label52;

     label51:
        $r3 = virtualinvoke r2.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i2, i3, $r3);

     label52:
        $r11 = new android.graphics.Canvas;

        specialinvoke $r11.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r5);

        virtualinvoke $r11.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>(r2, r7, $r12, $r9);

        $r6 = r2;

        r2 = r5;

        r5 = $r6;

        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r12);

        i2 = $i0;

        i3 = $i1;

        i10 = i8;

        goto label28;

     label53:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("dstW and dstH must be > 0!");

        throw $r8;

     label54:
        return r2;
    }

    public static int getAllocationByteCount(android.graphics.Bitmap)
    {
        int $i0;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 = staticinvoke <androidx.core.graphics.BitmapCompat$Api19Impl: int getAllocationByteCount(android.graphics.Bitmap)>($r0);

        return $i0;
    }

    public static boolean hasMipMap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        boolean $z0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $z0 = staticinvoke <androidx.core.graphics.BitmapCompat$Api17Impl: boolean hasMipMap(android.graphics.Bitmap)>($r0);

        return $z0;
    }

    public static void setHasMipMap(android.graphics.Bitmap, boolean)
    {
        android.graphics.Bitmap $r0;
        boolean $z0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $z0 := @parameter1: boolean;

        staticinvoke <androidx.core.graphics.BitmapCompat$Api17Impl: void setHasMipMap(android.graphics.Bitmap,boolean)>($r0, $z0);

        return;
    }

    public static int sizeAtStep(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        if $i2 != 0 goto label1;

        return $i1;

     label1:
        if $i2 <= 0 goto label2;

        $i1 = $i3 - $i2;

        $i1 = 1 << $i1;

        $i0 = $i1 * $i0;

        return $i0;

     label2:
        $i0 = neg $i2;

        $i0 = $i0 - 1;

        $i0 = $i1 << $i0;

        return $i0;
    }
}
