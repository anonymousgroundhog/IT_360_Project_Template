public class androidx.core.view.accessibility.AccessibilityNodeInfoCompat extends java.lang.Object
{
    public static final int ACTION_ACCESSIBILITY_FOCUS;
    public static final java.lang.String ACTION_ARGUMENT_COLUMN_INT;
    public static final java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN;
    public static final java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING;
    public static final java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT;
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X;
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y;
    public static final java.lang.String ACTION_ARGUMENT_PRESS_AND_HOLD_DURATION_MILLIS_INT;
    public static final java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE;
    public static final java.lang.String ACTION_ARGUMENT_ROW_INT;
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_END_INT;
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_START_INT;
    public static final java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE;
    public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS;
    public static final int ACTION_CLEAR_FOCUS;
    public static final int ACTION_CLEAR_SELECTION;
    public static final int ACTION_CLICK;
    public static final int ACTION_COLLAPSE;
    public static final int ACTION_COPY;
    public static final int ACTION_CUT;
    public static final int ACTION_DISMISS;
    public static final int ACTION_EXPAND;
    public static final int ACTION_FOCUS;
    public static final int ACTION_LONG_CLICK;
    public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
    public static final int ACTION_NEXT_HTML_ELEMENT;
    public static final int ACTION_PASTE;
    public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
    public static final int ACTION_PREVIOUS_HTML_ELEMENT;
    public static final int ACTION_SCROLL_BACKWARD;
    public static final int ACTION_SCROLL_FORWARD;
    public static final int ACTION_SELECT;
    public static final int ACTION_SET_SELECTION;
    public static final int ACTION_SET_TEXT;
    private static final int BOOLEAN_PROPERTY_IS_HEADING;
    private static final int BOOLEAN_PROPERTY_IS_SHOWING_HINT;
    private static final int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY;
    private static final java.lang.String BOOLEAN_PROPERTY_KEY;
    private static final int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE;
    public static final int FOCUS_ACCESSIBILITY;
    public static final int FOCUS_INPUT;
    private static final java.lang.String HINT_TEXT_KEY;
    public static final int MOVEMENT_GRANULARITY_CHARACTER;
    public static final int MOVEMENT_GRANULARITY_LINE;
    public static final int MOVEMENT_GRANULARITY_PAGE;
    public static final int MOVEMENT_GRANULARITY_PARAGRAPH;
    public static final int MOVEMENT_GRANULARITY_WORD;
    private static final java.lang.String PANE_TITLE_KEY;
    private static final java.lang.String ROLE_DESCRIPTION_KEY;
    private static final java.lang.String SPANS_ACTION_ID_KEY;
    private static final java.lang.String SPANS_END_KEY;
    private static final java.lang.String SPANS_FLAGS_KEY;
    private static final java.lang.String SPANS_ID_KEY;
    private static final java.lang.String SPANS_START_KEY;
    private static final java.lang.String STATE_DESCRIPTION_KEY;
    private static final java.lang.String TOOLTIP_TEXT_KEY;
    private static int sClickableSpanId;
    private final android.view.accessibility.AccessibilityNodeInfo mInfo;
    public int mParentVirtualDescendantId;
    private int mVirtualDescendantId;

    static void <clinit>()
    {
        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String TOOLTIP_TEXT_KEY> = "androidx.view.accessibility.AccessibilityNodeInfoCompat.TOOLTIP_TEXT_KEY";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String STATE_DESCRIPTION_KEY> = "androidx.view.accessibility.AccessibilityNodeInfoCompat.STATE_DESCRIPTION_KEY";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_START_KEY> = "androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_START_KEY";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_ID_KEY> = "androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_ID_KEY";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_FLAGS_KEY> = "androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_FLAGS_KEY";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_END_KEY> = "androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_END_KEY";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_ACTION_ID_KEY> = "androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_ACTION_ID_KEY";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ROLE_DESCRIPTION_KEY> = "AccessibilityNodeInfo.roleDescription";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String PANE_TITLE_KEY> = "androidx.view.accessibility.AccessibilityNodeInfoCompat.PANE_TITLE_KEY";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_WORD> = 2;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PARAGRAPH> = 8;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PAGE> = 16;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_LINE> = 4;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_CHARACTER> = 1;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String HINT_TEXT_KEY> = "androidx.view.accessibility.AccessibilityNodeInfoCompat.HINT_TEXT_KEY";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_INPUT> = 1;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_ACCESSIBILITY> = 2;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE> = 1;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String BOOLEAN_PROPERTY_KEY> = "androidx.view.accessibility.AccessibilityNodeInfoCompat.BOOLEAN_PROPERTY_KEY";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY> = 8;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_IS_SHOWING_HINT> = 4;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_IS_HEADING> = 2;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SET_TEXT> = 2097152;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SET_SELECTION> = 131072;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SELECT> = 4;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_FORWARD> = 4096;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_BACKWARD> = 8192;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_HTML_ELEMENT> = 2048;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY> = 512;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PASTE> = 32768;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_HTML_ELEMENT> = 1024;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_AT_MOVEMENT_GRANULARITY> = 256;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_LONG_CLICK> = 32;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_FOCUS> = 1;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_EXPAND> = 262144;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_DISMISS> = 1048576;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CUT> = 65536;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_COPY> = 16384;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_COLLAPSE> = 524288;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLICK> = 16;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_SELECTION> = 8;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_FOCUS> = 2;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_ACCESSIBILITY_FOCUS> = 128;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE> = "ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SELECTION_START_INT> = "ACTION_ARGUMENT_SELECTION_START_INT";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SELECTION_END_INT> = "ACTION_ARGUMENT_SELECTION_END_INT";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_ROW_INT> = "android.view.accessibility.action.ARGUMENT_ROW_INT";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE> = "android.view.accessibility.action.ARGUMENT_PROGRESS_VALUE";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_PRESS_AND_HOLD_DURATION_MILLIS_INT> = "android.view.accessibility.action.ARGUMENT_PRESS_AND_HOLD_DURATION_MILLIS_INT";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y> = "ACTION_ARGUMENT_MOVE_WINDOW_Y";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X> = "ACTION_ARGUMENT_MOVE_WINDOW_X";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT> = "ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING> = "ACTION_ARGUMENT_HTML_ELEMENT_STRING";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN> = "ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_COLUMN_INT> = "android.view.accessibility.action.ARGUMENT_COLUMN_INT";

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_ACCESSIBILITY_FOCUS> = 64;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int sClickableSpanId> = 0;

        return;
    }

    private void <init>(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId> = -1;

        r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId> = -1;

        r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo> = $r1;

        return;
    }

    public void <init>(java.lang.Object)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        java.lang.Object $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId> = -1;

        r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId> = -1;

        $r2 = (android.view.accessibility.AccessibilityNodeInfo) $r1;

        r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo> = $r2;

        return;
    }

    private void addSpanLocationToExtras(android.text.style.ClickableSpan, android.text.Spanned, int)
    {
        java.util.List $r3;
        android.text.Spanned $r2;
        int $i0, $i1;
        android.text.style.ClickableSpan $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.Integer $r4;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.text.style.ClickableSpan;

        $r2 := @parameter1: android.text.Spanned;

        $i0 := @parameter2: int;

        $r3 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_START_KEY");

        $i1 = interfaceinvoke $r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r3 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_END_KEY");

        $i1 = interfaceinvoke $r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r3 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_FLAGS_KEY");

        $i1 = interfaceinvoke $r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r3 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_ID_KEY");

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    private void clearExtrasSpans()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        android.os.Bundle $r2;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r2.<android.os.Bundle: void remove(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_START_KEY");

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r2.<android.os.Bundle: void remove(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_END_KEY");

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r2.<android.os.Bundle: void remove(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_FLAGS_KEY");

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r2.<android.os.Bundle: void remove(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_ID_KEY");

        return;
    }

    private java.util.List extrasIntList(java.lang.String)
    {
        android.view.accessibility.AccessibilityNodeInfo r2;
        android.os.Bundle $r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.String $r1;
        java.util.ArrayList $r4;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.String;

        r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        $r4 = virtualinvoke $r3.<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>($r1);

        if $r4 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r3.<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>($r1, $r4);

     label1:
        return $r4;
    }

    private static java.lang.String getActionSymbolicName(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 1: goto label39;
            case 2: goto label38;
            case 4: goto label37;
            case 8: goto label36;
            case 16: goto label35;
            case 32: goto label34;
            case 64: goto label33;
            case 128: goto label32;
            case 256: goto label31;
            case 512: goto label30;
            case 1024: goto label29;
            case 2048: goto label28;
            case 4096: goto label27;
            case 8192: goto label26;
            case 16384: goto label25;
            case 32768: goto label24;
            case 65536: goto label23;
            case 131072: goto label22;
            case 262144: goto label21;
            case 524288: goto label20;
            case 2097152: goto label19;
            case 16908342: goto label18;
            case 16908343: goto label17;
            case 16908344: goto label16;
            case 16908345: goto label15;
            case 16908346: goto label14;
            case 16908347: goto label13;
            case 16908348: goto label12;
            case 16908349: goto label11;
            case 16908354: goto label10;
            case 16908356: goto label09;
            case 16908357: goto label08;
            case 16908358: goto label07;
            case 16908359: goto label06;
            case 16908360: goto label05;
            case 16908361: goto label04;
            case 16908362: goto label03;
            case 16908372: goto label02;
            default: goto label01;
        };

     label01:
        return "ACTION_UNKNOWN";

     label02:
        return "ACTION_IME_ENTER";

     label03:
        return "ACTION_PRESS_AND_HOLD";

     label04:
        return "ACTION_PAGE_RIGHT";

     label05:
        return "ACTION_PAGE_LEFT";

     label06:
        return "ACTION_PAGE_DOWN";

     label07:
        return "ACTION_PAGE_UP";

     label08:
        return "ACTION_HIDE_TOOLTIP";

     label09:
        return "ACTION_SHOW_TOOLTIP";

     label10:
        return "ACTION_MOVE_WINDOW";

     label11:
        return "ACTION_SET_PROGRESS";

     label12:
        return "ACTION_CONTEXT_CLICK";

     label13:
        return "ACTION_SCROLL_RIGHT";

     label14:
        return "ACTION_SCROLL_DOWN";

     label15:
        return "ACTION_SCROLL_LEFT";

     label16:
        return "ACTION_SCROLL_UP";

     label17:
        return "ACTION_SCROLL_TO_POSITION";

     label18:
        return "ACTION_SHOW_ON_SCREEN";

     label19:
        return "ACTION_SET_TEXT";

     label20:
        return "ACTION_COLLAPSE";

     label21:
        return "ACTION_EXPAND";

     label22:
        return "ACTION_SET_SELECTION";

     label23:
        return "ACTION_CUT";

     label24:
        return "ACTION_PASTE";

     label25:
        return "ACTION_COPY";

     label26:
        return "ACTION_SCROLL_BACKWARD";

     label27:
        return "ACTION_SCROLL_FORWARD";

     label28:
        return "ACTION_PREVIOUS_HTML_ELEMENT";

     label29:
        return "ACTION_NEXT_HTML_ELEMENT";

     label30:
        return "ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY";

     label31:
        return "ACTION_NEXT_AT_MOVEMENT_GRANULARITY";

     label32:
        return "ACTION_CLEAR_ACCESSIBILITY_FOCUS";

     label33:
        return "ACTION_ACCESSIBILITY_FOCUS";

     label34:
        return "ACTION_LONG_CLICK";

     label35:
        return "ACTION_CLICK";

     label36:
        return "ACTION_CLEAR_SELECTION";

     label37:
        return "ACTION_SELECT";

     label38:
        return "ACTION_CLEAR_FOCUS";

     label39:
        return "ACTION_FOCUS";
    }

    private boolean getBooleanProperty(int)
    {
        android.os.Bundle $r1;
        int $i0, $i1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.BOOLEAN_PROPERTY_KEY", 0);

        $i1 = $i1 & $i0;

        if $i1 != $i0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)
    {
        android.text.Spanned r1;
        java.lang.Object[] $r2;
        java.lang.CharSequence $r0;
        int $i0;
        android.text.style.ClickableSpan[] $r3;
        boolean z0;

        $r0 := @parameter0: java.lang.CharSequence;

        z0 = $r0 instanceof android.text.Spanned;

        if z0 == 0 goto label1;

        r1 = (android.text.Spanned) $r0;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $r2 = interfaceinvoke r1.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Landroid/text/style/ClickableSpan;");

        $r3 = (android.text.style.ClickableSpan[]) $r2;

        return $r3;

     label1:
        return null;
    }

    private android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
    {
        android.util.SparseArray $r2;
        int $i0;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $r2 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getSpansFromViewTags(android.view.View)>($r1);

        if $r2 != null goto label1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        $i0 = <androidx.core.R$id: int tag_accessibility_clickable_spans>;

        virtualinvoke $r1.<android.view.View: void setTag(int,java.lang.Object)>($i0, $r2);

     label1:
        return $r2;
    }

    private android.util.SparseArray getSpansFromViewTags(android.view.View)
    {
        android.util.SparseArray $r3;
        int $i0;
        android.view.View $r1;
        java.lang.Object $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 = <androidx.core.R$id: int tag_accessibility_clickable_spans>;

        $r2 = virtualinvoke $r1.<android.view.View: java.lang.Object getTag(int)>($i0);

        $r3 = (android.util.SparseArray) $r2;

        return $r3;
    }

    private boolean hasSpans()
    {
        java.util.List $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_START_KEY");

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

        return $z0;
    }

    private int idForClickableSpan(android.text.style.ClickableSpan, android.util.SparseArray)
    {
        android.text.style.ClickableSpan $r1, r5;
        android.util.SparseArray r2;
        int i0, $i1;
        java.lang.Object $r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.ref.WeakReference r4;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.text.style.ClickableSpan;

        r2 := @parameter1: android.util.SparseArray;

        if r2 == null goto label3;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label3;

        $r3 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r4 = (java.lang.ref.WeakReference) $r3;

        $r3 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.text.style.ClickableSpan) $r3;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r2.<android.util.SparseArray: int keyAt(int)>(i0);

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        i0 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int sClickableSpanId>;

        $i1 = i0 + 1;

        <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int sClickableSpanId> = $i1;

        return i0;
    }

    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
    {
        android.view.accessibility.AccessibilityNodeInfo $r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r1;

        $r0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>();

        $r1 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)>($r0);

        return $r1;
    }

    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
    {
        android.view.View $r0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r2;

        $r0 := @parameter0: android.view.View;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)>($r0);

        $r2 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        return $r2;
    }

    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        android.view.View $r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r2;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View,int)>($r0, $i0);

        $r2 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)>($r1);

        return $r2;
    }

    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r0;

        $r0 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = $r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        $r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        return $r0;
    }

    private void removeCollectedSpans(android.view.View)
    {
        java.lang.Integer $r6;
        java.util.ArrayList r2;
        android.util.SparseArray $r3;
        int i0, $i1;
        android.view.View $r1;
        java.lang.Object $r4;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.ref.WeakReference $r5;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $r3 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getSpansFromViewTags(android.view.View)>($r1);

        if $r3 == null goto label5;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label3;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r5 = (java.lang.ref.WeakReference) $r4;

        $r4 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r4 != null goto label2;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        i0 = 0;

     label4:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label5;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r6 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>($i1);

        i0 = i0 + 1;

        goto label4;

     label5:
        return;
    }

    private void setBooleanProperty(int, boolean)
    {
        android.os.Bundle $r1;
        int $i0, $i1, i2, $i3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()>();

        if $r1 == null goto label2;

        i2 = 0;

        $i3 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.BOOLEAN_PROPERTY_KEY", 0);

        $i1 = $i0 ^ -1;

        $i3 = $i3 & $i1;

        if $z0 == 0 goto label1;

        i2 = $i0;

     label1:
        $i0 = i2 | $i3;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.BOOLEAN_PROPERTY_KEY", $i0);

     label2:
        return;
    }

    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo $r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r1;

        $r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        specialinvoke $r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void <init>(android.view.accessibility.AccessibilityNodeInfo)>($r0);

        return $r1;
    }

    static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)
    {
        java.lang.Object $r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label1;

        $r1 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        specialinvoke $r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void <init>(java.lang.Object)>($r0);

        return $r1;

     label1:
        return null;
    }

    public void addAction(int)
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>($i0);

        return;
    }

    public void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r4;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat $r1;
        java.lang.Object $r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = $r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Object mAction>;

        $r4 = (android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction) $r3;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r4);

        return;
    }

    public void addChild(android.view.View)
    {
        android.view.View $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View)>($r1);

        return;
    }

    public void addChild(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View,int)>($r1, $i0);

        return;
    }

    public void addSpansToExtras(java.lang.CharSequence, android.view.View)
    {
        android.os.Bundle $r4;
        android.text.Spanned $r8;
        java.lang.CharSequence $r1;
        android.text.style.ClickableSpan r6;
        android.util.SparseArray $r5;
        int i0, i1;
        android.view.View $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        android.text.style.ClickableSpan[] $r3;
        java.lang.ref.WeakReference $r7;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.view.View;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 >= 26 goto label2;

        specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void clearExtrasSpans()>();

        specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void removeCollectedSpans(android.view.View)>($r2);

        $r3 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>($r1);

        if $r3 == null goto label2;

        i0 = lengthof $r3;

        if i0 <= 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()>();

        i0 = <androidx.core.R$id: int accessibility_action_clickable_span>;

        virtualinvoke $r4.<android.os.Bundle: void putInt(java.lang.String,int)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_ACTION_ID_KEY", i0);

        $r5 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)>($r2);

        i0 = 0;

     label1:
        if $r3 == null goto label2;

        i1 = lengthof $r3;

        if i0 >= i1 goto label2;

        r6 = $r3[i0];

        i1 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)>(r6, $r5);

        $r7 = new java.lang.ref.WeakReference;

        r6 = $r3[i0];

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r6);

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, $r7);

        r6 = $r3[i0];

        $r8 = (android.text.Spanned) $r1;

        specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)>(r6, $r8, i1);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean canOpenPopup()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean canOpenPopup()>();

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.accessibility.AccessibilityNodeInfo $r3, $r4;
        int $i0, $i1;
        java.lang.Object $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0, r2;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        if $r1 != null goto label2;

        return 0;

     label2:
        $z0 = $r1 instanceof androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) $r1;

        $r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        if $r3 != null goto label4;

        $r3 = r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        if $r3 == null goto label5;

        return 0;

     label4:
        $r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r4 = r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $i0 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId>;

        $i1 = r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId>;

        if $i0 == $i1 goto label6;

        return 0;

     label6:
        $i0 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId>;

        $i1 = r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId>;

        if $i0 == $i1 goto label7;

        return 0;

     label7:
        return 1;
    }

    public java.util.List findAccessibilityNodeInfosByText(java.lang.String)
    {
        android.view.accessibility.AccessibilityNodeInfo r3;
        java.util.ArrayList r2;
        java.util.List $r4;
        int $i0, i1;
        java.lang.Object $r5;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.String $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r4 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByText(java.lang.String)>($r1);

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.view.accessibility.AccessibilityNodeInfo) $r5;

        r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)>(r3);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
    {
        android.view.accessibility.AccessibilityNodeInfo r3;
        java.util.Iterator $r5;
        java.util.ArrayList r2;
        java.util.List $r4;
        java.lang.Object $r6;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.String;

        r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r4 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)>($r1);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.view.accessibility.AccessibilityNodeInfo) $r6;

        r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)>(r3);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        goto label1;

     label2:
        return r2;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>($i0);

        r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)>($r1);

        return r0;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo focusSearch(int)>($i0);

        r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)>($r1);

        return r0;
    }

    public java.util.List getActionList()
    {
        android.view.accessibility.AccessibilityNodeInfo r2;
        java.util.ArrayList r4;
        java.util.List $r3;
        int $i0, i1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat $r1;
        java.lang.Object $r5;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()>();

        if $r3 == null goto label3;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r1 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        specialinvoke $r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(java.lang.Object)>($r5);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r4;

     label3:
        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r3;
    }

    public int getActions()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int getActions()>();

        return $i0;
    }

    public java.util.List getAvailableExtraData()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        java.util.List $r2;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: java.util.List getAvailableExtraData()>();

        return $r2;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;
    }

    public void getBoundsInParent(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)>($r1);

        return;
    }

    public void getBoundsInScreen(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>($r1);

        return;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>($i0);

        r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)>($r1);

        return r0;
    }

    public int getChildCount()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        return $i0;
    }

    public java.lang.CharSequence getClassName()
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>();

        return $r1;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
    {
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat $r1;
        android.view.accessibility.AccessibilityNodeInfo r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo $r2;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo getCollectionInfo()>();

        if $r2 == null goto label1;

        $r1 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat;

        specialinvoke $r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: void <init>(java.lang.Object)>($r2);

        return $r1;

     label1:
        return null;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat $r1;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo getCollectionItemInfo()>();

        if $r2 == null goto label1;

        $r1 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat;

        specialinvoke $r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: void <init>(java.lang.Object)>($r2);

        return $r1;

     label1:
        return null;
    }

    public java.lang.CharSequence getContentDescription()
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>();

        return $r1;
    }

    public int getDrawingOrder()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()>();

        return $i0;

     label1:
        return 0;
    }

    public java.lang.CharSequence getError()
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getError()>();

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        return $r1;
    }

    public java.lang.CharSequence getHintText()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        android.os.Bundle $r3;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()>();

        return $r2;

     label1:
        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        $r2 = virtualinvoke $r3.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.HINT_TEXT_KEY");

        return $r2;
    }

    public java.lang.Object getInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        return r1;
    }

    public int getInputType()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int getInputType()>();

        return $i0;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()>();

        r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)>($r1);

        return r0;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()>();

        r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)>($r1);

        return r0;
    }

    public int getLiveRegion()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int getLiveRegion()>();

        return $i0;
    }

    public int getMaxTextLength()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int getMaxTextLength()>();

        return $i0;
    }

    public int getMovementGranularities()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()>();

        return $i0;
    }

    public java.lang.CharSequence getPackageName()
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        return $r1;
    }

    public java.lang.CharSequence getPaneTitle()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        android.os.Bundle $r3;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()>();

        return $r2;

     label1:
        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        $r2 = virtualinvoke $r3.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.PANE_TITLE_KEY");

        return $r2;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>();

        r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)>($r1);

        return r0;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r3;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo getRangeInfo()>();

        if $r2 == null goto label1;

        $r1 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat;

        specialinvoke $r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: void <init>(java.lang.Object)>($r2);

        return $r1;

     label1:
        return null;
    }

    public java.lang.CharSequence getRoleDescription()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        android.os.Bundle $r2;
        java.lang.CharSequence $r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        $r3 = virtualinvoke $r2.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("AccessibilityNodeInfo.roleDescription");

        return $r3;
    }

    public java.lang.CharSequence getStateDescription()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        android.os.Bundle $r3;
        java.lang.CharSequence $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastR()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getStateDescription()>();

        return $r2;

     label1:
        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        $r2 = virtualinvoke $r3.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.STATE_DESCRIPTION_KEY");

        return $r2;
    }

    public java.lang.CharSequence getText()
    {
        android.view.accessibility.AccessibilityNodeInfo r6;
        android.os.Bundle $r13;
        androidx.core.view.accessibility.AccessibilityClickableSpanCompat $r10;
        java.lang.Integer $r12;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r9;
        boolean $z0;
        java.lang.CharSequence $r7, $r8;
        android.text.SpannableString r1;
        java.util.List $r2, $r3, $r4, $r5;
        java.lang.Object $r11;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean hasSpans()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_START_KEY");

        $r3 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_END_KEY");

        $r4 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_FLAGS_KEY");

        $r5 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_ID_KEY");

        r1 = new android.text.SpannableString;

        r6 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r7 = virtualinvoke r6.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        r6 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r8 = virtualinvoke r6.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r8.<java.lang.CharSequence: int length()>();

        $r9 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>($r7, 0, $i0);

        specialinvoke r1.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r9);

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        $r10 = new androidx.core.view.accessibility.AccessibilityClickableSpanCompat;

        $r11 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $r12 = (java.lang.Integer) $r11;

        $i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()>();

        $i2 = virtualinvoke $r13.<android.os.Bundle: int getInt(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_ACTION_ID_KEY");

        specialinvoke $r10.<androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int)>($i1, r0, $i2);

        $r11 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r12 = (java.lang.Integer) $r11;

        $i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r11 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r12 = (java.lang.Integer) $r11;

        $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r11 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r12 = (java.lang.Integer) $r11;

        $i3 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r10, $i1, $i2, $i3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        r6 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r7 = virtualinvoke r6.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        return $r7;
    }

    public int getTextSelectionEnd()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionEnd()>();

        return $i0;
    }

    public int getTextSelectionStart()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionStart()>();

        return $i0;
    }

    public java.lang.CharSequence getTooltipText()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        android.os.Bundle $r3;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()>();

        return $r2;

     label1:
        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        $r2 = virtualinvoke $r3.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.TOOLTIP_TEXT_KEY");

        return $r2;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat getTouchDelegateInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r2;
        int i0;
        android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat $r3;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 29 goto label1;

        r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo getTouchDelegateInfo()>();

        if $r1 == null goto label1;

        $r3 = new androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat;

        specialinvoke $r3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: void <init>(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo)>($r1);

        return $r3;

     label1:
        return null;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 22 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()>();

        r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)>($r1);

        return r0;

     label1:
        return null;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 22 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()>();

        r0 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)>($r1);

        return r0;

     label1:
        return null;
    }

    public java.lang.String getViewIdResourceName()
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.String $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()>();

        return $r1;
    }

    public androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        android.view.accessibility.AccessibilityWindowInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        androidx.core.view.accessibility.AccessibilityWindowInfoCompat $r3;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityWindowInfo getWindow()>();

        $r3 = staticinvoke <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object)>($r2);

        return $r3;
    }

    public int getWindowId()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>();

        return $i0;
    }

    public int hashCode()
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: int hashCode()>();

        return $i0;
    }

    public boolean isAccessibilityFocused()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>();

        return $z0;
    }

    public boolean isCheckable()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>();

        return $z0;
    }

    public boolean isChecked()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>();

        return $z0;
    }

    public boolean isClickable()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>();

        return $z0;
    }

    public boolean isContentInvalid()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isContentInvalid()>();

        return $z0;
    }

    public boolean isContextClickable()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isDismissable()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isDismissable()>();

        return $z0;
    }

    public boolean isEditable()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isEditable()>();

        return $z0;
    }

    public boolean isEnabled()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>();

        return $z0;
    }

    public boolean isFocusable()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>();

        return $z0;
    }

    public boolean isFocused()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        return $z0;
    }

    public boolean isHeading()
    {
        android.view.accessibility.AccessibilityNodeInfo r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat $r2;
        int i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 28 goto label1;

        r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isHeading()>();

        return $z0;

     label1:
        $z0 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean getBooleanProperty(int)>(2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r2 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()>();

        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isHeading()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public boolean isImportantForAccessibility()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()>();

        return $z0;

     label1:
        return 1;
    }

    public boolean isLongClickable()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>();

        return $z0;
    }

    public boolean isMultiLine()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isMultiLine()>();

        return $z0;
    }

    public boolean isPassword()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isPassword()>();

        return $z0;
    }

    public boolean isScreenReaderFocusable()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isScreenReaderFocusable()>();

        return $z0;

     label1:
        $z0 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean getBooleanProperty(int)>(1);

        return $z0;
    }

    public boolean isScrollable()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>();

        return $z0;
    }

    public boolean isSelected()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>();

        return $z0;
    }

    public boolean isShowingHintText()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isShowingHintText()>();

        return $z0;

     label1:
        $z0 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean getBooleanProperty(int)>(4);

        return $z0;
    }

    public boolean isTextEntryKey()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isTextEntryKey()>();

        return $z0;

     label1:
        $z0 = specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean getBooleanProperty(int)>(8);

        return $z0;
    }

    public boolean isVisibleToUser()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>();

        return $z0;
    }

    public boolean performAction(int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int)>($i0);

        return $z0;
    }

    public boolean performAction(int, android.os.Bundle)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        android.os.Bundle $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int,android.os.Bundle)>($i0, $r1);

        return $z0;
    }

    public void recycle()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void recycle()>();

        return;
    }

    public boolean refresh()
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean refresh()>();

        return $z0;
    }

    public boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r4;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat $r1;
        java.lang.Object $r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = $r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Object mAction>;

        $r4 = (android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction) $r3;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r4);

        return $z0;
    }

    public boolean removeChild(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View)>($r1);

        return $z0;
    }

    public boolean removeChild(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View,int)>($r1, $i0);

        return $z0;
    }

    public void setAccessibilityFocused(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)>($z0);

        return;
    }

    public void setAvailableExtraData(java.util.List)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        java.util.List r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r1 := @parameter0: java.util.List;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setAvailableExtraData(java.util.List)>(r1);

     label1:
        return;
    }

    public void setBoundsInParent(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>($r1);

        return;
    }

    public void setBoundsInScreen(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>($r1);

        return;
    }

    public void setCanOpenPopup(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setCanOpenPopup(boolean)>($z0);

        return;
    }

    public void setCheckable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>($z0);

        return;
    }

    public void setChecked(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>($z0);

        return;
    }

    public void setClassName(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r1);

        return;
    }

    public void setClickable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>($z0);

        return;
    }

    public void setCollectionInfo(java.lang.Object)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat $r4;
        java.lang.Object $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo $r3;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r4 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat) $r1;

        $r1 = $r4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: java.lang.Object mInfo>;

        $r3 = (android.view.accessibility.AccessibilityNodeInfo$CollectionInfo) $r1;

     label2:
        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>($r3);

        return;
    }

    public void setCollectionItemInfo(java.lang.Object)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat $r4;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r3;
        java.lang.Object $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r4 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) $r1;

        $r1 = $r4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: java.lang.Object mInfo>;

        $r3 = (android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo) $r1;

     label2:
        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>($r3);

        return;
    }

    public void setContentDescription(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>($r1);

        return;
    }

    public void setContentInvalid(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setContentInvalid(boolean)>($z0);

        return;
    }

    public void setContextClickable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)>($z0);

     label1:
        return;
    }

    public void setDismissable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setDismissable(boolean)>($z0);

        return;
    }

    public void setDrawingOrder(int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0, $i1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 24 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setDrawingOrder(int)>($i0);

     label1:
        return;
    }

    public void setEditable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)>($z0);

        return;
    }

    public void setEnabled(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>($z0);

        return;
    }

    public void setError(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)>($r1);

        return;
    }

    public void setFocusable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)>($z0);

        return;
    }

    public void setFocused(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)>($z0);

        return;
    }

    public void setHeading(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)>($z0);

        return;

     label1:
        specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)>(2, $z0);

        return;
    }

    public void setHintText(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo $r3;
        android.os.Bundle $r2;
        java.lang.CharSequence $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>($r1);

        return;

     label1:
        $r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r2.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.HINT_TEXT_KEY", $r1);

        return;
    }

    public void setImportantForAccessibility(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)>($z0);

     label1:
        return;
    }

    public void setInputType(int)
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setInputType(int)>($i0);

        return;
    }

    public void setLabelFor(android.view.View)
    {
        android.view.View $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)>($r1);

        return;
    }

    public void setLabelFor(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)>($r1, $i0);

        return;
    }

    public void setLabeledBy(android.view.View)
    {
        android.view.View $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)>($r1);

        return;
    }

    public void setLabeledBy(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)>($r1, $i0);

        return;
    }

    public void setLiveRegion(int)
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setLiveRegion(int)>($i0);

        return;
    }

    public void setLongClickable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>($z0);

        return;
    }

    public void setMaxTextLength(int)
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setMaxTextLength(int)>($i0);

        return;
    }

    public void setMovementGranularities(int)
    {
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)>($i0);

        return;
    }

    public void setMultiLine(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)>($z0);

        return;
    }

    public void setPackageName(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setPackageName(java.lang.CharSequence)>($r1);

        return;
    }

    public void setPaneTitle(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo $r3;
        android.os.Bundle $r2;
        java.lang.CharSequence $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)>($r1);

        return;

     label1:
        $r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r2.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.PANE_TITLE_KEY", $r1);

        return;
    }

    public void setParent(android.view.View)
    {
        android.view.View $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId> = -1;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)>($r1);

        return;
    }

    public void setParent(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId> = $i0;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)>($r1, $i0);

        return;
    }

    public void setPassword(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)>($z0);

        return;
    }

    public void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo $r4;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat $r1;
        java.lang.Object $r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = $r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: java.lang.Object mInfo>;

        $r4 = (android.view.accessibility.AccessibilityNodeInfo$RangeInfo) $r3;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setRangeInfo(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)>($r4);

        return;
    }

    public void setRoleDescription(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo $r3;
        android.os.Bundle $r2;
        java.lang.CharSequence $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r2.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("AccessibilityNodeInfo.roleDescription", $r1);

        return;
    }

    public void setScreenReaderFocusable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)>($z0);

        return;

     label1:
        specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)>(1, $z0);

        return;
    }

    public void setScrollable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>($z0);

        return;
    }

    public void setSelected(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>($z0);

        return;
    }

    public void setShowingHintText(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)>($z0);

        return;

     label1:
        specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)>(4, $z0);

        return;
    }

    public void setSource(android.view.View)
    {
        android.view.View $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId> = -1;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)>($r1);

        return;
    }

    public void setSource(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId> = $i0;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>($r1, $i0);

        return;
    }

    public void setStateDescription(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        android.os.Bundle $r3;
        java.lang.CharSequence $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastR()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setStateDescription(java.lang.CharSequence)>($r1);

        return;

     label1:
        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r3.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.STATE_DESCRIPTION_KEY", $r1);

        return;
    }

    public void setText(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>($r1);

        return;
    }

    public void setTextEntryKey(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label1;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setTextEntryKey(boolean)>($z0);

        return;

     label1:
        specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)>(8, $z0);

        return;
    }

    public void setTextSelection(int, int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0, $i1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setTextSelection(int,int)>($i0, $i1);

        return;
    }

    public void setTooltipText(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo $r3;
        android.os.Bundle $r2;
        java.lang.CharSequence $r1;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo: void setTooltipText(java.lang.CharSequence)>($r1);

        return;

     label1:
        $r3 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r2 = virtualinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r2.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("androidx.view.accessibility.AccessibilityNodeInfoCompat.TOOLTIP_TEXT_KEY", $r1);

        return;
    }

    public void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0;
        android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo $r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label1;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        $r3 = $r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setTouchDelegateInfo(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo)>($r3);

     label1:
        return;
    }

    public void setTraversalAfter(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 22 goto label1;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)>($r1);

     label1:
        return;
    }

    public void setTraversalAfter(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0, $i1;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 22 goto label1;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)>($r1, $i0);

     label1:
        return;
    }

    public void setTraversalBefore(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 22 goto label1;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)>($r1);

     label1:
        return;
    }

    public void setTraversalBefore(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        int $i0, $i1;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 22 goto label1;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)>($r1, $i0);

     label1:
        return;
    }

    public void setViewIdResourceName(java.lang.String)
    {
        android.view.accessibility.AccessibilityNodeInfo $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.String $r1;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo: void setViewIdResourceName(java.lang.String)>($r1);

        return;
    }

    public void setVisibleToUser(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>($z0);

        return;
    }

    public java.lang.String toString()
    {
        android.graphics.Rect $r9;
        java.lang.CharSequence $r4;
        java.util.List $r5;
        int i0, $i1;
        java.lang.StringBuilder r1, r3, $r10;
        java.lang.Object $r6;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat r7;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;
        java.lang.String $r2, r8;
        boolean $z0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r3 = new java.lang.StringBuilder;

        r1 = r3;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; boundsInParent: ");

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r2 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; boundsInScreen: ");

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r2 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; packageName: ");

        $r4 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r4);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; className: ");

        $r4 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r4);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; text: ");

        $r4 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r4);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; contentDescription: ");

        $r4 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r4);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; viewId: ");

        $r2 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getViewIdResourceName()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; checkable: ");

        $z0 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; checked: ");

        $z0 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; focusable: ");

        $z0 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; focused: ");

        $z0 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; selected: ");

        $z0 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; clickable: ");

        $z0 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; longClickable: ");

        $z0 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; enabled: ");

        $z0 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; password: ");

        $z0 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scrollable: ");

        $z0 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()>();

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; [");

        $r5 = virtualinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()>();

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        r7 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) $r6;

        $i1 = virtualinvoke r7.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()>();

        $r2 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getActionSymbolicName(int)>($i1);

        r8 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ACTION_UNKNOWN");

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r7.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()>();

        if $r4 == null goto label2;

        $r4 = virtualinvoke r7.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()>();

        r8 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = $i1 + -1;

        if i0 == $i1 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public android.view.accessibility.AccessibilityNodeInfo unwrap()
    {
        android.view.accessibility.AccessibilityNodeInfo r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r0;

        r0 := @this: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r1 = r0.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo>;

        return r1;
    }
}
