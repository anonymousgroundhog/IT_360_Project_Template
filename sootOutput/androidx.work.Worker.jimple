public abstract class androidx.work.Worker extends androidx.work.ListenableWorker
{
    androidx.work.impl.utils.futures.SettableFuture mFuture;

    public void <init>(android.content.Context, androidx.work.WorkerParameters)
    {
        androidx.work.WorkerParameters $r2;
        android.content.Context $r1;
        androidx.work.Worker r0;

        r0 := @this: androidx.work.Worker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: androidx.work.WorkerParameters;

        specialinvoke r0.<androidx.work.ListenableWorker: void <init>(android.content.Context,androidx.work.WorkerParameters)>($r1, $r2);

        return;
    }

    public abstract androidx.work.ListenableWorker$Result doWork();

    public final com.google.common.util.concurrent.ListenableFuture startWork()
    {
        androidx.work.Worker$1 $r1;
        androidx.work.Worker r0;
        java.util.concurrent.Executor $r3;
        androidx.work.impl.utils.futures.SettableFuture $r2;

        r0 := @this: androidx.work.Worker;

        $r2 = staticinvoke <androidx.work.impl.utils.futures.SettableFuture: androidx.work.impl.utils.futures.SettableFuture create()>();

        r0.<androidx.work.Worker: androidx.work.impl.utils.futures.SettableFuture mFuture> = $r2;

        $r3 = virtualinvoke r0.<androidx.work.Worker: java.util.concurrent.Executor getBackgroundExecutor()>();

        $r1 = new androidx.work.Worker$1;

        specialinvoke $r1.<androidx.work.Worker$1: void <init>(androidx.work.Worker)>(r0);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

        $r2 = r0.<androidx.work.Worker: androidx.work.impl.utils.futures.SettableFuture mFuture>;

        return $r2;
    }
}
