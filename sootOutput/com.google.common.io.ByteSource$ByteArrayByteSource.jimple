class com.google.common.io.ByteSource$ByteArrayByteSource extends com.google.common.io.ByteSource
{
    final byte[] bytes;
    final int length;
    final int offset;

    void <init>(byte[])
    {
        int $i0;
        byte[] $r1;
        com.google.common.io.ByteSource$ByteArrayByteSource r0;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        specialinvoke r0.<com.google.common.io.ByteSource$ByteArrayByteSource: void <init>(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    void <init>(byte[], int, int)
    {
        byte[] $r1;
        com.google.common.io.ByteSource$ByteArrayByteSource r0;
        int $i0, $i1;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<com.google.common.io.ByteSource: void <init>()>();

        r0.<com.google.common.io.ByteSource$ByteArrayByteSource: byte[] bytes> = $r1;

        r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int offset> = $i0;

        r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length> = $i1;

        return;
    }

    public long copyTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        byte[] $r2;
        com.google.common.io.ByteSource$ByteArrayByteSource r0;
        int $i0, $i1;
        long $l2;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: byte[] bytes>;

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int offset>;

        $i1 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i0, $i1);

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        $l2 = (long) $i0;

        return $l2;
    }

    public com.google.common.hash.HashCode hash(com.google.common.hash.HashFunction) throws java.io.IOException
    {
        byte[] $r3;
        com.google.common.io.ByteSource$ByteArrayByteSource r0;
        com.google.common.hash.HashCode $r2;
        int $i0, $i1;
        com.google.common.hash.HashFunction $r1;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $r1 := @parameter0: com.google.common.hash.HashFunction;

        $r3 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: byte[] bytes>;

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int offset>;

        $i1 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        $r2 = interfaceinvoke $r1.<com.google.common.hash.HashFunction: com.google.common.hash.HashCode hashBytes(byte[],int,int)>($r3, $i0, $i1);

        return $r2;
    }

    public boolean isEmpty()
    {
        int $i0;
        com.google.common.io.ByteSource$ByteArrayByteSource r0;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.io.InputStream openBufferedStream() throws java.io.IOException
    {
        com.google.common.io.ByteSource$ByteArrayByteSource r0;
        java.io.InputStream $r1;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $r1 = virtualinvoke r0.<com.google.common.io.ByteSource$ByteArrayByteSource: java.io.InputStream openStream()>();

        return $r1;
    }

    public java.io.InputStream openStream()
    {
        byte[] $r2;
        com.google.common.io.ByteSource$ByteArrayByteSource r0;
        java.io.ByteArrayInputStream $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: byte[] bytes>;

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int offset>;

        $i1 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r2, $i0, $i1);

        return $r1;
    }

    public java.lang.Object read(com.google.common.io.ByteProcessor) throws java.io.IOException
    {
        byte[] $r3;
        com.google.common.io.ByteSource$ByteArrayByteSource r0;
        com.google.common.io.ByteProcessor r1;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        r1 := @parameter0: com.google.common.io.ByteProcessor;

        $r3 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: byte[] bytes>;

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int offset>;

        $i1 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        interfaceinvoke r1.<com.google.common.io.ByteProcessor: boolean processBytes(byte[],int,int)>($r3, $i0, $i1);

        $r2 = interfaceinvoke r1.<com.google.common.io.ByteProcessor: java.lang.Object getResult()>();

        return $r2;
    }

    public byte[] read()
    {
        byte[] $r1;
        com.google.common.io.ByteSource$ByteArrayByteSource r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $r1 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: byte[] bytes>;

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int offset>;

        $i2 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int offset>;

        $i1 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        $i1 = $i2 + $i1;

        $r1 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r1, $i0, $i1);

        return $r1;
    }

    public long size()
    {
        int $i0;
        long $l1;
        com.google.common.io.ByteSource$ByteArrayByteSource r0;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        $l1 = (long) $i0;

        return $l1;
    }

    public com.google.common.base.Optional sizeIfKnown()
    {
        com.google.common.io.ByteSource$ByteArrayByteSource r0;
        java.lang.Long $r1;
        com.google.common.base.Optional $r2;
        int $i0;
        long $l1;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        $l1 = (long) $i0;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r2 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r1);

        return $r2;
    }

    public com.google.common.io.ByteSource slice(long, long)
    {
        byte[] $r1;
        long $l1, $l2, l4;
        com.google.common.io.ByteSource$ByteArrayByteSource r0, $r2;
        byte $b3;
        int $i0, $i5;
        boolean z0, $z1;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $l1 := @parameter0: long;

        $l2 := @parameter1: long;

        z0 = 1;

        $b3 = $l1 cmp 0L;

        $i0 = (int) $b3;

        if $i0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,long)>($z1, "offset (%s) may not be negative", $l1);

        $b3 = $l2 cmp 0L;

        $i0 = (int) $b3;

        if $i0 < 0 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,long)>(z0, "length (%s) may not be negative", $l2);

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        l4 = (long) $i0;

        $l1 = staticinvoke <java.lang.Math: long min(long,long)>($l1, l4);

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        l4 = (long) $i0;

        l4 = l4 - $l1;

        $l2 = staticinvoke <java.lang.Math: long min(long,long)>($l2, l4);

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int offset>;

        $i5 = (int) $l1;

        $i5 = $i0 + $i5;

        $r2 = new com.google.common.io.ByteSource$ByteArrayByteSource;

        $r1 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: byte[] bytes>;

        $i0 = (int) $l2;

        specialinvoke $r2.<com.google.common.io.ByteSource$ByteArrayByteSource: void <init>(byte[],int,int)>($r1, $i5, $i0);

        return $r2;
    }

    public java.lang.String toString()
    {
        byte[] $r2;
        com.google.common.io.BaseEncoding $r1;
        com.google.common.io.ByteSource$ByteArrayByteSource r0;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.String $r3, $r4;

        r0 := @this: com.google.common.io.ByteSource$ByteArrayByteSource;

        $r1 = staticinvoke <com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding base16()>();

        $r2 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: byte[] bytes>;

        $i1 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int offset>;

        $i0 = r0.<com.google.common.io.ByteSource$ByteArrayByteSource: int length>;

        $r3 = virtualinvoke $r1.<com.google.common.io.BaseEncoding: java.lang.String encode(byte[],int,int)>($r2, $i1, $i0);

        $r3 = staticinvoke <com.google.common.base.Ascii: java.lang.String truncate(java.lang.CharSequence,int,java.lang.String)>($r3, 30, "...");

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + 17;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ByteSource.wrap(");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
