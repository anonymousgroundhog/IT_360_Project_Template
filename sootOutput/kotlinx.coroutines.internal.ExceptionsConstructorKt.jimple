public final class kotlinx.coroutines.internal.ExceptionsConstructorKt extends java.lang.Object
{
    private static final kotlinx.coroutines.internal.CtorCache ctorCache;
    private static final int throwableFields;

    static void <clinit>()
    {
        java.lang.Throwable r3;
        kotlinx.coroutines.internal.WeakMapCtorCache r0;
        kotlinx.coroutines.internal.CtorCache r1;
        kotlinx.coroutines.internal.ClassValueCtorCache r2;
        int $i0;
        boolean $z0;

        $i0 = staticinvoke <kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCountOrDefault(java.lang.Class,int)>(class "Ljava/lang/Throwable;", -1);

        <kotlinx.coroutines.internal.ExceptionsConstructorKt: int throwableFields> = $i0;

     label1:
        $z0 = staticinvoke <kotlinx.coroutines.internal.FastServiceLoaderKt: boolean getANDROID_DETECTED()>();

     label2:
        if $z0 == 0 goto label5;

     label3:
        r0 = <kotlinx.coroutines.internal.WeakMapCtorCache: kotlinx.coroutines.internal.WeakMapCtorCache INSTANCE>;

        r1 = (kotlinx.coroutines.internal.CtorCache) r0;

     label4:
        goto label6;

     label5:
        r2 = <kotlinx.coroutines.internal.ClassValueCtorCache: kotlinx.coroutines.internal.ClassValueCtorCache INSTANCE>;

        r1 = (kotlinx.coroutines.internal.CtorCache) r2;

     label6:
        goto label8;

     label7:
        r3 := @caughtexception;

        r0 = <kotlinx.coroutines.internal.WeakMapCtorCache: kotlinx.coroutines.internal.WeakMapCtorCache INSTANCE>;

        r1 = (kotlinx.coroutines.internal.CtorCache) r0;

     label8:
        <kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlinx.coroutines.internal.CtorCache ctorCache> = r1;

        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static final kotlin.jvm.functions.Function1 access$createConstructor(java.lang.Class)
    {
        java.lang.Class $r0;
        kotlin.jvm.functions.Function1 $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 createConstructor(java.lang.Class)>($r0);

        return $r1;
    }

    private static final kotlin.jvm.functions.Function1 createConstructor(java.lang.Class)
    {
        kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2 $r19;
        kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1 $r18;
        kotlin.Pair $r9;
        java.lang.reflect.Constructor r1;
        java.lang.Integer $r8;
        java.lang.Iterable $r12;
        java.util.ArrayList $r17;
        java.lang.reflect.Constructor[] $r4;
        int $i0, $i1, $i2;
        java.lang.Number $r15;
        boolean $z0;
        java.util.Iterator $r13;
        java.util.Collection r5;
        java.lang.Class[] $r7;
        kotlin.jvm.functions.Function1 r3, $r10;
        java.util.List $r11;
        kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1 r2;
        java.lang.Class $r0;
        java.lang.Object r6, $r14, $r16;
        kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4 $r21;
        kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3 $r20;

        $r0 := @parameter0: java.lang.Class;

        r2 = <kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1 INSTANCE>;

        r3 = (kotlin.jvm.functions.Function1) r2;

        $i0 = <kotlinx.coroutines.internal.ExceptionsConstructorKt: int throwableFields>;

        $i1 = staticinvoke <kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCountOrDefault(java.lang.Class,int)>($r0, 0);

        if $i0 == $i1 goto label01;

        return r3;

     label01:
        $r4 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        $r17 = new java.util.ArrayList;

        $i0 = lengthof $r4;

        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>($i0);

        r5 = (java.util.Collection) $r17;

        $i0 = lengthof $r4;

        $i1 = 0;

     label02:
        r6 = null;

        if $i1 >= $i0 goto label11;

        r1 = $r4[$i1];

        $r7 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r7;

        lookupswitch($i2)
        {
            case 0: goto label09;
            case 1: goto label06;
            case 2: goto label04;
            default: goto label03;
        };

     label03:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r9 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(null, $r8);

        goto label10;

     label04:
        $r0 = $r7[0];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, class "Ljava/lang/String;");

        if $z0 == 0 goto label05;

        $r0 = $r7[1];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, class "Ljava/lang/Throwable;");

        if $z0 == 0 goto label05;

        $r18 = new kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1;

        specialinvoke $r18.<kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1: void <init>(java.lang.reflect.Constructor)>(r1);

        $r10 = (kotlin.jvm.functions.Function1) $r18;

        $r10 = staticinvoke <kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 safeCtor(kotlin.jvm.functions.Function1)>($r10);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r9 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r10, $r8);

        goto label10;

     label05:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r9 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(null, $r8);

        goto label10;

     label06:
        $r0 = $r7[0];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, class "Ljava/lang/String;");

        if $z0 == 0 goto label07;

        $r19 = new kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2;

        specialinvoke $r19.<kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2: void <init>(java.lang.reflect.Constructor)>(r1);

        $r10 = (kotlin.jvm.functions.Function1) $r19;

        $r10 = staticinvoke <kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 safeCtor(kotlin.jvm.functions.Function1)>($r10);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r9 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r10, $r8);

        goto label10;

     label07:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, class "Ljava/lang/Throwable;");

        if $z0 == 0 goto label08;

        $r20 = new kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3;

        specialinvoke $r20.<kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3: void <init>(java.lang.reflect.Constructor)>(r1);

        $r10 = (kotlin.jvm.functions.Function1) $r20;

        $r10 = staticinvoke <kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 safeCtor(kotlin.jvm.functions.Function1)>($r10);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r9 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r10, $r8);

        goto label10;

     label08:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r9 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(null, $r8);

        goto label10;

     label09:
        $r21 = new kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4;

        specialinvoke $r21.<kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4: void <init>(java.lang.reflect.Constructor)>(r1);

        $r10 = (kotlin.jvm.functions.Function1) $r21;

        $r10 = staticinvoke <kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 safeCtor(kotlin.jvm.functions.Function1)>($r10);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r9 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r10, $r8);

     label10:
        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r9);

        $i1 = $i1 + 1;

        goto label02;

     label11:
        $r11 = (java.util.List) r5;

        $r12 = (java.lang.Iterable) $r11;

        $r13 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label12;

        goto label16;

     label12:
        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r6 = $r14;

        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label13;

        goto label16;

     label13:
        $r9 = (kotlin.Pair) $r14;

        $r14 = virtualinvoke $r9.<kotlin.Pair: java.lang.Object getSecond()>();

        $r15 = (java.lang.Number) $r14;

        $i0 = virtualinvoke $r15.<java.lang.Number: int intValue()>();

     label14:
        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (kotlin.Pair) $r14;

        $r16 = virtualinvoke $r9.<kotlin.Pair: java.lang.Object getSecond()>();

        $r15 = (java.lang.Number) $r16;

        $i1 = virtualinvoke $r15.<java.lang.Number: int intValue()>();

        if $i0 >= $i1 goto label15;

        $i0 = $i1;

        r6 = $r14;

     label15:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label14;

     label16:
        $r9 = (kotlin.Pair) r6;

        if $r9 == null goto label17;

        r6 = virtualinvoke $r9.<kotlin.Pair: java.lang.Object getFirst()>();

        $r10 = (kotlin.jvm.functions.Function1) r6;

        if $r10 != null goto label18;

     label17:
        return r3;

     label18:
        return $r10;
    }

    private static final int fieldsCount(java.lang.Class, int)
    {
        java.lang.reflect.Field r0;
        java.lang.reflect.Field[] $r2;
        int $i0, $i1, i2, $i3, $i4;
        java.lang.Class $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Class;

        $i1 := @parameter1: int;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i2 = 0;

        $i0 = lengthof $r2;

        $i3 = 0;

     label2:
        if $i3 >= $i0 goto label4;

        r0 = $r2[$i3];

        $i4 = virtualinvoke r0.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i4);

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label3;

        i2 = i2 + 1;

     label3:
        $i3 = $i3 + 1;

        goto label2;

     label4:
        $i1 = $i1 + i2;

        $r1 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r1 != null goto label5;

        return $i1;

     label5:
        goto label1;
    }

    static int fieldsCount$default(java.lang.Class, int, int, java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object $r0;
        java.lang.Class $r1;

        $r1 := @parameter0: java.lang.Class;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label1;

        $i0 = 0;

     label1:
        $i0 = staticinvoke <kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCount(java.lang.Class,int)>($r1, $i0);

        return $i0;
    }

    private static final int fieldsCountOrDefault(java.lang.Class, int)
    {
        java.lang.Throwable $r4;
        kotlin.Result$Companion $r1;
        java.lang.Integer $r2;
        int $i0, $i1;
        java.lang.Class $r0;
        java.lang.Object $r3;
        java.lang.Number $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.Class;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)>($r0);

     label1:
        $r1 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $i1 = staticinvoke <kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCount$default(java.lang.Class,int,int,java.lang.Object)>($r0, 0, 1, null);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r1 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r3 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r4);

        $r3 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r3);

     label4:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = staticinvoke <kotlin.Result: boolean isFailure-impl(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r3 = $r2;

     label5:
        $r5 = (java.lang.Number) $r3;

        $i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        return $i0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static final kotlin.jvm.functions.Function1 safeCtor(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1 $r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 = new kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1;

        specialinvoke $r1.<kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r0 = (kotlin.jvm.functions.Function1) $r1;

        return $r0;
    }

    public static final java.lang.Throwable tryCopyException(java.lang.Throwable)
    {
        java.lang.Throwable $r0, $r4;
        kotlinx.coroutines.internal.CtorCache $r5;
        kotlin.Result$Companion $r1;
        kotlin.jvm.functions.Function1 $r7;
        kotlinx.coroutines.CopyableThrowable $r2;
        java.lang.Object $r3;
        java.lang.Class $r6;
        boolean $z0;

        $r0 := @parameter0: java.lang.Throwable;

        $z0 = $r0 instanceof kotlinx.coroutines.CopyableThrowable;

        if $z0 == 0 goto label6;

     label1:
        $r1 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r2 = (kotlinx.coroutines.CopyableThrowable) $r0;

        $r0 = interfaceinvoke $r2.<kotlinx.coroutines.CopyableThrowable: java.lang.Throwable createCopy()>();

        $r3 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r1 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r3 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r4);

        $r3 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r3);

     label4:
        $z0 = staticinvoke <kotlin.Result: boolean isFailure-impl(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r3 = null;

     label5:
        $r0 = (java.lang.Throwable) $r3;

        return $r0;

     label6:
        $r5 = <kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlinx.coroutines.internal.CtorCache ctorCache>;

        $r6 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<kotlinx.coroutines.internal.CtorCache: kotlin.jvm.functions.Function1 get(java.lang.Class)>($r6);

        $r3 = interfaceinvoke $r7.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r0 = (java.lang.Throwable) $r3;

        return $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
