final class com.google.common.base.CaseFormat$StringConverter extends com.google.common.base.Converter implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final com.google.common.base.CaseFormat sourceFormat;
    private final com.google.common.base.CaseFormat targetFormat;

    void <init>(com.google.common.base.CaseFormat, com.google.common.base.CaseFormat)
    {
        com.google.common.base.CaseFormat$StringConverter r0;
        com.google.common.base.CaseFormat $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: com.google.common.base.CaseFormat$StringConverter;

        $r1 := @parameter0: com.google.common.base.CaseFormat;

        $r2 := @parameter1: com.google.common.base.CaseFormat;

        specialinvoke r0.<com.google.common.base.Converter: void <init>()>();

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r1 = (com.google.common.base.CaseFormat) $r3;

        r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat sourceFormat> = $r1;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r1 = (com.google.common.base.CaseFormat) $r3;

        r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat targetFormat> = $r1;

        return;
    }

    protected volatile java.lang.Object doBackward(java.lang.Object)
    {
        com.google.common.base.CaseFormat$StringConverter r0;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: com.google.common.base.CaseFormat$StringConverter;

        $r2 := @parameter0: java.lang.Object;

        $r1 = (java.lang.String) $r2;

        $r1 = virtualinvoke r0.<com.google.common.base.CaseFormat$StringConverter: java.lang.String doBackward(java.lang.String)>($r1);

        return $r1;
    }

    protected java.lang.String doBackward(java.lang.String)
    {
        com.google.common.base.CaseFormat$StringConverter r0;
        com.google.common.base.CaseFormat $r2, $r3;
        java.lang.String $r1;

        r0 := @this: com.google.common.base.CaseFormat$StringConverter;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat targetFormat>;

        $r2 = r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat sourceFormat>;

        $r1 = virtualinvoke $r3.<com.google.common.base.CaseFormat: java.lang.String 'to'(com.google.common.base.CaseFormat,java.lang.String)>($r2, $r1);

        return $r1;
    }

    protected volatile java.lang.Object doForward(java.lang.Object)
    {
        com.google.common.base.CaseFormat$StringConverter r0;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: com.google.common.base.CaseFormat$StringConverter;

        $r2 := @parameter0: java.lang.Object;

        $r1 = (java.lang.String) $r2;

        $r1 = virtualinvoke r0.<com.google.common.base.CaseFormat$StringConverter: java.lang.String doForward(java.lang.String)>($r1);

        return $r1;
    }

    protected java.lang.String doForward(java.lang.String)
    {
        com.google.common.base.CaseFormat$StringConverter r0;
        com.google.common.base.CaseFormat $r2, $r3;
        java.lang.String $r1;

        r0 := @this: com.google.common.base.CaseFormat$StringConverter;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat sourceFormat>;

        $r2 = r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat targetFormat>;

        $r1 = virtualinvoke $r3.<com.google.common.base.CaseFormat: java.lang.String 'to'(com.google.common.base.CaseFormat,java.lang.String)>($r2, $r1);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.base.CaseFormat$StringConverter r0, r2;
        com.google.common.base.CaseFormat $r3, $r4;
        java.lang.Object $r1;
        boolean z0;

        r0 := @this: com.google.common.base.CaseFormat$StringConverter;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof com.google.common.base.CaseFormat$StringConverter;

        if z0 == 0 goto label1;

        r2 = (com.google.common.base.CaseFormat$StringConverter) $r1;

        $r3 = r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat sourceFormat>;

        $r4 = r2.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat sourceFormat>;

        z0 = virtualinvoke $r3.<com.google.common.base.CaseFormat: boolean equals(java.lang.Object)>($r4);

        if z0 == 0 goto label1;

        $r3 = r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat targetFormat>;

        $r4 = r2.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat targetFormat>;

        z0 = virtualinvoke $r3.<com.google.common.base.CaseFormat: boolean equals(java.lang.Object)>($r4);

        if z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        com.google.common.base.CaseFormat$StringConverter r0;
        com.google.common.base.CaseFormat $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.base.CaseFormat$StringConverter;

        $r1 = r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat sourceFormat>;

        $i0 = virtualinvoke $r1.<com.google.common.base.CaseFormat: int hashCode()>();

        $r1 = r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat targetFormat>;

        $i1 = virtualinvoke $r1.<com.google.common.base.CaseFormat: int hashCode()>();

        $i0 = $i0 ^ $i1;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CaseFormat $r1;
        com.google.common.base.CaseFormat$StringConverter r0;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: com.google.common.base.CaseFormat$StringConverter;

        $r1 = r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat sourceFormat>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r1 = r0.<com.google.common.base.CaseFormat$StringConverter: com.google.common.base.CaseFormat targetFormat>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + 14;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".converterTo(");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
