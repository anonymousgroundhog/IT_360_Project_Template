class com.google.common.util.concurrent.ImmediateFuture extends java.lang.Object implements com.google.common.util.concurrent.ListenableFuture
{
    static final com.google.common.util.concurrent.ListenableFuture NULL;
    private static final java.util.logging.Logger log;
    private final java.lang.Object value;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;
        com.google.common.util.concurrent.ImmediateFuture $r0;

        $r0 = new com.google.common.util.concurrent.ImmediateFuture;

        specialinvoke $r0.<com.google.common.util.concurrent.ImmediateFuture: void <init>(java.lang.Object)>(null);

        <com.google.common.util.concurrent.ImmediateFuture: com.google.common.util.concurrent.ListenableFuture NULL> = $r0;

        $r1 = class "Lcom/google/common/util/concurrent/ImmediateFuture;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <com.google.common.util.concurrent.ImmediateFuture: java.util.logging.Logger log> = $r3;

        return;
    }

    void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.common.util.concurrent.ImmediateFuture r0;

        r0 := @this: com.google.common.util.concurrent.ImmediateFuture;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.util.concurrent.ImmediateFuture: java.lang.Object value> = r1;

        return;
    }

    public void addListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor $r2;
        java.lang.RuntimeException r5;
        java.util.logging.Logger $r3;
        java.lang.Runnable $r1;
        java.util.logging.Level $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r9;
        java.lang.String $r6, $r7, $r8;
        com.google.common.util.concurrent.ImmediateFuture r0;

        r0 := @this: com.google.common.util.concurrent.ImmediateFuture;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 := @parameter1: java.util.concurrent.Executor;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "Runnable was null.");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "Executor was null.");

     label1:
        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

     label2:
        return;

     label3:
        r5 := @caughtexception;

        $r3 = <com.google.common.util.concurrent.ImmediateFuture: java.util.logging.Logger log>;

        $r4 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + 57;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RuntimeException while executing runnable ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with executor ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r4, $r6, r5);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public boolean cancel(boolean)
    {
        com.google.common.util.concurrent.ImmediateFuture r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.ImmediateFuture;

        $z0 := @parameter0: boolean;

        return 0;
    }

    public java.lang.Object get()
    {
        java.lang.Object r1;
        com.google.common.util.concurrent.ImmediateFuture r0;

        r0 := @this: com.google.common.util.concurrent.ImmediateFuture;

        r1 = r0.<com.google.common.util.concurrent.ImmediateFuture: java.lang.Object value>;

        return r1;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.ExecutionException
    {
        java.util.concurrent.TimeUnit $r1;
        long $l0;
        java.lang.Object $r2;
        com.google.common.util.concurrent.ImmediateFuture r0;

        r0 := @this: com.google.common.util.concurrent.ImmediateFuture;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.ImmediateFuture: java.lang.Object get()>();

        return $r2;
    }

    public boolean isCancelled()
    {
        com.google.common.util.concurrent.ImmediateFuture r0;

        r0 := @this: com.google.common.util.concurrent.ImmediateFuture;

        return 0;
    }

    public boolean isDone()
    {
        com.google.common.util.concurrent.ImmediateFuture r0;

        r0 := @this: com.google.common.util.concurrent.ImmediateFuture;

        return 1;
    }

    public java.lang.String toString()
    {
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r3, $r4;
        com.google.common.util.concurrent.ImmediateFuture r0;

        r0 := @this: com.google.common.util.concurrent.ImmediateFuture;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r2 = r0.<com.google.common.util.concurrent.ImmediateFuture: java.lang.Object value>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + 27;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[status=SUCCESS, result=[");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]]");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
