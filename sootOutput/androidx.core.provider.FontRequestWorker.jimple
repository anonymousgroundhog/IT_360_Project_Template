class androidx.core.provider.FontRequestWorker extends java.lang.Object
{
    private static final java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE;
    static final java.lang.Object LOCK;
    static final androidx.collection.SimpleArrayMap PENDING_REPLIES;
    static final androidx.collection.LruCache sTypefaceCache;

    static void <clinit>()
    {
        java.util.concurrent.ThreadPoolExecutor $r0;
        androidx.collection.LruCache $r1;
        java.lang.Object $r2;
        androidx.collection.SimpleArrayMap $r3;

        $r1 = new androidx.collection.LruCache;

        specialinvoke $r1.<androidx.collection.LruCache: void <init>(int)>(16);

        <androidx.core.provider.FontRequestWorker: androidx.collection.LruCache sTypefaceCache> = $r1;

        $r0 = staticinvoke <androidx.core.provider.RequestExecutor: java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int)>("fonts-androidx", 10, 10000);

        <androidx.core.provider.FontRequestWorker: java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE> = $r0;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <androidx.core.provider.FontRequestWorker: java.lang.Object LOCK> = $r2;

        $r3 = new androidx.collection.SimpleArrayMap;

        specialinvoke $r3.<androidx.collection.SimpleArrayMap: void <init>()>();

        <androidx.core.provider.FontRequestWorker: androidx.collection.SimpleArrayMap PENDING_REPLIES> = $r3;

        return;
    }

    private void <init>()
    {
        androidx.core.provider.FontRequestWorker r0;

        r0 := @this: androidx.core.provider.FontRequestWorker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String createCacheId(androidx.core.provider.FontRequest, int)
    {
        int $i0;
        java.lang.StringBuilder $r1;
        androidx.core.provider.FontRequest $r0;
        java.lang.String $r2;

        $r0 := @parameter0: androidx.core.provider.FontRequest;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<androidx.core.provider.FontRequest: java.lang.String getId()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult)
    {
        androidx.core.provider.FontsContractCompat$FontInfo[] $r2;
        androidx.core.provider.FontsContractCompat$FontInfo r1;
        int $i0, $i1, $i2;
        androidx.core.provider.FontsContractCompat$FontFamilyResult $r0;

        $r0 := @parameter0: androidx.core.provider.FontsContractCompat$FontFamilyResult;

        $i0 = virtualinvoke $r0.<androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()>();

        if $i0 == 0 goto label3;

        $i0 = virtualinvoke $r0.<androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        return -3;

     label2:
        return -2;

     label3:
        $r2 = virtualinvoke $r0.<androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()>();

        if $r2 == null goto label9;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label4;

        goto label9;

     label4:
        $i0 = lengthof $r2;

        $i1 = 0;

     label5:
        if $i1 >= $i0 goto label8;

        r1 = $r2[$i1];

        $i2 = virtualinvoke r1.<androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()>();

        if $i2 == 0 goto label7;

        if $i2 >= 0 goto label6;

        return -3;

     label6:
        return $i2;

     label7:
        $i1 = $i1 + 1;

        goto label5;

     label8:
        return 0;

     label9:
        return 1;
    }

    static androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String, android.content.Context, androidx.core.provider.FontRequest, int)
    {
        android.graphics.Typeface r5;
        androidx.core.provider.FontRequestWorker$TypefaceResult $r9;
        android.content.Context $r1;
        android.content.pm.PackageManager$NameNotFoundException r8;
        androidx.core.provider.FontRequest $r2;
        androidx.core.provider.FontsContractCompat$FontInfo[] $r7;
        androidx.collection.LruCache r3;
        int $i0, $i1;
        androidx.core.provider.FontsContractCompat$FontFamilyResult $r6;
        java.lang.Object $r4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: androidx.core.provider.FontRequest;

        $i0 := @parameter3: int;

        r3 = <androidx.core.provider.FontRequestWorker: androidx.collection.LruCache sTypefaceCache>;

        $r4 = virtualinvoke r3.<androidx.collection.LruCache: java.lang.Object get(java.lang.Object)>($r0);

        r5 = (android.graphics.Typeface) $r4;

        if r5 == null goto label1;

        $r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r9.<androidx.core.provider.FontRequestWorker$TypefaceResult: void <init>(android.graphics.Typeface)>(r5);

        return $r9;

     label1:
        $r6 = staticinvoke <androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)>($r1, $r2, null);

     label2:
        $i1 = staticinvoke <androidx.core.provider.FontRequestWorker: int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult)>($r6);

        if $i1 == 0 goto label3;

        $r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r9.<androidx.core.provider.FontRequestWorker$TypefaceResult: void <init>(int)>($i1);

        return $r9;

     label3:
        $r7 = virtualinvoke $r6.<androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()>();

        r5 = staticinvoke <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>($r1, null, $r7, $i0);

        if r5 == null goto label4;

        r3 = <androidx.core.provider.FontRequestWorker: androidx.collection.LruCache sTypefaceCache>;

        virtualinvoke r3.<androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r5);

        $r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r9.<androidx.core.provider.FontRequestWorker$TypefaceResult: void <init>(android.graphics.Typeface)>(r5);

        return $r9;

     label4:
        $r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r9.<androidx.core.provider.FontRequestWorker$TypefaceResult: void <init>(int)>(-3);

        return $r9;

     label5:
        r8 := @caughtexception;

        $r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r9.<androidx.core.provider.FontRequestWorker$TypefaceResult: void <init>(int)>(-1);

        return $r9;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
    }

    static android.graphics.Typeface requestFontAsync(android.content.Context, androidx.core.provider.FontRequest, int, java.util.concurrent.Executor, androidx.core.provider.CallbackWithHandler)
    {
        android.graphics.Typeface r7;
        androidx.core.provider.FontRequestWorker$TypefaceResult r8;
        java.lang.Throwable r15;
        android.content.Context $r0;
        java.util.ArrayList r12;
        int $i0;
        androidx.core.provider.FontRequestWorker$3 r13;
        androidx.core.provider.FontRequestWorker$4 $r14;
        java.lang.String $r4;
        androidx.core.provider.FontRequestWorker$2 r9;
        androidx.collection.SimpleArrayMap r10;
        java.util.concurrent.Executor $r2;
        androidx.core.provider.FontRequest $r1;
        androidx.collection.LruCache r5;
        java.lang.Object $r6, $r11;
        androidx.core.provider.CallbackWithHandler $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: androidx.core.provider.FontRequest;

        $i0 := @parameter2: int;

        $r2 := @parameter3: java.util.concurrent.Executor;

        $r3 := @parameter4: androidx.core.provider.CallbackWithHandler;

        $r4 = staticinvoke <androidx.core.provider.FontRequestWorker: java.lang.String createCacheId(androidx.core.provider.FontRequest,int)>($r1, $i0);

        r5 = <androidx.core.provider.FontRequestWorker: androidx.collection.LruCache sTypefaceCache>;

        $r6 = virtualinvoke r5.<androidx.collection.LruCache: java.lang.Object get(java.lang.Object)>($r4);

        r7 = (android.graphics.Typeface) $r6;

        if r7 == null goto label1;

        r8 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke r8.<androidx.core.provider.FontRequestWorker$TypefaceResult: void <init>(android.graphics.Typeface)>(r7);

        virtualinvoke $r3.<androidx.core.provider.CallbackWithHandler: void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult)>(r8);

        return r7;

     label1:
        r9 = new androidx.core.provider.FontRequestWorker$2;

        specialinvoke r9.<androidx.core.provider.FontRequestWorker$2: void <init>(androidx.core.provider.CallbackWithHandler)>($r3);

        $r6 = <androidx.core.provider.FontRequestWorker: java.lang.Object LOCK>;

        entermonitor $r6;

     label2:
        r10 = <androidx.core.provider.FontRequestWorker: androidx.collection.SimpleArrayMap PENDING_REPLIES>;

        $r11 = virtualinvoke r10.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r12 = (java.util.ArrayList) $r11;

        if r12 == null goto label4;

        virtualinvoke r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        exitmonitor $r6;

     label3:
        return null;

     label4:
        r12 = new java.util.ArrayList;

        specialinvoke r12.<java.util.ArrayList: void <init>()>();

        virtualinvoke r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        r10 = <androidx.core.provider.FontRequestWorker: androidx.collection.SimpleArrayMap PENDING_REPLIES>;

        virtualinvoke r10.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r12);

        exitmonitor $r6;

     label5:
        r13 = new androidx.core.provider.FontRequestWorker$3;

        specialinvoke r13.<androidx.core.provider.FontRequestWorker$3: void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)>($r4, $r0, $r1, $i0);

        if $r2 != null goto label6;

        $r2 = <androidx.core.provider.FontRequestWorker: java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE>;

        goto label6;

     label6:
        $r14 = new androidx.core.provider.FontRequestWorker$4;

        specialinvoke $r14.<androidx.core.provider.FontRequestWorker$4: void <init>(java.lang.String)>($r4);

        staticinvoke <androidx.core.provider.RequestExecutor: void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer)>($r2, r13, $r14);

        return null;

     label7:
        r15 := @caughtexception;

     label8:
        exitmonitor $r6;

     label9:
        throw r15;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    static android.graphics.Typeface requestFontSync(android.content.Context, androidx.core.provider.FontRequest, androidx.core.provider.CallbackWithHandler, int, int)
    {
        android.graphics.Typeface r6;
        androidx.core.provider.FontRequestWorker$TypefaceResult r7, $r10;
        android.content.Context $r0;
        androidx.core.provider.FontRequest $r1;
        androidx.collection.LruCache r4;
        java.lang.InterruptedException r9;
        int $i0, $i1;
        java.lang.Object $r5;
        androidx.core.provider.FontRequestWorker$1 $r11;
        java.lang.String $r3;
        androidx.core.provider.CallbackWithHandler $r2;
        java.util.concurrent.ExecutorService r8;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: androidx.core.provider.FontRequest;

        $r2 := @parameter2: androidx.core.provider.CallbackWithHandler;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r3 = staticinvoke <androidx.core.provider.FontRequestWorker: java.lang.String createCacheId(androidx.core.provider.FontRequest,int)>($r1, $i0);

        r4 = <androidx.core.provider.FontRequestWorker: androidx.collection.LruCache sTypefaceCache>;

        $r5 = virtualinvoke r4.<androidx.collection.LruCache: java.lang.Object get(java.lang.Object)>($r3);

        r6 = (android.graphics.Typeface) $r5;

        if r6 == null goto label1;

        $r10 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r10.<androidx.core.provider.FontRequestWorker$TypefaceResult: void <init>(android.graphics.Typeface)>(r6);

        virtualinvoke $r2.<androidx.core.provider.CallbackWithHandler: void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult)>($r10);

        return r6;

     label1:
        if $i1 != -1 goto label2;

        r7 = staticinvoke <androidx.core.provider.FontRequestWorker: androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)>($r3, $r0, $r1, $i0);

        virtualinvoke $r2.<androidx.core.provider.CallbackWithHandler: void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult)>(r7);

        r6 = r7.<androidx.core.provider.FontRequestWorker$TypefaceResult: android.graphics.Typeface mTypeface>;

        return r6;

     label2:
        $r11 = new androidx.core.provider.FontRequestWorker$1;

        specialinvoke $r11.<androidx.core.provider.FontRequestWorker$1: void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)>($r3, $r0, $r1, $i0);

        r8 = <androidx.core.provider.FontRequestWorker: java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE>;

     label3:
        $r5 = staticinvoke <androidx.core.provider.RequestExecutor: java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int)>(r8, $r11, $i1);

     label4:
        r7 = (androidx.core.provider.FontRequestWorker$TypefaceResult) $r5;

     label5:
        virtualinvoke $r2.<androidx.core.provider.CallbackWithHandler: void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult)>(r7);

     label6:
        r6 = r7.<androidx.core.provider.FontRequestWorker$TypefaceResult: android.graphics.Typeface mTypeface>;

        return r6;

     label7:
        r9 := @caughtexception;

        $r10 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r10.<androidx.core.provider.FontRequestWorker$TypefaceResult: void <init>(int)>(-3);

        virtualinvoke $r2.<androidx.core.provider.CallbackWithHandler: void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult)>($r10);

        return null;

        catch java.lang.InterruptedException from label3 to label4 with label7;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    static void resetTypefaceCache()
    {
        androidx.collection.LruCache $r0;

        $r0 = <androidx.core.provider.FontRequestWorker: androidx.collection.LruCache sTypefaceCache>;

        virtualinvoke $r0.<androidx.collection.LruCache: void evictAll()>();

        return;
    }
}
