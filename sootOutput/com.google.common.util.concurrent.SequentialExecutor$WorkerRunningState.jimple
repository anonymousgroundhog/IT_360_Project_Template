final enum class com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState extends java.lang.Enum
{
    private static final com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[] $VALUES;
    public static final enum com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState IDLE;
    public static final enum com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState QUEUED;
    public static final enum com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState QUEUING;
    public static final enum com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState RUNNING;

    private static com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[] $values()
    {
        com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState $r1;
        com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[] $r0;

        $r0 = newarray (com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState)[4];

        $r1 = <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState IDLE>;

        $r0[0] = $r1;

        $r1 = <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState QUEUING>;

        $r0[1] = $r1;

        $r1 = <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState QUEUED>;

        $r0[2] = $r1;

        $r1 = <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState RUNNING>;

        $r0[3] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState $r1;
        com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[] $r0;

        $r1 = new com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState;

        specialinvoke $r1.<com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: void <init>(java.lang.String,int)>("IDLE", 0);

        <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState IDLE> = $r1;

        $r1 = new com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState;

        specialinvoke $r1.<com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: void <init>(java.lang.String,int)>("QUEUING", 1);

        <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState QUEUING> = $r1;

        $r1 = new com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState;

        specialinvoke $r1.<com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: void <init>(java.lang.String,int)>("QUEUED", 2);

        <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState QUEUED> = $r1;

        $r1 = new com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState;

        specialinvoke $r1.<com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: void <init>(java.lang.String,int)>("RUNNING", 3);

        <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState RUNNING> = $r1;

        $r0 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[] $values()>();

        <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
    {
        com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState $r2;
        java.lang.String $r0;
        java.lang.Enum $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/common/util/concurrent/SequentialExecutor$WorkerRunningState;", $r0);

        $r2 = (com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState) $r1;

        return $r2;
    }

    public static com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[] values()
    {
        java.lang.Object $r0;
        com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[] $r1;

        $r1 = <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[]) $r0;

        return $r1;
    }
}
