final class kotlinx.coroutines.flow.FlowKt__ReduceKt extends java.lang.Object
{

    public static final java.lang.Object first(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1 $r2;
        kotlinx.coroutines.internal.Symbol $r9;
        java.lang.IllegalStateException $r5;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.flow.Flow $r0;
        kotlinx.coroutines.flow.FlowCollector $r10;
        int i0;
        java.lang.Object $r3, $r4;
        kotlinx.coroutines.flow.internal.AbortFlowException $r8, $r11;
        java.util.NoSuchElementException $r12;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1 r6;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef r7;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1;

        if $z0 == 0 goto label01;

        $r2 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1) $r1;

        i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: int label>;

        i0 = i0 & -2147483648;

        if i0 == 0 goto label01;

        i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: int label>;

        i0 = i0 - -2147483648;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: int label> = i0;

        goto label02;

     label01:
        $r2 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: void <init>(kotlin.coroutines.Continuation)>($r1);

     label02:
        $r3 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label08;
            case 1: goto label04;
            default: goto label03;
        };

     label03:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r5;

     label04:
        $r4 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object L$1>;

        r6 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1) $r4;

        $r4 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object L$0>;

        r7 = (kotlin.jvm.internal.Ref$ObjectRef) $r4;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label06:
        goto label11;

     label07:
        $r8 := @caughtexception;

        goto label13;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        r7 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r7.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r9 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r9;

        r6 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1;

        specialinvoke r6.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1: void <init>(kotlin.jvm.internal.Ref$ObjectRef)>(r7);

        $r10 = (kotlinx.coroutines.flow.FlowCollector) r6;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object L$0> = r7;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object L$1> = r6;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: int label> = 1;

     label09:
        $r3 = interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r10, $r2);

     label10:
        if $r3 != $r4 goto label11;

        return $r4;

     label11:
        goto label14;

     label12:
        $r11 := @caughtexception;

        $r8 = $r11;

     label13:
        $r10 = (kotlinx.coroutines.flow.FlowCollector) r6;

        staticinvoke <kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: void checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException,kotlinx.coroutines.flow.FlowCollector)>($r8, $r10);

     label14:
        $r3 = r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r9 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        if $r3 == $r9 goto label15;

        $r3 = r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return $r3;

     label15:
        $r12 = new java.util.NoSuchElementException;

        specialinvoke $r12.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Expected at least one element");

        throw $r12;

        catch kotlinx.coroutines.flow.internal.AbortFlowException from label05 to label06 with label07;
        catch kotlinx.coroutines.flow.internal.AbortFlowException from label09 to label10 with label12;
    }

    public static final java.lang.Object first(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        java.lang.IllegalStateException $r6;
        kotlin.coroutines.Continuation $r2;
        int i0;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2 r7;
        kotlinx.coroutines.flow.internal.AbortFlowException $r10, $r13;
        java.lang.String $r16;
        java.util.NoSuchElementException $r14;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef r8;
        kotlinx.coroutines.internal.Symbol $r11;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3 $r3;
        kotlin.jvm.functions.Function2 r1, r9;
        kotlinx.coroutines.flow.Flow $r0;
        kotlinx.coroutines.flow.FlowCollector $r12;
        java.lang.Object $r4, $r5;
        java.lang.StringBuilder r15;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3;

        if $z0 == 0 goto label01;

        $r3 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3) $r2;

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: int label>;

        i0 = i0 & -2147483648;

        if i0 == 0 goto label01;

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: int label>;

        i0 = i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: int label> = i0;

        goto label02;

     label01:
        $r3 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: void <init>(kotlin.coroutines.Continuation)>($r2);

     label02:
        $r4 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: int label>;

        lookupswitch(i0)
        {
            case 0: goto label08;
            case 1: goto label04;
            default: goto label03;
        };

     label03:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;

     label04:
        $r5 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$2>;

        r7 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2) $r5;

        $r5 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$1>;

        r8 = (kotlin.jvm.internal.Ref$ObjectRef) $r5;

        $r5 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$0>;

        r9 = (kotlin.jvm.functions.Function2) $r5;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label06:
        goto label11;

     label07:
        $r10 := @caughtexception;

        goto label13;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        r9 = r1;

        r8 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r8.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r11 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r11;

        r7 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2;

        specialinvoke r7.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: void <init>(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$ObjectRef)>(r1, r8);

        $r12 = (kotlinx.coroutines.flow.FlowCollector) r7;

        $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$0> = r1;

        $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$1> = r8;

        $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$2> = r7;

        $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: int label> = 1;

     label09:
        $r4 = interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r12, $r3);

     label10:
        if $r4 != $r5 goto label11;

        return $r5;

     label11:
        goto label14;

     label12:
        $r13 := @caughtexception;

        $r10 = $r13;

     label13:
        $r12 = (kotlinx.coroutines.flow.FlowCollector) r7;

        staticinvoke <kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: void checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException,kotlinx.coroutines.flow.FlowCollector)>($r10, $r12);

     label14:
        $r4 = r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r11 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        if $r4 == $r11 goto label15;

        $r4 = r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return $r4;

     label15:
        $r14 = new java.util.NoSuchElementException;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        r15 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected at least one element matching the predicate ");

        r15 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r16 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r16);

        throw $r14;

        catch kotlinx.coroutines.flow.internal.AbortFlowException from label05 to label06 with label07;
        catch kotlinx.coroutines.flow.internal.AbortFlowException from label09 to label10 with label12;
    }

    public static final java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1 $r2;
        java.lang.IllegalStateException $r5;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.flow.Flow $r0;
        kotlinx.coroutines.flow.FlowCollector $r9;
        int i0;
        java.lang.Object $r3, $r4;
        kotlinx.coroutines.flow.internal.AbortFlowException $r8, $r10;
        boolean $z0;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1 r6;
        kotlin.jvm.internal.Ref$ObjectRef r7;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1;

        if $z0 == 0 goto label01;

        $r2 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1) $r1;

        i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: int label>;

        i0 = i0 & -2147483648;

        if i0 == 0 goto label01;

        i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: int label>;

        i0 = i0 - -2147483648;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: int label> = i0;

        goto label02;

     label01:
        $r2 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: void <init>(kotlin.coroutines.Continuation)>($r1);

     label02:
        $r3 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label08;
            case 1: goto label04;
            default: goto label03;
        };

     label03:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r5;

     label04:
        $r4 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object L$1>;

        r6 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1) $r4;

        $r4 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object L$0>;

        r7 = (kotlin.jvm.internal.Ref$ObjectRef) $r4;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label06:
        goto label11;

     label07:
        $r8 := @caughtexception;

        goto label13;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        r7 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r7.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r6 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1;

        specialinvoke r6.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1: void <init>(kotlin.jvm.internal.Ref$ObjectRef)>(r7);

        $r9 = (kotlinx.coroutines.flow.FlowCollector) r6;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object L$0> = r7;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object L$1> = r6;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: int label> = 1;

     label09:
        $r3 = interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r9, $r2);

     label10:
        if $r3 != $r4 goto label11;

        return $r4;

     label11:
        goto label14;

     label12:
        $r10 := @caughtexception;

        $r8 = $r10;

     label13:
        $r9 = (kotlinx.coroutines.flow.FlowCollector) r6;

        staticinvoke <kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: void checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException,kotlinx.coroutines.flow.FlowCollector)>($r8, $r9);

     label14:
        $r3 = r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return $r3;

        catch kotlinx.coroutines.flow.internal.AbortFlowException from label05 to label06 with label07;
        catch kotlinx.coroutines.flow.internal.AbortFlowException from label09 to label10 with label12;
    }

    public static final java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        java.lang.IllegalStateException $r7;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3 $r4;
        kotlin.jvm.functions.Function2 r2;
        kotlinx.coroutines.flow.Flow $r1;
        kotlinx.coroutines.flow.FlowCollector r10;
        int i0;
        java.lang.Object $r5, $r6;
        kotlinx.coroutines.flow.internal.AbortFlowException r9, $r11;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2 r0;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef r8;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = $r3 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3;

        if $z0 == 0 goto label01;

        $r4 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3) $r3;

        i0 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: int label>;

        i0 = i0 & -2147483648;

        if i0 == 0 goto label01;

        i0 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: int label>;

        i0 = i0 - -2147483648;

        $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: int label> = i0;

        goto label02;

     label01:
        $r4 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3;

        specialinvoke $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: void <init>(kotlin.coroutines.Continuation)>($r3);

     label02:
        $r5 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object result>;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: int label>;

        lookupswitch(i0)
        {
            case 0: goto label08;
            case 1: goto label04;
            default: goto label03;
        };

     label03:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label04:
        $r6 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object L$1>;

        r0 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2) $r6;

        $r6 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object L$0>;

        r8 = (kotlin.jvm.internal.Ref$ObjectRef) $r6;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

     label06:
        goto label11;

     label07:
        r9 := @caughtexception;

        goto label13;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        r8 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r8.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r0 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2;

        specialinvoke r0.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: void <init>(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$ObjectRef)>(r2, r8);

        r10 = (kotlinx.coroutines.flow.FlowCollector) r0;

        $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object L$0> = r8;

        $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object L$1> = r0;

        $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: int label> = 1;

     label09:
        $r5 = interfaceinvoke $r1.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>(r10, $r4);

     label10:
        if $r5 != $r6 goto label11;

        return $r6;

     label11:
        goto label14;

     label12:
        $r11 := @caughtexception;

        r9 = $r11;

     label13:
        r10 = (kotlinx.coroutines.flow.FlowCollector) r0;

        staticinvoke <kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: void checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException,kotlinx.coroutines.flow.FlowCollector)>(r9, r10);

     label14:
        $r5 = r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return $r5;

        catch kotlinx.coroutines.flow.internal.AbortFlowException from label05 to label06 with label07;
        catch kotlinx.coroutines.flow.internal.AbortFlowException from label09 to label10 with label12;
    }

    public static final java.lang.Object fold(kotlinx.coroutines.flow.Flow, java.lang.Object, kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        java.lang.IllegalStateException $r8;
        kotlin.coroutines.Continuation $r4;
        kotlin.jvm.functions.Function3 r3;
        kotlinx.coroutines.flow.Flow $r1;
        kotlinx.coroutines.flow.FlowCollector r10;
        int $i0;
        java.lang.Object r2, $r6, $r7;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1 $r5;
        kotlin.jvm.internal.Ref$ObjectRef r0;
        boolean $z0;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2 r9;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: kotlin.jvm.functions.Function3;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        $z0 = $r4 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1;

        if $z0 == 0 goto label1;

        $r5 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) $r4;

        $i0 = $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: int label>;

        $i0 = $i0 - -2147483648;

        $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: int label> = $i0;

        goto label2;

     label1:
        $r5 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: void <init>(kotlin.coroutines.Continuation)>($r4);

     label2:
        $r6 = $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object result>;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            default: goto label3;
        };

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;

     label4:
        r2 = $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object L$0>;

        r0 = (kotlin.jvm.internal.Ref$ObjectRef) r2;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        goto label6;

     label5:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        r0 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r0.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r2;

        r9 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2;

        specialinvoke r9.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: void <init>(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3)>(r0, r3);

        r10 = (kotlinx.coroutines.flow.FlowCollector) r9;

        $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object L$0> = r0;

        $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: int label> = 1;

        r2 = interfaceinvoke $r1.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>(r10, $r5);

        if r2 != $r7 goto label6;

        return $r7;

     label6:
        r2 = r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return r2;
    }

    private static final java.lang.Object fold$$forInline(kotlinx.coroutines.flow.Flow, java.lang.Object, kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.flow.FlowCollector $r6;
        kotlin.jvm.functions.Function3 $r2;
        java.lang.Object $r1;
        kotlin.jvm.internal.Ref$ObjectRef r4;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2 $r5;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: kotlin.jvm.functions.Function3;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        r4 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r4.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r1;

        $r5 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: void <init>(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3)>(r4, $r2);

        $r6 = (kotlinx.coroutines.flow.FlowCollector) $r5;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r6, $r3);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        $r1 = r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return $r1;
    }

    public static final java.lang.Object last(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.internal.Symbol $r7;
        java.lang.IllegalStateException r5;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2 $r8;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1 $r2;
        kotlinx.coroutines.flow.Flow r0;
        kotlinx.coroutines.flow.FlowCollector $r9;
        int $i0;
        java.lang.Object $r3, $r4;
        java.util.NoSuchElementException $r10;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef r6;

        r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1) $r1;

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: int label>;

        $i0 = $i0 - -2147483648;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: int label> = $i0;

        goto label2;

     label1:
        $r2 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: void <init>(kotlin.coroutines.Continuation)>($r1);

     label2:
        $r3 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            default: goto label3;
        };

     label3:
        r5 = new java.lang.IllegalStateException;

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r5;

     label4:
        $r4 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object L$0>;

        r6 = (kotlin.jvm.internal.Ref$ObjectRef) $r4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        goto label6;

     label5:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        r6 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r6.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r7 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r7;

        $r8 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2;

        specialinvoke $r8.<kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2: void <init>(kotlin.jvm.internal.Ref$ObjectRef)>(r6);

        $r9 = (kotlinx.coroutines.flow.FlowCollector) $r8;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object L$0> = r6;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: int label> = 1;

        $r3 = interfaceinvoke r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r9, $r2);

        if $r3 != $r4 goto label6;

        return $r4;

     label6:
        $r3 = r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r7 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        if $r3 == $r7 goto label7;

        $r3 = r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return $r3;

     label7:
        $r10 = new java.util.NoSuchElementException;

        specialinvoke $r10.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Expected at least one element");

        throw $r10;
    }

    public static final java.lang.Object lastOrNull(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        java.lang.IllegalStateException r5;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1 $r2;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2 $r7;
        kotlinx.coroutines.flow.Flow r0;
        kotlinx.coroutines.flow.FlowCollector $r8;
        int $i0;
        java.lang.Object $r3, $r4;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef r6;

        r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1) $r1;

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: int label>;

        $i0 = $i0 - -2147483648;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: int label> = $i0;

        goto label2;

     label1:
        $r2 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: void <init>(kotlin.coroutines.Continuation)>($r1);

     label2:
        $r3 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            default: goto label3;
        };

     label3:
        r5 = new java.lang.IllegalStateException;

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r5;

     label4:
        $r4 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object L$0>;

        r6 = (kotlin.jvm.internal.Ref$ObjectRef) $r4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        goto label6;

     label5:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        r6 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r6.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r7 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2;

        specialinvoke $r7.<kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2: void <init>(kotlin.jvm.internal.Ref$ObjectRef)>(r6);

        $r8 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object L$0> = r6;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: int label> = 1;

        $r3 = interfaceinvoke r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r8, $r2);

        if $r3 != $r4 goto label6;

        return $r4;

     label6:
        $r3 = r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return $r3;
    }

    public static final java.lang.Object reduce(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.internal.Symbol $r8;
        java.lang.IllegalStateException r6;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.functions.Function3 r1;
        kotlinx.coroutines.flow.Flow r0;
        kotlinx.coroutines.flow.FlowCollector $r10;
        int $i0;
        java.lang.Object $r4, $r5;
        java.util.NoSuchElementException r11;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2 $r9;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1 $r3;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef r7;

        r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        r1 := @parameter1: kotlin.jvm.functions.Function3;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1;

        if $z0 == 0 goto label1;

        $r3 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1) $r2;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: int label> = $i0;

        goto label2;

     label1:
        $r3 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: void <init>(kotlin.coroutines.Continuation)>($r2);

     label2:
        $r4 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            default: goto label3;
        };

     label3:
        r6 = new java.lang.IllegalStateException;

        specialinvoke r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r6;

     label4:
        $r5 = $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object L$0>;

        r7 = (kotlin.jvm.internal.Ref$ObjectRef) $r5;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        goto label6;

     label5:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        r7 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r7.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r8 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r8;

        $r9 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2;

        specialinvoke $r9.<kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: void <init>(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3)>(r7, r1);

        $r10 = (kotlinx.coroutines.flow.FlowCollector) $r9;

        $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object L$0> = r7;

        $r3.<kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: int label> = 1;

        $r4 = interfaceinvoke r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r10, $r3);

        if $r4 != $r5 goto label6;

        return $r5;

     label6:
        $r4 = r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r8 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        if $r4 == $r8 goto label7;

        $r4 = r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return $r4;

     label7:
        r11 = new java.util.NoSuchElementException;

        specialinvoke r11.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Empty flow can\'t be reduced");

        throw r11;
    }

    public static final java.lang.Object single(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.internal.Symbol $r7;
        java.lang.IllegalStateException r5;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2 $r8;
        kotlinx.coroutines.flow.Flow r0;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1 $r2;
        kotlinx.coroutines.flow.FlowCollector $r9;
        int $i0;
        java.lang.Object $r3, $r4;
        java.util.NoSuchElementException $r10;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef r6;

        r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1) $r1;

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: int label>;

        $i0 = $i0 - -2147483648;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: int label> = $i0;

        goto label2;

     label1:
        $r2 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: void <init>(kotlin.coroutines.Continuation)>($r1);

     label2:
        $r3 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            default: goto label3;
        };

     label3:
        r5 = new java.lang.IllegalStateException;

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r5;

     label4:
        $r4 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object L$0>;

        r6 = (kotlin.jvm.internal.Ref$ObjectRef) $r4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        goto label6;

     label5:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        r6 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r6.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r7 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r7;

        $r8 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2;

        specialinvoke $r8.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: void <init>(kotlin.jvm.internal.Ref$ObjectRef)>(r6);

        $r9 = (kotlinx.coroutines.flow.FlowCollector) $r8;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object L$0> = r6;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: int label> = 1;

        $r3 = interfaceinvoke r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r9, $r2);

        if $r3 != $r4 goto label6;

        return $r4;

     label6:
        $r3 = r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r7 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        if $r3 == $r7 goto label7;

        $r3 = r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return $r3;

     label7:
        $r10 = new java.util.NoSuchElementException;

        specialinvoke $r10.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Flow is empty");

        throw $r10;
    }

    public static final java.lang.Object singleOrNull(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.internal.Symbol $r9;
        java.lang.IllegalStateException $r5;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1 r6;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.flow.Flow $r0;
        kotlinx.coroutines.flow.FlowCollector $r10;
        int i0;
        java.lang.Object $r3, $r4;
        kotlinx.coroutines.flow.internal.AbortFlowException $r8, $r11;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1 $r2;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef r7;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1;

        if $z0 == 0 goto label01;

        $r2 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1) $r1;

        i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: int label>;

        i0 = i0 & -2147483648;

        if i0 == 0 goto label01;

        i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: int label>;

        i0 = i0 - -2147483648;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: int label> = i0;

        goto label02;

     label01:
        $r2 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: void <init>(kotlin.coroutines.Continuation)>($r1);

     label02:
        $r3 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label08;
            case 1: goto label04;
            default: goto label03;
        };

     label03:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r5;

     label04:
        $r4 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object L$1>;

        r6 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1) $r4;

        $r4 = $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object L$0>;

        r7 = (kotlin.jvm.internal.Ref$ObjectRef) $r4;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label06:
        goto label11;

     label07:
        $r8 := @caughtexception;

        goto label13;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        r7 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r7.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r9 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r9;

        r6 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1;

        specialinvoke r6.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1: void <init>(kotlin.jvm.internal.Ref$ObjectRef)>(r7);

        $r10 = (kotlinx.coroutines.flow.FlowCollector) r6;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object L$0> = r7;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object L$1> = r6;

        $r2.<kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: int label> = 1;

     label09:
        $r3 = interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r10, $r2);

     label10:
        if $r3 != $r4 goto label11;

        return $r4;

     label11:
        goto label14;

     label12:
        $r11 := @caughtexception;

        $r8 = $r11;

     label13:
        $r10 = (kotlinx.coroutines.flow.FlowCollector) r6;

        staticinvoke <kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: void checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException,kotlinx.coroutines.flow.FlowCollector)>($r8, $r10);

     label14:
        $r3 = r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r9 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        if $r3 != $r9 goto label15;

        return null;

     label15:
        $r3 = r7.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        return $r3;

        catch kotlinx.coroutines.flow.internal.AbortFlowException from label05 to label06 with label07;
        catch kotlinx.coroutines.flow.internal.AbortFlowException from label09 to label10 with label12;
    }
}
