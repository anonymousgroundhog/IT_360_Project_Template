public final class kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings extends java.lang.Object
{
    public static final int[] $EnumSwitchMapping$0;

    static void <clinit>()
    {
        java.lang.NoSuchFieldError $r3, $r4, $r5;
        int[] $r1;
        int $i0;
        kotlinx.coroutines.channels.BufferOverflow $r2;
        kotlinx.coroutines.channels.BufferOverflow[] $r0;

        $r0 = staticinvoke <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

     label01:
        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        $i0 = virtualinvoke $r2.<kotlinx.coroutines.channels.BufferOverflow: int ordinal()>();

     label02:
        $r1[$i0] = 1;

        goto label04;

     label03:
        $r3 := @caughtexception;

     label04:
        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_LATEST>;

        $i0 = virtualinvoke $r2.<kotlinx.coroutines.channels.BufferOverflow: int ordinal()>();

     label05:
        $r1[$i0] = 2;

        goto label07;

     label06:
        $r4 := @caughtexception;

     label07:
        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST>;

        $i0 = virtualinvoke $r2.<kotlinx.coroutines.channels.BufferOverflow: int ordinal()>();

     label08:
        $r1[$i0] = 3;

        goto label10;

     label09:
        $r5 := @caughtexception;

     label10:
        <kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings: int[] $EnumSwitchMapping$0> = $r1;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
    }
}
