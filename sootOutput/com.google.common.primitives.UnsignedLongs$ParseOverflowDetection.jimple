final class com.google.common.primitives.UnsignedLongs$ParseOverflowDetection extends java.lang.Object
{
    static final int[] maxSafeDigits;
    static final long[] maxValueDivs;
    static final int[] maxValueMods;

    static void <clinit>()
    {
        long[] r0;
        int[] r1;
        int $i0, i1;
        long $l2;
        java.math.BigInteger $r3;
        java.lang.String $r2;

        r0 = newarray (long)[37];

        <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: long[] maxValueDivs> = r0;

        r1 = newarray (int)[37];

        <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: int[] maxValueMods> = r1;

        r1 = newarray (int)[37];

        <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: int[] maxSafeDigits> = r1;

        $r3 = new java.math.BigInteger;

        specialinvoke $r3.<java.math.BigInteger: void <init>(java.lang.String,int)>("10000000000000000", 16);

        i1 = 2;

     label1:
        if i1 > 36 goto label2;

        r0 = <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: long[] maxValueDivs>;

        $l2 = (long) i1;

        $l2 = staticinvoke <com.google.common.primitives.UnsignedLongs: long divide(long,long)>(-1L, $l2);

        r0[i1] = $l2;

        r1 = <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: int[] maxValueMods>;

        $l2 = (long) i1;

        $l2 = staticinvoke <com.google.common.primitives.UnsignedLongs: long remainder(long,long)>(-1L, $l2);

        $i0 = (int) $l2;

        r1[i1] = $i0;

        r1 = <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: int[] maxSafeDigits>;

        $r2 = virtualinvoke $r3.<java.math.BigInteger: java.lang.String toString(int)>(i1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        r1[i1] = $i0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void <init>()
    {
        com.google.common.primitives.UnsignedLongs$ParseOverflowDetection r0;

        r0 := @this: com.google.common.primitives.UnsignedLongs$ParseOverflowDetection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean overflowInParse(long, int, int)
    {
        long $l0, $l4;
        long[] $r0;
        byte $b3;
        int[] $r1;
        int $i1, $i2, $i5;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $b3 = $l0 cmp 0L;

        $i5 = (int) $b3;

        if $i5 < 0 goto label4;

        $r0 = <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: long[] maxValueDivs>;

        $l4 = $r0[$i2];

        $b3 = $l0 cmp $l4;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label1;

        return 0;

     label1:
        $r0 = <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: long[] maxValueDivs>;

        $l4 = $r0[$i2];

        $b3 = $l0 cmp $l4;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label2;

        return 1;

     label2:
        $r1 = <com.google.common.primitives.UnsignedLongs$ParseOverflowDetection: int[] maxValueMods>;

        $i2 = $r1[$i2];

        if $i1 <= $i2 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        return 1;
    }
}
