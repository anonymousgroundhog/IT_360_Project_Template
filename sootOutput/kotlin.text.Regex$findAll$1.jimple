final class kotlin.text.Regex$findAll$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function0
{
    final java.lang.CharSequence $input;
    final int $startIndex;
    final kotlin.text.Regex this$0;

    void <init>(kotlin.text.Regex, java.lang.CharSequence, int)
    {
        kotlin.text.Regex$findAll$1 r0;
        java.lang.CharSequence $r2;
        int $i0;
        kotlin.text.Regex $r1;

        r0 := @this: kotlin.text.Regex$findAll$1;

        $r1 := @parameter0: kotlin.text.Regex;

        $r2 := @parameter1: java.lang.CharSequence;

        $i0 := @parameter2: int;

        r0.<kotlin.text.Regex$findAll$1: kotlin.text.Regex this$0> = $r1;

        r0.<kotlin.text.Regex$findAll$1: java.lang.CharSequence $input> = $r2;

        r0.<kotlin.text.Regex$findAll$1: int $startIndex> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        kotlin.text.Regex$findAll$1 r0;
        kotlin.text.MatchResult $r1;

        r0 := @this: kotlin.text.Regex$findAll$1;

        $r1 = virtualinvoke r0.<kotlin.text.Regex$findAll$1: kotlin.text.MatchResult invoke()>();

        return $r1;
    }

    public final kotlin.text.MatchResult invoke()
    {
        kotlin.text.Regex$findAll$1 r0;
        kotlin.text.MatchResult $r2;
        java.lang.CharSequence $r1;
        int $i0;
        kotlin.text.Regex $r3;

        r0 := @this: kotlin.text.Regex$findAll$1;

        $r3 = r0.<kotlin.text.Regex$findAll$1: kotlin.text.Regex this$0>;

        $r1 = r0.<kotlin.text.Regex$findAll$1: java.lang.CharSequence $input>;

        $i0 = r0.<kotlin.text.Regex$findAll$1: int $startIndex>;

        $r2 = virtualinvoke $r3.<kotlin.text.Regex: kotlin.text.MatchResult find(java.lang.CharSequence,int)>($r1, $i0);

        return $r2;
    }
}
