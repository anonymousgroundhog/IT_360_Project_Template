public final class com.google.common.io.Closer extends java.lang.Object implements java.io.Closeable
{
    private static final com.google.common.io.Closer$Suppressor SUPPRESSOR;
    private final java.util.Deque stack;
    final com.google.common.io.Closer$Suppressor suppressor;
    private java.lang.Throwable thrown;

    static void <clinit>()
    {
        com.google.common.io.Closer$SuppressingSuppressor $r0;
        com.google.common.io.Closer$Suppressor $r1;

        $r0 = staticinvoke <com.google.common.io.Closer$SuppressingSuppressor: com.google.common.io.Closer$SuppressingSuppressor tryCreate()>();

        if $r0 != null goto label1;

        $r1 = <com.google.common.io.Closer$LoggingSuppressor: com.google.common.io.Closer$LoggingSuppressor INSTANCE>;

        goto label2;

     label1:
        $r1 = $r0;

     label2:
        <com.google.common.io.Closer: com.google.common.io.Closer$Suppressor SUPPRESSOR> = $r1;

        return;
    }

    void <init>(com.google.common.io.Closer$Suppressor)
    {
        com.google.common.io.Closer r0;
        java.lang.Object $r2;
        com.google.common.io.Closer$Suppressor $r1;
        java.util.ArrayDeque $r3;

        r0 := @this: com.google.common.io.Closer;

        $r1 := @parameter0: com.google.common.io.Closer$Suppressor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayDeque;

        specialinvoke $r3.<java.util.ArrayDeque: void <init>(int)>(4);

        r0.<com.google.common.io.Closer: java.util.Deque stack> = $r3;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r1 = (com.google.common.io.Closer$Suppressor) $r2;

        r0.<com.google.common.io.Closer: com.google.common.io.Closer$Suppressor suppressor> = $r1;

        return;
    }

    public static com.google.common.io.Closer create()
    {
        com.google.common.io.Closer$Suppressor $r1;
        com.google.common.io.Closer $r0;

        $r0 = new com.google.common.io.Closer;

        $r1 = <com.google.common.io.Closer: com.google.common.io.Closer$Suppressor SUPPRESSOR>;

        specialinvoke $r0.<com.google.common.io.Closer: void <init>(com.google.common.io.Closer$Suppressor)>($r1);

        return $r0;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable r1, r3;
        com.google.common.io.Closer$Suppressor $r2;
        java.lang.AssertionError r7;
        java.util.Deque r4;
        com.google.common.io.Closer r0;
        java.io.Closeable r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.google.common.io.Closer;

        r3 = r0.<com.google.common.io.Closer: java.lang.Throwable thrown>;

     label1:
        r4 = r0.<com.google.common.io.Closer: java.util.Deque stack>;

        $z0 = interfaceinvoke r4.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        r4 = r0.<com.google.common.io.Closer: java.util.Deque stack>;

        $r5 = interfaceinvoke r4.<java.util.Deque: java.lang.Object removeFirst()>();

        r6 = (java.io.Closeable) $r5;

     label2:
        interfaceinvoke r6.<java.io.Closeable: void close()>();

     label3:
        goto label1;

     label4:
        r1 := @caughtexception;

        if r3 != null goto label5;

        r3 = r1;

        goto label1;

     label5:
        $r2 = r0.<com.google.common.io.Closer: com.google.common.io.Closer$Suppressor suppressor>;

        interfaceinvoke $r2.<com.google.common.io.Closer$Suppressor: void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable)>(r6, r3, r1);

        goto label1;

     label6:
        r1 = r0.<com.google.common.io.Closer: java.lang.Throwable thrown>;

        if r1 != null goto label8;

        if r3 != null goto label7;

        return;

     label7:
        staticinvoke <com.google.common.base.Throwables: void propagateIfPossible(java.lang.Throwable,java.lang.Class)>(r3, class "Ljava/io/IOException;");

        r7 = new java.lang.AssertionError;

        specialinvoke r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(r3);

        throw r7;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public java.io.Closeable register(java.io.Closeable)
    {
        java.util.Deque $r2;
        com.google.common.io.Closer r0;
        java.io.Closeable r1;

        r0 := @this: com.google.common.io.Closer;

        r1 := @parameter0: java.io.Closeable;

        if r1 == null goto label1;

        $r2 = r0.<com.google.common.io.Closer: java.util.Deque stack>;

        interfaceinvoke $r2.<java.util.Deque: void addFirst(java.lang.Object)>(r1);

     label1:
        return r1;
    }

    public java.lang.RuntimeException rethrow(java.lang.Throwable) throws java.io.IOException
    {
        java.lang.Throwable $r1;
        java.lang.RuntimeException $r2;
        com.google.common.io.Closer r0;

        r0 := @this: com.google.common.io.Closer;

        $r1 := @parameter0: java.lang.Throwable;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.io.Closer: java.lang.Throwable thrown> = $r1;

        staticinvoke <com.google.common.base.Throwables: void propagateIfPossible(java.lang.Throwable,java.lang.Class)>($r1, class "Ljava/io/IOException;");

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1);

        throw $r2;
    }

    public java.lang.RuntimeException rethrow(java.lang.Throwable, java.lang.Class) throws java.io.IOException, java.lang.Exception
    {
        java.lang.Throwable $r1;
        com.google.common.io.Closer r0;
        java.lang.Class r2;
        java.lang.RuntimeException $r3;

        r0 := @this: com.google.common.io.Closer;

        $r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.lang.Class;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.io.Closer: java.lang.Throwable thrown> = $r1;

        staticinvoke <com.google.common.base.Throwables: void propagateIfPossible(java.lang.Throwable,java.lang.Class)>($r1, class "Ljava/io/IOException;");

        staticinvoke <com.google.common.base.Throwables: void propagateIfPossible(java.lang.Throwable,java.lang.Class)>($r1, r2);

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1);

        throw $r3;
    }

    public java.lang.RuntimeException rethrow(java.lang.Throwable, java.lang.Class, java.lang.Class) throws java.io.IOException, java.lang.Exception, java.lang.Exception
    {
        java.lang.Throwable $r1;
        com.google.common.io.Closer r0;
        java.lang.Class r2, r3;
        java.lang.RuntimeException $r4;

        r0 := @this: com.google.common.io.Closer;

        $r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.Class;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r0.<com.google.common.io.Closer: java.lang.Throwable thrown> = $r1;

        staticinvoke <com.google.common.base.Throwables: void propagateIfPossible(java.lang.Throwable,java.lang.Class)>($r1, class "Ljava/io/IOException;");

        staticinvoke <com.google.common.base.Throwables: void propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class)>($r1, r2, r3);

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1);

        throw $r4;
    }
}
