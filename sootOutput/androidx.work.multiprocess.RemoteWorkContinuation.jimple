public abstract class androidx.work.multiprocess.RemoteWorkContinuation extends java.lang.Object
{

    protected void <init>()
    {
        androidx.work.multiprocess.RemoteWorkContinuation r0;

        r0 := @this: androidx.work.multiprocess.RemoteWorkContinuation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.work.multiprocess.RemoteWorkContinuation combine(java.util.List)
    {
        androidx.work.multiprocess.RemoteWorkContinuation $r2;
        java.util.List r0;
        java.lang.Object $r1;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r2 = (androidx.work.multiprocess.RemoteWorkContinuation) $r1;

        $r2 = virtualinvoke $r2.<androidx.work.multiprocess.RemoteWorkContinuation: androidx.work.multiprocess.RemoteWorkContinuation combineInternal(java.util.List)>(r0);

        return $r2;
    }

    protected abstract androidx.work.multiprocess.RemoteWorkContinuation combineInternal(java.util.List);

    public abstract com.google.common.util.concurrent.ListenableFuture enqueue();

    public final androidx.work.multiprocess.RemoteWorkContinuation then(androidx.work.OneTimeWorkRequest)
    {
        androidx.work.multiprocess.RemoteWorkContinuation r0;
        java.util.List $r2;
        androidx.work.OneTimeWorkRequest $r1;

        r0 := @this: androidx.work.multiprocess.RemoteWorkContinuation;

        $r1 := @parameter0: androidx.work.OneTimeWorkRequest;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        r0 = virtualinvoke r0.<androidx.work.multiprocess.RemoteWorkContinuation: androidx.work.multiprocess.RemoteWorkContinuation then(java.util.List)>($r2);

        return r0;
    }

    public abstract androidx.work.multiprocess.RemoteWorkContinuation then(java.util.List);
}
