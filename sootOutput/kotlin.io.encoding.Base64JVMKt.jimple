public final class kotlin.io.encoding.Base64JVMKt extends java.lang.Object
{

    private static final byte[] platformCharsToBytes(kotlin.io.encoding.Base64, java.lang.CharSequence, int, int)
    {
        byte[] $r4;
        java.lang.CharSequence $r1;
        kotlin.io.encoding.Base64 $r0;
        java.nio.charset.Charset $r3;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: kotlin.io.encoding.Base64;

        $r1 := @parameter1: java.lang.CharSequence;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "source");

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $i2 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        virtualinvoke $r0.<kotlin.io.encoding.Base64: void checkSourceBounds$kotlin_stdlib(int,int,int)>($i2, $i0, $i1);

        $r2 = (java.lang.String) $r1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        $r3 = <kotlin.text.Charsets: java.nio.charset.Charset ISO_8859_1>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type java.lang.String");

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "this as java.lang.String).getBytes(charset)");

        return $r4;

     label1:
        $r4 = virtualinvoke $r0.<kotlin.io.encoding.Base64: byte[] charsToBytesImpl$kotlin_stdlib(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        return $r4;
    }

    private static final int platformEncodeIntoByteArray(kotlin.io.encoding.Base64, byte[], byte[], int, int, int)
    {
        byte[] $r1, $r2;
        kotlin.io.encoding.Base64 $r0;
        int $i0, $i1, $i2;

        $r0 := @parameter0: kotlin.io.encoding.Base64;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "destination");

        $i0 = virtualinvoke $r0.<kotlin.io.encoding.Base64: int encodeIntoByteArrayImpl$kotlin_stdlib(byte[],byte[],int,int,int)>($r1, $r2, $i0, $i1, $i2);

        return $i0;
    }

    private static final byte[] platformEncodeToByteArray(kotlin.io.encoding.Base64, byte[], int, int)
    {
        byte[] $r1;
        kotlin.io.encoding.Base64 $r0;
        int $i0, $i1;

        $r0 := @parameter0: kotlin.io.encoding.Base64;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "source");

        $r1 = virtualinvoke $r0.<kotlin.io.encoding.Base64: byte[] encodeToByteArrayImpl$kotlin_stdlib(byte[],int,int)>($r1, $i0, $i1);

        return $r1;
    }

    private static final java.lang.String platformEncodeToString(kotlin.io.encoding.Base64, byte[], int, int)
    {
        byte[] $r1;
        java.nio.charset.Charset $r3;
        kotlin.io.encoding.Base64 $r0;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: kotlin.io.encoding.Base64;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "source");

        $r1 = virtualinvoke $r0.<kotlin.io.encoding.Base64: byte[] encodeToByteArrayImpl$kotlin_stdlib(byte[],int,int)>($r1, $i0, $i1);

        $r2 = new java.lang.String;

        $r3 = <kotlin.text.Charsets: java.nio.charset.Charset ISO_8859_1>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r1, $r3);

        return $r2;
    }
}
