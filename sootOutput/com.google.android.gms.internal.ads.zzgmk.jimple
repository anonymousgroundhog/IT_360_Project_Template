abstract class com.google.android.gms.internal.ads.zzgmk extends java.lang.Object
{
    private final com.google.android.gms.internal.ads.zzgmi zza;
    private final com.google.android.gms.internal.ads.zzgmi zzb;

    public void <init>(byte[]) throws java.security.GeneralSecurityException
    {
        byte[] $r1;
        java.security.GeneralSecurityException $r3;
        com.google.android.gms.internal.ads.zzgmk r0;
        com.google.android.gms.internal.ads.zzgmi $r2;
        boolean $z0;

        r0 := @this: com.google.android.gms.internal.ads.zzgmk;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <com.google.android.gms.internal.ads.zzgmv: boolean zza(int)>(1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzgmk: com.google.android.gms.internal.ads.zzgmi zza(byte[],int)>($r1, 1);

        r0.<com.google.android.gms.internal.ads.zzgmk: com.google.android.gms.internal.ads.zzgmi zza> = $r2;

        $r2 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzgmk: com.google.android.gms.internal.ads.zzgmi zza(byte[],int)>($r1, 0);

        r0.<com.google.android.gms.internal.ads.zzgmk: com.google.android.gms.internal.ads.zzgmi zzb> = $r2;

        return;

     label1:
        $r3 = new java.security.GeneralSecurityException;

        specialinvoke $r3.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("Can not use ChaCha20Poly1305 in FIPS-mode.");

        throw $r3;
    }

    abstract com.google.android.gms.internal.ads.zzgmi zza(byte[], int) throws java.security.InvalidKeyException;

    public final byte[] zzb(java.nio.ByteBuffer, byte[], byte[]) throws java.security.GeneralSecurityException
    {
        byte[] $r3, $r4, $r5, $r8;
        com.google.android.gms.internal.ads.zzgmk r0;
        com.google.android.gms.internal.ads.zzgmi $r6;
        long $l6;
        javax.crypto.AEADBadTagException $r12;
        java.nio.ByteBuffer $r2, $r7;
        java.security.GeneralSecurityException $r9, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r10;
        boolean $z0;
        java.nio.ByteOrder $r1;

        r0 := @this: com.google.android.gms.internal.ads.zzgmk;

        $r2 := @parameter0: java.nio.ByteBuffer;

        $r3 := @parameter1: byte[];

        $r4 := @parameter2: byte[];

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        if $i0 < 16 goto label22;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $r5 = newarray (byte)[16];

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int limit()>();

        $i1 = $i1 + -16;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1);

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r5);

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int limit()>();

        $i1 = $i1 + -16;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        if $r4 != null goto label01;

        $r4 = newarray (byte)[0];

     label01:
        $r6 = r0.<com.google.android.gms.internal.ads.zzgmk: com.google.android.gms.internal.ads.zzgmi zzb>;

     label02:
        $r7 = virtualinvoke $r6.<com.google.android.gms.internal.ads.zzgmi: java.nio.ByteBuffer zzc(byte[],int)>($r3, 0);

     label03:
        $r8 = newarray (byte)[32];

     label04:
        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r8);

     label05:
        $i1 = lengthof $r4;

        $i2 = $i1 & 15;

        if $i2 != 0 goto label06;

        $i2 = $i1;

        goto label07;

     label06:
        $i3 = $i1 + 16;

        $i2 = $i3 - $i2;

     label07:
        $i3 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

     label08:
        $i4 = $i3 % 16;

        if $i4 != 0 goto label09;

        $i4 = $i3;

        goto label10;

     label09:
        $i5 = $i3 + 16;

        $i4 = $i5 - $i4;

     label10:
        $i4 = $i4 + $i2;

        $i5 = $i4 + 16;

     label11:
        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i5);

     label12:
        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

     label13:
        $r7 = virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r1);

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r4);

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2);

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r2);

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i4);

     label14:
        $l6 = (long) $i1;

     label15:
        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l6);

     label16:
        $l6 = (long) $i3;

     label17:
        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l6);

        $r4 = virtualinvoke $r7.<java.nio.ByteBuffer: byte[] array()>();

        $r4 = staticinvoke <com.google.android.gms.internal.ads.zzgmn: byte[] zza(byte[],byte[])>($r8, $r4);

        $z0 = staticinvoke <java.security.MessageDigest: boolean isEqual(byte[],byte[])>($r4, $r5);

     label18:
        if $z0 == 0 goto label19;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        $r6 = r0.<com.google.android.gms.internal.ads.zzgmk: com.google.android.gms.internal.ads.zzgmi zza>;

        $r3 = virtualinvoke $r6.<com.google.android.gms.internal.ads.zzgmi: byte[] zzd(byte[],java.nio.ByteBuffer)>($r3, $r2);

        return $r3;

     label19:
        $r11 = new java.security.GeneralSecurityException;

     label20:
        specialinvoke $r11.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("invalid MAC");

        throw $r11;

     label21:
        $r9 := @caughtexception;

        $r12 = new javax.crypto.AEADBadTagException;

        $r10 = virtualinvoke $r9.<java.security.GeneralSecurityException: java.lang.String toString()>();

        specialinvoke $r12.<javax.crypto.AEADBadTagException: void <init>(java.lang.String)>($r10);

        throw $r12;

     label22:
        $r11 = new java.security.GeneralSecurityException;

        specialinvoke $r11.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("ciphertext too short");

        throw $r11;

        catch java.security.GeneralSecurityException from label02 to label03 with label21;
        catch java.security.GeneralSecurityException from label04 to label05 with label21;
        catch java.security.GeneralSecurityException from label07 to label08 with label21;
        catch java.security.GeneralSecurityException from label11 to label12 with label21;
        catch java.security.GeneralSecurityException from label13 to label14 with label21;
        catch java.security.GeneralSecurityException from label15 to label16 with label21;
        catch java.security.GeneralSecurityException from label17 to label18 with label21;
        catch java.security.GeneralSecurityException from label20 to label21 with label21;
    }
}
