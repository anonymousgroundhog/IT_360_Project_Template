public class com.google.android.gms.security.ProviderInstaller extends java.lang.Object
{
    public static final java.lang.String PROVIDER_NAME;
    private static final com.google.android.gms.common.GoogleApiAvailabilityLight zza;
    private static final java.lang.Object zzb;
    private static java.lang.reflect.Method zzc;
    private static java.lang.reflect.Method zzd;

    static void <clinit>()
    {
        java.lang.Object $r1;
        com.google.android.gms.common.GoogleApiAvailabilityLight $r0;

        <com.google.android.gms.security.ProviderInstaller: java.lang.String PROVIDER_NAME> = "GmsCore_OpenSSL";

        $r0 = staticinvoke <com.google.android.gms.common.GoogleApiAvailabilityLight: com.google.android.gms.common.GoogleApiAvailabilityLight getInstance()>();

        <com.google.android.gms.security.ProviderInstaller: com.google.android.gms.common.GoogleApiAvailabilityLight zza> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <com.google.android.gms.security.ProviderInstaller: java.lang.Object zzb> = $r1;

        <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzc> = null;

        <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzd> = null;

        return;
    }

    public void <init>()
    {
        com.google.android.gms.security.ProviderInstaller r0;

        r0 := @this: com.google.android.gms.security.ProviderInstaller;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void installIfNeeded(android.content.Context) throws com.google.android.gms.common.GooglePlayServicesRepairableException, com.google.android.gms.common.GooglePlayServicesNotAvailableException
    {
        java.lang.Throwable $r16;
        android.content.Context $r1, $r6;
        java.lang.Object[] $r12;
        long $l0, $l1;
        java.lang.Long $r13;
        com.google.android.gms.dynamite.DynamiteModule$LoadingException $r7;
        java.lang.String $r8, $r9;
        com.google.android.gms.dynamite.DynamiteModule $r5;
        java.lang.reflect.Method $r10;
        com.google.android.gms.common.GoogleApiAvailabilityLight $r2;
        java.lang.Class[] $r0;
        java.lang.Exception $r14;
        com.google.android.gms.common.GooglePlayServicesNotAvailableException $r15;
        java.lang.Object $r3;
        java.lang.Class $r11;
        com.google.android.gms.dynamite.DynamiteModule$VersionPolicy $r4;

        $r1 := @parameter0: android.content.Context;

        staticinvoke <com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "Context must not be null");

        $r2 = <com.google.android.gms.security.ProviderInstaller: com.google.android.gms.common.GoogleApiAvailabilityLight zza>;

        virtualinvoke $r2.<com.google.android.gms.common.GoogleApiAvailabilityLight: void verifyGooglePlayServicesIsAvailable(android.content.Context,int)>($r1, 11925000);

        $r3 = <com.google.android.gms.security.ProviderInstaller: java.lang.Object zzb>;

        entermonitor $r3;

     label01:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label02:
        $r4 = <com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_HIGHEST_OR_LOCAL_VERSION_NO_FORCE_STAGING>;

     label03:
        $r5 = staticinvoke <com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)>($r1, $r4, "com.google.android.gms.providerinstaller.dynamite");

        $r6 = virtualinvoke $r5.<com.google.android.gms.dynamite.DynamiteModule: android.content.Context getModuleContext()>();

     label04:
        goto label07;

     label05:
        $r7 := @caughtexception;

     label06:
        $r8 = virtualinvoke $r7.<com.google.android.gms.dynamite.DynamiteModule$LoadingException: java.lang.String getMessage()>();

        $r9 = "Failed to load providerinstaller module: ";

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String concat(java.lang.String)>($r8);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ProviderInstaller", $r9);

        $r6 = null;

     label07:
        if $r6 != null goto label24;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r6 = staticinvoke <com.google.android.gms.common.GooglePlayServicesUtilLight: android.content.Context getRemoteContext(android.content.Context)>($r1);

     label08:
        if $r6 == null goto label21;

     label09:
        $r10 = <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzd>;

        if $r10 != null goto label16;

        $r0 = newarray (java.lang.Class)[3];

     label10:
        $r0[0] = class "Landroid/content/Context;";

     label11:
        $r11 = <java.lang.Long: java.lang.Class TYPE>;

     label12:
        $r0[1] = $r11;

     label13:
        $r11 = <java.lang.Long: java.lang.Class TYPE>;

     label14:
        $r0[2] = $r11;

        $r10 = staticinvoke <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzb(android.content.Context,java.lang.String,java.lang.String,java.lang.Class[])>($r6, "com.google.android.gms.common.security.ProviderInstallerImpl", "reportRequestStats", $r0);

     label15:
        <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzd> = $r10;

     label16:
        $r10 = <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzd>;

        $r12 = newarray (java.lang.Object)[3];

     label17:
        $r12[0] = $r1;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r12[1] = $r13;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r12[2] = $r13;

        virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r12);

     label18:
        goto label21;

     label19:
        $r14 := @caughtexception;

     label20:
        $r8 = virtualinvoke $r14.<java.lang.Exception: java.lang.String getMessage()>();

        $r9 = "Failed to report request stats: ";

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String concat(java.lang.String)>($r8);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ProviderInstaller", $r9);

     label21:
        if $r6 == null goto label23;

        staticinvoke <com.google.android.gms.security.ProviderInstaller: void zzc(android.content.Context,android.content.Context,java.lang.String)>($r6, $r1, "com.google.android.gms.common.security.ProviderInstallerImpl");

        exitmonitor $r3;

     label22:
        return;

     label23:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ProviderInstaller", "Failed to get remote context");

        $r15 = new com.google.android.gms.common.GooglePlayServicesNotAvailableException;

        specialinvoke $r15.<com.google.android.gms.common.GooglePlayServicesNotAvailableException: void <init>(int)>(8);

        throw $r15;

     label24:
        staticinvoke <com.google.android.gms.security.ProviderInstaller: void zzc(android.content.Context,android.content.Context,java.lang.String)>($r6, $r1, "com.google.android.gms.providerinstaller.ProviderInstallerImpl");

        exitmonitor $r3;

     label25:
        return;

     label26:
        $r16 := @caughtexception;

        exitmonitor $r3;

     label27:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch com.google.android.gms.dynamite.DynamiteModule$LoadingException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label04 with label26;
        catch java.lang.Throwable from label06 to label08 with label26;
        catch java.lang.Exception from label10 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Exception from label14 to label15 with label19;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Throwable from label09 to label18 with label26;
        catch java.lang.Throwable from label20 to label22 with label26;
        catch java.lang.Throwable from label23 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    public static void installIfNeededAsync(android.content.Context, com.google.android.gms.security.ProviderInstaller$ProviderInstallListener)
    {
        android.content.Context $r1;
        com.google.android.gms.security.ProviderInstaller$ProviderInstallListener $r0;
        com.google.android.gms.security.zza $r2;
        java.lang.Void[] $r3;

        $r1 := @parameter0: android.content.Context;

        $r0 := @parameter1: com.google.android.gms.security.ProviderInstaller$ProviderInstallListener;

        staticinvoke <com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "Context must not be null");

        staticinvoke <com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r0, "Listener must not be null");

        staticinvoke <com.google.android.gms.common.internal.Preconditions: void checkMainThread(java.lang.String)>("Must be called on the UI thread");

        $r2 = new com.google.android.gms.security.zza;

        specialinvoke $r2.<com.google.android.gms.security.zza: void <init>(android.content.Context,com.google.android.gms.security.ProviderInstaller$ProviderInstallListener)>($r1, $r0);

        $r3 = newarray (java.lang.Void)[0];

        virtualinvoke $r2.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        return;
    }

    static volatile com.google.android.gms.common.GoogleApiAvailabilityLight zza()
    {
        com.google.android.gms.common.GoogleApiAvailabilityLight r0;

        r0 = <com.google.android.gms.security.ProviderInstaller: com.google.android.gms.common.GoogleApiAvailabilityLight zza>;

        return r0;
    }

    private static java.lang.reflect.Method zzb(android.content.Context, java.lang.String, java.lang.String, java.lang.Class[]) throws java.lang.ClassNotFoundException, java.lang.NoSuchMethodException
    {
        android.content.Context $r3;
        java.lang.Class[] $r2;
        java.lang.Class $r5;
        java.lang.String $r0, $r1;
        java.lang.ClassLoader $r4;
        java.lang.reflect.Method $r6;

        $r3 := @parameter0: android.content.Context;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.Class[];

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r1, $r2);

        return $r6;
    }

    private static void zzc(android.content.Context, android.content.Context, java.lang.String) throws com.google.android.gms.common.GooglePlayServicesNotAvailableException
    {
        java.lang.Throwable $r7;
        android.content.Context $r1, $r2;
        java.lang.Object[] $r5;
        java.lang.Class[] $r0;
        java.lang.Exception $r6;
        com.google.android.gms.common.GooglePlayServicesNotAvailableException $r9;
        java.lang.String $r3, $r8;
        java.lang.reflect.Method $r4;
        boolean $z0;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: java.lang.String;

        $r4 = <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzc>;

        if $r4 != null goto label3;

        $r0 = newarray (java.lang.Class)[1];

     label1:
        $r0[0] = class "Landroid/content/Context;";

        $r4 = staticinvoke <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzb(android.content.Context,java.lang.String,java.lang.String,java.lang.Class[])>($r1, $r3, "insertProvider", $r0);

     label2:
        <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzc> = $r4;

     label3:
        $r4 = <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzc>;

        $r5 = newarray (java.lang.Object)[1];

     label4:
        $r5[0] = $r1;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);

     label5:
        return;

     label6:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<java.lang.Exception: java.lang.Throwable getCause()>();

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ProviderInstaller", 6);

        if $z0 == 0 goto label9;

        if $r7 != null goto label7;

        $r8 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        goto label8;

     label7:
        $r8 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

     label8:
        $r3 = "Failed to install provider: ";

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>($r8);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ProviderInstaller", $r3);

     label9:
        $r9 = new com.google.android.gms.common.GooglePlayServicesNotAvailableException;

        specialinvoke $r9.<com.google.android.gms.common.GooglePlayServicesNotAvailableException: void <init>(int)>(8);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
}
