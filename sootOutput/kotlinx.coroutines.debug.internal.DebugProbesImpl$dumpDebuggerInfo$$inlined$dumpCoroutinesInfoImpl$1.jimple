public final class kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function1
{

    public void <init>()
    {
        kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1 r0;

        r0 := @this: kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner $r2;
        kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1 r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) $r1;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1: java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)>($r2);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
    {
        kotlinx.coroutines.debug.internal.DebugProbesImpl r4;
        kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner $r1;
        kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1 r0;
        kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl $r3;
        kotlinx.coroutines.debug.internal.DebuggerInfo $r2;
        kotlin.coroutines.CoroutineContext $r5;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1;

        $r1 := @parameter0: kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner;

        r4 = <kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl INSTANCE>;

        $z0 = staticinvoke <kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean access$isFinished(kotlinx.coroutines.debug.internal.DebugProbesImpl,kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)>(r4, $r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = $r1.<kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl info>;

        $r5 = virtualinvoke $r3.<kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: kotlin.coroutines.CoroutineContext getContext()>();

        if $r5 == null goto label2;

        $r2 = new kotlinx.coroutines.debug.internal.DebuggerInfo;

        $r3 = $r1.<kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl info>;

        specialinvoke $r2.<kotlinx.coroutines.debug.internal.DebuggerInfo: void <init>(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlin.coroutines.CoroutineContext)>($r3, $r5);

        return $r2;

     label2:
        return null;
    }
}
