public final class kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1 extends java.lang.Object implements kotlinx.coroutines.flow.Flow
{
    final kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined;

    public void <init>(kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r1;
        kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1 r0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2 $r4;
        kotlinx.coroutines.flow.Flow $r3;
        kotlin.Unit r7;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1 r0;
        java.lang.Object $r5, $r6;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r4 = new kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2;

        specialinvoke $r4.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: void <init>(kotlinx.coroutines.flow.FlowCollector)>($r1);

        $r1 = (kotlinx.coroutines.flow.FlowCollector) $r4;

        $r5 = interfaceinvoke $r3.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r1, $r2);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r7;
    }

    public java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r4;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit r6;
        kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2 $r5;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1 $r3;
        kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1 r0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(4);

        $r3 = new kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1,kotlin.coroutines.Continuation)>(r0, $r2);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(5);

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r5 = new kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: void <init>(kotlinx.coroutines.flow.FlowCollector)>($r1);

        $r1 = (kotlinx.coroutines.flow.FlowCollector) $r5;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        interfaceinvoke $r4.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r1, $r2);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r6;
    }
}
