public abstract class kotlin.collections.FloatIterator extends java.lang.Object implements java.util.Iterator, kotlin.jvm.internal.markers.KMappedMarker
{

    public void <init>()
    {
        kotlin.collections.FloatIterator r0;

        r0 := @this: kotlin.collections.FloatIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Float next()
    {
        float $f0;
        java.lang.Float $r1;
        kotlin.collections.FloatIterator r0;

        r0 := @this: kotlin.collections.FloatIterator;

        $f0 = virtualinvoke r0.<kotlin.collections.FloatIterator: float nextFloat()>();

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        float $f0;
        java.lang.Float $r1;
        kotlin.collections.FloatIterator r0;

        r0 := @this: kotlin.collections.FloatIterator;

        $f0 = virtualinvoke r0.<kotlin.collections.FloatIterator: float nextFloat()>();

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r1;
    }

    public abstract float nextFloat();

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        kotlin.collections.FloatIterator r0;

        r0 := @this: kotlin.collections.FloatIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }
}
