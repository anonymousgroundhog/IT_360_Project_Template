public final class androidx.core.content.res.TypedArrayKt extends java.lang.Object
{

    private static final void checkAttribute(android.content.res.TypedArray, int)
    {
        int $i0;
        java.lang.IllegalArgumentException $r1;
        android.content.res.TypedArray $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute not defined in set.");

        throw $r1;
    }

    public static final boolean getBooleanOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        android.content.res.TypedArray $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $z0 = virtualinvoke $r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        return $z0;
    }

    public static final int getColorOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getColor(int,int)>($i0, 0);

        return $i0;
    }

    public static final android.content.res.ColorStateList getColorStateListOrThrow(android.content.res.TypedArray, int)
    {
        android.content.res.ColorStateList $r1;
        java.lang.IllegalStateException $r2;
        int $i0;
        java.lang.String $r3;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i0);

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = "Attribute value was not a color or color state list.";

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

    public static final float getDimensionOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        float $f0;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $f0 = virtualinvoke $r0.<android.content.res.TypedArray: float getDimension(int,float)>($i0, 0.0F);

        return $f0;
    }

    public static final int getDimensionPixelOffsetOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i0, 0);

        return $i0;
    }

    public static final int getDimensionPixelSizeOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        return $i0;
    }

    public static final android.graphics.drawable.Drawable getDrawableOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        android.graphics.drawable.Drawable $r1;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        return $r1;
    }

    public static final float getFloatOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        float $f0;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $f0 = virtualinvoke $r0.<android.content.res.TypedArray: float getFloat(int,float)>($i0, 0.0F);

        return $f0;
    }

    public static final android.graphics.Typeface getFontOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        android.graphics.Typeface $r1;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $r1 = staticinvoke <androidx.core.content.res.TypedArrayApi26ImplKt: android.graphics.Typeface getFont(android.content.res.TypedArray,int)>($r0, $i0);

        return $r1;
    }

    public static final int getIntOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getInt(int,int)>($i0, 0);

        return $i0;
    }

    public static final int getIntegerOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getInteger(int,int)>($i0, 0);

        return $i0;
    }

    public static final int getResourceIdOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        return $i0;
    }

    public static final java.lang.String getStringOrThrow(android.content.res.TypedArray, int)
    {
        java.lang.IllegalStateException $r2;
        int $i0;
        java.lang.String $r1;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r1 = "Attribute value could not be coerced to String.";

        $r1 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public static final java.lang.CharSequence[] getTextArrayOrThrow(android.content.res.TypedArray, int)
    {
        int $i0;
        java.lang.CharSequence[] $r1;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "getTextArray(index)");

        return $r1;
    }

    public static final java.lang.CharSequence getTextOrThrow(android.content.res.TypedArray, int)
    {
        java.lang.IllegalStateException $r2;
        java.lang.CharSequence $r1;
        int $i0;
        java.lang.String $r3;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)>($r0, $i0);

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($i0);

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = "Attribute value could not be coerced to CharSequence.";

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

    public static final java.lang.Object use(android.content.res.TypedArray, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        virtualinvoke $r0.<android.content.res.TypedArray: void recycle()>();

        return $r2;
    }
}
