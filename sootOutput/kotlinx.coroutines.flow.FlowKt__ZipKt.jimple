final class kotlinx.coroutines.flow.FlowKt__ZipKt extends java.lang.Object
{

    public static final kotlin.jvm.functions.Function0 access$nullArrayFactory()
    {
        kotlin.jvm.functions.Function0 $r0;

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt__ZipKt: kotlin.jvm.functions.Function0 nullArrayFactory$FlowKt__ZipKt()>();

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow combine(java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.Flow[] $r4;
        java.lang.Object[] $r5;
        java.util.Collection $r3;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Iterable $r0;
        kotlinx.coroutines.flow.Flow r7;
        java.util.List $r2;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3 r6;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        $r3 = (java.util.Collection) $r2;

        $r4 = newarray (kotlinx.coroutines.flow.Flow)[0];

        $r5 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r4 = (kotlinx.coroutines.flow.Flow[]) $r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        r6 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3;

        specialinvoke r6.<kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)>($r4, $r1);

        r7 = (kotlinx.coroutines.flow.Flow) r6;

        return r7;
    }

    public static final kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1;
        kotlin.jvm.functions.Function3 $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlin.jvm.functions.Function3;

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowCombine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r0, $r1, $r2);

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function4)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1, $r2;
        kotlinx.coroutines.flow.Flow[] r4;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1 $r5;
        kotlin.jvm.functions.Function4 $r3;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter3: kotlin.jvm.functions.Function4;

        r4 = newarray (kotlinx.coroutines.flow.Flow)[3];

        r4[0] = $r0;

        r4[1] = $r1;

        r4[2] = $r2;

        $r5 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function4)>(r4, $r3);

        $r0 = (kotlinx.coroutines.flow.Flow) $r5;

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function5)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1, $r2, $r3;
        kotlinx.coroutines.flow.Flow[] r5;
        kotlin.jvm.functions.Function5 $r4;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2 $r6;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter3: kotlinx.coroutines.flow.Flow;

        $r4 := @parameter4: kotlin.jvm.functions.Function5;

        r5 = newarray (kotlinx.coroutines.flow.Flow)[4];

        r5[0] = $r0;

        r5[1] = $r1;

        r5[2] = $r2;

        r5[3] = $r3;

        $r6 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2;

        specialinvoke $r6.<kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function5)>(r5, $r4);

        $r0 = (kotlinx.coroutines.flow.Flow) $r6;

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function6)
    {
        kotlinx.coroutines.flow.Flow[] r6;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3 $r7;
        kotlinx.coroutines.flow.Flow $r0, $r1, $r2, $r3, $r4;
        kotlin.jvm.functions.Function6 $r5;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter3: kotlinx.coroutines.flow.Flow;

        $r4 := @parameter4: kotlinx.coroutines.flow.Flow;

        $r5 := @parameter5: kotlin.jvm.functions.Function6;

        r6 = newarray (kotlinx.coroutines.flow.Flow)[5];

        r6[0] = $r0;

        r6[1] = $r1;

        r6[2] = $r2;

        r6[3] = $r3;

        r6[4] = $r4;

        $r7 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3;

        specialinvoke $r7.<kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function6)>(r6, $r5);

        $r0 = (kotlinx.coroutines.flow.Flow) $r7;

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2 $r2;
        kotlinx.coroutines.flow.Flow $r3;
        kotlinx.coroutines.flow.Flow[] $r0;
        kotlin.jvm.functions.Function2 $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r2 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)>($r0, $r1);

        $r3 = (kotlinx.coroutines.flow.Flow) $r2;

        return $r3;
    }

    public static final kotlinx.coroutines.flow.Flow combineTransform(java.lang.Iterable, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow[] $r4;
        java.lang.Object[] $r5;
        java.util.Collection $r3;
        kotlin.jvm.functions.Function3 $r1;
        kotlin.jvm.functions.Function2 $r7;
        java.lang.Iterable $r0;
        kotlinx.coroutines.flow.Flow $r8;
        java.util.List $r2;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7 $r6;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        $r3 = (java.util.Collection) $r2;

        $r4 = newarray (kotlinx.coroutines.flow.Flow)[0];

        $r5 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r4 = (kotlinx.coroutines.flow.Flow[]) $r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r6 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7;

        specialinvoke $r6.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r4, $r1, null);

        $r7 = (kotlin.jvm.functions.Function2) $r6;

        $r8 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r7);

        return $r8;
    }

    public static final kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function4)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1;
        kotlinx.coroutines.flow.Flow[] r3;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2 $r4;
        kotlin.jvm.functions.Function4 $r2;
        kotlin.jvm.functions.Function2 $r5;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlin.jvm.functions.Function4;

        r3 = newarray (kotlinx.coroutines.flow.Flow)[2];

        r3[0] = $r0;

        r3[1] = $r1;

        $r4 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2;

        specialinvoke $r4.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)>(r3, null, $r2);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r5);

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function5)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1, $r2;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3 $r5;
        kotlinx.coroutines.flow.Flow[] r4;
        kotlin.jvm.functions.Function5 $r3;
        kotlin.jvm.functions.Function2 $r6;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter3: kotlin.jvm.functions.Function5;

        r4 = newarray (kotlinx.coroutines.flow.Flow)[3];

        r4[0] = $r0;

        r4[1] = $r1;

        r4[2] = $r2;

        $r5 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5)>(r4, null, $r3);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r6);

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function6)
    {
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4 $r6;
        kotlinx.coroutines.flow.Flow[] r5;
        kotlin.jvm.functions.Function2 $r7;
        kotlinx.coroutines.flow.Flow $r0, $r1, $r2, $r3;
        kotlin.jvm.functions.Function6 $r4;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter3: kotlinx.coroutines.flow.Flow;

        $r4 := @parameter4: kotlin.jvm.functions.Function6;

        r5 = newarray (kotlinx.coroutines.flow.Flow)[4];

        r5[0] = $r0;

        r5[1] = $r1;

        r5[2] = $r2;

        r5[3] = $r3;

        $r6 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4;

        specialinvoke $r6.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6)>(r5, null, $r4);

        $r7 = (kotlin.jvm.functions.Function2) $r6;

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r7);

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function7)
    {
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5 $r7;
        kotlinx.coroutines.flow.Flow[] r6;
        kotlin.jvm.functions.Function2 $r8;
        kotlinx.coroutines.flow.Flow $r0, $r1, $r2, $r3, $r4;
        kotlin.jvm.functions.Function7 $r5;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter3: kotlinx.coroutines.flow.Flow;

        $r4 := @parameter4: kotlinx.coroutines.flow.Flow;

        $r5 := @parameter5: kotlin.jvm.functions.Function7;

        r6 = newarray (kotlinx.coroutines.flow.Flow)[5];

        r6[0] = $r0;

        r6[1] = $r1;

        r6[2] = $r2;

        r6[3] = $r3;

        r6[4] = $r4;

        $r7 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5;

        specialinvoke $r7.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function7)>(r6, null, $r5);

        $r8 = (kotlin.jvm.functions.Function2) $r7;

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r8);

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.flow.Flow[] $r0;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6 $r3;
        kotlin.jvm.functions.Function3 $r1;
        kotlin.jvm.functions.Function2 $r4;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r3 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r0, $r1, null);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $r2 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r4);

        return $r2;
    }

    private static final kotlinx.coroutines.flow.Flow combineTransformUnsafe$FlowKt__ZipKt(kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.flow.Flow[] $r0;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1 $r3;
        kotlin.jvm.functions.Function3 $r1;
        kotlin.jvm.functions.Function2 $r4;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r3 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r0, $r1, null);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $r2 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r4);

        return $r2;
    }

    private static final kotlinx.coroutines.flow.Flow combineUnsafe$FlowKt__ZipKt(kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.Flow $r3;
        kotlinx.coroutines.flow.Flow[] $r0;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1 $r2;
        kotlin.jvm.functions.Function2 $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r2 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)>($r0, $r1);

        $r3 = (kotlinx.coroutines.flow.Flow) $r2;

        return $r3;
    }

    public static final kotlinx.coroutines.flow.Flow flowCombine(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1 $r3;
        kotlin.jvm.functions.Function3 $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlin.jvm.functions.Function3;

        $r3 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: void <init>(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r0, $r1, $r2);

        $r0 = (kotlinx.coroutines.flow.Flow) $r3;

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow flowCombineTransform(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function4)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1;
        kotlinx.coroutines.flow.Flow[] r3;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1 $r4;
        kotlin.jvm.functions.Function4 $r2;
        kotlin.jvm.functions.Function2 $r5;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlin.jvm.functions.Function4;

        r3 = newarray (kotlinx.coroutines.flow.Flow)[2];

        r3[0] = $r0;

        r3[1] = $r1;

        $r4 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1;

        specialinvoke $r4.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)>(r3, null, $r2);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r5);

        return $r0;
    }

    private static final kotlin.jvm.functions.Function0 nullArrayFactory$FlowKt__ZipKt()
    {
        kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1 $r0;
        kotlin.jvm.functions.Function0 $r1;

        $r0 = <kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1 INSTANCE>;

        $r1 = (kotlin.jvm.functions.Function0) $r0;

        return $r1;
    }

    public static final kotlinx.coroutines.flow.Flow zip(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1;
        kotlin.jvm.functions.Function3 $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlin.jvm.functions.Function3;

        $r0 = staticinvoke <kotlinx.coroutines.flow.internal.CombineKt: kotlinx.coroutines.flow.Flow zipImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r0, $r1, $r2);

        return $r0;
    }
}
