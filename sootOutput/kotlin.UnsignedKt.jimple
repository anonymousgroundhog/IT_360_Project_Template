public final class kotlin.UnsignedKt extends java.lang.Object
{

    public static final int doubleToUInt(double)
    {
        byte $b0;
        int $i1, $i2;
        double $d0, $d1;
        boolean $z0;

        $d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $d1 = staticinvoke <kotlin.UnsignedKt: double uintToDouble(int)>(0);

        $b0 = $d0 cmpg $d1;

        $i1 = (int) $b0;

        if $i1 > 0 goto label2;

        return 0;

     label2:
        $d1 = staticinvoke <kotlin.UnsignedKt: double uintToDouble(int)>(-1);

        $b0 = $d0 cmpl $d1;

        $i1 = (int) $b0;

        if $i1 < 0 goto label3;

        return -1;

     label3:
        $b0 = $d0 cmpg 2.147483647E9;

        $i1 = (int) $b0;

        if $i1 > 0 goto label4;

        $i1 = (int) $d0;

        $i1 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i1);

        return $i1;

     label4:
        $d0 = $d0 - 2.147483647E9;

        $i1 = (int) $d0;

        $i1 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i1);

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(2147483647);

        $i1 = $i1 + $i2;

        $i1 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i1);

        return $i1;
    }

    public static final long doubleToULong(double)
    {
        byte $b0;
        int $i2;
        long $l1;
        double $d0, $d1;
        boolean $z0;

        $d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        return 0L;

     label1:
        $d1 = staticinvoke <kotlin.UnsignedKt: double ulongToDouble(long)>(0L);

        $b0 = $d0 cmpg $d1;

        $i2 = (int) $b0;

        if $i2 > 0 goto label2;

        return 0L;

     label2:
        $d1 = staticinvoke <kotlin.UnsignedKt: double ulongToDouble(long)>(-1L);

        $b0 = $d0 cmpl $d1;

        $i2 = (int) $b0;

        if $i2 < 0 goto label3;

        return -1L;

     label3:
        $b0 = $d0 cmpg 9.223372036854776E18;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label4;

        $l1 = (long) $d0;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        return $l1;

     label4:
        $d0 = $d0 - 9.223372036854776E18;

        $l1 = (long) $d0;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $l1 = $l1 + -9223372036854775808L;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        return $l1;
    }

    public static final int uintCompare(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 ^ -2147483648;

        $i1 = -2147483648 ^ $i1;

        $i0 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($i0, $i1);

        return $i0;
    }

    public static final int uintDivide-J1ME1BU(int, int)
    {
        int $i0, $i1;
        long $l2, $l3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l3 = (long) $i0;

        $l3 = $l3 & 4294967295L;

        $l2 = (long) $i1;

        $l2 = 4294967295L & $l2;

        $l3 = $l3 / $l2;

        $i0 = (int) $l3;

        $i0 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i0);

        return $i0;
    }

    public static final int uintRemainder-J1ME1BU(int, int)
    {
        int $i0, $i1;
        long $l2, $l3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l3 = (long) $i0;

        $l3 = $l3 & 4294967295L;

        $l2 = (long) $i1;

        $l2 = 4294967295L & $l2;

        $l3 = $l3 % $l2;

        $i0 = (int) $l3;

        $i0 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i0);

        return $i0;
    }

    public static final double uintToDouble(int)
    {
        int $i0, $i1;
        double $d0, $d1;

        $i0 := @parameter0: int;

        $i1 = 2147483647 & $i0;

        $d0 = (double) $i1;

        $i0 = $i0 >>> 31;

        $i0 = $i0 << 30;

        $d1 = (double) $i0;

        $d1 = $d1 * 2.0;

        $d0 = $d0 + $d1;

        return $d0;
    }

    public static final int ulongCompare(long, long)
    {
        int $i2;
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l0 = $l0 ^ -9223372036854775808L;

        $l1 = -9223372036854775808L ^ $l1;

        $i2 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(long,long)>($l0, $l1);

        return $i2;
    }

    public static final long ulongDivide-eb3DHEI(long, long)
    {
        byte $b3;
        int $i4;
        long $l0, $l1, $l2, l5;
        boolean $z0;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 = 0L;

        $b3 = $l1 cmp 0L;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label3;

        $i4 = staticinvoke <kotlin.UByte$$ExternalSyntheticBackport4: int m(long,long)>($l0, $l1);

        if $i4 >= 0 goto label1;

        goto label2;

     label1:
        $l2 = 1L;

     label2:
        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l2);

        return $l0;

     label3:
        $b3 = $l0 cmp 0L;

        $i4 = (int) $b3;

        if $i4 < 0 goto label4;

        $l0 = $l0 / $l1;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        return $l0;

     label4:
        $z0 = 1;

        $l2 = $l0 >>> 1;

        $l2 = $l2 / $l1;

        $l2 = $l2 << 1;

        l5 = $l2 * $l1;

        $l0 = $l0 - l5;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i4 = staticinvoke <kotlin.UByte$$ExternalSyntheticBackport4: int m(long,long)>($l0, $l1);

        if $i4 < 0 goto label5;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        $l0 = (long) $z0;

        $l0 = $l0 + $l2;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        return $l0;
    }

    public static final long ulongRemainder-eb3DHEI(long, long)
    {
        byte b3;
        int $i4;
        long $l0, $l1, $l2, $l5, $l6;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 = 0L;

        b3 = $l1 cmp 0L;

        $i4 = (int) b3;

        if $i4 >= 0 goto label2;

        $i4 = staticinvoke <kotlin.UByte$$ExternalSyntheticBackport4: int m(long,long)>($l0, $l1);

        if $i4 >= 0 goto label1;

        return $l0;

     label1:
        $l0 = $l0 - $l1;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        return $l0;

     label2:
        b3 = $l0 cmp 0L;

        $i4 = (int) b3;

        if $i4 < 0 goto label3;

        $l0 = $l0 % $l1;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        return $l0;

     label3:
        $l5 = $l0 >>> 1;

        $l5 = $l5 / $l1;

        $l5 = $l5 << 1;

        $l5 = $l5 * $l1;

        $l0 = $l0 - $l5;

        $l5 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        $l6 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i4 = staticinvoke <kotlin.UByte$$ExternalSyntheticBackport4: int m(long,long)>($l5, $l6);

        if $i4 < 0 goto label4;

        $l2 = $l1;

     label4:
        $l0 = $l0 - $l2;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        return $l0;
    }

    public static final double ulongToDouble(long)
    {
        long $l0, $l1;
        double $d0, $d1;

        $l0 := @parameter0: long;

        $l1 = $l0 >>> 11;

        $d0 = (double) $l1;

        $d0 = $d0 * 2048.0;

        $l0 = 2047L & $l0;

        $d1 = (double) $l0;

        $d0 = $d0 + $d1;

        return $d0;
    }

    public static final java.lang.String ulongToString(long)
    {
        long $l0;
        java.lang.String $r0;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <kotlin.UnsignedKt: java.lang.String ulongToString(long,int)>($l0, 10);

        return $r0;
    }

    public static final java.lang.String ulongToString(long, int)
    {
        long $l0, l3, $l4;
        byte $b2;
        int $i1, $i5;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r0;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $b2 = $l0 cmp 0L;

        $i5 = (int) $b2;

        if $i5 < 0 goto label1;

        $i1 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i1);

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "toString(this, checkRadix(radix))");

        return $r0;

     label1:
        l3 = $l0 >>> 1;

        $l4 = (long) $i1;

        l3 = l3 / $l4;

        l3 = l3 << 1;

        $l4 = (long) $i1;

        $l4 = $l4 * l3;

        $l0 = $l0 - $l4;

        $l4 = (long) $i1;

        $b2 = $l0 cmp $l4;

        $i5 = (int) $b2;

        if $i5 < 0 goto label2;

        $l4 = (long) $i1;

        $l0 = $l0 - $l4;

        l3 = l3 + 1L;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i5 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i1);

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>(l3, $i5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "toString(this, checkRadix(radix))");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $i1 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>($i1);

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "toString(this, checkRadix(radix))");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
}
