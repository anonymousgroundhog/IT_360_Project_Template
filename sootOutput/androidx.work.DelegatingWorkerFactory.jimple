public class androidx.work.DelegatingWorkerFactory extends androidx.work.WorkerFactory
{
    private static final java.lang.String TAG;
    private final java.util.List mFactories;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("DelegatingWkrFctry");

        <androidx.work.DelegatingWorkerFactory: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>()
    {
        androidx.work.DelegatingWorkerFactory r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: androidx.work.DelegatingWorkerFactory;

        specialinvoke r0.<androidx.work.WorkerFactory: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.work.DelegatingWorkerFactory: java.util.List mFactories> = $r1;

        return;
    }

    public final void addFactory(androidx.work.WorkerFactory)
    {
        java.util.List $r2;
        androidx.work.WorkerFactory $r1;
        androidx.work.DelegatingWorkerFactory r0;

        r0 := @this: androidx.work.DelegatingWorkerFactory;

        $r1 := @parameter0: androidx.work.WorkerFactory;

        $r2 = r0.<androidx.work.DelegatingWorkerFactory: java.util.List mFactories>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public final androidx.work.ListenableWorker createWorker(android.content.Context, java.lang.String, androidx.work.WorkerParameters)
    {
        java.lang.Throwable r9;
        android.content.Context $r1;
        java.lang.Object[] r10;
        java.util.Iterator $r5;
        androidx.work.WorkerParameters $r3;
        androidx.work.ListenableWorker $r8;
        androidx.work.WorkerFactory r7;
        java.util.List r4;
        androidx.work.Logger $r12;
        androidx.work.DelegatingWorkerFactory r0;
        java.lang.Throwable[] r13;
        java.lang.Object $r6;
        java.lang.String $r2, $r11;
        boolean $z0;

        r0 := @this: androidx.work.DelegatingWorkerFactory;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: androidx.work.WorkerParameters;

        r4 = r0.<androidx.work.DelegatingWorkerFactory: java.util.List mFactories>;

        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.work.WorkerFactory) $r6;

     label2:
        $r8 = virtualinvoke r7.<androidx.work.WorkerFactory: androidx.work.ListenableWorker createWorker(android.content.Context,java.lang.String,androidx.work.WorkerParameters)>($r1, $r2, $r3);

     label3:
        if $r8 == null goto label4;

        return $r8;

     label4:
        goto label1;

     label5:
        r9 := @caughtexception;

        r10 = newarray (java.lang.Object)[1];

        r10[0] = $r2;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to instantiate a ListenableWorker (%s)", r10);

        $r12 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r2 = <androidx.work.DelegatingWorkerFactory: java.lang.String TAG>;

        r13 = newarray (java.lang.Throwable)[1];

        r13[0] = r9;

        virtualinvoke $r12.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable[])>($r2, $r11, r13);

        throw r9;

     label6:
        return null;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    java.util.List getFactories()
    {
        java.util.List r1;
        androidx.work.DelegatingWorkerFactory r0;

        r0 := @this: androidx.work.DelegatingWorkerFactory;

        r1 = r0.<androidx.work.DelegatingWorkerFactory: java.util.List mFactories>;

        return r1;
    }
}
