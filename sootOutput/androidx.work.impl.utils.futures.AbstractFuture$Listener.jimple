final class androidx.work.impl.utils.futures.AbstractFuture$Listener extends java.lang.Object
{
    static final androidx.work.impl.utils.futures.AbstractFuture$Listener TOMBSTONE;
    final java.util.concurrent.Executor executor;
    androidx.work.impl.utils.futures.AbstractFuture$Listener next;
    final java.lang.Runnable task;

    static void <clinit>()
    {
        androidx.work.impl.utils.futures.AbstractFuture$Listener $r0;

        $r0 = new androidx.work.impl.utils.futures.AbstractFuture$Listener;

        specialinvoke $r0.<androidx.work.impl.utils.futures.AbstractFuture$Listener: void <init>(java.lang.Runnable,java.util.concurrent.Executor)>(null, null);

        <androidx.work.impl.utils.futures.AbstractFuture$Listener: androidx.work.impl.utils.futures.AbstractFuture$Listener TOMBSTONE> = $r0;

        return;
    }

    void <init>(java.lang.Runnable, java.util.concurrent.Executor)
    {
        androidx.work.impl.utils.futures.AbstractFuture$Listener r0;
        java.lang.Runnable $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: androidx.work.impl.utils.futures.AbstractFuture$Listener;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.utils.futures.AbstractFuture$Listener: java.lang.Runnable task> = $r1;

        r0.<androidx.work.impl.utils.futures.AbstractFuture$Listener: java.util.concurrent.Executor executor> = $r2;

        return;
    }
}
