final class kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState extends kotlin.io.FileTreeWalk$WalkState
{
    final kotlin.io.FileTreeWalk$FileTreeWalkIterator this$0;
    private boolean visited;

    public void <init>(kotlin.io.FileTreeWalk$FileTreeWalkIterator, java.io.File)
    {
        kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState r0;
        kotlin.io.FileTreeWalk$FileTreeWalkIterator $r1;
        java.lang.AssertionError $r3;
        java.io.File $r2;
        boolean $z0;

        r0 := @this: kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState;

        $r1 := @parameter0: kotlin.io.FileTreeWalk$FileTreeWalkIterator;

        $r2 := @parameter1: java.io.File;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "rootFile");

        r0.<kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: kotlin.io.FileTreeWalk$FileTreeWalkIterator this$0> = $r1;

        specialinvoke r0.<kotlin.io.FileTreeWalk$WalkState: void <init>(java.io.File)>($r2);

        $z0 = virtualinvoke $r2.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("rootFile must be verified to be file beforehand.");

        throw $r3;
    }

    public java.io.File step()
    {
        kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState;

        $z0 = r0.<kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: boolean visited>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        r0.<kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: boolean visited> = 1;

        $r1 = virtualinvoke r0.<kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: java.io.File getRoot()>();

        return $r1;
    }
}
