final class com.google.common.reflect.ClassPath$LocationInfo extends java.lang.Object
{
    private final java.lang.ClassLoader classloader;
    final java.io.File home;

    void <init>(java.io.File, java.lang.ClassLoader)
    {
        java.lang.Object $r3;
        java.lang.ClassLoader $r2;
        java.io.File $r1;
        com.google.common.reflect.ClassPath$LocationInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r1 = (java.io.File) $r3;

        r0.<com.google.common.reflect.ClassPath$LocationInfo: java.io.File home> = $r1;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (java.lang.ClassLoader) $r3;

        r0.<com.google.common.reflect.ClassPath$LocationInfo: java.lang.ClassLoader classloader> = $r2;

        return;
    }

    private void scan(java.io.File, java.util.Set, com.google.common.collect.ImmutableSet$Builder) throws java.io.IOException
    {
        com.google.common.collect.ImmutableSet$Builder r3;
        java.util.Set r2;
        java.util.logging.Logger $r5;
        java.io.File $r1;
        com.google.common.reflect.ClassPath$LocationInfo r0;
        int $i0, $i1;
        java.lang.SecurityException r4;
        java.lang.StringBuilder $r9;
        java.lang.String $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        $r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: com.google.common.collect.ImmutableSet$Builder;

     label1:
        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label2:
        if $z0 != 0 goto label3;

        return;

     label3:
        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.google.common.reflect.ClassPath$LocationInfo: void scanDirectory(java.io.File,com.google.common.collect.ImmutableSet$Builder)>($r1, r3);

        return;

     label4:
        specialinvoke r0.<com.google.common.reflect.ClassPath$LocationInfo: void scanJar(java.io.File,java.util.Set,com.google.common.collect.ImmutableSet$Builder)>($r1, r2, r3);

        return;

     label5:
        r4 := @caughtexception;

        $r5 = staticinvoke <com.google.common.reflect.ClassPath: java.util.logging.Logger access$000()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + 16;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot access ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void warning(java.lang.String)>($r6);

        return;

        catch java.lang.SecurityException from label1 to label2 with label5;
    }

    private void scanDirectory(java.io.File, com.google.common.collect.ImmutableSet$Builder) throws java.io.IOException
    {
        java.util.HashSet r3;
        com.google.common.collect.ImmutableSet$Builder r2;
        java.io.File $r1, $r4;
        com.google.common.reflect.ClassPath$LocationInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        $r1 := @parameter0: java.io.File;

        r2 := @parameter1: com.google.common.collect.ImmutableSet$Builder;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $r4 = virtualinvoke $r1.<java.io.File: java.io.File getCanonicalFile()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

        specialinvoke r0.<com.google.common.reflect.ClassPath$LocationInfo: void scanDirectory(java.io.File,java.lang.String,java.util.Set,com.google.common.collect.ImmutableSet$Builder)>($r1, "", r3, r2);

        return;
    }

    private void scanDirectory(java.io.File, java.lang.String, java.util.Set, com.google.common.collect.ImmutableSet$Builder) throws java.io.IOException
    {
        com.google.common.collect.ImmutableSet$Builder r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r7, $r9;
        boolean $z0;
        com.google.common.reflect.ClassPath$ResourceInfo $r11;
        java.util.Set r3;
        java.util.logging.Logger $r6;
        java.io.File $r1;
        com.google.common.reflect.ClassPath$LocationInfo r0;
        java.lang.StringBuilder r8;
        java.lang.ClassLoader $r10;
        java.io.File[] $r5;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Set;

        r4 := @parameter3: com.google.common.collect.ImmutableSet$Builder;

        $r5 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        if $r5 != null goto label1;

        $r6 = staticinvoke <com.google.common.reflect.ClassPath: java.util.logging.Logger access$000()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i0 = $i0 + 22;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>(int)>($i0);

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read directory ");

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void warning(java.lang.String)>($r2);

        return;

     label1:
        $i0 = lengthof $r5;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label8;

        $r1 = $r5[$i1];

        $r7 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke $r1.<java.io.File: java.io.File getCanonicalFile()>();

        $z0 = interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i2 = $i2 + 1;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $i3 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i2 = $i2 + $i3;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>(int)>($i2);

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.google.common.reflect.ClassPath$LocationInfo: void scanDirectory(java.io.File,java.lang.String,java.util.Set,com.google.common.collect.ImmutableSet$Builder)>($r1, $r7, r3, r4);

        interfaceinvoke r3.<java.util.Set: boolean remove(java.lang.Object)>($r1);

     label3:
        goto label7;

     label4:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i2 == 0 goto label5;

        $r7 = virtualinvoke $r9.<java.lang.String: java.lang.String concat(java.lang.String)>($r7);

        goto label6;

     label5:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(java.lang.String)>($r9);

     label6:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("META-INF/MANIFEST.MF");

        if $z0 != 0 goto label7;

        $r10 = r0.<com.google.common.reflect.ClassPath$LocationInfo: java.lang.ClassLoader classloader>;

        $r11 = staticinvoke <com.google.common.reflect.ClassPath$ResourceInfo: com.google.common.reflect.ClassPath$ResourceInfo of(java.io.File,java.lang.String,java.lang.ClassLoader)>($r1, $r7, $r10);

        virtualinvoke r4.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r11);

     label7:
        $i1 = $i1 + 1;

        goto label2;

     label8:
        return;
    }

    private void scanJar(java.io.File, java.util.Set, com.google.common.collect.ImmutableSet$Builder) throws java.io.IOException
    {
        java.util.jar.Manifest $r5;
        java.lang.Throwable $r11;
        com.google.common.collect.ImmutableSet $r6;
        com.google.common.collect.ImmutableSet$Builder r3;
        java.util.Set r2;
        java.util.jar.JarFile r4;
        java.io.IOException $r10, r12, r13;
        java.io.File $r1, $r9;
        com.google.common.reflect.ClassPath$LocationInfo r0;
        java.lang.Object $r8;
        com.google.common.collect.UnmodifiableIterator $r7;
        boolean $z0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        $r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: com.google.common.collect.ImmutableSet$Builder;

        r4 = new java.util.jar.JarFile;

     label01:
        specialinvoke r4.<java.util.jar.JarFile: void <init>(java.io.File)>($r1);

     label02:
        $r5 = virtualinvoke r4.<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>();

        $r6 = staticinvoke <com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet getClassPathFromManifest(java.io.File,java.util.jar.Manifest)>($r1, $r5);

        $r7 = virtualinvoke $r6.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label04:
        if $z0 == 0 goto label09;

     label05:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.io.File) $r8;

        $r9 = virtualinvoke $r1.<java.io.File: java.io.File getCanonicalFile()>();

        $z0 = interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label06:
        if $z0 == 0 goto label03;

     label07:
        specialinvoke r0.<com.google.common.reflect.ClassPath$LocationInfo: void scan(java.io.File,java.util.Set,com.google.common.collect.ImmutableSet$Builder)>($r1, r2, r3);

     label08:
        goto label03;

     label09:
        specialinvoke r0.<com.google.common.reflect.ClassPath$LocationInfo: void scanJarFile(java.util.jar.JarFile,com.google.common.collect.ImmutableSet$Builder)>(r4, r3);

     label10:
        virtualinvoke r4.<java.util.jar.JarFile: void close()>();

     label11:
        return;

     label12:
        $r10 := @caughtexception;

        return;

     label13:
        $r11 := @caughtexception;

     label14:
        virtualinvoke r4.<java.util.jar.JarFile: void close()>();

     label15:
        goto label17;

     label16:
        r12 := @caughtexception;

     label17:
        throw $r11;

     label18:
        r13 := @caughtexception;

        return;

        catch java.io.IOException from label01 to label02 with label18;
        catch java.lang.Throwable from label02 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label14 to label15 with label16;
    }

    private void scanJarFile(java.util.jar.JarFile, com.google.common.collect.ImmutableSet$Builder)
    {
        java.util.Enumeration $r4;
        com.google.common.reflect.ClassPath$ResourceInfo $r9;
        com.google.common.collect.ImmutableSet$Builder r2;
        java.util.jar.JarFile $r1;
        java.io.File $r8;
        com.google.common.reflect.ClassPath$LocationInfo r0;
        java.util.jar.JarEntry r6;
        java.lang.Object $r5;
        java.lang.ClassLoader $r3;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        $r1 := @parameter0: java.util.jar.JarFile;

        r2 := @parameter1: com.google.common.collect.ImmutableSet$Builder;

        $r4 = virtualinvoke $r1.<java.util.jar.JarFile: java.util.Enumeration entries()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.util.jar.JarEntry) $r5;

        $z0 = virtualinvoke r6.<java.util.jar.JarEntry: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke r6.<java.util.jar.JarEntry: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("META-INF/MANIFEST.MF");

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r8 = new java.io.File;

        $r7 = virtualinvoke $r1.<java.util.jar.JarFile: java.lang.String getName()>();

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r7);

        $r7 = virtualinvoke r6.<java.util.jar.JarEntry: java.lang.String getName()>();

        $r3 = r0.<com.google.common.reflect.ClassPath$LocationInfo: java.lang.ClassLoader classloader>;

        $r9 = staticinvoke <com.google.common.reflect.ClassPath$ResourceInfo: com.google.common.reflect.ClassPath$ResourceInfo of(java.io.File,java.lang.String,java.lang.ClassLoader)>($r8, $r7, $r3);

        virtualinvoke r2.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r9);

        goto label1;

     label3:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.io.File $r3, $r4;
        com.google.common.reflect.ClassPath$LocationInfo r0, r2;
        java.lang.Object $r1;
        java.lang.ClassLoader $r5, $r6;
        boolean z0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof com.google.common.reflect.ClassPath$LocationInfo;

        if z0 == 0 goto label1;

        r2 = (com.google.common.reflect.ClassPath$LocationInfo) $r1;

        $r3 = r0.<com.google.common.reflect.ClassPath$LocationInfo: java.io.File home>;

        $r4 = r2.<com.google.common.reflect.ClassPath$LocationInfo: java.io.File home>;

        z0 = virtualinvoke $r3.<java.io.File: boolean equals(java.lang.Object)>($r4);

        if z0 == 0 goto label1;

        $r5 = r0.<com.google.common.reflect.ClassPath$LocationInfo: java.lang.ClassLoader classloader>;

        $r6 = r2.<com.google.common.reflect.ClassPath$LocationInfo: java.lang.ClassLoader classloader>;

        z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.io.File file()
    {
        java.io.File r1;
        com.google.common.reflect.ClassPath$LocationInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        r1 = r0.<com.google.common.reflect.ClassPath$LocationInfo: java.io.File home>;

        return r1;
    }

    public int hashCode()
    {
        int $i0;
        java.io.File $r1;
        com.google.common.reflect.ClassPath$LocationInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        $r1 = r0.<com.google.common.reflect.ClassPath$LocationInfo: java.io.File home>;

        $i0 = virtualinvoke $r1.<java.io.File: int hashCode()>();

        return $i0;
    }

    public com.google.common.collect.ImmutableSet scanResources() throws java.io.IOException
    {
        java.util.HashSet $r2;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.reflect.ClassPath$LocationInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r1 = virtualinvoke r0.<com.google.common.reflect.ClassPath$LocationInfo: com.google.common.collect.ImmutableSet scanResources(java.util.Set)>($r2);

        return $r1;
    }

    public com.google.common.collect.ImmutableSet scanResources(java.util.Set) throws java.io.IOException
    {
        com.google.common.collect.ImmutableSet $r4;
        com.google.common.collect.ImmutableSet$Builder $r2;
        java.util.Set r1;
        java.io.File $r3;
        com.google.common.reflect.ClassPath$LocationInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        r1 := @parameter0: java.util.Set;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        $r3 = r0.<com.google.common.reflect.ClassPath$LocationInfo: java.io.File home>;

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r3 = r0.<com.google.common.reflect.ClassPath$LocationInfo: java.io.File home>;

        specialinvoke r0.<com.google.common.reflect.ClassPath$LocationInfo: void scan(java.io.File,java.util.Set,com.google.common.collect.ImmutableSet$Builder)>($r3, r1, $r2);

        $r4 = virtualinvoke $r2.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        return $r4;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        java.io.File $r2;
        com.google.common.reflect.ClassPath$LocationInfo r0;

        r0 := @this: com.google.common.reflect.ClassPath$LocationInfo;

        $r2 = r0.<com.google.common.reflect.ClassPath$LocationInfo: java.io.File home>;

        $r1 = virtualinvoke $r2.<java.io.File: java.lang.String toString()>();

        return $r1;
    }
}
