public final class androidx.browser.browseractions.BrowserServiceFileProvider extends androidx.core.content.FileProvider
{
    private static final java.lang.String AUTHORITY_SUFFIX;
    private static final java.lang.String CLIP_DATA_LABEL;
    private static final java.lang.String CONTENT_SCHEME;
    private static final java.lang.String FILE_EXTENSION;
    private static final java.lang.String FILE_SUB_DIR;
    private static final java.lang.String FILE_SUB_DIR_NAME;
    private static final java.lang.String LAST_CLEANUP_TIME_KEY;
    private static final java.lang.String TAG;
    static java.lang.Object sFileCleanupLock;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <androidx.browser.browseractions.BrowserServiceFileProvider: java.lang.String TAG> = "BrowserServiceFP";

        <androidx.browser.browseractions.BrowserServiceFileProvider: java.lang.String LAST_CLEANUP_TIME_KEY> = "last_cleanup_time";

        <androidx.browser.browseractions.BrowserServiceFileProvider: java.lang.String FILE_SUB_DIR_NAME> = "image_provider_images/";

        <androidx.browser.browseractions.BrowserServiceFileProvider: java.lang.String FILE_SUB_DIR> = "image_provider";

        <androidx.browser.browseractions.BrowserServiceFileProvider: java.lang.String FILE_EXTENSION> = ".png";

        <androidx.browser.browseractions.BrowserServiceFileProvider: java.lang.String CONTENT_SCHEME> = "content";

        <androidx.browser.browseractions.BrowserServiceFileProvider: java.lang.String CLIP_DATA_LABEL> = "image_provider_uris";

        <androidx.browser.browseractions.BrowserServiceFileProvider: java.lang.String AUTHORITY_SUFFIX> = ".image_provider";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.browser.browseractions.BrowserServiceFileProvider: java.lang.Object sFileCleanupLock> = $r0;

        return;
    }

    public void <init>()
    {
        androidx.browser.browseractions.BrowserServiceFileProvider r0;

        r0 := @this: androidx.browser.browseractions.BrowserServiceFileProvider;

        specialinvoke r0.<androidx.core.content.FileProvider: void <init>()>();

        return;
    }

    private static android.net.Uri generateUri(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.net.Uri $r5;
        java.lang.StringBuilder r2;
        java.lang.String $r1, $r4;
        android.net.Uri$Builder $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("image_provider_images/");

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png");

        $r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new android.net.Uri$Builder;

        specialinvoke $r3.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".image_provider");

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>($r1);

        $r5 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    public static void grantReadPermission(android.content.Intent, java.util.List, android.content.Context)
    {
        android.content.Context $r2;
        android.net.Uri r5;
        android.content.Intent $r0;
        android.content.ClipData$Item $r7;
        android.content.ClipData $r6;
        java.util.List r1;
        android.content.ContentResolver $r3;
        int $i0, $i1;
        java.lang.Object $r4;

        $r0 := @parameter0: android.content.Intent;

        r1 := @parameter1: java.util.List;

        $r2 := @parameter2: android.content.Context;

        if r1 == null goto label4;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r0.<android.content.Intent: android.content.Intent addFlags(int)>(1);

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (android.net.Uri) $r4;

        $r6 = staticinvoke <android.content.ClipData: android.content.ClipData newUri(android.content.ContentResolver,java.lang.CharSequence,android.net.Uri)>($r3, "image_provider_uris", r5);

        $i0 = 1;

     label2:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r7 = new android.content.ClipData$Item;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i0);

        r5 = (android.net.Uri) $r4;

        specialinvoke $r7.<android.content.ClipData$Item: void <init>(android.net.Uri)>(r5);

        virtualinvoke $r6.<android.content.ClipData: void addItem(android.content.ClipData$Item)>($r7);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        virtualinvoke $r0.<android.content.Intent: void setClipData(android.content.ClipData)>($r6);

     label4:
        return;
    }

    public static com.google.common.util.concurrent.ListenableFuture loadBitmap(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver $r0;
        java.util.concurrent.Executor $r2;
        android.net.Uri $r1;
        androidx.concurrent.futures.ResolvableFuture $r4;
        androidx.browser.browseractions.BrowserServiceFileProvider$1 $r3;

        $r0 := @parameter0: android.content.ContentResolver;

        $r1 := @parameter1: android.net.Uri;

        $r4 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r2 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r3 = new androidx.browser.browseractions.BrowserServiceFileProvider$1;

        specialinvoke $r3.<androidx.browser.browseractions.BrowserServiceFileProvider$1: void <init>(android.content.ContentResolver,android.net.Uri,androidx.concurrent.futures.ResolvableFuture)>($r0, $r1, $r4);

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return $r4;
    }

    public static androidx.concurrent.futures.ResolvableFuture saveBitmap(android.content.Context, android.graphics.Bitmap, java.lang.String, int)
    {
        androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask $r3;
        android.content.Context $r0;
        java.util.concurrent.Executor $r7;
        android.net.Uri $r5;
        androidx.concurrent.futures.ResolvableFuture $r6;
        java.lang.String[] $r8;
        android.graphics.Bitmap $r1;
        int $i0;
        java.lang.StringBuilder r4;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.graphics.Bitmap;

        $r2 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        r4 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r4 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        r4 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <androidx.browser.browseractions.BrowserServiceFileProvider: android.net.Uri generateUri(android.content.Context,java.lang.String)>($r0, $r2);

        $r6 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r3 = new androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask;

        specialinvoke $r3.<androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask: void <init>(android.content.Context,java.lang.String,android.graphics.Bitmap,android.net.Uri,androidx.concurrent.futures.ResolvableFuture)>($r0, $r2, $r1, $r5, $r6);

        $r7 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r8 = newarray (java.lang.String)[0];

        virtualinvoke $r3.<androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r7, $r8);

        return $r6;
    }
}
