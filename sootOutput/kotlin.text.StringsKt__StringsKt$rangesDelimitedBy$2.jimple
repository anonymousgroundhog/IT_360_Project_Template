final class kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function2
{
    final java.util.List $delimitersList;
    final boolean $ignoreCase;

    void <init>(java.util.List, boolean)
    {
        java.util.List $r1;
        kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 r0;
        boolean $z0;

        r0 := @this: kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2;

        $r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        r0.<kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.util.List $delimitersList> = $r1;

        r0.<kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: boolean $ignoreCase> = $z0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        java.lang.CharSequence $r3;
        kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 r0;
        kotlin.Pair $r5;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.Number $r4;

        r0 := @this: kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.CharSequence) $r1;

        $r4 = (java.lang.Number) $r2;

        $i0 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $r5 = virtualinvoke r0.<kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: kotlin.Pair invoke(java.lang.CharSequence,int)>($r3, $i0);

        return $r5;
    }

    public final kotlin.Pair invoke(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r1;
        kotlin.Pair $r4;
        java.util.Collection r3;
        java.lang.Integer $r8;
        java.util.List r2;
        kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 r0;
        int $i0;
        java.lang.Object $r5, $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$$receiver");

        r2 = r0.<kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.util.List $delimitersList>;

        r3 = (java.util.Collection) r2;

        $z0 = r0.<kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: boolean $ignoreCase>;

        $r4 = staticinvoke <kotlin.text.StringsKt__StringsKt: kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)>($r1, r3, $i0, $z0, 0);

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r4.<kotlin.Pair: java.lang.Object getSecond()>();

        $r7 = (java.lang.String) $r6;

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r8);

        return $r4;

     label1:
        return null;
    }
}
