public final class androidx.collection.CircularIntArray extends java.lang.Object
{
    private int mCapacityBitmask;
    private int[] mElements;
    private int mHead;
    private int mTail;

    public void <init>()
    {
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        specialinvoke r0.<androidx.collection.CircularIntArray: void <init>(int)>(8);

        return;
    }

    public void <init>(int)
    {
        int[] $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 < 1 goto label3;

        if $i0 > 1073741824 goto label2;

        $i1 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);

        if $i1 == 1 goto label1;

        $i0 = $i0 + -1;

        $i0 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i0);

        $i0 = $i0 << 1;

        goto label1;

     label1:
        $i1 = $i0 + -1;

        r0.<androidx.collection.CircularIntArray: int mCapacityBitmask> = $i1;

        $r1 = newarray (int)[$i0];

        r0.<androidx.collection.CircularIntArray: int[] mElements> = $r1;

        return;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("capacity must be <= 2^30");

        throw $r2;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("capacity must be >= 1");

        throw $r2;
    }

    private void doubleCapacity()
    {
        java.lang.RuntimeException $r3;
        int[] r1, $r2;
        int i0, i1, i2, $i3;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        r1 = r0.<androidx.collection.CircularIntArray: int[] mElements>;

        i1 = lengthof r1;

        i0 = r0.<androidx.collection.CircularIntArray: int mHead>;

        i2 = i1 - i0;

        i0 = i1 << 1;

        if i0 < 0 goto label1;

        r1 = newarray (int)[i0];

        $r2 = r0.<androidx.collection.CircularIntArray: int[] mElements>;

        $i3 = r0.<androidx.collection.CircularIntArray: int mHead>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, r1, 0, i2);

        $r2 = r0.<androidx.collection.CircularIntArray: int[] mElements>;

        $i3 = r0.<androidx.collection.CircularIntArray: int mHead>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, i2, $i3);

        r0.<androidx.collection.CircularIntArray: int[] mElements> = r1;

        r0.<androidx.collection.CircularIntArray: int mHead> = 0;

        r0.<androidx.collection.CircularIntArray: int mTail> = i1;

        i0 = i0 + -1;

        r0.<androidx.collection.CircularIntArray: int mCapacityBitmask> = i0;

        return;

     label1:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Max array capacity exceeded");

        throw $r3;
    }

    public void addFirst(int)
    {
        int[] $r1;
        int $i0, $i1, $i2;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i0 := @parameter0: int;

        $i1 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i1 = $i1 + -1;

        $i2 = r0.<androidx.collection.CircularIntArray: int mCapacityBitmask>;

        $i1 = $i1 & $i2;

        r0.<androidx.collection.CircularIntArray: int mHead> = $i1;

        $r1 = r0.<androidx.collection.CircularIntArray: int[] mElements>;

        $i1 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $r1[$i1] = $i0;

        $i0 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i1 = r0.<androidx.collection.CircularIntArray: int mTail>;

        if $i0 != $i1 goto label1;

        specialinvoke r0.<androidx.collection.CircularIntArray: void doubleCapacity()>();

     label1:
        return;
    }

    public void addLast(int)
    {
        int[] $r1;
        int $i0, $i1;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.collection.CircularIntArray: int[] mElements>;

        $i1 = r0.<androidx.collection.CircularIntArray: int mTail>;

        $r1[$i1] = $i0;

        $i0 = r0.<androidx.collection.CircularIntArray: int mTail>;

        $i0 = $i0 + 1;

        $i1 = r0.<androidx.collection.CircularIntArray: int mCapacityBitmask>;

        $i0 = $i0 & $i1;

        r0.<androidx.collection.CircularIntArray: int mTail> = $i0;

        $i0 = r0.<androidx.collection.CircularIntArray: int mTail>;

        $i1 = r0.<androidx.collection.CircularIntArray: int mHead>;

        if $i0 != $i1 goto label1;

        specialinvoke r0.<androidx.collection.CircularIntArray: void doubleCapacity()>();

     label1:
        return;
    }

    public void clear()
    {
        int $i0;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i0 = r0.<androidx.collection.CircularIntArray: int mHead>;

        r0.<androidx.collection.CircularIntArray: int mTail> = $i0;

        return;
    }

    public int get(int)
    {
        int[] $r1;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<androidx.collection.CircularIntArray: int size()>();

        if $i0 >= $i1 goto label1;

        $r1 = r0.<androidx.collection.CircularIntArray: int[] mElements>;

        $i1 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i1 = $i1 + $i0;

        $i0 = r0.<androidx.collection.CircularIntArray: int mCapacityBitmask>;

        $i0 = $i1 & $i0;

        $i0 = $r1[$i0];

        return $i0;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public int getFirst()
    {
        int[] $r1;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i0 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i1 = r0.<androidx.collection.CircularIntArray: int mTail>;

        if $i0 == $i1 goto label1;

        $r1 = r0.<androidx.collection.CircularIntArray: int[] mElements>;

        $i0 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i0 = $r1[$i0];

        return $i0;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public int getLast()
    {
        int[] $r1;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i0 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i1 = r0.<androidx.collection.CircularIntArray: int mTail>;

        if $i0 == $i1 goto label1;

        $r1 = r0.<androidx.collection.CircularIntArray: int[] mElements>;

        $i0 = r0.<androidx.collection.CircularIntArray: int mTail>;

        $i1 = $i0 + -1;

        $i0 = r0.<androidx.collection.CircularIntArray: int mCapacityBitmask>;

        $i0 = $i1 & $i0;

        $i0 = $r1[$i0];

        return $i0;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public boolean isEmpty()
    {
        int $i0, $i1;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i1 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i0 = r0.<androidx.collection.CircularIntArray: int mTail>;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int popFirst()
    {
        int[] r1;
        int $i0, i1, $i2;
        java.lang.ArrayIndexOutOfBoundsException r2;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        i1 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i0 = r0.<androidx.collection.CircularIntArray: int mTail>;

        if i1 == $i0 goto label1;

        r1 = r0.<androidx.collection.CircularIntArray: int[] mElements>;

        i1 = r0.<androidx.collection.CircularIntArray: int mHead>;

        i1 = r1[i1];

        $i0 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i2 = $i0 + 1;

        $i0 = r0.<androidx.collection.CircularIntArray: int mCapacityBitmask>;

        $i0 = $i2 & $i0;

        r0.<androidx.collection.CircularIntArray: int mHead> = $i0;

        return i1;

     label1:
        r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw r2;
    }

    public int popLast()
    {
        int[] r1;
        int i0, i1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        i0 = r0.<androidx.collection.CircularIntArray: int mHead>;

        i1 = r0.<androidx.collection.CircularIntArray: int mTail>;

        if i0 == i1 goto label1;

        i0 = r0.<androidx.collection.CircularIntArray: int mTail>;

        i0 = i0 + -1;

        i1 = r0.<androidx.collection.CircularIntArray: int mCapacityBitmask>;

        i0 = i0 & i1;

        r1 = r0.<androidx.collection.CircularIntArray: int[] mElements>;

        i1 = r1[i0];

        r0.<androidx.collection.CircularIntArray: int mTail> = i0;

        return i1;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public void removeFromEnd(int)
    {
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i0 := @parameter0: int;

        if $i0 > 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<androidx.collection.CircularIntArray: int size()>();

        if $i0 > $i1 goto label2;

        $i1 = r0.<androidx.collection.CircularIntArray: int mTail>;

        $i1 = $i1 - $i0;

        $i0 = r0.<androidx.collection.CircularIntArray: int mCapacityBitmask>;

        $i0 = $i1 & $i0;

        r0.<androidx.collection.CircularIntArray: int mTail> = $i0;

        return;

     label2:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;
    }

    public void removeFromStart(int)
    {
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i0 := @parameter0: int;

        if $i0 > 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<androidx.collection.CircularIntArray: int size()>();

        if $i0 > $i1 goto label2;

        $i1 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i1 = $i1 + $i0;

        $i0 = r0.<androidx.collection.CircularIntArray: int mCapacityBitmask>;

        $i0 = $i1 & $i0;

        r0.<androidx.collection.CircularIntArray: int mHead> = $i0;

        return;

     label2:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;
    }

    public int size()
    {
        int $i0, $i1;
        androidx.collection.CircularIntArray r0;

        r0 := @this: androidx.collection.CircularIntArray;

        $i0 = r0.<androidx.collection.CircularIntArray: int mTail>;

        $i1 = r0.<androidx.collection.CircularIntArray: int mHead>;

        $i0 = $i0 - $i1;

        $i1 = r0.<androidx.collection.CircularIntArray: int mCapacityBitmask>;

        $i0 = $i0 & $i1;

        return $i0;
    }
}
