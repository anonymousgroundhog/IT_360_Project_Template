public final class com.google.common.util.concurrent.ClosingFuture$ValueAndCloser extends java.lang.Object
{
    private final com.google.common.util.concurrent.ClosingFuture closingFuture;

    void <init>(com.google.common.util.concurrent.ClosingFuture)
    {
        java.lang.Object $r2;
        com.google.common.util.concurrent.ClosingFuture r1;
        com.google.common.util.concurrent.ClosingFuture$ValueAndCloser r0;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$ValueAndCloser;

        r1 := @parameter0: com.google.common.util.concurrent.ClosingFuture;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r1 = (com.google.common.util.concurrent.ClosingFuture) $r2;

        r0.<com.google.common.util.concurrent.ClosingFuture$ValueAndCloser: com.google.common.util.concurrent.ClosingFuture closingFuture> = r1;

        return;
    }

    public void closeAsync()
    {
        com.google.common.util.concurrent.ClosingFuture $r1;
        com.google.common.util.concurrent.ClosingFuture$ValueAndCloser r0;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$ValueAndCloser;

        $r1 = r0.<com.google.common.util.concurrent.ClosingFuture$ValueAndCloser: com.google.common.util.concurrent.ClosingFuture closingFuture>;

        staticinvoke <com.google.common.util.concurrent.ClosingFuture: void access$100(com.google.common.util.concurrent.ClosingFuture)>($r1);

        return;
    }

    public java.lang.Object get() throws java.util.concurrent.ExecutionException
    {
        com.google.common.util.concurrent.ClosingFuture$ValueAndCloser r0;
        java.lang.Object $r3;
        com.google.common.util.concurrent.ClosingFuture $r1;
        com.google.common.util.concurrent.FluentFuture $r2;

        r0 := @this: com.google.common.util.concurrent.ClosingFuture$ValueAndCloser;

        $r1 = r0.<com.google.common.util.concurrent.ClosingFuture$ValueAndCloser: com.google.common.util.concurrent.ClosingFuture closingFuture>;

        $r2 = staticinvoke <com.google.common.util.concurrent.ClosingFuture: com.google.common.util.concurrent.FluentFuture access$000(com.google.common.util.concurrent.ClosingFuture)>($r1);

        $r3 = staticinvoke <com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>($r2);

        return $r3;
    }
}
