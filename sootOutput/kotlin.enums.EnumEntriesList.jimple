final class kotlin.enums.EnumEntriesList extends kotlin.collections.AbstractList implements kotlin.enums.EnumEntries, java.io.Serializable
{
    private volatile java.lang.Enum[] _entries;
    private final kotlin.jvm.functions.Function0 entriesProvider;

    public void <init>(kotlin.jvm.functions.Function0)
    {
        kotlin.enums.EnumEntriesList r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "entriesProvider");

        specialinvoke r0.<kotlin.collections.AbstractList: void <init>()>();

        r0.<kotlin.enums.EnumEntriesList: kotlin.jvm.functions.Function0 entriesProvider> = $r1;

        return;
    }

    private final java.lang.Enum[] getEntries()
    {
        java.lang.Enum[] r2;
        kotlin.enums.EnumEntriesList r0;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function0 $r3;

        r0 := @this: kotlin.enums.EnumEntriesList;

        r2 = r0.<kotlin.enums.EnumEntriesList: java.lang.Enum[] _entries>;

        if r2 == null goto label1;

        return r2;

     label1:
        $r3 = r0.<kotlin.enums.EnumEntriesList: kotlin.jvm.functions.Function0 entriesProvider>;

        $r1 = interfaceinvoke $r3.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r2 = (java.lang.Enum[]) $r1;

        r0.<kotlin.enums.EnumEntriesList: java.lang.Enum[] _entries> = r2;

        return r2;
    }

    private final java.lang.Object writeReplace()
    {
        java.lang.Enum[] $r2;
        kotlin.enums.EnumEntriesList r0;
        kotlin.enums.EnumEntriesSerializationProxy $r1;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $r1 = new kotlin.enums.EnumEntriesSerializationProxy;

        $r2 = specialinvoke r0.<kotlin.enums.EnumEntriesList: java.lang.Enum[] getEntries()>();

        specialinvoke $r1.<kotlin.enums.EnumEntriesSerializationProxy: void <init>(java.lang.Enum[])>($r2);

        return $r1;
    }

    public boolean contains(java.lang.Enum)
    {
        java.lang.Enum $r1, r4;
        int $i0;
        java.lang.Enum[] $r2;
        kotlin.enums.EnumEntriesList r0;
        java.lang.Object $r3;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $r1 := @parameter0: java.lang.Enum;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "element");

        $r2 = specialinvoke r0.<kotlin.enums.EnumEntriesList: java.lang.Enum[] getEntries()>();

        $i0 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $r3 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object getOrNull(java.lang.Object[],int)>($r2, $i0);

        r4 = (java.lang.Enum) $r3;

        if r4 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final volatile boolean contains(java.lang.Object)
    {
        java.lang.Enum $r2;
        kotlin.enums.EnumEntriesList r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.lang.Enum;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (java.lang.Enum) $r1;

        $z0 = virtualinvoke r0.<kotlin.enums.EnumEntriesList: boolean contains(java.lang.Enum)>($r2);

        return $z0;
    }

    public java.lang.Enum get(int)
    {
        java.lang.Enum $r3;
        kotlin.collections.AbstractList$Companion $r2;
        int $i0, $i1;
        java.lang.Enum[] $r1;
        kotlin.enums.EnumEntriesList r0;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<kotlin.enums.EnumEntriesList: java.lang.Enum[] getEntries()>();

        $r2 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i1 = lengthof $r1;

        virtualinvoke $r2.<kotlin.collections.AbstractList$Companion: void checkElementIndex$kotlin_stdlib(int,int)>($i0, $i1);

        $r3 = $r1[$i0];

        return $r3;
    }

    public volatile java.lang.Object get(int)
    {
        int $i0;
        kotlin.enums.EnumEntriesList r0;
        java.lang.Enum $r1;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<kotlin.enums.EnumEntriesList: java.lang.Enum get(int)>($i0);

        return $r1;
    }

    public int getSize()
    {
        int $i0;
        java.lang.Enum[] $r1;
        kotlin.enums.EnumEntriesList r0;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $r1 = specialinvoke r0.<kotlin.enums.EnumEntriesList: java.lang.Enum[] getEntries()>();

        $i0 = lengthof $r1;

        return $i0;
    }

    public int indexOf(java.lang.Enum)
    {
        java.lang.Enum $r1, r4;
        int $i0;
        java.lang.Enum[] $r2;
        kotlin.enums.EnumEntriesList r0;
        java.lang.Object $r3;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $r1 := @parameter0: java.lang.Enum;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "element");

        $i0 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $r2 = specialinvoke r0.<kotlin.enums.EnumEntriesList: java.lang.Enum[] getEntries()>();

        $r3 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object getOrNull(java.lang.Object[],int)>($r2, $i0);

        r4 = (java.lang.Enum) $r3;

        if r4 != $r1 goto label1;

        return $i0;

     label1:
        return -1;
    }

    public final volatile int indexOf(java.lang.Object)
    {
        java.lang.Enum $r2;
        int $i0;
        kotlin.enums.EnumEntriesList r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.lang.Enum;

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $r2 = (java.lang.Enum) $r1;

        $i0 = virtualinvoke r0.<kotlin.enums.EnumEntriesList: int indexOf(java.lang.Enum)>($r2);

        return $i0;
    }

    public int lastIndexOf(java.lang.Enum)
    {
        int $i0;
        kotlin.enums.EnumEntriesList r0;
        java.lang.Enum $r1;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $r1 := @parameter0: java.lang.Enum;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "element");

        $i0 = virtualinvoke r0.<kotlin.enums.EnumEntriesList: int indexOf(java.lang.Object)>($r1);

        return $i0;
    }

    public final volatile int lastIndexOf(java.lang.Object)
    {
        java.lang.Enum $r2;
        int $i0;
        kotlin.enums.EnumEntriesList r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlin.enums.EnumEntriesList;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.lang.Enum;

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $r2 = (java.lang.Enum) $r1;

        $i0 = virtualinvoke r0.<kotlin.enums.EnumEntriesList: int lastIndexOf(java.lang.Enum)>($r2);

        return $i0;
    }
}
