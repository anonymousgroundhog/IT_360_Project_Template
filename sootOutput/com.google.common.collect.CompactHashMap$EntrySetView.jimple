class com.google.common.collect.CompactHashMap$EntrySetView extends java.util.AbstractSet
{
    final com.google.common.collect.CompactHashMap this$0;

    void <init>(com.google.common.collect.CompactHashMap)
    {
        com.google.common.collect.CompactHashMap $r1;
        com.google.common.collect.CompactHashMap$EntrySetView r0;

        r0 := @this: com.google.common.collect.CompactHashMap$EntrySetView;

        $r1 := @parameter0: com.google.common.collect.CompactHashMap;

        r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0> = $r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public void clear()
    {
        com.google.common.collect.CompactHashMap $r1;
        com.google.common.collect.CompactHashMap$EntrySetView r0;

        r0 := @this: com.google.common.collect.CompactHashMap$EntrySetView;

        $r1 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        virtualinvoke $r1.<com.google.common.collect.CompactHashMap: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map$Entry r5;
        java.util.Set $r4;
        com.google.common.collect.CompactHashMap r2;
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r1, $r6;
        com.google.common.collect.CompactHashMap$EntrySetView r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.CompactHashMap$EntrySetView;

        $r1 := @parameter0: java.lang.Object;

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $r3 = virtualinvoke r2.<com.google.common.collect.CompactHashMap: java.util.Map delegateOrNull()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        return $z0;

     label1:
        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label2;

        r5 = (java.util.Map$Entry) $r1;

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $r1 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $i0 = staticinvoke <com.google.common.collect.CompactHashMap: int access$500(com.google.common.collect.CompactHashMap,java.lang.Object)>(r2, $r1);

        if $i0 == -1 goto label2;

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $r1 = staticinvoke <com.google.common.collect.CompactHashMap: java.lang.Object access$600(com.google.common.collect.CompactHashMap,int)>(r2, $i0);

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r1;
        com.google.common.collect.CompactHashMap $r2;
        com.google.common.collect.CompactHashMap$EntrySetView r0;

        r0 := @this: com.google.common.collect.CompactHashMap$EntrySetView;

        $r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.CompactHashMap: java.util.Iterator entrySetIterator()>();

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry r5;
        java.lang.Object[] $r9, $r10;
        java.util.Set $r4;
        com.google.common.collect.CompactHashMap r2;
        int[] $r8;
        java.util.Map $r3;
        int $i0, $i1;
        java.lang.Object $r1, $r6, $r7;
        com.google.common.collect.CompactHashMap$EntrySetView r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.CompactHashMap$EntrySetView;

        $r1 := @parameter0: java.lang.Object;

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $r3 = virtualinvoke r2.<com.google.common.collect.CompactHashMap: java.util.Map delegateOrNull()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        return $z0;

     label1:
        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label4;

        r5 = (java.util.Map$Entry) $r1;

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $z0 = virtualinvoke r2.<com.google.common.collect.CompactHashMap: boolean needsAllocArrays()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $i0 = staticinvoke <com.google.common.collect.CompactHashMap: int access$700(com.google.common.collect.CompactHashMap)>(r2);

        $r1 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $r7 = staticinvoke <com.google.common.collect.CompactHashMap: java.lang.Object access$800(com.google.common.collect.CompactHashMap)>(r2);

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $r8 = staticinvoke <com.google.common.collect.CompactHashMap: int[] access$900(com.google.common.collect.CompactHashMap)>(r2);

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $r9 = staticinvoke <com.google.common.collect.CompactHashMap: java.lang.Object[] access$1000(com.google.common.collect.CompactHashMap)>(r2);

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $r10 = staticinvoke <com.google.common.collect.CompactHashMap: java.lang.Object[] access$1100(com.google.common.collect.CompactHashMap)>(r2);

        $i1 = staticinvoke <com.google.common.collect.CompactHashing: int remove(java.lang.Object,java.lang.Object,int,java.lang.Object,int[],java.lang.Object[],java.lang.Object[])>($r1, $r6, $i0, $r7, $r8, $r9, $r10);

        if $i1 != -1 goto label3;

        return 0;

     label3:
        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        virtualinvoke r2.<com.google.common.collect.CompactHashMap: void moveLastEntry(int,int)>($i1, $i0);

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        staticinvoke <com.google.common.collect.CompactHashMap: int access$1210(com.google.common.collect.CompactHashMap)>(r2);

        r2 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        virtualinvoke r2.<com.google.common.collect.CompactHashMap: void incrementModCount()>();

        return 1;

     label4:
        return 0;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.CompactHashMap $r1;
        com.google.common.collect.CompactHashMap$EntrySetView r0;

        r0 := @this: com.google.common.collect.CompactHashMap$EntrySetView;

        $r1 = r0.<com.google.common.collect.CompactHashMap$EntrySetView: com.google.common.collect.CompactHashMap this$0>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.CompactHashMap: int size()>();

        return $i0;
    }
}
