final class kotlin.coroutines.CombinedContext$writeReplace$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function2
{
    final kotlin.coroutines.CoroutineContext[] $elements;
    final kotlin.jvm.internal.Ref$IntRef $index;

    void <init>(kotlin.coroutines.CoroutineContext[], kotlin.jvm.internal.Ref$IntRef)
    {
        kotlin.coroutines.CombinedContext$writeReplace$1 r0;
        kotlin.coroutines.CoroutineContext[] $r1;
        kotlin.jvm.internal.Ref$IntRef $r2;

        r0 := @this: kotlin.coroutines.CombinedContext$writeReplace$1;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext[];

        $r2 := @parameter1: kotlin.jvm.internal.Ref$IntRef;

        r0.<kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.coroutines.CoroutineContext[] $elements> = $r1;

        r0.<kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.jvm.internal.Ref$IntRef $index> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlin.coroutines.CombinedContext$writeReplace$1 r0;
        kotlin.Unit $r3;
        kotlin.coroutines.CoroutineContext$Element $r4;
        java.lang.Object $r1, $r2;

        r0 := @this: kotlin.coroutines.CombinedContext$writeReplace$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.Unit) $r1;

        $r4 = (kotlin.coroutines.CoroutineContext$Element) $r2;

        virtualinvoke r0.<kotlin.coroutines.CombinedContext$writeReplace$1: void invoke(kotlin.Unit,kotlin.coroutines.CoroutineContext$Element)>($r3, $r4);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    public final void invoke(kotlin.Unit, kotlin.coroutines.CoroutineContext$Element)
    {
        kotlin.coroutines.CombinedContext$writeReplace$1 r0;
        kotlin.coroutines.CoroutineContext[] $r4;
        kotlin.Unit $r3;
        kotlin.coroutines.CoroutineContext$Element $r1;
        kotlin.jvm.internal.Ref$IntRef $r2;
        int $i0, $i1;

        r0 := @this: kotlin.coroutines.CombinedContext$writeReplace$1;

        $r3 := @parameter0: kotlin.Unit;

        $r1 := @parameter1: kotlin.coroutines.CoroutineContext$Element;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "<anonymous parameter 0>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "element");

        $r4 = r0.<kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.coroutines.CoroutineContext[] $elements>;

        $r2 = r0.<kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.jvm.internal.Ref$IntRef $index>;

        $i1 = $r2.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r2 = r0.<kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.jvm.internal.Ref$IntRef $index>;

        $i0 = $i1 + 1;

        $r2.<kotlin.jvm.internal.Ref$IntRef: int element> = $i0;

        $r4[$i1] = $r1;

        return;
    }
}
