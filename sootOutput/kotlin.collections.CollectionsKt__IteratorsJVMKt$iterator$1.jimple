public final class kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1 extends java.lang.Object implements java.util.Iterator, kotlin.jvm.internal.markers.KMappedMarker
{
    final java.util.Enumeration $this_iterator;

    void <init>(java.util.Enumeration)
    {
        kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1 r0;
        java.util.Enumeration $r1;

        r0 := @this: kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1;

        $r1 := @parameter0: java.util.Enumeration;

        r0.<kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: java.util.Enumeration $this_iterator> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1 r0;
        java.util.Enumeration $r1;
        boolean $z0;

        r0 := @this: kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1;

        $r1 = r0.<kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: java.util.Enumeration $this_iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1 r0;
        java.lang.Object $r1;
        java.util.Enumeration $r2;

        r0 := @this: kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1;

        $r2 = r0.<kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: java.util.Enumeration $this_iterator>;

        $r1 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1 r0;

        r0 := @this: kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }
}
