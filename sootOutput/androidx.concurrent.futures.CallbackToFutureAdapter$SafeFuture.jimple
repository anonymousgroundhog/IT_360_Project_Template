final class androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture extends java.lang.Object implements com.google.common.util.concurrent.ListenableFuture
{
    final java.lang.ref.WeakReference completerWeakReference;
    private final androidx.concurrent.futures.AbstractResolvableFuture delegate;

    void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.lang.ref.WeakReference $r3;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1 $r2;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1;

        specialinvoke $r2.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1: void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture)>(r0);

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate> = $r2;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: java.lang.ref.WeakReference completerWeakReference> = $r3;

        return;
    }

    public void addListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        java.util.concurrent.Executor $r2;
        androidx.concurrent.futures.AbstractResolvableFuture $r3;
        java.lang.Runnable $r1;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate>;

        virtualinvoke $r3.<androidx.concurrent.futures.AbstractResolvableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r1, $r2);

        return;
    }

    public boolean cancel(boolean)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r3;
        androidx.concurrent.futures.AbstractResolvableFuture r4;
        java.lang.Object $r2;
        java.lang.ref.WeakReference r1;
        boolean $z0;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        $z0 := @parameter0: boolean;

        r1 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: java.lang.ref.WeakReference completerWeakReference>;

        $r2 = virtualinvoke r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r2;

        r4 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate>;

        $z0 = virtualinvoke r4.<androidx.concurrent.futures.AbstractResolvableFuture: boolean cancel(boolean)>($z0);

        if $z0 == 0 goto label1;

        if r3 == null goto label1;

        virtualinvoke r3.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void fireCancellationListeners()>();

     label1:
        return $z0;
    }

    boolean cancelWithoutNotifyingCompleter(boolean)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        boolean $z0;
        androidx.concurrent.futures.AbstractResolvableFuture $r1;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate>;

        $z0 = virtualinvoke $r1.<androidx.concurrent.futures.AbstractResolvableFuture: boolean cancel(boolean)>($z0);

        return $z0;
    }

    public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.lang.Object $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.AbstractResolvableFuture $r2;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        $r2 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate>;

        $r1 = virtualinvoke $r2.<androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object get()>();

        return $r1;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeUnit $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.AbstractResolvableFuture $r3;
        long $l0;
        java.lang.Object $r2;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r3 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate>;

        $r2 = virtualinvoke $r3.<androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return $r2;
    }

    public boolean isCancelled()
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        boolean $z0;
        androidx.concurrent.futures.AbstractResolvableFuture $r1;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        $r1 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate>;

        $z0 = virtualinvoke $r1.<androidx.concurrent.futures.AbstractResolvableFuture: boolean isCancelled()>();

        return $z0;
    }

    public boolean isDone()
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        boolean $z0;
        androidx.concurrent.futures.AbstractResolvableFuture $r1;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        $r1 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate>;

        $z0 = virtualinvoke $r1.<androidx.concurrent.futures.AbstractResolvableFuture: boolean isDone()>();

        return $z0;
    }

    boolean set(java.lang.Object)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.AbstractResolvableFuture $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate>;

        $z0 = virtualinvoke $r2.<androidx.concurrent.futures.AbstractResolvableFuture: boolean set(java.lang.Object)>(r1);

        return $z0;
    }

    boolean setException(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.AbstractResolvableFuture $r2;
        boolean $z0;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate>;

        $z0 = virtualinvoke $r2.<androidx.concurrent.futures.AbstractResolvableFuture: boolean setException(java.lang.Throwable)>($r1);

        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.AbstractResolvableFuture $r2;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture;

        $r2 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate>;

        $r1 = virtualinvoke $r2.<androidx.concurrent.futures.AbstractResolvableFuture: java.lang.String toString()>();

        return $r1;
    }
}
