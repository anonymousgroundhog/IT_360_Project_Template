public class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat extends java.lang.Object
{

    private void <init>()
    {
        androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat r0;

        r0 := @this: androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        android.view.animation.AnticipateInterpolator $r12;
        android.view.animation.CycleInterpolator $r11;
        android.view.animation.AccelerateDecelerateInterpolator $r10;
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat $r16;
        android.util.AttributeSet $r5;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        android.content.res.Resources$Theme $r2;
        android.view.animation.AccelerateInterpolator $r8;
        org.xmlpull.v1.XmlPullParser $r3;
        boolean $z0;
        android.view.animation.Interpolator r4;
        android.view.animation.BounceInterpolator $r15;
        java.lang.RuntimeException $r17;
        android.view.animation.LinearInterpolator $r7;
        android.view.animation.OvershootInterpolator $r13;
        android.view.animation.AnticipateOvershootInterpolator $r14;
        java.lang.StringBuilder $r18;
        android.view.animation.DecelerateInterpolator $r9;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: org.xmlpull.v1.XmlPullParser;

        r4 = null;

        $i0 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 3 goto label02;

        $i2 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label14;

     label02:
        if $i1 == 1 goto label14;

        if $i1 == 2 goto label03;

        goto label01;

     label03:
        $r5 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r3);

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("linearInterpolator");

        if $z0 == 0 goto label04;

        $r7 = new android.view.animation.LinearInterpolator;

        specialinvoke $r7.<android.view.animation.LinearInterpolator: void <init>()>();

        r4 = $r7;

        goto label01;

     label04:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("accelerateInterpolator");

        if $z0 == 0 goto label05;

        $r8 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r8.<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        r4 = $r8;

        goto label01;

     label05:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("decelerateInterpolator");

        if $z0 == 0 goto label06;

        $r9 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r9.<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        r4 = $r9;

        goto label01;

     label06:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("accelerateDecelerateInterpolator");

        if $z0 == 0 goto label07;

        $r10 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r10.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        r4 = $r10;

        goto label01;

     label07:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("cycleInterpolator");

        if $z0 == 0 goto label08;

        $r11 = new android.view.animation.CycleInterpolator;

        specialinvoke $r11.<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        r4 = $r11;

        goto label01;

     label08:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("anticipateInterpolator");

        if $z0 == 0 goto label09;

        $r12 = new android.view.animation.AnticipateInterpolator;

        specialinvoke $r12.<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        r4 = $r12;

        goto label01;

     label09:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("overshootInterpolator");

        if $z0 == 0 goto label10;

        $r13 = new android.view.animation.OvershootInterpolator;

        specialinvoke $r13.<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        r4 = $r13;

        goto label01;

     label10:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("anticipateOvershootInterpolator");

        if $z0 == 0 goto label11;

        $r14 = new android.view.animation.AnticipateOvershootInterpolator;

        specialinvoke $r14.<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        r4 = $r14;

        goto label01;

     label11:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("bounceInterpolator");

        if $z0 == 0 goto label12;

        $r15 = new android.view.animation.BounceInterpolator;

        specialinvoke $r15.<android.view.animation.BounceInterpolator: void <init>()>();

        r4 = $r15;

        goto label01;

     label12:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("pathInterpolator");

        if $z0 == 0 goto label13;

        $r16 = new androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        specialinvoke $r16.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>($r0, $r5, $r3);

        r4 = $r16;

        goto label01;

     label13:
        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown interpolator name: ");

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r17;

     label14:
        return r4;
    }

    public static android.view.animation.Interpolator loadInterpolator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        int $i0;
        android.content.Context $r0;
        android.view.animation.Interpolator $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r0, $i0);

        return $r1;
    }
}
