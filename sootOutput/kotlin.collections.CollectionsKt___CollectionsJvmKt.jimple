class kotlin.collections.CollectionsKt___CollectionsJvmKt extends kotlin.collections.CollectionsKt__ReversedViewsKt
{

    public void <init>()
    {
        kotlin.collections.CollectionsKt___CollectionsJvmKt r0;

        r0 := @this: kotlin.collections.CollectionsKt___CollectionsJvmKt;

        specialinvoke r0.<kotlin.collections.CollectionsKt__ReversedViewsKt: void <init>()>();

        return;
    }

    public static final java.util.List filterIsInstance(java.lang.Iterable, java.lang.Class)
    {
        java.util.List $r4;
        java.util.Collection $r2;
        java.lang.Class $r1;
        java.lang.Iterable $r0;
        java.util.ArrayList $r3;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "klass");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r2 = (java.util.Collection) $r3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection,java.lang.Class)>($r0, $r2, $r1);

        $r4 = (java.util.List) $r2;

        return $r4;
    }

    public static final java.util.Collection filterIsInstanceTo(java.lang.Iterable, java.util.Collection, java.lang.Class)
    {
        java.util.Iterator $r3;
        java.util.Collection $r1;
        java.lang.Class $r2;
        java.lang.Object $r4;
        java.lang.Iterable $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "klass");

        $r3 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r1;
    }

    public static final java.lang.Comparable max(java.lang.Iterable)
    {
        java.lang.Comparable $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Comparable maxOrNull(java.lang.Iterable)>($r0);

        return $r1;
    }

    public static final java.lang.Double max(java.lang.Iterable)
    {
        java.lang.Double $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Double maxOrNull(java.lang.Iterable)>($r0);

        return $r1;
    }

    public static final java.lang.Float max(java.lang.Iterable)
    {
        java.lang.Float $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Float maxOrNull(java.lang.Iterable)>($r0);

        return $r1;
    }

    public static final java.lang.Object maxBy(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r0;
        int $i0;
        java.lang.Object $r3, r4, $r6;
        java.lang.Comparable r5, r7;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = $r3;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r3;

     label2:
        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r5 = (java.lang.Comparable) $r3;

     label3:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r7 = (java.lang.Comparable) $r6;

        $i0 = interfaceinvoke r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r7);

        if $i0 >= 0 goto label4;

        r4 = $r3;

        r5 = r7;

     label4:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return r4;
    }

    public static final java.lang.Object maxWith(java.lang.Iterable, java.util.Comparator)
    {
        java.lang.Object $r2;
        java.util.Comparator $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object maxWithOrNull(java.lang.Iterable,java.util.Comparator)>($r0, $r1);

        return $r2;
    }

    public static final java.lang.Comparable min(java.lang.Iterable)
    {
        java.lang.Comparable $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Comparable minOrNull(java.lang.Iterable)>($r0);

        return $r1;
    }

    public static final java.lang.Double min(java.lang.Iterable)
    {
        java.lang.Double $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Double minOrNull(java.lang.Iterable)>($r0);

        return $r1;
    }

    public static final java.lang.Float min(java.lang.Iterable)
    {
        java.lang.Float $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Float minOrNull(java.lang.Iterable)>($r0);

        return $r1;
    }

    public static final java.lang.Object minBy(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r0;
        int $i0;
        java.lang.Object $r3, r4, $r6;
        java.lang.Comparable r5, r7;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = $r3;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r3;

     label2:
        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r5 = (java.lang.Comparable) $r3;

     label3:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r7 = (java.lang.Comparable) $r6;

        $i0 = interfaceinvoke r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r7);

        if $i0 <= 0 goto label4;

        r4 = $r3;

        r5 = r7;

     label4:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return r4;
    }

    public static final java.lang.Object minWith(java.lang.Iterable, java.util.Comparator)
    {
        java.lang.Object $r2;
        java.util.Comparator $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object minWithOrNull(java.lang.Iterable,java.util.Comparator)>($r0, $r1);

        return $r2;
    }

    public static final void reverse(java.util.List)
    {
        java.util.List $r0;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r0);

        return;
    }

    private static final java.math.BigDecimal sumOfBigDecimal(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        java.math.BigDecimal $r2, r3;
        java.util.Iterator $r4;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r5;
        java.lang.Iterable $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(0L);

        r3 = $r2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "valueOf(this.toLong())");

        $r4 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r2 = (java.math.BigDecimal) $r5;

        r3 = virtualinvoke r3.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "this.add(other)");

        goto label1;

     label2:
        return r3;
    }

    private static final java.math.BigInteger sumOfBigInteger(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        java.util.Iterator $r4;
        kotlin.jvm.functions.Function1 $r1;
        java.math.BigInteger $r2, r3;
        java.lang.Object $r5;
        java.lang.Iterable $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L);

        r3 = $r2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "valueOf(this.toLong())");

        $r4 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r2 = (java.math.BigInteger) $r5;

        r3 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "this.add(other)");

        goto label1;

     label2:
        return r3;
    }

    public static final java.util.SortedSet toSortedSet(java.lang.Iterable)
    {
        java.util.SortedSet $r3;
        java.util.Collection $r1;
        java.lang.Iterable $r0;
        java.util.TreeSet $r2;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>()>();

        $r1 = (java.util.Collection) $r2;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)>($r0, $r1);

        $r3 = (java.util.SortedSet) $r1;

        return $r3;
    }

    public static final java.util.SortedSet toSortedSet(java.lang.Iterable, java.util.Comparator)
    {
        java.util.SortedSet $r4;
        java.util.Collection $r2;
        java.util.Comparator $r1;
        java.lang.Iterable $r0;
        java.util.TreeSet $r3;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $r3 = new java.util.TreeSet;

        specialinvoke $r3.<java.util.TreeSet: void <init>(java.util.Comparator)>($r1);

        $r2 = (java.util.Collection) $r3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)>($r0, $r2);

        $r4 = (java.util.SortedSet) $r2;

        return $r4;
    }
}
