public abstract class com.google.common.graph.Traverser extends java.lang.Object
{
    private final com.google.common.graph.SuccessorsFunction successorFunction;

    private void <init>(com.google.common.graph.SuccessorsFunction)
    {
        java.lang.Object $r2;
        com.google.common.graph.SuccessorsFunction r1;
        com.google.common.graph.Traverser r0;

        r0 := @this: com.google.common.graph.Traverser;

        r1 := @parameter0: com.google.common.graph.SuccessorsFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r1 = (com.google.common.graph.SuccessorsFunction) $r2;

        r0.<com.google.common.graph.Traverser: com.google.common.graph.SuccessorsFunction successorFunction> = r1;

        return;
    }

    void <init>(com.google.common.graph.SuccessorsFunction, com.google.common.graph.Traverser$1)
    {
        com.google.common.graph.Traverser$1 $r2;
        com.google.common.graph.SuccessorsFunction $r1;
        com.google.common.graph.Traverser r0;

        r0 := @this: com.google.common.graph.Traverser;

        $r1 := @parameter0: com.google.common.graph.SuccessorsFunction;

        $r2 := @parameter1: com.google.common.graph.Traverser$1;

        specialinvoke r0.<com.google.common.graph.Traverser: void <init>(com.google.common.graph.SuccessorsFunction)>($r1);

        return;
    }

    public static com.google.common.graph.Traverser forGraph(com.google.common.graph.SuccessorsFunction)
    {
        com.google.common.graph.Traverser$1 $r1;
        com.google.common.graph.SuccessorsFunction r0;

        r0 := @parameter0: com.google.common.graph.SuccessorsFunction;

        $r1 = new com.google.common.graph.Traverser$1;

        specialinvoke $r1.<com.google.common.graph.Traverser$1: void <init>(com.google.common.graph.SuccessorsFunction,com.google.common.graph.SuccessorsFunction)>(r0, r0);

        return $r1;
    }

    public static com.google.common.graph.Traverser forTree(com.google.common.graph.SuccessorsFunction)
    {
        com.google.common.graph.BaseGraph $r1;
        com.google.common.graph.Traverser$2 $r3;
        com.google.common.graph.SuccessorsFunction r0;
        com.google.common.graph.Network $r2;
        boolean $z0;

        r0 := @parameter0: com.google.common.graph.SuccessorsFunction;

        $z0 = r0 instanceof com.google.common.graph.BaseGraph;

        if $z0 == 0 goto label1;

        $r1 = (com.google.common.graph.BaseGraph) r0;

        $z0 = interfaceinvoke $r1.<com.google.common.graph.BaseGraph: boolean isDirected()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Undirected graphs can never be trees.");

     label1:
        $z0 = r0 instanceof com.google.common.graph.Network;

        if $z0 == 0 goto label2;

        $r2 = (com.google.common.graph.Network) r0;

        $z0 = interfaceinvoke $r2.<com.google.common.graph.Network: boolean isDirected()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Undirected networks can never be trees.");

     label2:
        $r3 = new com.google.common.graph.Traverser$2;

        specialinvoke $r3.<com.google.common.graph.Traverser$2: void <init>(com.google.common.graph.SuccessorsFunction,com.google.common.graph.SuccessorsFunction)>(r0, r0);

        return $r3;
    }

    private com.google.common.collect.ImmutableSet validate(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableSet $r3;
        com.google.common.graph.Traverser r0;
        java.lang.Object $r5;
        com.google.common.graph.SuccessorsFunction $r2;
        com.google.common.collect.UnmodifiableIterator $r4;
        java.lang.Iterable r1;
        boolean $z0;

        r0 := @this: com.google.common.graph.Traverser;

        r1 := @parameter0: java.lang.Iterable;

        $r3 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>(r1);

        $r4 = virtualinvoke $r3.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = r0.<com.google.common.graph.Traverser: com.google.common.graph.SuccessorsFunction successorFunction>;

        interfaceinvoke $r2.<com.google.common.graph.SuccessorsFunction: java.lang.Iterable successors(java.lang.Object)>($r5);

        goto label1;

     label2:
        return $r3;
    }

    public final java.lang.Iterable breadthFirst(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableSet $r3;
        com.google.common.graph.Traverser$3 $r2;
        com.google.common.graph.Traverser r0;
        java.lang.Iterable r1;

        r0 := @this: com.google.common.graph.Traverser;

        r1 := @parameter0: java.lang.Iterable;

        $r3 = specialinvoke r0.<com.google.common.graph.Traverser: com.google.common.collect.ImmutableSet validate(java.lang.Iterable)>(r1);

        $r2 = new com.google.common.graph.Traverser$3;

        specialinvoke $r2.<com.google.common.graph.Traverser$3: void <init>(com.google.common.graph.Traverser,com.google.common.collect.ImmutableSet)>(r0, $r3);

        return $r2;
    }

    public final java.lang.Iterable breadthFirst(java.lang.Object)
    {
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.graph.Traverser r0;
        java.lang.Object r1;
        java.lang.Iterable $r3;

        r0 := @this: com.google.common.graph.Traverser;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<com.google.common.graph.Traverser: java.lang.Iterable breadthFirst(java.lang.Iterable)>($r2);

        return $r3;
    }

    public final java.lang.Iterable depthFirstPostOrder(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableSet $r3;
        com.google.common.graph.Traverser r0;
        com.google.common.graph.Traverser$5 $r2;
        java.lang.Iterable r1;

        r0 := @this: com.google.common.graph.Traverser;

        r1 := @parameter0: java.lang.Iterable;

        $r3 = specialinvoke r0.<com.google.common.graph.Traverser: com.google.common.collect.ImmutableSet validate(java.lang.Iterable)>(r1);

        $r2 = new com.google.common.graph.Traverser$5;

        specialinvoke $r2.<com.google.common.graph.Traverser$5: void <init>(com.google.common.graph.Traverser,com.google.common.collect.ImmutableSet)>(r0, $r3);

        return $r2;
    }

    public final java.lang.Iterable depthFirstPostOrder(java.lang.Object)
    {
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.graph.Traverser r0;
        java.lang.Object r1;
        java.lang.Iterable $r3;

        r0 := @this: com.google.common.graph.Traverser;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<com.google.common.graph.Traverser: java.lang.Iterable depthFirstPostOrder(java.lang.Iterable)>($r2);

        return $r3;
    }

    public final java.lang.Iterable depthFirstPreOrder(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableSet $r3;
        com.google.common.graph.Traverser r0;
        com.google.common.graph.Traverser$4 $r2;
        java.lang.Iterable r1;

        r0 := @this: com.google.common.graph.Traverser;

        r1 := @parameter0: java.lang.Iterable;

        $r3 = specialinvoke r0.<com.google.common.graph.Traverser: com.google.common.collect.ImmutableSet validate(java.lang.Iterable)>(r1);

        $r2 = new com.google.common.graph.Traverser$4;

        specialinvoke $r2.<com.google.common.graph.Traverser$4: void <init>(com.google.common.graph.Traverser,com.google.common.collect.ImmutableSet)>(r0, $r3);

        return $r2;
    }

    public final java.lang.Iterable depthFirstPreOrder(java.lang.Object)
    {
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.graph.Traverser r0;
        java.lang.Object r1;
        java.lang.Iterable $r3;

        r0 := @this: com.google.common.graph.Traverser;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<com.google.common.graph.Traverser: java.lang.Iterable depthFirstPreOrder(java.lang.Iterable)>($r2);

        return $r3;
    }

    abstract com.google.common.graph.Traverser$Traversal newTraversal();
}
