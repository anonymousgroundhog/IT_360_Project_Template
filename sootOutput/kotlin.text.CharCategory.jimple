public final enum class kotlin.text.CharCategory extends java.lang.Enum
{
    private static final kotlin.text.CharCategory[] $VALUES;
    public static final enum kotlin.text.CharCategory COMBINING_SPACING_MARK;
    public static final enum kotlin.text.CharCategory CONNECTOR_PUNCTUATION;
    public static final enum kotlin.text.CharCategory CONTROL;
    public static final enum kotlin.text.CharCategory CURRENCY_SYMBOL;
    public static final kotlin.text.CharCategory$Companion Companion;
    public static final enum kotlin.text.CharCategory DASH_PUNCTUATION;
    public static final enum kotlin.text.CharCategory DECIMAL_DIGIT_NUMBER;
    public static final enum kotlin.text.CharCategory ENCLOSING_MARK;
    public static final enum kotlin.text.CharCategory END_PUNCTUATION;
    public static final enum kotlin.text.CharCategory FINAL_QUOTE_PUNCTUATION;
    public static final enum kotlin.text.CharCategory FORMAT;
    public static final enum kotlin.text.CharCategory INITIAL_QUOTE_PUNCTUATION;
    public static final enum kotlin.text.CharCategory LETTER_NUMBER;
    public static final enum kotlin.text.CharCategory LINE_SEPARATOR;
    public static final enum kotlin.text.CharCategory LOWERCASE_LETTER;
    public static final enum kotlin.text.CharCategory MATH_SYMBOL;
    public static final enum kotlin.text.CharCategory MODIFIER_LETTER;
    public static final enum kotlin.text.CharCategory MODIFIER_SYMBOL;
    public static final enum kotlin.text.CharCategory NON_SPACING_MARK;
    public static final enum kotlin.text.CharCategory OTHER_LETTER;
    public static final enum kotlin.text.CharCategory OTHER_NUMBER;
    public static final enum kotlin.text.CharCategory OTHER_PUNCTUATION;
    public static final enum kotlin.text.CharCategory OTHER_SYMBOL;
    public static final enum kotlin.text.CharCategory PARAGRAPH_SEPARATOR;
    public static final enum kotlin.text.CharCategory PRIVATE_USE;
    public static final enum kotlin.text.CharCategory SPACE_SEPARATOR;
    public static final enum kotlin.text.CharCategory START_PUNCTUATION;
    public static final enum kotlin.text.CharCategory SURROGATE;
    public static final enum kotlin.text.CharCategory TITLECASE_LETTER;
    public static final enum kotlin.text.CharCategory UNASSIGNED;
    public static final enum kotlin.text.CharCategory UPPERCASE_LETTER;
    private final java.lang.String code;
    private final int value;

    private static final kotlin.text.CharCategory[] $values()
    {
        kotlin.text.CharCategory $r1;
        kotlin.text.CharCategory[] $r0;

        $r0 = newarray (kotlin.text.CharCategory)[30];

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory UNASSIGNED>;

        $r0[0] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory UPPERCASE_LETTER>;

        $r0[1] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory LOWERCASE_LETTER>;

        $r0[2] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory TITLECASE_LETTER>;

        $r0[3] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory MODIFIER_LETTER>;

        $r0[4] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_LETTER>;

        $r0[5] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory NON_SPACING_MARK>;

        $r0[6] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory ENCLOSING_MARK>;

        $r0[7] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory COMBINING_SPACING_MARK>;

        $r0[8] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory DECIMAL_DIGIT_NUMBER>;

        $r0[9] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory LETTER_NUMBER>;

        $r0[10] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_NUMBER>;

        $r0[11] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory SPACE_SEPARATOR>;

        $r0[12] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory LINE_SEPARATOR>;

        $r0[13] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory PARAGRAPH_SEPARATOR>;

        $r0[14] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory CONTROL>;

        $r0[15] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory FORMAT>;

        $r0[16] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory PRIVATE_USE>;

        $r0[17] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory SURROGATE>;

        $r0[18] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory DASH_PUNCTUATION>;

        $r0[19] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory START_PUNCTUATION>;

        $r0[20] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory END_PUNCTUATION>;

        $r0[21] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory CONNECTOR_PUNCTUATION>;

        $r0[22] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_PUNCTUATION>;

        $r0[23] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory MATH_SYMBOL>;

        $r0[24] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory CURRENCY_SYMBOL>;

        $r0[25] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory MODIFIER_SYMBOL>;

        $r0[26] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_SYMBOL>;

        $r0[27] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory INITIAL_QUOTE_PUNCTUATION>;

        $r0[28] = $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory FINAL_QUOTE_PUNCTUATION>;

        $r0[29] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        kotlin.text.CharCategory $r1;
        kotlin.text.CharCategory$Companion $r2;
        kotlin.text.CharCategory[] $r0;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("UNASSIGNED", 0, 0, "Cn");

        <kotlin.text.CharCategory: kotlin.text.CharCategory UNASSIGNED> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("UPPERCASE_LETTER", 1, 1, "Lu");

        <kotlin.text.CharCategory: kotlin.text.CharCategory UPPERCASE_LETTER> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("LOWERCASE_LETTER", 2, 2, "Ll");

        <kotlin.text.CharCategory: kotlin.text.CharCategory LOWERCASE_LETTER> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("TITLECASE_LETTER", 3, 3, "Lt");

        <kotlin.text.CharCategory: kotlin.text.CharCategory TITLECASE_LETTER> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("MODIFIER_LETTER", 4, 4, "Lm");

        <kotlin.text.CharCategory: kotlin.text.CharCategory MODIFIER_LETTER> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("OTHER_LETTER", 5, 5, "Lo");

        <kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_LETTER> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("NON_SPACING_MARK", 6, 6, "Mn");

        <kotlin.text.CharCategory: kotlin.text.CharCategory NON_SPACING_MARK> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("ENCLOSING_MARK", 7, 7, "Me");

        <kotlin.text.CharCategory: kotlin.text.CharCategory ENCLOSING_MARK> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("COMBINING_SPACING_MARK", 8, 8, "Mc");

        <kotlin.text.CharCategory: kotlin.text.CharCategory COMBINING_SPACING_MARK> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("DECIMAL_DIGIT_NUMBER", 9, 9, "Nd");

        <kotlin.text.CharCategory: kotlin.text.CharCategory DECIMAL_DIGIT_NUMBER> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("LETTER_NUMBER", 10, 10, "Nl");

        <kotlin.text.CharCategory: kotlin.text.CharCategory LETTER_NUMBER> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("OTHER_NUMBER", 11, 11, "No");

        <kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_NUMBER> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("SPACE_SEPARATOR", 12, 12, "Zs");

        <kotlin.text.CharCategory: kotlin.text.CharCategory SPACE_SEPARATOR> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("LINE_SEPARATOR", 13, 13, "Zl");

        <kotlin.text.CharCategory: kotlin.text.CharCategory LINE_SEPARATOR> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("PARAGRAPH_SEPARATOR", 14, 14, "Zp");

        <kotlin.text.CharCategory: kotlin.text.CharCategory PARAGRAPH_SEPARATOR> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("CONTROL", 15, 15, "Cc");

        <kotlin.text.CharCategory: kotlin.text.CharCategory CONTROL> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("FORMAT", 16, 16, "Cf");

        <kotlin.text.CharCategory: kotlin.text.CharCategory FORMAT> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("PRIVATE_USE", 17, 18, "Co");

        <kotlin.text.CharCategory: kotlin.text.CharCategory PRIVATE_USE> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("SURROGATE", 18, 19, "Cs");

        <kotlin.text.CharCategory: kotlin.text.CharCategory SURROGATE> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("DASH_PUNCTUATION", 19, 20, "Pd");

        <kotlin.text.CharCategory: kotlin.text.CharCategory DASH_PUNCTUATION> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("START_PUNCTUATION", 20, 21, "Ps");

        <kotlin.text.CharCategory: kotlin.text.CharCategory START_PUNCTUATION> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("END_PUNCTUATION", 21, 22, "Pe");

        <kotlin.text.CharCategory: kotlin.text.CharCategory END_PUNCTUATION> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("CONNECTOR_PUNCTUATION", 22, 23, "Pc");

        <kotlin.text.CharCategory: kotlin.text.CharCategory CONNECTOR_PUNCTUATION> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("OTHER_PUNCTUATION", 23, 24, "Po");

        <kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_PUNCTUATION> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("MATH_SYMBOL", 24, 25, "Sm");

        <kotlin.text.CharCategory: kotlin.text.CharCategory MATH_SYMBOL> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("CURRENCY_SYMBOL", 25, 26, "Sc");

        <kotlin.text.CharCategory: kotlin.text.CharCategory CURRENCY_SYMBOL> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("MODIFIER_SYMBOL", 26, 27, "Sk");

        <kotlin.text.CharCategory: kotlin.text.CharCategory MODIFIER_SYMBOL> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("OTHER_SYMBOL", 27, 28, "So");

        <kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_SYMBOL> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("INITIAL_QUOTE_PUNCTUATION", 28, 29, "Pi");

        <kotlin.text.CharCategory: kotlin.text.CharCategory INITIAL_QUOTE_PUNCTUATION> = $r1;

        $r1 = new kotlin.text.CharCategory;

        specialinvoke $r1.<kotlin.text.CharCategory: void <init>(java.lang.String,int,int,java.lang.String)>("FINAL_QUOTE_PUNCTUATION", 29, 30, "Pf");

        <kotlin.text.CharCategory: kotlin.text.CharCategory FINAL_QUOTE_PUNCTUATION> = $r1;

        $r0 = staticinvoke <kotlin.text.CharCategory: kotlin.text.CharCategory[] $values()>();

        <kotlin.text.CharCategory: kotlin.text.CharCategory[] $VALUES> = $r0;

        $r2 = new kotlin.text.CharCategory$Companion;

        specialinvoke $r2.<kotlin.text.CharCategory$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.text.CharCategory: kotlin.text.CharCategory$Companion Companion> = $r2;

        return;
    }

    private void <init>(java.lang.String, int, int, java.lang.String)
    {
        kotlin.text.CharCategory r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;

        r0 := @this: kotlin.text.CharCategory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<kotlin.text.CharCategory: int value> = $i1;

        r0.<kotlin.text.CharCategory: java.lang.String code> = $r2;

        return;
    }

    public static kotlin.text.CharCategory valueOf(java.lang.String)
    {
        kotlin.text.CharCategory $r2;
        java.lang.String $r0;
        java.lang.Enum $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lkotlin/text/CharCategory;", $r0);

        $r2 = (kotlin.text.CharCategory) $r1;

        return $r2;
    }

    public static kotlin.text.CharCategory[] values()
    {
        java.lang.Object $r0;
        kotlin.text.CharCategory[] $r1;

        $r1 = <kotlin.text.CharCategory: kotlin.text.CharCategory[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (kotlin.text.CharCategory[]) $r0;

        return $r1;
    }

    public final boolean contains(char)
    {
        kotlin.text.CharCategory r0;
        int $i1, $i2;
        char $c0;

        r0 := @this: kotlin.text.CharCategory;

        $c0 := @parameter0: char;

        $i2 = staticinvoke <java.lang.Character: int getType(char)>($c0);

        $i1 = r0.<kotlin.text.CharCategory: int value>;

        if $i2 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.lang.String getCode()
    {
        kotlin.text.CharCategory r0;
        java.lang.String r1;

        r0 := @this: kotlin.text.CharCategory;

        r1 = r0.<kotlin.text.CharCategory: java.lang.String code>;

        return r1;
    }

    public final int getValue()
    {
        kotlin.text.CharCategory r0;
        int i0;

        r0 := @this: kotlin.text.CharCategory;

        i0 = r0.<kotlin.text.CharCategory: int value>;

        return i0;
    }
}
