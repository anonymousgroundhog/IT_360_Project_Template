public abstract class androidx.work.WorkRequest$Builder extends java.lang.Object
{
    boolean mBackoffCriteriaSet;
    java.util.UUID mId;
    java.util.Set mTags;
    androidx.work.impl.model.WorkSpec mWorkSpec;
    java.lang.Class mWorkerClass;

    void <init>(java.lang.Class)
    {
        java.util.HashSet $r2;
        androidx.work.WorkRequest$Builder r0;
        java.lang.Class r1;
        java.util.UUID $r3;
        java.lang.String $r5, $r6;
        androidx.work.impl.model.WorkSpec $r4;

        r0 := @this: androidx.work.WorkRequest$Builder;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.WorkRequest$Builder: boolean mBackoffCriteriaSet> = 0;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<androidx.work.WorkRequest$Builder: java.util.Set mTags> = $r2;

        $r3 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r0.<androidx.work.WorkRequest$Builder: java.util.UUID mId> = $r3;

        r0.<androidx.work.WorkRequest$Builder: java.lang.Class mWorkerClass> = r1;

        $r4 = new androidx.work.impl.model.WorkSpec;

        $r3 = r0.<androidx.work.WorkRequest$Builder: java.util.UUID mId>;

        $r5 = virtualinvoke $r3.<java.util.UUID: java.lang.String toString()>();

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r4.<androidx.work.impl.model.WorkSpec: void <init>(java.lang.String,java.lang.String)>($r5, $r6);

        r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec> = $r4;

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder addTag(java.lang.String)>($r5);

        return;
    }

    public final androidx.work.WorkRequest$Builder addTag(java.lang.String)
    {
        androidx.work.WorkRequest$Builder r0;
        java.util.Set $r2;
        java.lang.String $r1;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.work.WorkRequest$Builder: java.util.Set mTags>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public final androidx.work.WorkRequest build()
    {
        androidx.work.WorkRequest $r1;
        androidx.work.Constraints r3;
        java.util.UUID $r5;
        java.lang.IllegalArgumentException $r4;
        androidx.work.impl.model.WorkSpec r2, $r6;
        int i0;
        androidx.work.WorkRequest$Builder r0;
        java.lang.String $r7;
        boolean $z0, $z1;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $r1 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest buildInternal()>();

        r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        r3 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.Constraints constraints>;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 24 goto label1;

        $z0 = virtualinvoke r3.<androidx.work.Constraints: boolean hasContentUriTriggers()>();

        if $z0 != 0 goto label3;

     label1:
        $z0 = virtualinvoke r3.<androidx.work.Constraints: boolean requiresBatteryNotLow()>();

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r3.<androidx.work.Constraints: boolean requiresCharging()>();

        if $z0 != 0 goto label3;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 23 goto label2;

        $z0 = virtualinvoke r3.<androidx.work.Constraints: boolean requiresDeviceIdle()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $z0 = 0;

        goto label4;

     label3:
        $z0 = 1;

     label4:
        r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $z1 = r2.<androidx.work.impl.model.WorkSpec: boolean expedited>;

        if $z1 == 0 goto label6;

        if $z0 != 0 goto label5;

        goto label6;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Expedited jobs only support network and storage constraints");

        throw $r4;

     label6:
        $r5 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r0.<androidx.work.WorkRequest$Builder: java.util.UUID mId> = $r5;

        r2 = new androidx.work.impl.model.WorkSpec;

        $r6 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        specialinvoke r2.<androidx.work.impl.model.WorkSpec: void <init>(androidx.work.impl.model.WorkSpec)>($r6);

        r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec> = r2;

        r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r5 = r0.<androidx.work.WorkRequest$Builder: java.util.UUID mId>;

        $r7 = virtualinvoke $r5.<java.util.UUID: java.lang.String toString()>();

        r2.<androidx.work.impl.model.WorkSpec: java.lang.String id> = $r7;

        return $r1;
    }

    abstract androidx.work.WorkRequest buildInternal();

    abstract androidx.work.WorkRequest$Builder getThis();

    public final androidx.work.WorkRequest$Builder keepResultsForAtLeast(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $r2.<androidx.work.impl.model.WorkSpec: long minimumRetentionDuration> = $l0;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder keepResultsForAtLeast(java.time.Duration)
    {
        java.time.Duration $r1;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $r1 := @parameter0: java.time.Duration;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r1.<java.time.Duration: long toMillis()>();

        $r2.<androidx.work.impl.model.WorkSpec: long minimumRetentionDuration> = $l0;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setBackoffCriteria(androidx.work.BackoffPolicy, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r2;
        androidx.work.BackoffPolicy $r1;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r3;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $r1 := @parameter0: androidx.work.BackoffPolicy;

        $l0 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        r0.<androidx.work.WorkRequest$Builder: boolean mBackoffCriteriaSet> = 1;

        $r3 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r3.<androidx.work.impl.model.WorkSpec: androidx.work.BackoffPolicy backoffPolicy> = $r1;

        $r3 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        virtualinvoke $r3.<androidx.work.impl.model.WorkSpec: void setBackoffDelayDuration(long)>($l0);

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setBackoffCriteria(androidx.work.BackoffPolicy, java.time.Duration)
    {
        androidx.work.BackoffPolicy $r1;
        java.time.Duration $r2;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r3;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $r1 := @parameter0: androidx.work.BackoffPolicy;

        $r2 := @parameter1: java.time.Duration;

        r0.<androidx.work.WorkRequest$Builder: boolean mBackoffCriteriaSet> = 1;

        $r3 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r3.<androidx.work.impl.model.WorkSpec: androidx.work.BackoffPolicy backoffPolicy> = $r1;

        $r3 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r2.<java.time.Duration: long toMillis()>();

        virtualinvoke $r3.<androidx.work.impl.model.WorkSpec: void setBackoffDelayDuration(long)>($l0);

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setConstraints(androidx.work.Constraints)
    {
        androidx.work.WorkRequest$Builder r0;
        androidx.work.Constraints $r1;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $r1 := @parameter0: androidx.work.Constraints;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r2.<androidx.work.impl.model.WorkSpec: androidx.work.Constraints constraints> = $r1;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public androidx.work.WorkRequest$Builder setExpedited(androidx.work.OutOfQuotaPolicy)
    {
        androidx.work.WorkRequest$Builder r0;
        androidx.work.OutOfQuotaPolicy $r1;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $r1 := @parameter0: androidx.work.OutOfQuotaPolicy;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r2.<androidx.work.impl.model.WorkSpec: boolean expedited> = 1;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r2.<androidx.work.impl.model.WorkSpec: androidx.work.OutOfQuotaPolicy outOfQuotaPolicy> = $r1;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public androidx.work.WorkRequest$Builder setInitialDelay(long, java.util.concurrent.TimeUnit)
    {
        long $l0, $l2;
        java.lang.IllegalArgumentException $r3;
        androidx.work.impl.model.WorkSpec $r2;
        java.util.concurrent.TimeUnit $r1;
        byte $b1;
        int $i3;
        androidx.work.WorkRequest$Builder r0;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $r2.<androidx.work.impl.model.WorkSpec: long initialDelay> = $l0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = 9223372036854775807L - $l0;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l2 = $r2.<androidx.work.impl.model.WorkSpec: long initialDelay>;

        $b1 = $l0 cmp $l2;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The given initial delay is too large and will cause an overflow!");

        throw $r3;
    }

    public androidx.work.WorkRequest$Builder setInitialDelay(java.time.Duration)
    {
        long $l1, $l2;
        java.lang.IllegalArgumentException $r3;
        androidx.work.impl.model.WorkSpec $r2;
        byte $b0;
        java.time.Duration $r1;
        int $i3;
        androidx.work.WorkRequest$Builder r0;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $r1 := @parameter0: java.time.Duration;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l1 = virtualinvoke $r1.<java.time.Duration: long toMillis()>();

        $r2.<androidx.work.impl.model.WorkSpec: long initialDelay> = $l1;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = 9223372036854775807L - $l1;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l2 = $r2.<androidx.work.impl.model.WorkSpec: long initialDelay>;

        $b0 = $l1 cmp $l2;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label1;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The given initial delay is too large and will cause an overflow!");

        throw $r3;
    }

    public final androidx.work.WorkRequest$Builder setInitialRunAttemptCount(int)
    {
        int $i0;
        androidx.work.WorkRequest$Builder r0;
        androidx.work.impl.model.WorkSpec $r1;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r1.<androidx.work.impl.model.WorkSpec: int runAttemptCount> = $i0;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setInitialState(androidx.work.WorkInfo$State)
    {
        androidx.work.WorkRequest$Builder r0;
        androidx.work.impl.model.WorkSpec $r2;
        androidx.work.WorkInfo$State $r1;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $r1 := @parameter0: androidx.work.WorkInfo$State;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r2.<androidx.work.impl.model.WorkSpec: androidx.work.WorkInfo$State state> = $r1;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setInputData(androidx.work.Data)
    {
        androidx.work.WorkRequest$Builder r0;
        androidx.work.Data $r1;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $r1 := @parameter0: androidx.work.Data;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r2.<androidx.work.impl.model.WorkSpec: androidx.work.Data input> = $r1;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setPeriodStartTime(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $r2.<androidx.work.impl.model.WorkSpec: long periodStartTime> = $l0;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setScheduleRequestedAt(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this: androidx.work.WorkRequest$Builder;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<androidx.work.WorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $r2.<androidx.work.impl.model.WorkSpec: long scheduleRequestedAt> = $l0;

        r0 = virtualinvoke r0.<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder getThis()>();

        return r0;
    }
}
