class com.google.common.collect.Sets$5 extends java.util.AbstractSet
{
    final com.google.common.collect.ImmutableMap val$index;
    final int val$size;

    void <init>(int, com.google.common.collect.ImmutableMap)
    {
        int $i0;
        com.google.common.collect.Sets$5 r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.Sets$5;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.common.collect.ImmutableMap;

        r0.<com.google.common.collect.Sets$5: int val$size> = $i0;

        r0.<com.google.common.collect.Sets$5: com.google.common.collect.ImmutableMap val$index> = $r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.Sets$5 r0;
        com.google.common.collect.ImmutableSet $r4;
        com.google.common.collect.ImmutableMap $r3;
        java.util.Set r2;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean z0;

        r0 := @this: com.google.common.collect.Sets$5;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof java.util.Set;

        if z0 == 0 goto label1;

        r2 = (java.util.Set) $r1;

        $i1 = interfaceinvoke r2.<java.util.Set: int size()>();

        $i0 = r0.<com.google.common.collect.Sets$5: int val$size>;

        if $i1 != $i0 goto label1;

        $r3 = r0.<com.google.common.collect.Sets$5: com.google.common.collect.ImmutableMap val$index>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>();

        z0 = virtualinvoke $r4.<com.google.common.collect.ImmutableSet: boolean containsAll(java.util.Collection)>(r2);

        if z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.Sets$5 r0;
        com.google.common.collect.Sets$5$1 $r1;

        r0 := @this: com.google.common.collect.Sets$5;

        $r1 = new com.google.common.collect.Sets$5$1;

        specialinvoke $r1.<com.google.common.collect.Sets$5$1: void <init>(com.google.common.collect.Sets$5)>(r0);

        return $r1;
    }

    public int size()
    {
        com.google.common.collect.Sets$5 r0;
        com.google.common.collect.ImmutableMap $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.collect.Sets$5;

        $r1 = r0.<com.google.common.collect.Sets$5: com.google.common.collect.ImmutableMap val$index>;

        $i1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: int size()>();

        $i0 = r0.<com.google.common.collect.Sets$5: int val$size>;

        $i0 = staticinvoke <com.google.common.math.IntMath: int binomial(int,int)>($i1, $i0);

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.Sets$5 r0;
        com.google.common.collect.ImmutableSet $r3;
        com.google.common.collect.ImmutableMap $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, $r5;

        r0 := @this: com.google.common.collect.Sets$5;

        $r2 = r0.<com.google.common.collect.Sets$5: com.google.common.collect.ImmutableMap val$index>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i0 = r0.<com.google.common.collect.Sets$5: int val$size>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i1 = $i1 + 32;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sets.combinations(");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
