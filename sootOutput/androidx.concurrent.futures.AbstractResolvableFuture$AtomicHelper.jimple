abstract class androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper extends java.lang.Object
{

    private void <init>()
    {
        androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper r0;

        r0 := @this: androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.concurrent.futures.AbstractResolvableFuture$1)
    {
        androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper r0;
        androidx.concurrent.futures.AbstractResolvableFuture$1 $r1;

        r0 := @this: androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper;

        $r1 := @parameter0: androidx.concurrent.futures.AbstractResolvableFuture$1;

        specialinvoke r0.<androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: void <init>()>();

        return;
    }

    abstract boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture, androidx.concurrent.futures.AbstractResolvableFuture$Listener, androidx.concurrent.futures.AbstractResolvableFuture$Listener);

    abstract boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture, java.lang.Object, java.lang.Object);

    abstract boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture, androidx.concurrent.futures.AbstractResolvableFuture$Waiter, androidx.concurrent.futures.AbstractResolvableFuture$Waiter);

    abstract void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter, androidx.concurrent.futures.AbstractResolvableFuture$Waiter);

    abstract void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter, java.lang.Thread);
}
