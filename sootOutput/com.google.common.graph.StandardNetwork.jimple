class com.google.common.graph.StandardNetwork extends com.google.common.graph.AbstractNetwork
{
    private final boolean allowsParallelEdges;
    private final boolean allowsSelfLoops;
    private final com.google.common.graph.ElementOrder edgeOrder;
    final com.google.common.graph.MapIteratorCache edgeToReferenceNode;
    private final boolean isDirected;
    final com.google.common.graph.MapIteratorCache nodeConnections;
    private final com.google.common.graph.ElementOrder nodeOrder;

    void <init>(com.google.common.graph.NetworkBuilder)
    {
        com.google.common.graph.ElementOrder $r2;
        com.google.common.graph.NetworkBuilder r1;
        java.lang.Integer $r4;
        com.google.common.base.Optional $r3;
        com.google.common.graph.StandardNetwork r0;
        java.util.Map $r6, $r7;
        int $i0;
        java.lang.Object $r5;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: com.google.common.graph.NetworkBuilder;

        $r2 = r1.<com.google.common.graph.NetworkBuilder: com.google.common.graph.ElementOrder nodeOrder>;

        $r3 = r1.<com.google.common.graph.NetworkBuilder: com.google.common.base.Optional expectedNodeCount>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r5 = virtualinvoke $r3.<com.google.common.base.Optional: java.lang.Object or(java.lang.Object)>($r4);

        $r4 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r6 = virtualinvoke $r2.<com.google.common.graph.ElementOrder: java.util.Map createMap(int)>($i0);

        $r2 = r1.<com.google.common.graph.NetworkBuilder: com.google.common.graph.ElementOrder edgeOrder>;

        $r3 = r1.<com.google.common.graph.NetworkBuilder: com.google.common.base.Optional expectedEdgeCount>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20);

        $r5 = virtualinvoke $r3.<com.google.common.base.Optional: java.lang.Object or(java.lang.Object)>($r4);

        $r4 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r7 = virtualinvoke $r2.<com.google.common.graph.ElementOrder: java.util.Map createMap(int)>($i0);

        specialinvoke r0.<com.google.common.graph.StandardNetwork: void <init>(com.google.common.graph.NetworkBuilder,java.util.Map,java.util.Map)>(r1, $r6, $r7);

        return;
    }

    void <init>(com.google.common.graph.NetworkBuilder, java.util.Map, java.util.Map)
    {
        com.google.common.graph.ElementOrder $r4;
        com.google.common.graph.NetworkBuilder r1;
        com.google.common.graph.MapRetrievalCache $r6;
        com.google.common.graph.MapIteratorCache $r5, $r7;
        com.google.common.graph.StandardNetwork r0;
        java.util.Map r2, r3;
        boolean $z0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: com.google.common.graph.NetworkBuilder;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<com.google.common.graph.AbstractNetwork: void <init>()>();

        $z0 = r1.<com.google.common.graph.NetworkBuilder: boolean directed>;

        r0.<com.google.common.graph.StandardNetwork: boolean isDirected> = $z0;

        $z0 = r1.<com.google.common.graph.NetworkBuilder: boolean allowsParallelEdges>;

        r0.<com.google.common.graph.StandardNetwork: boolean allowsParallelEdges> = $z0;

        $z0 = r1.<com.google.common.graph.NetworkBuilder: boolean allowsSelfLoops>;

        r0.<com.google.common.graph.StandardNetwork: boolean allowsSelfLoops> = $z0;

        $r4 = r1.<com.google.common.graph.NetworkBuilder: com.google.common.graph.ElementOrder nodeOrder>;

        $r4 = virtualinvoke $r4.<com.google.common.graph.ElementOrder: com.google.common.graph.ElementOrder cast()>();

        r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.ElementOrder nodeOrder> = $r4;

        $r4 = r1.<com.google.common.graph.NetworkBuilder: com.google.common.graph.ElementOrder edgeOrder>;

        $r4 = virtualinvoke $r4.<com.google.common.graph.ElementOrder: com.google.common.graph.ElementOrder cast()>();

        r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.ElementOrder edgeOrder> = $r4;

        $z0 = r2 instanceof java.util.TreeMap;

        if $z0 == 0 goto label1;

        $r6 = new com.google.common.graph.MapRetrievalCache;

        $r5 = $r6;

        specialinvoke $r6.<com.google.common.graph.MapRetrievalCache: void <init>(java.util.Map)>(r2);

        goto label2;

     label1:
        $r7 = new com.google.common.graph.MapIteratorCache;

        $r5 = $r7;

        specialinvoke $r7.<com.google.common.graph.MapIteratorCache: void <init>(java.util.Map)>(r2);

     label2:
        r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.MapIteratorCache nodeConnections> = $r5;

        $r7 = new com.google.common.graph.MapIteratorCache;

        specialinvoke $r7.<com.google.common.graph.MapIteratorCache: void <init>(java.util.Map)>(r3);

        r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.MapIteratorCache edgeToReferenceNode> = $r7;

        return;
    }

    public java.util.Set adjacentNodes(java.lang.Object)
    {
        com.google.common.graph.NetworkConnections $r2;
        com.google.common.graph.StandardNetwork r0;
        java.util.Set $r3;
        java.lang.Object r1;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.NetworkConnections checkedConnections(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<com.google.common.graph.NetworkConnections: java.util.Set adjacentNodes()>();

        return $r3;
    }

    public boolean allowsParallelEdges()
    {
        com.google.common.graph.StandardNetwork r0;
        boolean z0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        z0 = r0.<com.google.common.graph.StandardNetwork: boolean allowsParallelEdges>;

        return z0;
    }

    public boolean allowsSelfLoops()
    {
        com.google.common.graph.StandardNetwork r0;
        boolean z0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        z0 = r0.<com.google.common.graph.StandardNetwork: boolean allowsSelfLoops>;

        return z0;
    }

    final com.google.common.graph.NetworkConnections checkedConnections(java.lang.Object)
    {
        com.google.common.graph.NetworkConnections r5;
        java.lang.Object[] $r6;
        java.lang.IllegalArgumentException $r2;
        com.google.common.graph.MapIteratorCache r3;
        com.google.common.graph.StandardNetwork r0;
        java.lang.Object r1, $r4;
        java.lang.String $r7;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        r3 = r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r4 = virtualinvoke r3.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.google.common.graph.NetworkConnections) $r4;

        if r5 == null goto label1;

        return r5;

     label1:
        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = new java.lang.IllegalArgumentException;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r1;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Node %s is not an element of this graph.", $r6);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    final java.lang.Object checkedReferenceNode(java.lang.Object)
    {
        java.lang.Object[] $r5;
        com.google.common.graph.StandardNetwork r0;
        java.lang.Object r1, $r4;
        java.lang.String $r6;
        java.lang.IllegalArgumentException $r2;
        com.google.common.graph.MapIteratorCache r3;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        r3 = r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.MapIteratorCache edgeToReferenceNode>;

        $r4 = virtualinvoke r3.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>(r1);

        if $r4 == null goto label1;

        return $r4;

     label1:
        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = new java.lang.IllegalArgumentException;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Edge %s is not an element of this graph.", $r5);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    final boolean containsEdge(java.lang.Object)
    {
        com.google.common.graph.StandardNetwork r0;
        java.lang.Object r1;
        com.google.common.graph.MapIteratorCache $r2;
        boolean $z0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.MapIteratorCache edgeToReferenceNode>;

        $z0 = virtualinvoke $r2.<com.google.common.graph.MapIteratorCache: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    final boolean containsNode(java.lang.Object)
    {
        com.google.common.graph.StandardNetwork r0;
        java.lang.Object r1;
        com.google.common.graph.MapIteratorCache $r2;
        boolean $z0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.MapIteratorCache nodeConnections>;

        $z0 = virtualinvoke $r2.<com.google.common.graph.MapIteratorCache: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public com.google.common.graph.ElementOrder edgeOrder()
    {
        com.google.common.graph.ElementOrder r1;
        com.google.common.graph.StandardNetwork r0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 = r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.ElementOrder edgeOrder>;

        return r1;
    }

    public java.util.Set edges()
    {
        java.util.Set $r1;
        com.google.common.graph.MapIteratorCache $r2;
        com.google.common.graph.StandardNetwork r0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        $r2 = r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.MapIteratorCache edgeToReferenceNode>;

        $r1 = virtualinvoke $r2.<com.google.common.graph.MapIteratorCache: java.util.Set unmodifiableKeySet()>();

        return $r1;
    }

    public java.util.Set edgesConnecting(java.lang.Object, java.lang.Object)
    {
        com.google.common.graph.NetworkConnections $r3;
        com.google.common.collect.ImmutableSet $r4;
        com.google.common.graph.StandardNetwork r0;
        java.util.Set $r5;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.NetworkConnections checkedConnections(java.lang.Object)>(r1);

        $z0 = r0.<com.google.common.graph.StandardNetwork: boolean allowsSelfLoops>;

        if $z0 != 0 goto label1;

        if r1 != r2 goto label1;

        $r4 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>();

        return $r4;

     label1:
        $z0 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: boolean containsNode(java.lang.Object)>(r2);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Node %s is not an element of this graph.", r2);

        $r5 = interfaceinvoke $r3.<com.google.common.graph.NetworkConnections: java.util.Set edgesConnecting(java.lang.Object)>(r2);

        return $r5;
    }

    public java.util.Set inEdges(java.lang.Object)
    {
        com.google.common.graph.NetworkConnections $r2;
        com.google.common.graph.StandardNetwork r0;
        java.util.Set $r3;
        java.lang.Object r1;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.NetworkConnections checkedConnections(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<com.google.common.graph.NetworkConnections: java.util.Set inEdges()>();

        return $r3;
    }

    public java.util.Set incidentEdges(java.lang.Object)
    {
        com.google.common.graph.NetworkConnections $r2;
        com.google.common.graph.StandardNetwork r0;
        java.util.Set $r3;
        java.lang.Object r1;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.NetworkConnections checkedConnections(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<com.google.common.graph.NetworkConnections: java.util.Set incidentEdges()>();

        return $r3;
    }

    public com.google.common.graph.EndpointPair incidentNodes(java.lang.Object)
    {
        com.google.common.graph.NetworkConnections r5;
        com.google.common.graph.StandardNetwork r0;
        java.lang.Object r1, $r2, $r4;
        com.google.common.graph.MapIteratorCache r3;
        com.google.common.graph.EndpointPair $r6;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: java.lang.Object checkedReferenceNode(java.lang.Object)>(r1);

        r3 = r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r4 = virtualinvoke r3.<com.google.common.graph.MapIteratorCache: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (com.google.common.graph.NetworkConnections) $r4;

        $r4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r5);

        r5 = (com.google.common.graph.NetworkConnections) $r4;

        r1 = interfaceinvoke r5.<com.google.common.graph.NetworkConnections: java.lang.Object adjacentNode(java.lang.Object)>(r1);

        $r6 = staticinvoke <com.google.common.graph.EndpointPair: com.google.common.graph.EndpointPair of(com.google.common.graph.Network,java.lang.Object,java.lang.Object)>(r0, $r2, r1);

        return $r6;
    }

    public boolean isDirected()
    {
        com.google.common.graph.StandardNetwork r0;
        boolean z0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        z0 = r0.<com.google.common.graph.StandardNetwork: boolean isDirected>;

        return z0;
    }

    public com.google.common.graph.ElementOrder nodeOrder()
    {
        com.google.common.graph.ElementOrder r1;
        com.google.common.graph.StandardNetwork r0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 = r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.ElementOrder nodeOrder>;

        return r1;
    }

    public java.util.Set nodes()
    {
        java.util.Set $r1;
        com.google.common.graph.MapIteratorCache $r2;
        com.google.common.graph.StandardNetwork r0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        $r2 = r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.MapIteratorCache nodeConnections>;

        $r1 = virtualinvoke $r2.<com.google.common.graph.MapIteratorCache: java.util.Set unmodifiableKeySet()>();

        return $r1;
    }

    public java.util.Set outEdges(java.lang.Object)
    {
        com.google.common.graph.NetworkConnections $r2;
        com.google.common.graph.StandardNetwork r0;
        java.util.Set $r3;
        java.lang.Object r1;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.NetworkConnections checkedConnections(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<com.google.common.graph.NetworkConnections: java.util.Set outEdges()>();

        return $r3;
    }

    public volatile java.lang.Iterable predecessors(java.lang.Object)
    {
        java.util.Set $r1;
        java.lang.Object $r2;
        com.google.common.graph.StandardNetwork r0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: java.util.Set predecessors(java.lang.Object)>($r2);

        return $r1;
    }

    public java.util.Set predecessors(java.lang.Object)
    {
        com.google.common.graph.NetworkConnections $r2;
        com.google.common.graph.StandardNetwork r0;
        java.util.Set $r3;
        java.lang.Object r1;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.NetworkConnections checkedConnections(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<com.google.common.graph.NetworkConnections: java.util.Set predecessors()>();

        return $r3;
    }

    public volatile java.lang.Iterable successors(java.lang.Object)
    {
        java.util.Set $r1;
        java.lang.Object $r2;
        com.google.common.graph.StandardNetwork r0;

        r0 := @this: com.google.common.graph.StandardNetwork;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: java.util.Set successors(java.lang.Object)>($r2);

        return $r1;
    }

    public java.util.Set successors(java.lang.Object)
    {
        com.google.common.graph.NetworkConnections $r2;
        com.google.common.graph.StandardNetwork r0;
        java.util.Set $r3;
        java.lang.Object r1;

        r0 := @this: com.google.common.graph.StandardNetwork;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.graph.StandardNetwork: com.google.common.graph.NetworkConnections checkedConnections(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<com.google.common.graph.NetworkConnections: java.util.Set successors()>();

        return $r3;
    }
}
