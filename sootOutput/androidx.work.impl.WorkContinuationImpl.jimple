public class androidx.work.impl.WorkContinuationImpl extends androidx.work.WorkContinuation
{
    private static final java.lang.String TAG;
    private final java.util.List mAllIds;
    private boolean mEnqueued;
    private final androidx.work.ExistingWorkPolicy mExistingWorkPolicy;
    private final java.util.List mIds;
    private final java.lang.String mName;
    private androidx.work.Operation mOperation;
    private final java.util.List mParents;
    private final java.util.List mWork;
    private final androidx.work.impl.WorkManagerImpl mWorkManagerImpl;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("WorkContinuationImpl");

        <androidx.work.impl.WorkContinuationImpl: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>(androidx.work.impl.WorkManagerImpl, java.lang.String, androidx.work.ExistingWorkPolicy, java.util.List)
    {
        java.util.List r4;
        androidx.work.ExistingWorkPolicy $r3;
        androidx.work.impl.WorkManagerImpl $r1;
        java.lang.String $r2;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        $r1 := @parameter0: androidx.work.impl.WorkManagerImpl;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: androidx.work.ExistingWorkPolicy;

        r4 := @parameter3: java.util.List;

        specialinvoke r0.<androidx.work.impl.WorkContinuationImpl: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List,java.util.List)>($r1, $r2, $r3, r4, null);

        return;
    }

    public void <init>(androidx.work.impl.WorkManagerImpl, java.lang.String, androidx.work.ExistingWorkPolicy, java.util.List, java.util.List)
    {
        java.util.Iterator $r8;
        androidx.work.WorkRequest r11;
        androidx.work.impl.WorkContinuationImpl r0, r10;
        java.util.ArrayList r6;
        java.util.List r4, r5, r7;
        androidx.work.ExistingWorkPolicy $r3;
        int $i0, $i1;
        androidx.work.impl.WorkManagerImpl $r1;
        java.lang.Object $r9;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        $r1 := @parameter0: androidx.work.impl.WorkManagerImpl;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: androidx.work.ExistingWorkPolicy;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.util.List;

        specialinvoke r0.<androidx.work.WorkContinuation: void <init>()>();

        r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl mWorkManagerImpl> = $r1;

        r0.<androidx.work.impl.WorkContinuationImpl: java.lang.String mName> = $r2;

        r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.ExistingWorkPolicy mExistingWorkPolicy> = $r3;

        r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mWork> = r4;

        r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mParents> = r5;

        r6 = new java.util.ArrayList;

        r7 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mWork>;

        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mIds> = r6;

        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mAllIds> = r6;

        if r5 == null goto label2;

        $r8 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (androidx.work.impl.WorkContinuationImpl) $r9;

        r7 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mAllIds>;

        r5 = r10.<androidx.work.impl.WorkContinuationImpl: java.util.List mAllIds>;

        interfaceinvoke r7.<java.util.List: boolean addAll(java.util.Collection)>(r5);

        goto label1;

     label2:
        $i0 = 0;

     label3:
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>($i0);

        r11 = (androidx.work.WorkRequest) $r9;

        $r2 = virtualinvoke r11.<androidx.work.WorkRequest: java.lang.String getStringId()>();

        r5 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mIds>;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        r5 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mAllIds>;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(androidx.work.impl.WorkManagerImpl, java.util.List)
    {
        java.util.List r2;
        androidx.work.ExistingWorkPolicy $r3;
        androidx.work.impl.WorkManagerImpl $r1;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        $r1 := @parameter0: androidx.work.impl.WorkManagerImpl;

        r2 := @parameter1: java.util.List;

        $r3 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy KEEP>;

        specialinvoke r0.<androidx.work.impl.WorkContinuationImpl: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List,java.util.List)>($r1, null, $r3, r2, null);

        return;
    }

    private static boolean hasCycles(androidx.work.impl.WorkContinuationImpl, java.util.Set)
    {
        java.util.Iterator $r4;
        java.util.Set r1, $r3;
        androidx.work.impl.WorkContinuationImpl $r0, r7;
        java.util.List $r2;
        java.lang.Object $r5;
        java.lang.String r6;
        boolean $z0;

        $r0 := @parameter0: androidx.work.impl.WorkContinuationImpl;

        r1 := @parameter1: java.util.Set;

        $r2 = virtualinvoke $r0.<androidx.work.impl.WorkContinuationImpl: java.util.List getIds()>();

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        $r3 = staticinvoke <androidx.work.impl.WorkContinuationImpl: java.util.Set prerequisitesFor(androidx.work.impl.WorkContinuationImpl)>($r0);

        $r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        $r2 = virtualinvoke $r0.<androidx.work.impl.WorkContinuationImpl: java.util.List getParents()>();

        if $r2 == null goto label4;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.work.impl.WorkContinuationImpl) $r5;

        $z0 = staticinvoke <androidx.work.impl.WorkContinuationImpl: boolean hasCycles(androidx.work.impl.WorkContinuationImpl,java.util.Set)>(r7, r1);

        if $z0 == 0 goto label3;

        return 1;

     label4:
        $r2 = virtualinvoke $r0.<androidx.work.impl.WorkContinuationImpl: java.util.List getIds()>();

        interfaceinvoke r1.<java.util.Set: boolean removeAll(java.util.Collection)>($r2);

        return 0;
    }

    public static java.util.Set prerequisitesFor(androidx.work.impl.WorkContinuationImpl)
    {
        java.util.HashSet r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        androidx.work.impl.WorkContinuationImpl $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.work.impl.WorkContinuationImpl;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        $r2 = virtualinvoke $r0.<androidx.work.impl.WorkContinuationImpl: java.util.List getParents()>();

        if $r2 == null goto label2;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (androidx.work.impl.WorkContinuationImpl) $r4;

        $r2 = virtualinvoke $r0.<androidx.work.impl.WorkContinuationImpl: java.util.List getIds()>();

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        goto label1;

     label2:
        return r1;
    }

    protected androidx.work.WorkContinuation combineInternal(java.util.List)
    {
        androidx.work.WorkRequest $r4;
        java.util.Iterator $r7;
        androidx.work.OneTimeWorkRequest$Builder r3;
        androidx.work.OneTimeWorkRequest r5;
        androidx.work.WorkContinuation r9;
        androidx.work.impl.WorkContinuationImpl r0, $r10;
        java.util.ArrayList r6;
        java.util.List r1;
        androidx.work.ExistingWorkPolicy $r2;
        int $i0;
        java.lang.Object $r8;
        androidx.work.impl.WorkManagerImpl $r11;
        boolean $z0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r1 := @parameter0: java.util.List;

        r3 = new androidx.work.OneTimeWorkRequest$Builder;

        specialinvoke r3.<androidx.work.OneTimeWorkRequest$Builder: void <init>(java.lang.Class)>(class "Landroidx/work/impl/workers/CombineContinuationsWorker;");

        r3 = virtualinvoke r3.<androidx.work.OneTimeWorkRequest$Builder: androidx.work.OneTimeWorkRequest$Builder setInputMerger(java.lang.Class)>(class "Landroidx/work/ArrayCreatingInputMerger;");

        $r4 = virtualinvoke r3.<androidx.work.OneTimeWorkRequest$Builder: androidx.work.WorkRequest build()>();

        r5 = (androidx.work.OneTimeWorkRequest) $r4;

        r6 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $r7 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (androidx.work.WorkContinuation) $r8;

        $r10 = (androidx.work.impl.WorkContinuationImpl) r9;

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r10 = new androidx.work.impl.WorkContinuationImpl;

        $r11 = r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl mWorkManagerImpl>;

        $r2 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy KEEP>;

        r1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r5);

        specialinvoke $r10.<androidx.work.impl.WorkContinuationImpl: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List,java.util.List)>($r11, null, $r2, r1, r6);

        return $r10;
    }

    public androidx.work.Operation enqueue()
    {
        androidx.work.impl.utils.EnqueueRunnable r1;
        java.lang.Object[] $r9;
        androidx.work.Operation $r4;
        androidx.work.impl.WorkContinuationImpl r0;
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r3;
        androidx.work.Logger $r5;
        java.util.List $r7;
        java.lang.Throwable[] $r10;
        androidx.work.impl.WorkManagerImpl $r2;
        java.lang.String $r6, $r8;
        boolean z0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        z0 = r0.<androidx.work.impl.WorkContinuationImpl: boolean mEnqueued>;

        if z0 != 0 goto label1;

        r1 = new androidx.work.impl.utils.EnqueueRunnable;

        specialinvoke r1.<androidx.work.impl.utils.EnqueueRunnable: void <init>(androidx.work.impl.WorkContinuationImpl)>(r0);

        $r2 = r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl mWorkManagerImpl>;

        $r3 = virtualinvoke $r2.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.utils.taskexecutor.TaskExecutor getWorkTaskExecutor()>();

        interfaceinvoke $r3.<androidx.work.impl.utils.taskexecutor.TaskExecutor: void executeOnBackgroundThread(java.lang.Runnable)>(r1);

        $r4 = virtualinvoke r1.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.Operation getOperation()>();

        r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.Operation mOperation> = $r4;

        goto label2;

     label1:
        $r5 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r6 = <androidx.work.impl.WorkContinuationImpl: java.lang.String TAG>;

        $r7 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mIds>;

        $r8 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", $r7);

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = $r8;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Already enqueued work ids (%s)", $r9);

        $r10 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r5.<androidx.work.Logger: void warning(java.lang.String,java.lang.String,java.lang.Throwable[])>($r6, $r8, $r10);

     label2:
        $r4 = r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.Operation mOperation>;

        return $r4;
    }

    public java.util.List getAllIds()
    {
        java.util.List r1;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r1 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mAllIds>;

        return r1;
    }

    public androidx.work.ExistingWorkPolicy getExistingWorkPolicy()
    {
        androidx.work.ExistingWorkPolicy r1;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r1 = r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.ExistingWorkPolicy mExistingWorkPolicy>;

        return r1;
    }

    public java.util.List getIds()
    {
        java.util.List r1;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r1 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mIds>;

        return r1;
    }

    public java.lang.String getName()
    {
        java.lang.String r1;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r1 = r0.<androidx.work.impl.WorkContinuationImpl: java.lang.String mName>;

        return r1;
    }

    public java.util.List getParents()
    {
        java.util.List r1;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r1 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mParents>;

        return r1;
    }

    public java.util.List getWork()
    {
        java.util.List r1;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r1 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mWork>;

        return r1;
    }

    public com.google.common.util.concurrent.ListenableFuture getWorkInfos()
    {
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r4;
        java.util.List $r2;
        com.google.common.util.concurrent.ListenableFuture $r5;
        androidx.work.impl.utils.StatusRunnable $r3;
        androidx.work.impl.WorkManagerImpl r1;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r1 = r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl mWorkManagerImpl>;

        $r2 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mAllIds>;

        $r3 = staticinvoke <androidx.work.impl.utils.StatusRunnable: androidx.work.impl.utils.StatusRunnable forStringIds(androidx.work.impl.WorkManagerImpl,java.util.List)>(r1, $r2);

        r1 = r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl mWorkManagerImpl>;

        $r4 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.utils.taskexecutor.TaskExecutor getWorkTaskExecutor()>();

        interfaceinvoke $r4.<androidx.work.impl.utils.taskexecutor.TaskExecutor: void executeOnBackgroundThread(java.lang.Runnable)>($r3);

        $r5 = virtualinvoke $r3.<androidx.work.impl.utils.StatusRunnable: com.google.common.util.concurrent.ListenableFuture getFuture()>();

        return $r5;
    }

    public androidx.lifecycle.LiveData getWorkInfosLiveData()
    {
        androidx.lifecycle.LiveData $r2;
        java.util.List $r1;
        androidx.work.impl.WorkManagerImpl $r3;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        $r3 = r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl mWorkManagerImpl>;

        $r1 = r0.<androidx.work.impl.WorkContinuationImpl: java.util.List mAllIds>;

        $r2 = virtualinvoke $r3.<androidx.work.impl.WorkManagerImpl: androidx.lifecycle.LiveData getWorkInfosById(java.util.List)>($r1);

        return $r2;
    }

    public androidx.work.impl.WorkManagerImpl getWorkManagerImpl()
    {
        androidx.work.impl.WorkManagerImpl r1;
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r1 = r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl mWorkManagerImpl>;

        return r1;
    }

    public boolean hasCycles()
    {
        java.util.HashSet $r1;
        androidx.work.impl.WorkContinuationImpl r0;
        boolean $z0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $z0 = staticinvoke <androidx.work.impl.WorkContinuationImpl: boolean hasCycles(androidx.work.impl.WorkContinuationImpl,java.util.Set)>(r0, $r1);

        return $z0;
    }

    public boolean isEnqueued()
    {
        androidx.work.impl.WorkContinuationImpl r0;
        boolean z0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        z0 = r0.<androidx.work.impl.WorkContinuationImpl: boolean mEnqueued>;

        return z0;
    }

    public void markEnqueued()
    {
        androidx.work.impl.WorkContinuationImpl r0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r0.<androidx.work.impl.WorkContinuationImpl: boolean mEnqueued> = 1;

        return;
    }

    public androidx.work.WorkContinuation then(java.util.List)
    {
        androidx.work.impl.WorkContinuationImpl r0, $r5;
        java.util.List r1, $r6;
        androidx.work.ExistingWorkPolicy $r4;
        androidx.work.impl.WorkManagerImpl $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: androidx.work.impl.WorkContinuationImpl;

        r1 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r5 = new androidx.work.impl.WorkContinuationImpl;

        $r2 = r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl mWorkManagerImpl>;

        $r3 = r0.<androidx.work.impl.WorkContinuationImpl: java.lang.String mName>;

        $r4 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy KEEP>;

        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r0);

        specialinvoke $r5.<androidx.work.impl.WorkContinuationImpl: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List,java.util.List)>($r2, $r3, $r4, r1, $r6);

        return $r5;
    }
}
