final class com.google.common.collect.Collections2$PermutationCollection extends java.util.AbstractCollection
{
    final com.google.common.collect.ImmutableList inputList;

    void <init>(com.google.common.collect.ImmutableList)
    {
        com.google.common.collect.ImmutableList r1;
        com.google.common.collect.Collections2$PermutationCollection r0;

        r0 := @this: com.google.common.collect.Collections2$PermutationCollection;

        r1 := @parameter0: com.google.common.collect.ImmutableList;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        r0.<com.google.common.collect.Collections2$PermutationCollection: com.google.common.collect.ImmutableList inputList> = r1;

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.List r2;
        com.google.common.collect.ImmutableList $r3;
        java.lang.Object $r1;
        com.google.common.collect.Collections2$PermutationCollection r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Collections2$PermutationCollection;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.List;

        if $z0 == 0 goto label1;

        r2 = (java.util.List) $r1;

        $r3 = r0.<com.google.common.collect.Collections2$PermutationCollection: com.google.common.collect.ImmutableList inputList>;

        $z0 = staticinvoke <com.google.common.collect.Collections2: boolean access$000(java.util.List,java.util.List)>($r3, r2);

        return $z0;

     label1:
        return 0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Collections2$PermutationCollection r0;

        r0 := @this: com.google.common.collect.Collections2$PermutationCollection;

        return 0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.Collections2$PermutationIterator $r1;
        com.google.common.collect.ImmutableList $r2;
        com.google.common.collect.Collections2$PermutationCollection r0;

        r0 := @this: com.google.common.collect.Collections2$PermutationCollection;

        $r1 = new com.google.common.collect.Collections2$PermutationIterator;

        $r2 = r0.<com.google.common.collect.Collections2$PermutationCollection: com.google.common.collect.ImmutableList inputList>;

        specialinvoke $r1.<com.google.common.collect.Collections2$PermutationIterator: void <init>(java.util.List)>($r2);

        return $r1;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.Collections2$PermutationCollection r0;

        r0 := @this: com.google.common.collect.Collections2$PermutationCollection;

        $r1 = r0.<com.google.common.collect.Collections2$PermutationCollection: com.google.common.collect.ImmutableList inputList>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int size()>();

        $i0 = staticinvoke <com.google.common.math.IntMath: int factorial(int)>($i0);

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.ImmutableList $r2;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r4;
        com.google.common.collect.Collections2$PermutationCollection r0;

        r0 := @this: com.google.common.collect.Collections2$PermutationCollection;

        $r2 = r0.<com.google.common.collect.Collections2$PermutationCollection: com.google.common.collect.ImmutableList inputList>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + 14;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("permutations(");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
