public final class com.google.common.net.HostAndPort extends java.lang.Object implements java.io.Serializable
{
    private static final int NO_PORT;
    private static final long serialVersionUID;
    private final boolean hasBracketlessColons;
    private final java.lang.String host;
    private final int port;

    private void <init>(java.lang.String, int, boolean)
    {
        int $i0;
        java.lang.String $r1;
        com.google.common.net.HostAndPort r0;
        boolean $z0;

        r0 := @this: com.google.common.net.HostAndPort;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.net.HostAndPort: java.lang.String host> = $r1;

        r0.<com.google.common.net.HostAndPort: int port> = $i0;

        r0.<com.google.common.net.HostAndPort: boolean hasBracketlessColons> = $z0;

        return;
    }

    public static com.google.common.net.HostAndPort fromHost(java.lang.String)
    {
        java.lang.String $r0;
        com.google.common.net.HostAndPort $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<com.google.common.net.HostAndPort: boolean hasPort()>();

        $z0 = $z0 ^ 1;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Host has a port: %s", $r0);

        return $r1;
    }

    public static com.google.common.net.HostAndPort fromParts(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;
        com.google.common.net.HostAndPort $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 = staticinvoke <com.google.common.net.HostAndPort: boolean isValidPort(int)>($i0);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>($z0, "Port out of range: %s", $i0);

        $r1 = staticinvoke <com.google.common.net.HostAndPort: com.google.common.net.HostAndPort fromString(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<com.google.common.net.HostAndPort: boolean hasPort()>();

        $z0 = $z0 ^ 1;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Host has a port: %s", $r0);

        $r2 = new com.google.common.net.HostAndPort;

        $r0 = $r1.<com.google.common.net.HostAndPort: java.lang.String host>;

        $z0 = $r1.<com.google.common.net.HostAndPort: boolean hasBracketlessColons>;

        specialinvoke $r2.<com.google.common.net.HostAndPort: void <init>(java.lang.String,int,boolean)>($r0, $i0, $z0);

        return $r2;
    }

    public static com.google.common.net.HostAndPort fromString(java.lang.String)
    {
        com.google.common.base.CharMatcher $r4;
        java.lang.String[] $r2;
        java.lang.NumberFormatException r5;
        java.lang.IllegalArgumentException $r6;
        com.google.common.net.HostAndPort $r7;
        int $i0, $i1;
        java.lang.String $r0, r1, r3;
        boolean z0, $z1, z2;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        r1 = null;

        z0 = 0;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        z2 = 0;

        if $z1 == 0 goto label01;

        $r2 = staticinvoke <com.google.common.net.HostAndPort: java.lang.String[] getHostAndPortFromBracketedHost(java.lang.String)>($r0);

        r3 = $r2[0];

        r1 = $r2[1];

        goto label05;

     label01:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(58);

        if $i0 < 0 goto label02;

        $i1 = $i0 + 1;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(58, $i1);

        if $i1 != -1 goto label02;

        r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        goto label05;

     label02:
        if $i0 < 0 goto label03;

        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        r3 = $r0;

     label05:
        $i0 = -1;

        $z1 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r1);

        if $z1 != 0 goto label12;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z1 != 0 goto label06;

        $r4 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher ascii()>();

        $z1 = virtualinvoke $r4.<com.google.common.base.CharMatcher: boolean matchesAllOf(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label06;

        z2 = 1;

     label06:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>(z2, "Unparseable port number: %s", $r0);

     label07:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label08:
        $i0 = $i1;

        z2 = staticinvoke <com.google.common.net.HostAndPort: boolean isValidPort(int)>($i1);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>(z2, "Port number out of range: %s", $r0);

        goto label12;

     label09:
        r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r0 = "Unparseable port number: ";

        if $i0 == 0 goto label10;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String concat(java.lang.String)>(r1);

        goto label11;

     label10:
        r1 = new java.lang.String;

        $r0 = r1;

        specialinvoke r1.<java.lang.String: void <init>(java.lang.String)>("Unparseable port number: ");

     label11:
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r6;

     label12:
        $r7 = new com.google.common.net.HostAndPort;

        specialinvoke $r7.<com.google.common.net.HostAndPort: void <init>(java.lang.String,int,boolean)>(r3, $i0, z0);

        return $r7;

        catch java.lang.NumberFormatException from label07 to label08 with label09;
    }

    private static java.lang.String[] getHostAndPortFromBracketedHost(java.lang.String)
    {
        char $c0;
        java.lang.String[] $r2;
        int $i1, $i2, $i3;
        java.lang.String $r0, $r1;
        boolean z0, $z1;

        $r0 := @parameter0: java.lang.String;

        z0 = 0;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c0;

        if $i2 != 91 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z1, "Bracketed host-port string must start with a bracket: %s", $r0);

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(58);

        $i2 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(93);

        if $i1 <= -1 goto label3;

        if $i2 <= $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z1, "Invalid bracketed host/port: %s", $r0);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

        $i1 = $i2 + 1;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 != $i3 goto label5;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = $r1;

        $r2[1] = "";

        return $r2;

     label5:
        $i1 = $i2 + 1;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c0;

        if $i1 != 58 goto label6;

        z0 = 1;

     label6:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>(z0, "Only a colon may follow a close bracket: %s", $r0);

        $i1 = $i2 + 2;

     label7:
        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i3 goto label8;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>(z0, "Port must be numeric: %s", $r0);

        $i1 = $i1 + 1;

        goto label7;

     label8:
        $i2 = $i2 + 2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i2);

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = $r1;

        $r2[1] = $r0;

        return $r2;
    }

    private static boolean isValidPort(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        if $i0 > 65535 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.net.HostAndPort r0, r2;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: com.google.common.net.HostAndPort;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.common.net.HostAndPort;

        if $z0 == 0 goto label2;

        r2 = (com.google.common.net.HostAndPort) $r1;

        $r3 = r0.<com.google.common.net.HostAndPort: java.lang.String host>;

        $r4 = r2.<com.google.common.net.HostAndPort: java.lang.String host>;

        $z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label2;

        $i0 = r0.<com.google.common.net.HostAndPort: int port>;

        $i1 = r2.<com.google.common.net.HostAndPort: int port>;

        if $i0 != $i1 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.String getHost()
    {
        java.lang.String r1;
        com.google.common.net.HostAndPort r0;

        r0 := @this: com.google.common.net.HostAndPort;

        r1 = r0.<com.google.common.net.HostAndPort: java.lang.String host>;

        return r1;
    }

    public int getPort()
    {
        int i0;
        com.google.common.net.HostAndPort r0;
        boolean $z0;

        r0 := @this: com.google.common.net.HostAndPort;

        $z0 = virtualinvoke r0.<com.google.common.net.HostAndPort: boolean hasPort()>();

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        i0 = r0.<com.google.common.net.HostAndPort: int port>;

        return i0;
    }

    public int getPortOrDefault(int)
    {
        int $i0;
        com.google.common.net.HostAndPort r0;
        boolean $z0;

        r0 := @this: com.google.common.net.HostAndPort;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.google.common.net.HostAndPort: boolean hasPort()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<com.google.common.net.HostAndPort: int port>;

     label1:
        return $i0;
    }

    public boolean hasPort()
    {
        int $i0;
        com.google.common.net.HostAndPort r0;

        r0 := @this: com.google.common.net.HostAndPort;

        $i0 = r0.<com.google.common.net.HostAndPort: int port>;

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        java.lang.Object[] $r3;
        int $i0;
        java.lang.String $r1;
        com.google.common.net.HostAndPort r0;
        java.lang.Integer $r2;

        r0 := @this: com.google.common.net.HostAndPort;

        $r1 = r0.<com.google.common.net.HostAndPort: java.lang.String host>;

        $i0 = r0.<com.google.common.net.HostAndPort: int port>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r1;

        $r3[1] = $r2;

        $i0 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r3);

        return $i0;
    }

    public com.google.common.net.HostAndPort requireBracketsForIPv6()
    {
        java.lang.String $r1;
        com.google.common.net.HostAndPort r0;
        boolean $z0;

        r0 := @this: com.google.common.net.HostAndPort;

        $z0 = r0.<com.google.common.net.HostAndPort: boolean hasBracketlessColons>;

        $z0 = $z0 ^ 1;

        $r1 = r0.<com.google.common.net.HostAndPort: java.lang.String host>;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>($z0, "Possible bracketless IPv6 literal: %s", $r1);

        return r0;
    }

    public java.lang.String toString()
    {
        int $i0;
        java.lang.StringBuilder r1, $r3;
        java.lang.String $r2;
        com.google.common.net.HostAndPort r0;
        boolean $z0;

        r0 := @this: com.google.common.net.HostAndPort;

        r1 = new java.lang.StringBuilder;

        $r2 = r0.<com.google.common.net.HostAndPort: java.lang.String host>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + 8;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r2 = r0.<com.google.common.net.HostAndPort: java.lang.String host>;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(58);

        if $i0 < 0 goto label1;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r2 = r0.<com.google.common.net.HostAndPort: java.lang.String host>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        goto label2;

     label1:
        $r2 = r0.<com.google.common.net.HostAndPort: java.lang.String host>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label2:
        $z0 = virtualinvoke r0.<com.google.common.net.HostAndPort: boolean hasPort()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i0 = r0.<com.google.common.net.HostAndPort: int port>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

     label3:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public com.google.common.net.HostAndPort withDefaultPort(int)
    {
        int $i0;
        java.lang.String $r1;
        com.google.common.net.HostAndPort r0, $r2;
        boolean $z0;

        r0 := @this: com.google.common.net.HostAndPort;

        $i0 := @parameter0: int;

        $z0 = staticinvoke <com.google.common.net.HostAndPort: boolean isValidPort(int)>($i0);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $z0 = virtualinvoke r0.<com.google.common.net.HostAndPort: boolean hasPort()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = new com.google.common.net.HostAndPort;

        $r1 = r0.<com.google.common.net.HostAndPort: java.lang.String host>;

        $z0 = r0.<com.google.common.net.HostAndPort: boolean hasBracketlessColons>;

        specialinvoke $r2.<com.google.common.net.HostAndPort: void <init>(java.lang.String,int,boolean)>($r1, $i0, $z0);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.google.common.net.HostAndPort: int NO_PORT> = -1;

        return;
    }
}
