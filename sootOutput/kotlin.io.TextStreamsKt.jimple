public final class kotlin.io.TextStreamsKt extends java.lang.Object
{

    private static final java.io.BufferedReader buffered(java.io.Reader, int)
    {
        int $i0;
        java.io.Reader $r0;
        java.io.BufferedReader $r1;
        boolean $z0;

        $r0 := @parameter0: java.io.Reader;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.io.BufferedReader;

        if $z0 == 0 goto label1;

        $r1 = (java.io.BufferedReader) $r0;

        return $r1;

     label1:
        $r1 = new java.io.BufferedReader;

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r0, $i0);

        return $r1;
    }

    private static final java.io.BufferedWriter buffered(java.io.Writer, int)
    {
        java.io.BufferedWriter $r1;
        java.io.Writer $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.io.Writer;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.io.BufferedWriter;

        if $z0 == 0 goto label1;

        $r1 = (java.io.BufferedWriter) $r0;

        return $r1;

     label1:
        $r1 = new java.io.BufferedWriter;

        specialinvoke $r1.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r0, $i0);

        return $r1;
    }

    static java.io.BufferedReader buffered$default(java.io.Reader, int, int, java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object $r1;
        java.io.Reader $r0;
        java.io.BufferedReader $r2;
        boolean $z0;

        $r0 := @parameter0: java.io.Reader;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.Object;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label1;

        $i0 = 8192;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.io.BufferedReader;

        if $z0 == 0 goto label2;

        $r2 = (java.io.BufferedReader) $r0;

        return $r2;

     label2:
        $r2 = new java.io.BufferedReader;

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r0, $i0);

        return $r2;
    }

    static java.io.BufferedWriter buffered$default(java.io.Writer, int, int, java.lang.Object)
    {
        java.io.BufferedWriter $r2;
        java.io.Writer $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: java.io.Writer;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.Object;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label1;

        $i0 = 8192;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.io.BufferedWriter;

        if $z0 == 0 goto label2;

        $r2 = (java.io.BufferedWriter) $r0;

        return $r2;

     label2:
        $r2 = new java.io.BufferedWriter;

        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r0, $i0);

        return $r2;
    }

    public static final long copyTo(java.io.Reader, java.io.Writer, int)
    {
        java.io.Writer $r1;
        int $i0;
        char[] r2;
        long l1, $l2;
        java.io.Reader $r0;

        $r0 := @parameter0: java.io.Reader;

        $r1 := @parameter1: java.io.Writer;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "out");

        l1 = 0L;

        r2 = newarray (char)[$i0];

        $i0 = virtualinvoke $r0.<java.io.Reader: int read(char[])>(r2);

     label1:
        if $i0 < 0 goto label2;

        virtualinvoke $r1.<java.io.Writer: void write(char[],int,int)>(r2, 0, $i0);

        $l2 = (long) $i0;

        l1 = l1 + $l2;

        $i0 = virtualinvoke $r0.<java.io.Reader: int read(char[])>(r2);

        goto label1;

     label2:
        return l1;
    }

    public static long copyTo$default(java.io.Reader, java.io.Writer, int, int, java.lang.Object)
    {
        java.io.Writer $r0;
        int $i1, $i2;
        java.lang.Object $r1;
        long $l0;
        java.io.Reader $r2;

        $r2 := @parameter0: java.io.Reader;

        $r0 := @parameter1: java.io.Writer;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i2 = $i2 & 2;

        if $i2 == 0 goto label1;

        $i1 = 8192;

     label1:
        $l0 = staticinvoke <kotlin.io.TextStreamsKt: long copyTo(java.io.Reader,java.io.Writer,int)>($r2, $r0, $i1);

        return $l0;
    }

    public static final void forEachLine(java.io.Reader, kotlin.jvm.functions.Function1)
    {
        java.lang.Throwable r8, $r9;
        java.util.Iterator $r5;
        kotlin.sequences.Sequence $r4;
        kotlin.jvm.functions.Function1 r1;
        java.io.Reader $r0;
        kotlin.Unit r7;
        java.io.Closeable $r3;
        java.lang.Object $r6;
        java.io.BufferedReader $r2;
        boolean $z0;

        $r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "action");

        $z0 = $r0 instanceof java.io.BufferedReader;

        if $z0 == 0 goto label01;

        $r2 = (java.io.BufferedReader) $r0;

        goto label02;

     label01:
        $r2 = new java.io.BufferedReader;

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r0, 8192);

     label02:
        $r3 = (java.io.Closeable) $r2;

     label03:
        $r2 = (java.io.BufferedReader) $r3;

        $r4 = staticinvoke <kotlin.io.TextStreamsKt: kotlin.sequences.Sequence lineSequence(java.io.BufferedReader)>($r2);

        $r5 = interfaceinvoke $r4.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $z0 == 0 goto label08;

     label06:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

     label07:
        goto label04;

     label08:
        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label09:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r3, null);

        return;

     label10:
        r8 := @caughtexception;

     label11:
        throw r8;

     label12:
        $r9 := @caughtexception;

        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r3, r8);

        throw $r9;

        catch java.lang.Throwable from label03 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public static final kotlin.sequences.Sequence lineSequence(java.io.BufferedReader)
    {
        kotlin.io.LinesSequence $r2;
        java.io.BufferedReader $r0;
        kotlin.sequences.Sequence $r1;

        $r0 := @parameter0: java.io.BufferedReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.io.LinesSequence;

        specialinvoke $r2.<kotlin.io.LinesSequence: void <init>(java.io.BufferedReader)>($r0);

        $r1 = (kotlin.sequences.Sequence) $r2;

        $r1 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence)>($r1);

        return $r1;
    }

    public static final byte[] readBytes(java.net.URL)
    {
        java.lang.Throwable r4, $r5;
        byte[] $r3;
        java.net.URL $r0;
        java.io.Closeable $r2;
        java.io.InputStream $r1;

        $r0 := @parameter0: java.net.URL;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<java.net.URL: java.io.InputStream openStream()>();

        $r2 = (java.io.Closeable) $r1;

     label1:
        $r1 = (java.io.InputStream) $r2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "it");

        $r3 = staticinvoke <kotlin.io.ByteStreamsKt: byte[] readBytes(java.io.InputStream)>($r1);

     label2:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r2, null);

        return $r3;

     label3:
        r4 := @caughtexception;

     label4:
        throw r4;

     label5:
        $r5 := @caughtexception;

        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r2, r4);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public static final java.util.List readLines(java.io.Reader)
    {
        java.util.List $r4;
        kotlin.io.TextStreamsKt$readLines$1 $r2;
        kotlin.jvm.functions.Function1 $r3;
        java.io.Reader $r0;
        java.util.ArrayList r1;

        $r0 := @parameter0: java.io.Reader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = new kotlin.io.TextStreamsKt$readLines$1;

        specialinvoke $r2.<kotlin.io.TextStreamsKt$readLines$1: void <init>(java.util.ArrayList)>(r1);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        staticinvoke <kotlin.io.TextStreamsKt: void forEachLine(java.io.Reader,kotlin.jvm.functions.Function1)>($r0, $r3);

        $r4 = (java.util.List) r1;

        return $r4;
    }

    public static final java.lang.String readText(java.io.Reader)
    {
        java.io.StringWriter r2;
        java.io.Writer $r3;
        java.io.Reader $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.io.Reader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r2 = new java.io.StringWriter;

        specialinvoke r2.<java.io.StringWriter: void <init>()>();

        $r3 = (java.io.Writer) r2;

        staticinvoke <kotlin.io.TextStreamsKt: long copyTo$default(java.io.Reader,java.io.Writer,int,int,java.lang.Object)>($r0, $r3, 0, 2, null);

        $r1 = virtualinvoke r2.<java.io.StringWriter: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "buffer.toString()");

        return $r1;
    }

    private static final java.lang.String readText(java.net.URL, java.nio.charset.Charset)
    {
        byte[] $r3;
        java.nio.charset.Charset $r1;
        java.net.URL $r0;
        java.lang.String $r2;

        $r0 := @parameter0: java.net.URL;

        $r1 := @parameter1: java.nio.charset.Charset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "charset");

        $r3 = staticinvoke <kotlin.io.TextStreamsKt: byte[] readBytes(java.net.URL)>($r0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r3, $r1);

        return $r2;
    }

    static java.lang.String readText$default(java.net.URL, java.nio.charset.Charset, int, java.lang.Object)
    {
        byte[] $r1;
        java.nio.charset.Charset $r2;
        java.net.URL $r0;
        int $i0;
        java.lang.Object $r3;
        java.lang.String $r4;

        $r0 := @parameter0: java.net.URL;

        $r2 := @parameter1: java.nio.charset.Charset;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "charset");

        $r1 = staticinvoke <kotlin.io.TextStreamsKt: byte[] readBytes(java.net.URL)>($r0);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r1, $r2);

        return $r4;
    }

    private static final java.io.StringReader reader(java.lang.String)
    {
        java.lang.String $r0;
        java.io.StringReader $r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>($r0);

        return $r1;
    }

    public static final java.lang.Object useLines(java.io.Reader, kotlin.jvm.functions.Function1)
    {
        java.lang.Throwable r6, $r7;
        kotlin.sequences.Sequence $r4;
        kotlin.jvm.functions.Function1 r1;
        java.io.Reader $r0;
        java.io.Closeable $r3;
        java.lang.Object $r5;
        java.io.BufferedReader $r2;
        boolean $z0;

        $r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $z0 = $r0 instanceof java.io.BufferedReader;

        if $z0 == 0 goto label1;

        $r2 = (java.io.BufferedReader) $r0;

        goto label2;

     label1:
        $r2 = new java.io.BufferedReader;

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r0, 8192);

     label2:
        $r3 = (java.io.Closeable) $r2;

     label3:
        $r2 = (java.io.BufferedReader) $r3;

        $r4 = staticinvoke <kotlin.io.TextStreamsKt: kotlin.sequences.Sequence lineSequence(java.io.BufferedReader)>($r2);

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r3, null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return $r5;

     label5:
        r6 := @caughtexception;

     label6:
        throw r6;

     label7:
        $r7 := @caughtexception;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r3, r6);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw $r7;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label7;
    }
}
