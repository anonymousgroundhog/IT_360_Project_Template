public class kotlinx.coroutines.selects.UnbiasedSelectImplementation extends kotlinx.coroutines.selects.SelectImplementation
{
    private final java.util.List clausesToRegister;

    public void <init>(kotlin.coroutines.CoroutineContext)
    {
        java.util.List $r3;
        kotlinx.coroutines.selects.UnbiasedSelectImplementation r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.util.ArrayList $r2;

        r0 := @this: kotlinx.coroutines.selects.UnbiasedSelectImplementation;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        specialinvoke r0.<kotlinx.coroutines.selects.SelectImplementation: void <init>(kotlin.coroutines.CoroutineContext)>($r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = (java.util.List) $r2;

        r0.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.util.List clausesToRegister> = $r3;

        return;
    }

    static java.lang.Object doSelect$suspendImpl(kotlinx.coroutines.selects.UnbiasedSelectImplementation, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.selects.UnbiasedSelectImplementation $r0;

        $r0 := @parameter0: kotlinx.coroutines.selects.UnbiasedSelectImplementation;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        specialinvoke $r0.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: void shuffleAndRegisterClauses()>();

        $r2 = specialinvoke $r0.<kotlinx.coroutines.selects.SelectImplementation: java.lang.Object doSelect(kotlin.coroutines.Continuation)>($r1);

        return $r2;
    }

    private final void shuffleAndRegisterClauses()
    {
        java.lang.Throwable $r7;
        kotlinx.coroutines.selects.UnbiasedSelectImplementation r0;
        java.util.Iterator $r3;
        java.lang.Iterable $r2;
        java.util.List $r1;
        kotlinx.coroutines.selects.SelectImplementation$ClauseData r5;
        java.lang.Object $r4;
        kotlinx.coroutines.selects.SelectImplementation $r6;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.selects.UnbiasedSelectImplementation;

     label1:
        $r1 = r0.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.util.List clausesToRegister>;

        staticinvoke <java.util.Collections: void shuffle(java.util.List)>($r1);

        $r1 = r0.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.util.List clausesToRegister>;

        $r2 = (java.lang.Iterable) $r1;

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label6;

     label4:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (kotlinx.coroutines.selects.SelectImplementation$ClauseData) $r4;

        $r6 = (kotlinx.coroutines.selects.SelectImplementation) r0;

        staticinvoke <kotlinx.coroutines.selects.SelectImplementation: void register$default(kotlinx.coroutines.selects.SelectImplementation,kotlinx.coroutines.selects.SelectImplementation$ClauseData,boolean,int,java.lang.Object)>($r6, r5, 0, 1, null);

     label5:
        goto label2;

     label6:
        $r1 = r0.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.util.List clausesToRegister>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;

     label7:
        $r7 := @caughtexception;

        $r1 = r0.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.util.List clausesToRegister>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public java.lang.Object doSelect(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.selects.UnbiasedSelectImplementation r0;

        r0 := @this: kotlinx.coroutines.selects.UnbiasedSelectImplementation;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = staticinvoke <kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.lang.Object doSelect$suspendImpl(kotlinx.coroutines.selects.UnbiasedSelectImplementation,kotlin.coroutines.Continuation)>(r0, $r1);

        return $r2;
    }

    public void invoke(kotlinx.coroutines.selects.SelectClause0, kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.internal.Symbol $r10;
        kotlinx.coroutines.selects.UnbiasedSelectImplementation r0;
        java.util.Collection $r5;
        kotlin.jvm.functions.Function3 $r8, $r9, $r11;
        kotlin.jvm.functions.Function1 $r2;
        java.util.List $r4;
        kotlinx.coroutines.selects.SelectImplementation$ClauseData $r3;
        java.lang.Object $r7;
        kotlinx.coroutines.selects.SelectImplementation $r6;
        kotlinx.coroutines.selects.SelectClause0 $r1;

        r0 := @this: kotlinx.coroutines.selects.UnbiasedSelectImplementation;

        $r1 := @parameter0: kotlinx.coroutines.selects.SelectClause0;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        $r4 = r0.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.util.List clausesToRegister>;

        $r5 = (java.util.Collection) $r4;

        $r3 = new kotlinx.coroutines.selects.SelectImplementation$ClauseData;

        $r6 = (kotlinx.coroutines.selects.SelectImplementation) r0;

        $r7 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause0: java.lang.Object getClauseObject()>();

        $r8 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause0: kotlin.jvm.functions.Function3 getRegFunc()>();

        $r9 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause0: kotlin.jvm.functions.Function3 getProcessResFunc()>();

        $r10 = staticinvoke <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol getPARAM_CLAUSE_0()>();

        $r11 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause0: kotlin.jvm.functions.Function3 getOnCancellationConstructor()>();

        specialinvoke $r3.<kotlinx.coroutines.selects.SelectImplementation$ClauseData: void <init>(kotlinx.coroutines.selects.SelectImplementation,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function3)>($r6, $r7, $r8, $r9, $r10, $r2, $r11);

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void invoke(kotlinx.coroutines.selects.SelectClause1, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.selects.UnbiasedSelectImplementation r0;
        java.util.Collection $r5;
        kotlin.jvm.functions.Function3 $r8, $r9, $r10;
        kotlin.jvm.functions.Function2 $r2;
        java.util.List $r4;
        kotlinx.coroutines.selects.SelectImplementation$ClauseData $r3;
        java.lang.Object $r7;
        kotlinx.coroutines.selects.SelectImplementation $r6;
        kotlinx.coroutines.selects.SelectClause1 $r1;

        r0 := @this: kotlinx.coroutines.selects.UnbiasedSelectImplementation;

        $r1 := @parameter0: kotlinx.coroutines.selects.SelectClause1;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r4 = r0.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.util.List clausesToRegister>;

        $r5 = (java.util.Collection) $r4;

        $r3 = new kotlinx.coroutines.selects.SelectImplementation$ClauseData;

        $r6 = (kotlinx.coroutines.selects.SelectImplementation) r0;

        $r7 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause1: java.lang.Object getClauseObject()>();

        $r8 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause1: kotlin.jvm.functions.Function3 getRegFunc()>();

        $r9 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause1: kotlin.jvm.functions.Function3 getProcessResFunc()>();

        $r10 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause1: kotlin.jvm.functions.Function3 getOnCancellationConstructor()>();

        specialinvoke $r3.<kotlinx.coroutines.selects.SelectImplementation$ClauseData: void <init>(kotlinx.coroutines.selects.SelectImplementation,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function3)>($r6, $r7, $r8, $r9, null, $r2, $r10);

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void invoke(kotlinx.coroutines.selects.SelectClause2, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.selects.UnbiasedSelectImplementation r0;
        java.util.Collection $r6;
        kotlin.jvm.functions.Function3 $r9, $r10, $r11;
        kotlin.jvm.functions.Function2 $r3;
        java.util.List $r5;
        kotlinx.coroutines.selects.SelectImplementation$ClauseData $r4;
        kotlinx.coroutines.selects.SelectClause2 $r1;
        java.lang.Object $r2, $r8;
        kotlinx.coroutines.selects.SelectImplementation $r7;

        r0 := @this: kotlinx.coroutines.selects.UnbiasedSelectImplementation;

        $r1 := @parameter0: kotlinx.coroutines.selects.SelectClause2;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: kotlin.jvm.functions.Function2;

        $r5 = r0.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.util.List clausesToRegister>;

        $r6 = (java.util.Collection) $r5;

        $r4 = new kotlinx.coroutines.selects.SelectImplementation$ClauseData;

        $r7 = (kotlinx.coroutines.selects.SelectImplementation) r0;

        $r8 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause2: java.lang.Object getClauseObject()>();

        $r9 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause2: kotlin.jvm.functions.Function3 getRegFunc()>();

        $r10 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause2: kotlin.jvm.functions.Function3 getProcessResFunc()>();

        $r11 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectClause2: kotlin.jvm.functions.Function3 getOnCancellationConstructor()>();

        specialinvoke $r4.<kotlinx.coroutines.selects.SelectImplementation$ClauseData: void <init>(kotlinx.coroutines.selects.SelectImplementation,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function3)>($r7, $r8, $r9, $r10, $r2, $r3, $r11);

        interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        return;
    }
}
