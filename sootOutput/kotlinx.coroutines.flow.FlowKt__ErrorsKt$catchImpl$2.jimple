final class kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlinx.coroutines.flow.FlowCollector $collector;
    final kotlin.jvm.internal.Ref$ObjectRef $fromDownstream;

    void <init>(kotlinx.coroutines.flow.FlowCollector, kotlin.jvm.internal.Ref$ObjectRef)
    {
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlin.jvm.internal.Ref$ObjectRef $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.jvm.internal.Ref$ObjectRef;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: kotlinx.coroutines.flow.FlowCollector $collector> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: kotlin.jvm.internal.Ref$ObjectRef $fromDownstream> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        java.lang.Throwable r7;
        java.lang.IllegalStateException r6;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1 $r3;
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2 r0;
        kotlin.Unit r10;
        kotlinx.coroutines.flow.FlowCollector $r8;
        int i0;
        java.lang.Object r1, $r4, $r5;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef r9;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1;

        if $z0 == 0 goto label01;

        $r3 = (kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1) $r2;

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: int label>;

        i0 = i0 & -2147483648;

        if i0 == 0 goto label01;

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: int label>;

        i0 = i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: int label> = i0;

        goto label02;

     label01:
        $r3 = new kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: void <init>(kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2,kotlin.coroutines.Continuation)>(r0, $r2);

     label02:
        $r4 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label08;
            case 1: goto label04;
            default: goto label03;
        };

     label03:
        r6 = new java.lang.IllegalStateException;

        specialinvoke r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r6;

     label04:
        r1 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object L$0>;

        r0 = (kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2) r1;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label06:
        goto label11;

     label07:
        r7 := @caughtexception;

        goto label13;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label09:
        $r8 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: kotlinx.coroutines.flow.FlowCollector $collector>;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object L$0> = r0;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: int label> = 1;

        r1 = interfaceinvoke $r8.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r3);

     label10:
        if r1 != $r5 goto label11;

        return $r5;

     label11:
        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r10;

     label12:
        r7 := @caughtexception;

     label13:
        r9 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: kotlin.jvm.internal.Ref$ObjectRef $fromDownstream>;

        r9.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r7;

        throw r7;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label12;
    }
}
