final class com.google.common.util.concurrent.SequentialExecutor$QueueWorker extends java.lang.Object implements java.lang.Runnable
{
    java.lang.Runnable task;
    final com.google.common.util.concurrent.SequentialExecutor this$0;

    private void <init>(com.google.common.util.concurrent.SequentialExecutor)
    {
        com.google.common.util.concurrent.SequentialExecutor$QueueWorker r0;
        com.google.common.util.concurrent.SequentialExecutor $r1;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$QueueWorker;

        $r1 := @parameter0: com.google.common.util.concurrent.SequentialExecutor;

        r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.google.common.util.concurrent.SequentialExecutor, com.google.common.util.concurrent.SequentialExecutor$1)
    {
        com.google.common.util.concurrent.SequentialExecutor$QueueWorker r0;
        com.google.common.util.concurrent.SequentialExecutor $r1;
        com.google.common.util.concurrent.SequentialExecutor$1 $r2;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$QueueWorker;

        $r1 := @parameter0: com.google.common.util.concurrent.SequentialExecutor;

        $r2 := @parameter1: com.google.common.util.concurrent.SequentialExecutor$1;

        specialinvoke r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: void <init>(com.google.common.util.concurrent.SequentialExecutor)>($r1);

        return;
    }

    private void workOnQueue()
    {
        java.lang.Throwable r11, r16, $r17;
        java.util.Deque $r4, $r8;
        java.lang.Runnable r10;
        java.util.logging.Level $r1;
        java.lang.Thread $r7;
        int $i0;
        com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState $r5, $r6;
        com.google.common.util.concurrent.SequentialExecutor$QueueWorker r0;
        java.lang.String $r14, $r15;
        boolean z0, z1, $z2;
        com.google.common.util.concurrent.SequentialExecutor $r3;
        java.lang.RuntimeException r12;
        java.util.logging.Logger $r13;
        java.lang.StringBuilder $r2;
        java.lang.Object $r9;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$QueueWorker;

        z0 = 0;

        z1 = 0;

     label01:
        $r3 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r4 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor: java.util.Deque access$100(com.google.common.util.concurrent.SequentialExecutor)>($r3);

        entermonitor $r4;

     label02:
        if z1 != 0 goto label06;

     label03:
        $r3 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r5 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState access$200(com.google.common.util.concurrent.SequentialExecutor)>($r3);

        $r6 = <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState RUNNING>;

        if $r5 != $r6 goto label05;

        exitmonitor $r4;

     label04:
        if z0 == 0 goto label27;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

        return;

     label05:
        $r3 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        staticinvoke <com.google.common.util.concurrent.SequentialExecutor: long access$308(com.google.common.util.concurrent.SequentialExecutor)>($r3);

        $r3 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r5 = <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState RUNNING>;

        staticinvoke <com.google.common.util.concurrent.SequentialExecutor: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState access$202(com.google.common.util.concurrent.SequentialExecutor,com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState)>($r3, $r5);

        z1 = 1;

     label06:
        $r3 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r8 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor: java.util.Deque access$100(com.google.common.util.concurrent.SequentialExecutor)>($r3);

        $r9 = interfaceinvoke $r8.<java.util.Deque: java.lang.Object poll()>();

        r10 = (java.lang.Runnable) $r9;

        r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: java.lang.Runnable task> = r10;

        r10 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: java.lang.Runnable task>;

        if r10 != null goto label08;

        $r3 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r5 = <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState IDLE>;

        staticinvoke <com.google.common.util.concurrent.SequentialExecutor: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState access$202(com.google.common.util.concurrent.SequentialExecutor,com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState)>($r3, $r5);

        exitmonitor $r4;

     label07:
        if z0 == 0 goto label27;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

        return;

     label08:
        exitmonitor $r4;

     label09:
        $z2 = staticinvoke <java.lang.Thread: boolean interrupted()>();

     label10:
        z0 = z0 | $z2;

     label11:
        r10 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: java.lang.Runnable task>;

        interfaceinvoke r10.<java.lang.Runnable: void run()>();

     label12:
        r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: java.lang.Runnable task> = null;

     label13:
        goto label01;

     label14:
        r11 := @caughtexception;

        goto label21;

     label15:
        r12 := @caughtexception;

     label16:
        $r13 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor: java.util.logging.Logger access$400()>();

        $r1 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        r10 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: java.lang.Runnable task>;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r10);

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14);

        $i0 = virtualinvoke $r15.<java.lang.String: int length()>();

     label17:
        $i0 = $i0 + 35;

     label18:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while executing runnable ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r1, $r14, r12);

     label19:
        r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: java.lang.Runnable task> = null;

     label20:
        goto label01;

     label21:
        r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: java.lang.Runnable task> = null;

        throw r11;

     label22:
        r16 := @caughtexception;

     label23:
        exitmonitor $r4;

     label24:
        throw r16;

     label25:
        $r17 := @caughtexception;

        if z0 == 0 goto label26;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

     label26:
        throw $r17;

     label27:
        return;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label07 with label22;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.RuntimeException from label11 to label12 with label15;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label16 to label17 with label14;
        catch java.lang.Throwable from label18 to label19 with label14;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label24 to label25 with label25;
    }

    public void run()
    {
        java.lang.Throwable $r5;
        java.lang.Error r1;
        com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState $r2;
        com.google.common.util.concurrent.SequentialExecutor$QueueWorker r0;
        com.google.common.util.concurrent.SequentialExecutor $r4;
        java.util.Deque $r3;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$QueueWorker;

     label1:
        specialinvoke r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: void workOnQueue()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r4 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r3 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor: java.util.Deque access$100(com.google.common.util.concurrent.SequentialExecutor)>($r4);

        entermonitor $r3;

     label4:
        $r4 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r2 = <com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState IDLE>;

        staticinvoke <com.google.common.util.concurrent.SequentialExecutor: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState access$202(com.google.common.util.concurrent.SequentialExecutor,com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState)>($r4, $r2);

        exitmonitor $r3;

     label5:
        throw r1;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor $r3;

     label8:
        throw $r5;

        catch java.lang.Error from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.lang.String toString()
    {
        com.google.common.util.concurrent.SequentialExecutor $r5;
        java.lang.Runnable r1;
        int $i0;
        com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState $r6;
        com.google.common.util.concurrent.SequentialExecutor$QueueWorker r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r3;

        r0 := @this: com.google.common.util.concurrent.SequentialExecutor$QueueWorker;

        r1 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: java.lang.Runnable task>;

        if r1 == null goto label1;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + 34;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SequentialExecutorWorker{running=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        $r5 = r0.<com.google.common.util.concurrent.SequentialExecutor$QueueWorker: com.google.common.util.concurrent.SequentialExecutor this$0>;

        $r6 = staticinvoke <com.google.common.util.concurrent.SequentialExecutor: com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState access$200(com.google.common.util.concurrent.SequentialExecutor)>($r5);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + 32;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SequentialExecutorWorker{state=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
