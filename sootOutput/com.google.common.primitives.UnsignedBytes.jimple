public final class com.google.common.primitives.UnsignedBytes extends java.lang.Object
{
    public static final byte MAX_POWER_OF_TWO;
    public static final byte MAX_VALUE;
    private static final int UNSIGNED_MASK;

    private void <init>()
    {
        com.google.common.primitives.UnsignedBytes r0;

        r0 := @this: com.google.common.primitives.UnsignedBytes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte checkedCast(long)
    {
        byte $b1;
        int $i3;
        long $l0, $l2;
        boolean $z0;

        $l0 := @parameter0: long;

        $l2 = $l0 >> 8;

        $b1 = $l2 cmp 0L;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,long)>($z0, "out of range: %s", $l0);

        $i3 = (int) $l0;

        $b1 = (byte) $i3;

        return $b1;
    }

    public static int compare(byte, byte)
    {
        byte $b0, $b1;
        int $i2, $i3;

        $b0 := @parameter0: byte;

        $b1 := @parameter1: byte;

        $i2 = staticinvoke <com.google.common.primitives.UnsignedBytes: int toInt(byte)>($b0);

        $i3 = staticinvoke <com.google.common.primitives.UnsignedBytes: int toInt(byte)>($b1);

        $i2 = $i2 - $i3;

        return $i2;
    }

    private static byte flip(byte)
    {
        short $s1;
        byte $b0;

        $b0 := @parameter0: byte;

        $s1 = (short) $b0;

        $s1 = $s1 ^ 128;

        $b0 = (byte) $s1;

        return $b0;
    }

    public static transient java.lang.String join(java.lang.String, byte[])
    {
        byte[] $r1;
        byte b2;
        int i0, $i1;
        java.lang.StringBuilder r2, $r3;
        java.lang.String $r0, $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        i0 = lengthof $r1;

        if i0 != 0 goto label1;

        return "";

     label1:
        r2 = new java.lang.StringBuilder;

        i0 = lengthof $r1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 + 3;

        i0 = i0 * $i1;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>(i0);

        b2 = $r1[0];

        i0 = staticinvoke <com.google.common.primitives.UnsignedBytes: int toInt(byte)>(b2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        i0 = 1;

     label2:
        $i1 = lengthof $r1;

        if i0 >= $i1 goto label3;

        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        b2 = $r1[i0];

        $r4 = staticinvoke <com.google.common.primitives.UnsignedBytes: java.lang.String toString(byte)>(b2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r0 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.util.Comparator lexicographicalComparator()
    {
        java.util.Comparator r0;

        r0 = <com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder: java.util.Comparator BEST_COMPARATOR>;

        return r0;
    }

    static java.util.Comparator lexicographicalComparatorJavaImpl()
    {
        com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator r0;

        r0 = <com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator: com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator INSTANCE>;

        return r0;
    }

    public static transient byte max(byte[])
    {
        byte[] $r0;
        byte b1;
        int i0, i2, i3;
        boolean z0;

        $r0 := @parameter0: byte[];

        i0 = lengthof $r0;

        if i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>(z0);

        b1 = $r0[0];

        i0 = staticinvoke <com.google.common.primitives.UnsignedBytes: int toInt(byte)>(b1);

        i2 = 1;

     label3:
        i3 = lengthof $r0;

        if i2 >= i3 goto label5;

        b1 = $r0[i2];

        i3 = staticinvoke <com.google.common.primitives.UnsignedBytes: int toInt(byte)>(b1);

        if i3 <= i0 goto label4;

        i0 = i3;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        b1 = (byte) i0;

        return b1;
    }

    public static transient byte min(byte[])
    {
        byte[] $r0;
        byte b1;
        int i0, i2, i3;
        boolean z0;

        $r0 := @parameter0: byte[];

        i0 = lengthof $r0;

        if i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>(z0);

        b1 = $r0[0];

        i0 = staticinvoke <com.google.common.primitives.UnsignedBytes: int toInt(byte)>(b1);

        i2 = 1;

     label3:
        i3 = lengthof $r0;

        if i2 >= i3 goto label5;

        b1 = $r0[i2];

        i3 = staticinvoke <com.google.common.primitives.UnsignedBytes: int toInt(byte)>(b1);

        if i3 >= i0 goto label4;

        i0 = i3;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        b1 = (byte) i0;

        return b1;
    }

    public static byte parseUnsignedByte(java.lang.String)
    {
        java.lang.String $r0;
        byte $b0;

        $r0 := @parameter0: java.lang.String;

        $b0 = staticinvoke <com.google.common.primitives.UnsignedBytes: byte parseUnsignedByte(java.lang.String,int)>($r0, 10);

        return $b0;
    }

    public static byte parseUnsignedByte(java.lang.String, int)
    {
        byte $b2;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.NumberFormatException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r1;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, $i0);

        $i1 = $i0 >> 8;

        if $i1 != 0 goto label1;

        $b2 = (byte) $i0;

        return $b2;

     label1:
        $r2 = new java.lang.NumberFormatException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(25);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of range: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static byte saturatedCast(long)
    {
        byte $b1;
        int $i2;
        long $l0, $l3;

        $l0 := @parameter0: long;

        $i2 = staticinvoke <com.google.common.primitives.UnsignedBytes: int toInt(byte)>(-1);

        $l3 = (long) $i2;

        $b1 = $l0 cmp $l3;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        return -1;

     label1:
        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label2;

        return 0;

     label2:
        $i2 = (int) $l0;

        $b1 = (byte) $i2;

        return $b1;
    }

    public static void sort(byte[])
    {
        int $i0;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i0 = lengthof $r0;

        staticinvoke <com.google.common.primitives.UnsignedBytes: void sort(byte[],int,int)>($r0, 0, $i0);

        return;
    }

    public static void sort(byte[], int, int)
    {
        byte[] $r0;
        byte $b3;
        int $i0, $i1, i2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        i2 = lengthof $r0;

        staticinvoke <com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>($i0, $i1, i2);

        i2 = $i0;

     label1:
        if i2 >= $i1 goto label2;

        $b3 = $r0[i2];

        $b3 = staticinvoke <com.google.common.primitives.UnsignedBytes: byte flip(byte)>($b3);

        $r0[i2] = $b3;

        i2 = i2 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Arrays: void sort(byte[],int,int)>($r0, $i0, $i1);

     label3:
        if $i0 >= $i1 goto label4;

        $b3 = $r0[$i0];

        $b3 = staticinvoke <com.google.common.primitives.UnsignedBytes: byte flip(byte)>($b3);

        $r0[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return;
    }

    public static void sortDescending(byte[])
    {
        int $i0;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i0 = lengthof $r0;

        staticinvoke <com.google.common.primitives.UnsignedBytes: void sortDescending(byte[],int,int)>($r0, 0, $i0);

        return;
    }

    public static void sortDescending(byte[], int, int)
    {
        byte[] $r0;
        byte $b3;
        int $i0, $i1, i2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        i2 = lengthof $r0;

        staticinvoke <com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>($i0, $i1, i2);

        i2 = $i0;

     label1:
        if i2 >= $i1 goto label2;

        $b3 = $r0[i2];

        $b3 = $b3 ^ 127;

        $r0[i2] = $b3;

        i2 = i2 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Arrays: void sort(byte[],int,int)>($r0, $i0, $i1);

     label3:
        if $i0 >= $i1 goto label4;

        $b3 = $r0[$i0];

        $b3 = $b3 ^ 127;

        $r0[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return;
    }

    public static int toInt(byte)
    {
        int $i2;
        short $s1;
        byte $b0;

        $b0 := @parameter0: byte;

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i2 = (int) $s1;

        return $i2;
    }

    public static java.lang.String toString(byte)
    {
        java.lang.String $r0;
        byte $b0;

        $b0 := @parameter0: byte;

        $r0 = staticinvoke <com.google.common.primitives.UnsignedBytes: java.lang.String toString(byte,int)>($b0, 10);

        return $r0;
    }

    public static java.lang.String toString(byte, int)
    {
        byte $b0;
        int $i1, $i2;
        java.lang.String $r0;
        boolean $z0;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        if $i1 < 2 goto label1;

        if $i1 > 36 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>($z0, "radix (%s) must be between Character.MIN_RADIX and Character.MAX_RADIX", $i1);

        $i2 = staticinvoke <com.google.common.primitives.UnsignedBytes: int toInt(byte)>($b0);

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i2, $i1);

        return $r0;
    }

    public static void <clinit>()
    {
        <com.google.common.primitives.UnsignedBytes: int UNSIGNED_MASK> = 255;

        <com.google.common.primitives.UnsignedBytes: byte MAX_VALUE> = -1;

        <com.google.common.primitives.UnsignedBytes: byte MAX_POWER_OF_TWO> = -128;

        return;
    }
}
