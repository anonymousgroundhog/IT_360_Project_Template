class com.google.common.collect.RegularImmutableMap$EntrySet extends com.google.common.collect.ImmutableSet
{
    private final transient java.lang.Object[] alternatingKeysAndValues;
    private final transient int keyOffset;
    private final transient com.google.common.collect.ImmutableMap map;
    private final transient int size;

    void <init>(com.google.common.collect.ImmutableMap, java.lang.Object[], int, int)
    {
        com.google.common.collect.RegularImmutableMap$EntrySet r0;
        java.lang.Object[] $r2;
        com.google.common.collect.ImmutableMap r1;
        int $i0, $i1;

        r0 := @this: com.google.common.collect.RegularImmutableMap$EntrySet;

        r1 := @parameter0: com.google.common.collect.ImmutableMap;

        $r2 := @parameter1: java.lang.Object[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<com.google.common.collect.ImmutableSet: void <init>()>();

        r0.<com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.ImmutableMap map> = r1;

        r0.<com.google.common.collect.RegularImmutableMap$EntrySet: java.lang.Object[] alternatingKeysAndValues> = $r2;

        r0.<com.google.common.collect.RegularImmutableMap$EntrySet: int keyOffset> = $i0;

        r0.<com.google.common.collect.RegularImmutableMap$EntrySet: int size> = $i1;

        return;
    }

    static int access$000(com.google.common.collect.RegularImmutableMap$EntrySet)
    {
        int i0;
        com.google.common.collect.RegularImmutableMap$EntrySet $r0;

        $r0 := @parameter0: com.google.common.collect.RegularImmutableMap$EntrySet;

        i0 = $r0.<com.google.common.collect.RegularImmutableMap$EntrySet: int size>;

        return i0;
    }

    static java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet)
    {
        com.google.common.collect.RegularImmutableMap$EntrySet $r0;
        java.lang.Object[] r1;

        $r0 := @parameter0: com.google.common.collect.RegularImmutableMap$EntrySet;

        r1 = $r0.<com.google.common.collect.RegularImmutableMap$EntrySet: java.lang.Object[] alternatingKeysAndValues>;

        return r1;
    }

    static int access$200(com.google.common.collect.RegularImmutableMap$EntrySet)
    {
        int i0;
        com.google.common.collect.RegularImmutableMap$EntrySet $r0;

        $r0 := @parameter0: com.google.common.collect.RegularImmutableMap$EntrySet;

        i0 = $r0.<com.google.common.collect.RegularImmutableMap$EntrySet: int keyOffset>;

        return i0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map$Entry r2;
        com.google.common.collect.RegularImmutableMap$EntrySet r0;
        com.google.common.collect.ImmutableMap $r4;
        java.lang.Object $r1, $r3;
        boolean z0;

        r0 := @this: com.google.common.collect.RegularImmutableMap$EntrySet;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof java.util.Map$Entry;

        if z0 == 0 goto label1;

        r2 = (java.util.Map$Entry) $r1;

        $r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r1 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r1 == null goto label1;

        $r4 = r0.<com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.ImmutableMap map>;

        $r3 = virtualinvoke $r4.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r3);

        z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    int copyIntoArray(java.lang.Object[], int)
    {
        com.google.common.collect.RegularImmutableMap$EntrySet r0;
        java.lang.Object[] $r1;
        com.google.common.collect.ImmutableList $r2;
        int $i0;

        r0 := @this: com.google.common.collect.RegularImmutableMap$EntrySet;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.ImmutableList asList()>();

        $i0 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: int copyIntoArray(java.lang.Object[],int)>($r1, $i0);

        return $i0;
    }

    com.google.common.collect.ImmutableList createAsList()
    {
        com.google.common.collect.RegularImmutableMap$EntrySet r0;
        com.google.common.collect.RegularImmutableMap$EntrySet$1 $r1;

        r0 := @this: com.google.common.collect.RegularImmutableMap$EntrySet;

        $r1 = new com.google.common.collect.RegularImmutableMap$EntrySet$1;

        specialinvoke $r1.<com.google.common.collect.RegularImmutableMap$EntrySet$1: void <init>(com.google.common.collect.RegularImmutableMap$EntrySet)>(r0);

        return $r1;
    }

    boolean isPartialView()
    {
        com.google.common.collect.RegularImmutableMap$EntrySet r0;

        r0 := @this: com.google.common.collect.RegularImmutableMap$EntrySet;

        return 1;
    }

    public com.google.common.collect.UnmodifiableIterator iterator()
    {
        com.google.common.collect.RegularImmutableMap$EntrySet r0;
        com.google.common.collect.UnmodifiableIterator $r2;
        com.google.common.collect.ImmutableList $r1;

        r0 := @this: com.google.common.collect.RegularImmutableMap$EntrySet;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.ImmutableList asList()>();

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r2;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.RegularImmutableMap$EntrySet r0;
        com.google.common.collect.UnmodifiableIterator $r1;

        r0 := @this: com.google.common.collect.RegularImmutableMap$EntrySet;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    public int size()
    {
        int i0;
        com.google.common.collect.RegularImmutableMap$EntrySet r0;

        r0 := @this: com.google.common.collect.RegularImmutableMap$EntrySet;

        i0 = r0.<com.google.common.collect.RegularImmutableMap$EntrySet: int size>;

        return i0;
    }
}
