public final class com.google.common.io.FileBackedOutputStream extends java.io.OutputStream
{
    private java.io.File file;
    private final int fileThreshold;
    private com.google.common.io.FileBackedOutputStream$MemoryOutput memory;
    private java.io.OutputStream out;
    private final java.io.File parentDirectory;
    private final boolean resetOnFinalize;
    private final com.google.common.io.ByteSource source;

    public void <init>(int)
    {
        int $i0;
        com.google.common.io.FileBackedOutputStream r0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.common.io.FileBackedOutputStream: void <init>(int,boolean)>($i0, 0);

        return;
    }

    public void <init>(int, boolean)
    {
        int $i0;
        com.google.common.io.FileBackedOutputStream r0;
        boolean $z0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<com.google.common.io.FileBackedOutputStream: void <init>(int,boolean,java.io.File)>($i0, $z0, null);

        return;
    }

    private void <init>(int, boolean, java.io.File)
    {
        com.google.common.io.FileBackedOutputStream$2 $r4;
        com.google.common.io.FileBackedOutputStream$1 $r3;
        com.google.common.io.FileBackedOutputStream$MemoryOutput $r2;
        int $i0;
        java.io.File $r1;
        com.google.common.io.FileBackedOutputStream r0;
        boolean $z0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.io.File;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<com.google.common.io.FileBackedOutputStream: int fileThreshold> = $i0;

        r0.<com.google.common.io.FileBackedOutputStream: boolean resetOnFinalize> = $z0;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.File parentDirectory> = $r1;

        $r2 = new com.google.common.io.FileBackedOutputStream$MemoryOutput;

        specialinvoke $r2.<com.google.common.io.FileBackedOutputStream$MemoryOutput: void <init>(com.google.common.io.FileBackedOutputStream$1)>(null);

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory> = $r2;

        $r2 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out> = $r2;

        if $z0 == 0 goto label1;

        $r3 = new com.google.common.io.FileBackedOutputStream$1;

        specialinvoke $r3.<com.google.common.io.FileBackedOutputStream$1: void <init>(com.google.common.io.FileBackedOutputStream)>(r0);

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.ByteSource source> = $r3;

        return;

     label1:
        $r4 = new com.google.common.io.FileBackedOutputStream$2;

        specialinvoke $r4.<com.google.common.io.FileBackedOutputStream$2: void <init>(com.google.common.io.FileBackedOutputStream)>(r0);

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.ByteSource source> = $r4;

        return;
    }

    static java.io.InputStream access$100(com.google.common.io.FileBackedOutputStream) throws java.io.IOException
    {
        com.google.common.io.FileBackedOutputStream $r0;
        java.io.InputStream $r1;

        $r0 := @parameter0: com.google.common.io.FileBackedOutputStream;

        $r1 = specialinvoke $r0.<com.google.common.io.FileBackedOutputStream: java.io.InputStream openInputStream()>();

        return $r1;
    }

    private java.io.InputStream openInputStream() throws java.io.IOException
    {
        java.lang.Throwable $r6;
        byte[] $r5;
        com.google.common.io.FileBackedOutputStream$MemoryOutput $r3;
        java.io.FileInputStream $r2;
        java.io.File $r1;
        java.io.ByteArrayInputStream $r4;
        int $i0;
        com.google.common.io.FileBackedOutputStream r0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        entermonitor r0;

     label1:
        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        if $r1 == null goto label3;

        $r2 = new java.io.FileInputStream;

        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label2:
        exitmonitor r0;

        return $r2;

     label3:
        $r3 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r3);

        $r4 = new java.io.ByteArrayInputStream;

        $r3 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        $r5 = virtualinvoke $r3.<com.google.common.io.FileBackedOutputStream$MemoryOutput: byte[] getBuffer()>();

        $r3 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        $i0 = virtualinvoke $r3.<com.google.common.io.FileBackedOutputStream$MemoryOutput: int getCount()>();

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r5, 0, $i0);

     label4:
        exitmonitor r0;

        return $r4;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void update(int) throws java.io.IOException
    {
        byte[] $r4;
        com.google.common.io.FileBackedOutputStream$MemoryOutput r1;
        java.io.FileOutputStream r3;
        java.io.IOException r5;
        java.io.File r2;
        int $i0, $i1;
        com.google.common.io.FileBackedOutputStream r0;
        boolean z0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $i0 := @parameter0: int;

        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        if r1 == null goto label9;

        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        $i1 = virtualinvoke r1.<com.google.common.io.FileBackedOutputStream$MemoryOutput: int getCount()>();

        $i0 = $i1 + $i0;

        $i1 = r0.<com.google.common.io.FileBackedOutputStream: int fileThreshold>;

        if $i0 <= $i1 goto label9;

        r2 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File parentDirectory>;

        r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("FileBackedOutputStream", null, r2);

        z0 = r0.<com.google.common.io.FileBackedOutputStream: boolean resetOnFinalize>;

        if z0 == 0 goto label1;

        virtualinvoke r2.<java.io.File: void deleteOnExit()>();

     label1:
        r3 = new java.io.FileOutputStream;

     label2:
        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

     label3:
        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

     label4:
        $r4 = virtualinvoke r1.<com.google.common.io.FileBackedOutputStream$MemoryOutput: byte[] getBuffer()>();

     label5:
        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

     label6:
        $i0 = virtualinvoke r1.<com.google.common.io.FileBackedOutputStream$MemoryOutput: int getCount()>();

        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[],int,int)>($r4, 0, $i0);

        virtualinvoke r3.<java.io.FileOutputStream: void flush()>();

     label7:
        r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out> = r3;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.File file> = r2;

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory> = null;

        return;

     label8:
        r5 := @caughtexception;

        virtualinvoke r2.<java.io.File: boolean delete()>();

        throw r5;

     label9:
        return;

        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public com.google.common.io.ByteSource asByteSource()
    {
        com.google.common.io.ByteSource r1;
        com.google.common.io.FileBackedOutputStream r0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.ByteSource source>;

        return r1;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        java.lang.Throwable $r2;
        com.google.common.io.FileBackedOutputStream r0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        entermonitor r0;

     label1:
        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        java.lang.Throwable $r2;
        com.google.common.io.FileBackedOutputStream r0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        entermonitor r0;

     label1:
        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    java.io.File getFile()
    {
        java.lang.Throwable $r1;
        java.io.File r2;
        com.google.common.io.FileBackedOutputStream r0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        entermonitor r0;

     label1:
        r2 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void reset() throws java.io.IOException
    {
        java.lang.Throwable $r7, r8;
        com.google.common.io.FileBackedOutputStream$MemoryOutput r1;
        java.io.IOException $r3;
        java.io.File r2;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r4, $r5;
        com.google.common.io.FileBackedOutputStream r0;
        boolean $z0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        entermonitor r0;

     label01:
        virtualinvoke r0.<com.google.common.io.FileBackedOutputStream: void close()>();

     label02:
        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        if r1 != null goto label03;

        r1 = new com.google.common.io.FileBackedOutputStream$MemoryOutput;

        specialinvoke r1.<com.google.common.io.FileBackedOutputStream$MemoryOutput: void <init>(com.google.common.io.FileBackedOutputStream$1)>(null);

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory> = r1;

        goto label04;

     label03:
        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        virtualinvoke r1.<com.google.common.io.FileBackedOutputStream$MemoryOutput: void reset()>();

     label04:
        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out> = r1;

        r2 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        if r2 == null goto label06;

        r2 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.File file> = null;

        $z0 = virtualinvoke r2.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r3 = new java.io.IOException;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + 18;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not delete: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label06:
        exitmonitor r0;

        return;

     label07:
        $r7 := @caughtexception;

        goto label13;

     label08:
        r8 := @caughtexception;

     label09:
        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        if r1 != null goto label10;

        r1 = new com.google.common.io.FileBackedOutputStream$MemoryOutput;

        specialinvoke r1.<com.google.common.io.FileBackedOutputStream$MemoryOutput: void <init>(com.google.common.io.FileBackedOutputStream$1)>(null);

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory> = r1;

        goto label11;

     label10:
        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        virtualinvoke r1.<com.google.common.io.FileBackedOutputStream$MemoryOutput: void reset()>();

     label11:
        r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out> = r1;

        r2 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        if r2 == null goto label12;

        r2 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.File file> = null;

        $z0 = virtualinvoke r2.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label12;

        $r3 = new java.io.IOException;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + 18;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not delete: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label12:
        throw r8;

     label13:
        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label09 to label13 with label07;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        java.lang.Throwable $r2;
        int $i0;
        com.google.common.io.FileBackedOutputStream r0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.google.common.io.FileBackedOutputStream: void update(int)>(1);

        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void write(byte[]) throws java.io.IOException
    {
        java.lang.Throwable $r2;
        byte[] $r1;
        int $i0;
        com.google.common.io.FileBackedOutputStream r0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $r1 := @parameter0: byte[];

        entermonitor r0;

     label1:
        $i0 = lengthof $r1;

        virtualinvoke r0.<com.google.common.io.FileBackedOutputStream: void write(byte[],int,int)>($r1, 0, $i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        java.lang.Throwable $r3;
        byte[] $r2;
        int $i0, $i1;
        com.google.common.io.FileBackedOutputStream r0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $r2 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.google.common.io.FileBackedOutputStream: void update(int)>($i1);

        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i0, $i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
