public abstract class com.google.common.collect.ImmutableMultimap extends com.google.common.collect.BaseImmutableMultimap implements java.io.Serializable
{
    private static final long serialVersionUID;
    final transient com.google.common.collect.ImmutableMap map;
    final transient int size;

    void <init>(com.google.common.collect.ImmutableMap, int)
    {
        int $i0;
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMap r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        r1 := @parameter0: com.google.common.collect.ImmutableMap;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.google.common.collect.BaseImmutableMultimap: void <init>()>();

        r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map> = r1;

        r0.<com.google.common.collect.ImmutableMultimap: int size> = $i0;

        return;
    }

    public static com.google.common.collect.ImmutableMultimap$Builder builder()
    {
        com.google.common.collect.ImmutableMultimap$Builder $r0;

        $r0 = new com.google.common.collect.ImmutableMultimap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableMultimap$Builder: void <init>()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableMultimap copyOf(com.google.common.collect.Multimap)
    {
        com.google.common.collect.ImmutableListMultimap $r2;
        com.google.common.collect.Multimap r0;
        com.google.common.collect.ImmutableMultimap r1;
        boolean z0;

        r0 := @parameter0: com.google.common.collect.Multimap;

        z0 = r0 instanceof com.google.common.collect.ImmutableMultimap;

        if z0 == 0 goto label1;

        r1 = (com.google.common.collect.ImmutableMultimap) r0;

        z0 = virtualinvoke r1.<com.google.common.collect.ImmutableMultimap: boolean isPartialView()>();

        if z0 != 0 goto label1;

        return r1;

     label1:
        $r2 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap copyOf(com.google.common.collect.Multimap)>(r0);

        return $r2;
    }

    public static com.google.common.collect.ImmutableMultimap copyOf(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        com.google.common.collect.ImmutableListMultimap $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap copyOf(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static com.google.common.collect.ImmutableMultimap of()
    {
        com.google.common.collect.ImmutableListMultimap $r0;

        $r0 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        com.google.common.collect.ImmutableListMultimap $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public static com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap $r4;
        java.lang.Object r0, r1, r2, r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r4 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2, r3);

        return $r4;
    }

    public static com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap $r6;
        java.lang.Object r0, r1, r2, r3, r4, r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        $r6 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2, r3, r4, r5);

        return $r6;
    }

    public static com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap $r8;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        $r8 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2, r3, r4, r5, r6, r7);

        return $r8;
    }

    public static com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap $r10;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7, r8, r9;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        r8 := @parameter8: java.lang.Object;

        r9 := @parameter9: java.lang.Object;

        $r10 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return $r10;
    }

    public com.google.common.collect.ImmutableMap asMap()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMap r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        r1 = r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map>;

        return r1;
    }

    public volatile java.util.Map asMap()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap asMap()>();

        return $r1;
    }

    public final void clear()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public volatile boolean containsEntry(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.common.collect.ImmutableMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.BaseImmutableMultimap: boolean containsEntry(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.ImmutableMap $r2;
        java.lang.Object $r1;
        com.google.common.collect.ImmutableMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ImmutableMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $z0 = specialinvoke r0.<com.google.common.collect.BaseImmutableMultimap: boolean containsValue(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    java.util.Map createAsMap()
    {
        java.lang.AssertionError $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("should never be called");

        throw $r1;
    }

    com.google.common.collect.ImmutableCollection createEntries()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMultimap$EntryCollection $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new com.google.common.collect.ImmutableMultimap$EntryCollection;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultimap$EntryCollection: void <init>(com.google.common.collect.ImmutableMultimap)>(r0);

        return $r1;
    }

    volatile java.util.Collection createEntries()
    {
        com.google.common.collect.ImmutableCollection $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection createEntries()>();

        return $r1;
    }

    java.util.Set createKeySet()
    {
        java.lang.AssertionError $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("unreachable");

        throw $r1;
    }

    com.google.common.collect.ImmutableMultiset createKeys()
    {
        com.google.common.collect.ImmutableMultimap$Keys $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new com.google.common.collect.ImmutableMultimap$Keys;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultimap$Keys: void <init>(com.google.common.collect.ImmutableMultimap)>(r0);

        return $r1;
    }

    volatile com.google.common.collect.Multiset createKeys()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMultiset $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMultiset createKeys()>();

        return $r1;
    }

    com.google.common.collect.ImmutableCollection createValues()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMultimap$Values $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new com.google.common.collect.ImmutableMultimap$Values;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultimap$Values: void <init>(com.google.common.collect.ImmutableMultimap)>(r0);

        return $r1;
    }

    volatile java.util.Collection createValues()
    {
        com.google.common.collect.ImmutableCollection $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection createValues()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableCollection entries()
    {
        com.google.common.collect.ImmutableCollection $r2;
        com.google.common.collect.ImmutableMultimap r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.BaseImmutableMultimap: java.util.Collection entries()>();

        $r2 = (com.google.common.collect.ImmutableCollection) $r1;

        return $r2;
    }

    public volatile java.util.Collection entries()
    {
        com.google.common.collect.ImmutableCollection $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection entries()>();

        return $r1;
    }

    com.google.common.collect.UnmodifiableIterator entryIterator()
    {
        com.google.common.collect.ImmutableMultimap$1 $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new com.google.common.collect.ImmutableMultimap$1;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultimap$1: void <init>(com.google.common.collect.ImmutableMultimap)>(r0);

        return $r1;
    }

    volatile java.util.Iterator entryIterator()
    {
        com.google.common.collect.UnmodifiableIterator $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.UnmodifiableIterator entryIterator()>();

        return $r1;
    }

    public volatile boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ImmutableMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.BaseImmutableMultimap: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public abstract com.google.common.collect.ImmutableCollection get(java.lang.Object);

    public volatile java.util.Collection get(java.lang.Object)
    {
        com.google.common.collect.ImmutableCollection $r1;
        java.lang.Object $r2;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection get(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile int hashCode()
    {
        int $i0;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $i0 = specialinvoke r0.<com.google.common.collect.BaseImmutableMultimap: int hashCode()>();

        return $i0;
    }

    public abstract com.google.common.collect.ImmutableMultimap inverse();

    public volatile boolean isEmpty()
    {
        com.google.common.collect.ImmutableMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $z0 = specialinvoke r0.<com.google.common.collect.BaseImmutableMultimap: boolean isEmpty()>();

        return $z0;
    }

    boolean isPartialView()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: boolean isPartialView()>();

        return $z0;
    }

    public com.google.common.collect.ImmutableSet keySet()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMap $r2;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 = r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap map>;

        $r1 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>();

        return $r1;
    }

    public volatile java.util.Set keySet()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableSet keySet()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableMultiset keys()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.Multiset $r1;
        com.google.common.collect.ImmutableMultiset $r2;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.BaseImmutableMultimap: com.google.common.collect.Multiset keys()>();

        $r2 = (com.google.common.collect.ImmutableMultiset) $r1;

        return $r2;
    }

    public volatile com.google.common.collect.Multiset keys()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMultiset $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMultiset keys()>();

        return $r1;
    }

    public final boolean put(java.lang.Object, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object r1, r2;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public final boolean putAll(com.google.common.collect.Multimap)
    {
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.Multimap r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        r1 := @parameter0: com.google.common.collect.Multimap;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean putAll(java.lang.Object, java.lang.Iterable)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object r1;
        com.google.common.collect.ImmutableMultimap r0;
        java.lang.Iterable r2;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public final boolean remove(java.lang.Object, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object $r1, $r2;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public com.google.common.collect.ImmutableCollection removeAll(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r2;
        java.lang.Object $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public volatile java.util.Collection removeAll(java.lang.Object)
    {
        com.google.common.collect.ImmutableCollection $r1;
        java.lang.Object $r2;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection removeAll(java.lang.Object)>($r2);

        return $r1;
    }

    public com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object r1;
        com.google.common.collect.ImmutableMultimap r0;
        java.lang.Iterable r2;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public volatile java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.ImmutableCollection $r2;
        java.lang.Object $r3;
        com.google.common.collect.ImmutableMultimap r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        return $r2;
    }

    public int size()
    {
        int i0;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        i0 = r0.<com.google.common.collect.ImmutableMultimap: int size>;

        return i0;
    }

    public volatile java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.BaseImmutableMultimap: java.lang.String toString()>();

        return $r1;
    }

    com.google.common.collect.UnmodifiableIterator valueIterator()
    {
        com.google.common.collect.ImmutableMultimap r0;
        com.google.common.collect.ImmutableMultimap$2 $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = new com.google.common.collect.ImmutableMultimap$2;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultimap$2: void <init>(com.google.common.collect.ImmutableMultimap)>(r0);

        return $r1;
    }

    volatile java.util.Iterator valueIterator()
    {
        com.google.common.collect.UnmodifiableIterator $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.UnmodifiableIterator valueIterator()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableCollection values()
    {
        com.google.common.collect.ImmutableCollection $r2;
        com.google.common.collect.ImmutableMultimap r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.BaseImmutableMultimap: java.util.Collection values()>();

        $r2 = (com.google.common.collect.ImmutableCollection) $r1;

        return $r2;
    }

    public volatile java.util.Collection values()
    {
        com.google.common.collect.ImmutableCollection $r1;
        com.google.common.collect.ImmutableMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection values()>();

        return $r1;
    }
}
