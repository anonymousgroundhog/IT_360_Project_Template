final class kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function4
{
    final kotlin.jvm.functions.Function2 $predicate;
    final long $retries;
    long J$0;
    java.lang.Object L$0;
    int label;

    void <init>(long, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        long $l0;
        kotlin.jvm.functions.Function2 $r1;
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3 r0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3;

        $l0 := @parameter0: long;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long $retries> = $l0;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: kotlin.jvm.functions.Function2 $predicate> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(4, $r2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r6;
        kotlin.coroutines.Continuation $r8;
        long $l0;
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3 r0;
        kotlinx.coroutines.flow.FlowCollector $r5;
        java.lang.Object $r1, $r2, $r3, $r4;
        java.lang.Number $r7;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r4 := @parameter3: java.lang.Object;

        $r5 = (kotlinx.coroutines.flow.FlowCollector) $r1;

        $r6 = (java.lang.Throwable) $r2;

        $r7 = (java.lang.Number) $r3;

        $l0 = virtualinvoke $r7.<java.lang.Number: long longValue()>();

        $r8 = (kotlin.coroutines.Continuation) $r4;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,long,kotlin.coroutines.Continuation)>($r5, $r6, $l0, $r8);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, java.lang.Throwable, long, kotlin.coroutines.Continuation)
    {
        java.lang.Throwable $r2;
        kotlin.coroutines.Continuation $r3;
        long $l0, $l1;
        kotlin.jvm.functions.Function2 $r4;
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3 r0, $r6;
        kotlin.Unit $r7;
        kotlinx.coroutines.flow.FlowCollector $r1;
        java.lang.Object $r5;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: java.lang.Throwable;

        $l0 := @parameter2: long;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r6 = new kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3;

        $l1 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long $retries>;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: kotlin.jvm.functions.Function2 $predicate>;

        specialinvoke $r6.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: void <init>(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($l1, $r4, $r3);

        $r6.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object L$0> = $r2;

        $r6.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long J$0> = $l0;

        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = virtualinvoke $r6.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invokeSuspend(java.lang.Object)>($r7);

        return $r5;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.Throwable r3;
        java.lang.IllegalStateException $r6;
        long l0, $l3;
        kotlin.jvm.functions.Function2 $r4;
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3 r0;
        byte $b1;
        int i2;
        java.lang.Boolean $r5;
        java.lang.Object $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i2 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: int label>;

        $z0 = 1;

        lookupswitch(i2)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label4;

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object L$0>;

        r3 = (java.lang.Throwable) $r1;

        l0 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long J$0>;

        $l3 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long $retries>;

        $b1 = l0 cmp $l3;

        i2 = (int) $b1;

        if i2 >= 0 goto label5;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: kotlin.jvm.functions.Function2 $predicate>;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: int label> = 1;

        $r1 = interfaceinvoke $r4.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r3, r0);

        if $r1 != $r2 goto label4;

        return $r2;

     label4:
        $r5 = (java.lang.Boolean) $r1;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label5;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        $r5 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)>($z0);

        return $r5;
    }
}
