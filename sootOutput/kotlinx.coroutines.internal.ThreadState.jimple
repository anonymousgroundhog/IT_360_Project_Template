final class kotlinx.coroutines.internal.ThreadState extends java.lang.Object
{
    public final kotlin.coroutines.CoroutineContext context;
    private final kotlinx.coroutines.ThreadContextElement[] elements;
    private int i;
    private final java.lang.Object[] values;

    public void <init>(kotlin.coroutines.CoroutineContext, int)
    {
        java.lang.Object[] $r2;
        int $i0;
        kotlinx.coroutines.ThreadContextElement[] $r3;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.internal.ThreadState r0;

        r0 := @this: kotlinx.coroutines.internal.ThreadState;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.internal.ThreadState: kotlin.coroutines.CoroutineContext context> = $r1;

        $r2 = newarray (java.lang.Object)[$i0];

        r0.<kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values> = $r2;

        $r3 = newarray (kotlinx.coroutines.ThreadContextElement)[$i0];

        r0.<kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements> = $r3;

        return;
    }

    public final void append(kotlinx.coroutines.ThreadContextElement, java.lang.Object)
    {
        kotlinx.coroutines.ThreadContextElement $r1;
        java.lang.Object[] $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        kotlinx.coroutines.ThreadContextElement[] $r4;
        kotlinx.coroutines.internal.ThreadState r0;

        r0 := @this: kotlinx.coroutines.internal.ThreadState;

        $r1 := @parameter0: kotlinx.coroutines.ThreadContextElement;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values>;

        $i0 = r0.<kotlinx.coroutines.internal.ThreadState: int i>;

        $r3[$i0] = $r2;

        $r4 = r0.<kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements>;

        $i0 = r0.<kotlinx.coroutines.internal.ThreadState: int i>;

        $i1 = $i0 + 1;

        r0.<kotlinx.coroutines.internal.ThreadState: int i> = $i1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlinx.coroutines.ThreadContextElement<kotlin.Any?>");

        $r4[$i0] = $r1;

        return;
    }

    public final void restore(kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.ThreadContextElement $r3;
        java.lang.Object[] $r4;
        kotlinx.coroutines.ThreadContextElement[] $r2;
        kotlin.coroutines.CoroutineContext $r1;
        int i0, $i1;
        java.lang.Object $r5;
        kotlinx.coroutines.internal.ThreadState r0;

        r0 := @this: kotlinx.coroutines.internal.ThreadState;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 = r0.<kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements>;

        i0 = lengthof $r2;

        $i1 = i0 + -1;

        if $i1 < 0 goto label2;

     label1:
        i0 = $i1;

        $i1 = $i1 + -1;

        $r2 = r0.<kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements>;

        $r3 = $r2[i0];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        $r4 = r0.<kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values>;

        $r5 = $r4[i0];

        interfaceinvoke $r3.<kotlinx.coroutines.ThreadContextElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r1, $r5);

        if $i1 >= 0 goto label1;

     label2:
        return;
    }
}
