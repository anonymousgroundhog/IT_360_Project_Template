public class androidx.work.impl.background.systemalarm.SystemAlarmScheduler extends java.lang.Object implements androidx.work.impl.Scheduler
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("SystemAlarmScheduler");

        <androidx.work.impl.background.systemalarm.SystemAlarmScheduler: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.work.impl.background.systemalarm.SystemAlarmScheduler r0;
        android.content.Context $r1;

        r0 := @this: androidx.work.impl.background.systemalarm.SystemAlarmScheduler;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext> = $r1;

        return;
    }

    private void scheduleWorkSpec(androidx.work.impl.model.WorkSpec)
    {
        android.content.Context r7;
        java.lang.Object[] $r5;
        android.content.Intent $r8;
        androidx.work.impl.model.WorkSpec $r1;
        androidx.work.impl.background.systemalarm.SystemAlarmScheduler r0;
        androidx.work.Logger $r2;
        java.lang.Throwable[] $r6;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.work.impl.background.systemalarm.SystemAlarmScheduler;

        $r1 := @parameter0: androidx.work.impl.model.WorkSpec;

        $r2 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r3 = <androidx.work.impl.background.systemalarm.SystemAlarmScheduler: java.lang.String TAG>;

        $r4 = $r1.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Scheduling work with workSpecId %s", $r5);

        $r6 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r2.<androidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])>($r3, $r4, $r6);

        r7 = r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext>;

        $r3 = $r1.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        $r8 = staticinvoke <androidx.work.impl.background.systemalarm.CommandHandler: android.content.Intent createScheduleWorkIntent(android.content.Context,java.lang.String)>(r7, $r3);

        r7 = r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext>;

        virtualinvoke r7.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>($r8);

        return;
    }

    public void cancel(java.lang.String)
    {
        androidx.work.impl.background.systemalarm.SystemAlarmScheduler r0;
        android.content.Context $r2;
        android.content.Intent $r3;
        java.lang.String $r1;

        r0 := @this: androidx.work.impl.background.systemalarm.SystemAlarmScheduler;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext>;

        $r3 = staticinvoke <androidx.work.impl.background.systemalarm.CommandHandler: android.content.Intent createStopWorkIntent(android.content.Context,java.lang.String)>($r2, $r1);

        $r2 = r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>($r3);

        return;
    }

    public boolean hasLimitedSchedulingSlots()
    {
        androidx.work.impl.background.systemalarm.SystemAlarmScheduler r0;

        r0 := @this: androidx.work.impl.background.systemalarm.SystemAlarmScheduler;

        return 1;
    }

    public transient void schedule(androidx.work.impl.model.WorkSpec[])
    {
        androidx.work.impl.background.systemalarm.SystemAlarmScheduler r0;
        int $i0, $i1;
        androidx.work.impl.model.WorkSpec r2;
        androidx.work.impl.model.WorkSpec[] $r1;

        r0 := @this: androidx.work.impl.background.systemalarm.SystemAlarmScheduler;

        $r1 := @parameter0: androidx.work.impl.model.WorkSpec[];

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r1[$i1];

        specialinvoke r0.<androidx.work.impl.background.systemalarm.SystemAlarmScheduler: void scheduleWorkSpec(androidx.work.impl.model.WorkSpec)>(r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
}
