public class com.google.android.gms.common.util.concurrent.NumberedThreadFactory extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    private final java.lang.String zza;
    private final java.util.concurrent.atomic.AtomicInteger zzb;
    private final java.util.concurrent.ThreadFactory zzc;

    public void <init>(java.lang.String)
    {
        com.google.android.gms.common.util.concurrent.NumberedThreadFactory r0;
        java.util.concurrent.atomic.AtomicInteger $r3;
        java.lang.String $r1;
        java.util.concurrent.ThreadFactory $r2;

        r0 := @this: com.google.android.gms.common.util.concurrent.NumberedThreadFactory;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<com.google.android.gms.common.util.concurrent.NumberedThreadFactory: java.util.concurrent.atomic.AtomicInteger zzb> = $r3;

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>();

        r0.<com.google.android.gms.common.util.concurrent.NumberedThreadFactory: java.util.concurrent.ThreadFactory zzc> = $r2;

        staticinvoke <com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "Name must not be null");

        r0.<com.google.android.gms.common.util.concurrent.NumberedThreadFactory: java.lang.String zza> = $r1;

        return;
    }

    public final java.lang.Thread newThread(java.lang.Runnable)
    {
        com.google.android.gms.common.util.concurrent.NumberedThreadFactory r0;
        java.lang.Runnable $r1;
        java.util.concurrent.atomic.AtomicInteger $r6;
        java.lang.Thread $r4;
        int $i0;
        java.lang.StringBuilder $r7;
        java.lang.String $r5;
        java.util.concurrent.ThreadFactory $r2;
        com.google.android.gms.common.util.concurrent.zza $r3;

        r0 := @this: com.google.android.gms.common.util.concurrent.NumberedThreadFactory;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.google.android.gms.common.util.concurrent.NumberedThreadFactory: java.util.concurrent.ThreadFactory zzc>;

        $r3 = new com.google.android.gms.common.util.concurrent.zza;

        specialinvoke $r3.<com.google.android.gms.common.util.concurrent.zza: void <init>(java.lang.Runnable,int)>($r1, 0);

        $r4 = interfaceinvoke $r2.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>($r3);

        $r5 = r0.<com.google.android.gms.common.util.concurrent.NumberedThreadFactory: java.lang.String zza>;

        $r6 = r0.<com.google.android.gms.common.util.concurrent.NumberedThreadFactory: java.util.concurrent.atomic.AtomicInteger zzb>;

        $i0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.Thread: void setName(java.lang.String)>($r5);

        return $r4;
    }
}
