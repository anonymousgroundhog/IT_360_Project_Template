final class kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final long $delayMillis;
    final long $initialDelayMillis;
    final kotlinx.coroutines.channels.TickerMode $mode;
    private java.lang.Object L$0;
    int label;

    void <init>(kotlinx.coroutines.channels.TickerMode, long, long, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 r0;
        long $l0, $l1;
        kotlinx.coroutines.channels.TickerMode $r1;

        r0 := @this: kotlinx.coroutines.channels.TickerChannelsKt$ticker$3;

        $r1 := @parameter0: kotlinx.coroutines.channels.TickerMode;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r2 := @parameter3: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: kotlinx.coroutines.channels.TickerMode $mode> = $r1;

        r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $delayMillis> = $l0;

        r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $initialDelayMillis> = $l1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 r0, $r4;
        java.lang.Object $r1;
        long $l0, $l1;
        kotlinx.coroutines.channels.TickerMode $r3;

        r0 := @this: kotlinx.coroutines.channels.TickerChannelsKt$ticker$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new kotlinx.coroutines.channels.TickerChannelsKt$ticker$3;

        $r3 = r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: kotlinx.coroutines.channels.TickerMode $mode>;

        $l0 = r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $delayMillis>;

        $l1 = r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $initialDelayMillis>;

        specialinvoke $r4.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: void <init>(kotlinx.coroutines.channels.TickerMode,long,long,kotlin.coroutines.Continuation)>($r3, $l0, $l1, $r2);

        $r4.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r4;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r4;
        kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.channels.ProducerScope $r3;

        r0 := @this: kotlinx.coroutines.channels.TickerChannelsKt$ticker$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.channels.ProducerScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 r0;
        java.lang.Object $r4;
        kotlinx.coroutines.channels.ProducerScope $r1;

        r0 := @this: kotlinx.coroutines.channels.TickerChannelsKt$ticker$3;

        $r1 := @parameter0: kotlinx.coroutines.channels.ProducerScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.channels.TickerChannelsKt$ticker$3) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.IllegalStateException $r3;
        kotlin.coroutines.Continuation $r8;
        long $l0, $l2;
        kotlin.Unit r9;
        int[] $r6;
        kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 r0;
        kotlinx.coroutines.channels.SendChannel $r7;
        int i1;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.channels.ProducerScope $r4;
        kotlinx.coroutines.channels.TickerMode $r5;

        r0 := @this: kotlinx.coroutines.channels.TickerChannelsKt$ticker$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i1 = r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: int label>;

        lookupswitch(i1)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label7;

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label9;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r1 = r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object L$0>;

        $r4 = (kotlinx.coroutines.channels.ProducerScope) $r1;

        $r5 = r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: kotlinx.coroutines.channels.TickerMode $mode>;

        $r6 = <kotlinx.coroutines.channels.TickerChannelsKt$ticker$3$WhenMappings: int[] $EnumSwitchMapping$0>;

        i1 = virtualinvoke $r5.<kotlinx.coroutines.channels.TickerMode: int ordinal()>();

        i1 = $r6[i1];

        lookupswitch(i1)
        {
            case 1: goto label8;
            case 2: goto label6;
            default: goto label5;
        };

     label5:
        goto label9;

     label6:
        $l2 = r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $delayMillis>;

        $l0 = r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $initialDelayMillis>;

        $r7 = interfaceinvoke $r4.<kotlinx.coroutines.channels.ProducerScope: kotlinx.coroutines.channels.SendChannel getChannel()>();

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: int label> = 2;

        $r1 = staticinvoke <kotlinx.coroutines.channels.TickerChannelsKt: java.lang.Object access$fixedDelayTicker(long,long,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)>($l2, $l0, $r7, $r8);

        if $r1 != $r2 goto label7;

        return $r2;

     label7:
        goto label9;

     label8:
        $l2 = r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $delayMillis>;

        $l0 = r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $initialDelayMillis>;

        $r7 = interfaceinvoke $r4.<kotlinx.coroutines.channels.ProducerScope: kotlinx.coroutines.channels.SendChannel getChannel()>();

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: int label> = 1;

        $r1 = staticinvoke <kotlinx.coroutines.channels.TickerChannelsKt: java.lang.Object access$fixedPeriodTicker(long,long,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)>($l2, $l0, $r7, $r8);

        if $r1 != $r2 goto label9;

        return $r2;

     label9:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r9;
    }
}
