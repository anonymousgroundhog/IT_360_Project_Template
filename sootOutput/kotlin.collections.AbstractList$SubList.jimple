final class kotlin.collections.AbstractList$SubList extends kotlin.collections.AbstractList implements java.util.RandomAccess
{
    private int _size;
    private final int fromIndex;
    private final kotlin.collections.AbstractList list;

    public void <init>(kotlin.collections.AbstractList, int, int)
    {
        kotlin.collections.AbstractList$SubList r0;
        kotlin.collections.AbstractList $r1;
        kotlin.collections.AbstractList$Companion $r2;
        int $i0, $i1, $i2;

        r0 := @this: kotlin.collections.AbstractList$SubList;

        $r1 := @parameter0: kotlin.collections.AbstractList;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "list");

        specialinvoke r0.<kotlin.collections.AbstractList: void <init>()>();

        r0.<kotlin.collections.AbstractList$SubList: kotlin.collections.AbstractList list> = $r1;

        r0.<kotlin.collections.AbstractList$SubList: int fromIndex> = $i0;

        $r2 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i0 = r0.<kotlin.collections.AbstractList$SubList: int fromIndex>;

        $r1 = r0.<kotlin.collections.AbstractList$SubList: kotlin.collections.AbstractList list>;

        $i2 = virtualinvoke $r1.<kotlin.collections.AbstractList: int size()>();

        virtualinvoke $r2.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i0, $i1, $i2);

        $i0 = r0.<kotlin.collections.AbstractList$SubList: int fromIndex>;

        $i0 = $i1 - $i0;

        r0.<kotlin.collections.AbstractList$SubList: int _size> = $i0;

        return;
    }

    public java.lang.Object get(int)
    {
        kotlin.collections.AbstractList$SubList r0;
        kotlin.collections.AbstractList $r3;
        kotlin.collections.AbstractList$Companion $r2;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: kotlin.collections.AbstractList$SubList;

        $i0 := @parameter0: int;

        $r2 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i1 = r0.<kotlin.collections.AbstractList$SubList: int _size>;

        virtualinvoke $r2.<kotlin.collections.AbstractList$Companion: void checkElementIndex$kotlin_stdlib(int,int)>($i0, $i1);

        $r3 = r0.<kotlin.collections.AbstractList$SubList: kotlin.collections.AbstractList list>;

        $i1 = r0.<kotlin.collections.AbstractList$SubList: int fromIndex>;

        $i0 = $i1 + $i0;

        $r1 = virtualinvoke $r3.<kotlin.collections.AbstractList: java.lang.Object get(int)>($i0);

        return $r1;
    }

    public int getSize()
    {
        int i0;
        kotlin.collections.AbstractList$SubList r0;

        r0 := @this: kotlin.collections.AbstractList$SubList;

        i0 = r0.<kotlin.collections.AbstractList$SubList: int _size>;

        return i0;
    }
}
