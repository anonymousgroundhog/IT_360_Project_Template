final class kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlin.jvm.functions.Function0 $arrayFactory;
    final kotlinx.coroutines.flow.Flow[] $flows;
    final kotlinx.coroutines.flow.FlowCollector $this_combineInternal;
    final kotlin.jvm.functions.Function3 $transform;
    int I$0;
    int I$1;
    private java.lang.Object L$0;
    java.lang.Object L$1;
    java.lang.Object L$2;
    int label;

    void <init>(kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function3, kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r5;
        kotlinx.coroutines.flow.Flow[] $r1;
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlin.jvm.functions.Function3 $r3;
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 r0;
        kotlin.jvm.functions.Function0 $r2;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow[];

        $r2 := @parameter1: kotlin.jvm.functions.Function0;

        $r3 := @parameter2: kotlin.jvm.functions.Function3;

        $r4 := @parameter3: kotlinx.coroutines.flow.FlowCollector;

        $r5 := @parameter4: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows> = $r1;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function0 $arrayFactory> = $r2;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform> = $r3;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal> = $r4;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r5);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.Flow[] $r3;
        kotlin.jvm.functions.Function3 $r5;
        kotlin.jvm.functions.Function0 $r4;
        kotlinx.coroutines.flow.FlowCollector $r6;
        java.lang.Object $r1;
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 r0, $r7;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r7 = new kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows>;

        $r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function0 $arrayFactory>;

        $r5 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform>;

        $r6 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal>;

        specialinvoke $r7.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r3, $r4, $r5, $r6, $r2);

        $r7.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r7;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r4;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 r0;
        kotlinx.coroutines.CoroutineScope $r3;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 r0;
        kotlinx.coroutines.CoroutineScope $r1;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        byte[] r5;
        java.lang.IllegalStateException $r20;
        kotlinx.coroutines.channels.Channel r6;
        kotlin.coroutines.Continuation r13;
        java.lang.Object[] r7, r16;
        kotlinx.coroutines.flow.Flow[] r10;
        kotlin.collections.IndexedValue r14;
        kotlinx.coroutines.CoroutineScope r9;
        byte b3;
        java.util.concurrent.atomic.AtomicInteger $r21;
        int i0, i1, $i2, $i4;
        kotlinx.coroutines.internal.Symbol r11;
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1 $r22;
        kotlinx.coroutines.channels.ChannelResult r8;
        kotlin.jvm.functions.Function3 r17;
        kotlin.jvm.functions.Function2 r12;
        kotlin.jvm.functions.Function0 r15;
        kotlin.Unit r19;
        kotlinx.coroutines.flow.FlowCollector r18;
        java.lang.Object $r1, $r2, r4;
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 r0, r3;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label>;

        lookupswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label04;
            case 2: goto label03;
            case 3: goto label02;
            default: goto label01;
        };

     label01:
        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r20;

     label02:
        r3 = r0;

        i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1>;

        i1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0>;

        r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2>;

        r5 = (byte[]) r4;

        r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1>;

        r6 = (kotlinx.coroutines.channels.Channel) r4;

        r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r7 = (java.lang.Object[]) r4;

        goto label09;

     label03:
        r3 = r0;

        i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1>;

        i1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0>;

        r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2>;

        r5 = (byte[]) r4;

        r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1>;

        r6 = (kotlinx.coroutines.channels.Channel) r4;

        r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r7 = (java.lang.Object[]) r4;

        goto label09;

     label04:
        r3 = r0;

        i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1>;

        i1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0>;

        r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2>;

        r5 = (byte[]) r4;

        r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1>;

        r6 = (kotlinx.coroutines.channels.Channel) r4;

        r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0>;

        r7 = (java.lang.Object[]) r4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r8 = (kotlinx.coroutines.channels.ChannelResult) $r1;

        $r1 = virtualinvoke r8.<kotlinx.coroutines.channels.ChannelResult: java.lang.Object unbox-impl()>();

        goto label10;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r3 = r0;

        $r1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0>;

        r9 = (kotlinx.coroutines.CoroutineScope) $r1;

        r10 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows>;

        i1 = lengthof r10;

        if i1 != 0 goto label06;

        r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r19;

     label06:
        r7 = newarray (java.lang.Object)[i1];

        r11 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol UNINITIALIZED>;

        staticinvoke <kotlin.collections.ArraysKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)>(r7, r11, 0, 0, 6, null);

        r6 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>(i1, null, null, 6, null);

        $r21 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r21.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(i1);

        i0 = 0;

     label07:
        if i0 >= i1 goto label08;

        $r22 = new kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1;

        r10 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows>;

        specialinvoke $r22.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: void <init>(kotlinx.coroutines.flow.Flow[],int,java.util.concurrent.atomic.AtomicInteger,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)>(r10, i0, $r21, r6, null);

        r12 = (kotlin.jvm.functions.Function2) $r22;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>(r9, null, null, r12, 3, null);

        i0 = i0 + 1;

        goto label07;

     label08:
        r5 = newarray (byte)[i1];

        i0 = 0;

     label09:
        i0 = i0 + 1;

        b3 = (byte) i0;

        i0 = (int) b3;

        r13 = (kotlin.coroutines.Continuation) r3;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0> = r7;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1> = r6;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2> = r5;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0> = i1;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1> = i0;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label> = 1;

        r4 = interfaceinvoke r6.<kotlinx.coroutines.channels.Channel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)>(r13);

        $r1 = r4;

        if r4 != $r2 goto label10;

        return $r2;

     label10:
        $r1 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrNull-impl(java.lang.Object)>($r1);

        r14 = (kotlin.collections.IndexedValue) $r1;

        if r14 != null goto label11;

        r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r19;

     label11:
        $i2 = virtualinvoke r14.<kotlin.collections.IndexedValue: int getIndex()>();

        $r1 = r7[$i2];

        r4 = virtualinvoke r14.<kotlin.collections.IndexedValue: java.lang.Object getValue()>();

        r7[$i2] = r4;

        r11 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol UNINITIALIZED>;

        if $r1 != r11 goto label12;

        i1 = i1 + -1;

     label12:
        b3 = r5[$i2];

        $i4 = (int) b3;

        if $i4 == i0 goto label13;

        b3 = (byte) i0;

        r5[$i2] = b3;

        $r1 = interfaceinvoke r6.<kotlinx.coroutines.channels.Channel: java.lang.Object tryReceive-PtdJZtk()>();

        $r1 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrNull-impl(java.lang.Object)>($r1);

        r14 = (kotlin.collections.IndexedValue) $r1;

        if r14 != null goto label11;

        goto label13;

     label13:
        if i1 != 0 goto label17;

        r15 = r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function0 $arrayFactory>;

        $r1 = interfaceinvoke r15.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r16 = (java.lang.Object[]) $r1;

        if r16 != null goto label15;

        r17 = r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform>;

        r18 = r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal>;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0> = r7;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1> = r6;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2> = r5;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0> = i1;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1> = i0;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label> = 2;

        $r1 = interfaceinvoke r17.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>(r18, r7, r3);

        if $r1 != $r2 goto label14;

        return $r2;

     label14:
        goto label09;

     label15:
        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)>(r7, r16, 0, 0, 0, 14, null);

        r17 = r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform>;

        r18 = r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal>;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0> = r7;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1> = r6;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2> = r5;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0> = i1;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1> = i0;

        r3.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label> = 3;

        $r1 = interfaceinvoke r17.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>(r18, r16, r3);

        if $r1 != $r2 goto label16;

        return $r2;

     label16:
        goto label09;

     label17:
        goto label09;
    }
}
