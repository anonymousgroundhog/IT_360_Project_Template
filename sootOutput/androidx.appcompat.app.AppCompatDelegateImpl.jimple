class androidx.appcompat.app.AppCompatDelegateImpl extends androidx.appcompat.app.AppCompatDelegate implements androidx.appcompat.view.menu.MenuBuilder$Callback, android.view.LayoutInflater$Factory2
{
    static final java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX;
    private static final boolean IS_PRE_LOLLIPOP;
    private static final boolean sCanApplyOverrideConfiguration;
    private static final boolean sCanReturnDifferentContext;
    private static boolean sInstalledExceptionHandler;
    private static final androidx.collection.SimpleArrayMap sLocalNightModes;
    private static final int[] sWindowBackgroundStyleable;
    androidx.appcompat.app.ActionBar mActionBar;
    private androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback;
    androidx.appcompat.view.ActionMode mActionMode;
    android.widget.PopupWindow mActionModePopup;
    androidx.appcompat.widget.ActionBarContextView mActionModeView;
    private boolean mActivityHandlesUiMode;
    private boolean mActivityHandlesUiModeChecked;
    final androidx.appcompat.app.AppCompatCallback mAppCompatCallback;
    private androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater;
    private androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback;
    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager;
    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager;
    private boolean mBaseContextAttached;
    private boolean mClosingActionMenu;
    final android.content.Context mContext;
    private boolean mCreated;
    private androidx.appcompat.widget.DecorContentParent mDecorContentParent;
    private boolean mEnableDefaultActionBarUp;
    androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim;
    private boolean mFeatureIndeterminateProgress;
    private boolean mFeatureProgress;
    private boolean mHandleNativeActionModes;
    boolean mHasActionBar;
    final java.lang.Object mHost;
    int mInvalidatePanelMenuFeatures;
    boolean mInvalidatePanelMenuPosted;
    private final java.lang.Runnable mInvalidatePanelMenuRunnable;
    boolean mIsDestroyed;
    boolean mIsFloating;
    private int mLocalNightMode;
    private boolean mLongPressBackDown;
    android.view.MenuInflater mMenuInflater;
    boolean mOverlayActionBar;
    boolean mOverlayActionMode;
    private androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback;
    private androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels;
    private androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel;
    java.lang.Runnable mShowActionModePopup;
    private boolean mStarted;
    private android.view.View mStatusGuard;
    android.view.ViewGroup mSubDecor;
    private boolean mSubDecorInstalled;
    private android.graphics.Rect mTempRect1;
    private android.graphics.Rect mTempRect2;
    private int mThemeResId;
    private java.lang.CharSequence mTitle;
    private android.widget.TextView mTitleView;
    android.view.Window mWindow;
    boolean mWindowNoTitle;

    static void <clinit>()
    {
        java.lang.Thread$UncaughtExceptionHandler $r5;
        int[] $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$1 $r0;
        java.lang.String r3, $r4;
        androidx.collection.SimpleArrayMap r1;
        boolean $z0;

        <androidx.appcompat.app.AppCompatDelegateImpl: java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX> = ". If the resource you are trying to use is a vector resource, you may be referencing it in an unsupported way. See AppCompatDelegate.setCompatVectorFromResourcesEnabled() for more info.";

        r1 = new androidx.collection.SimpleArrayMap;

        specialinvoke r1.<androidx.collection.SimpleArrayMap: void <init>()>();

        <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> = r1;

        <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP> = 0;

        $r2 = newarray (int)[1];

        $r2[0] = 16842836;

        <androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable> = $r2;

        r3 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r4 = "robolectric";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        $z0 = $z0 ^ 1;

        <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext> = $z0;

        <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanApplyOverrideConfiguration> = 1;

        $z0 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>;

        if $z0 == 0 goto label1;

        $z0 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler>;

        if $z0 != 0 goto label1;

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        $r0 = new androidx.appcompat.app.AppCompatDelegateImpl$1;

        specialinvoke $r0.<androidx.appcompat.app.AppCompatDelegateImpl$1: void <init>(java.lang.Thread$UncaughtExceptionHandler)>($r5);

        staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r0);

        <androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler> = 1;

     label1:
        return;
    }

    void <init>(android.app.Activity, androidx.appcompat.app.AppCompatCallback)
    {
        androidx.appcompat.app.AppCompatCallback $r2;
        android.app.Activity $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: androidx.appcompat.app.AppCompatCallback;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>($r1, null, $r2, $r1);

        return;
    }

    void <init>(android.app.Dialog, androidx.appcompat.app.AppCompatCallback)
    {
        android.content.Context $r3;
        androidx.appcompat.app.AppCompatCallback $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.app.Dialog $r1;
        android.view.Window $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.app.Dialog;

        $r2 := @parameter1: androidx.appcompat.app.AppCompatCallback;

        $r3 = virtualinvoke $r1.<android.app.Dialog: android.content.Context getContext()>();

        $r4 = virtualinvoke $r1.<android.app.Dialog: android.view.Window getWindow()>();

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>($r3, $r4, $r2, $r1);

        return;
    }

    void <init>(android.content.Context, android.app.Activity, androidx.appcompat.app.AppCompatCallback)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatCallback $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.app.Activity $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.app.Activity;

        $r3 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>($r1, null, $r3, $r2);

        return;
    }

    void <init>(android.content.Context, android.view.Window, androidx.appcompat.app.AppCompatCallback)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatCallback $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.view.Window;

        $r3 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>($r1, $r2, $r3, $r1);

        return;
    }

    private void <init>(android.content.Context, android.view.Window, androidx.appcompat.app.AppCompatCallback, java.lang.Object)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatCallback $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegate $r6;
        androidx.appcompat.app.AppCompatActivity $r5;
        java.lang.Integer r10;
        int i0;
        java.lang.Object $r4;
        java.lang.Class $r8;
        androidx.appcompat.app.AppCompatDelegateImpl$2 $r11;
        java.lang.String $r9;
        android.view.Window $r2;
        boolean z0;
        androidx.collection.SimpleArrayMap r7;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.view.Window;

        $r3 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        $r4 := @parameter3: java.lang.Object;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegate: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = null;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes> = 1;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = -100;

        $r11 = new androidx.appcompat.app.AppCompatDelegateImpl$2;

        specialinvoke $r11.<androidx.appcompat.app.AppCompatDelegateImpl$2: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable> = $r11;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext> = $r1;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback> = $r3;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost> = $r4;

        i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if i0 != -100 goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        z0 = $r4 instanceof android.app.Dialog;

        if z0 == 0 goto label1;

        $r5 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()>();

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r5.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>();

        i0 = virtualinvoke $r6.<androidx.appcompat.app.AppCompatDelegate: int getLocalNightMode()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = i0;

     label1:
        i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if i0 != -100 goto label2;

        r7 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r8 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke r7.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r9);

        r10 = (java.lang.Integer) $r4;

        if r10 == null goto label2;

        i0 = virtualinvoke r10.<java.lang.Integer: int intValue()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = i0;

        r7 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r8 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r7.<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>($r9);

     label2:
        if $r2 == null goto label3;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)>($r2);

     label3:
        staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void preload()>();

        return;
    }

    private boolean applyDayNight(boolean)
    {
        android.content.Context r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 := @parameter0: boolean;

        z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if z1 == 0 goto label1;

        return 0;

     label1:
        $i0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()>();

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $i1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)>(r1, $i0);

        $z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)>($i1, $z0);

        if $i0 != 0 goto label2;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>(r1);

        virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()>();

        goto label3;

     label2:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        if $r2 == null goto label3;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label3:
        if $i0 != 3 goto label4;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)>(r1);

        virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()>();

        return $z0;

     label4:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        if $r2 == null goto label5;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label5:
        return $z0;
    }

    private void applyFixedSizeWindow()
    {
        android.content.Context r5;
        androidx.appcompat.widget.ContentFrameLayout r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.ViewGroup r1;
        android.content.res.TypedArray $r7;
        android.util.TypedValue $r8;
        int[] $r6;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        android.view.Window r4;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r2 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        r3 = (androidx.appcompat.widget.ContentFrameLayout) $r2;

        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r2 = virtualinvoke r4.<android.view.Window: android.view.View getDecorView()>();

        $i0 = virtualinvoke $r2.<android.view.View: int getPaddingLeft()>();

        $i1 = virtualinvoke $r2.<android.view.View: int getPaddingTop()>();

        $i2 = virtualinvoke $r2.<android.view.View: int getPaddingRight()>();

        $i3 = virtualinvoke $r2.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r3.<androidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r6 = <androidx.appcompat.R$styleable: int[] AppCompatTheme>;

        $r7 = virtualinvoke r5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r6);

        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMajor>;

        $r8 = virtualinvoke r3.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()>();

        virtualinvoke $r7.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i0, $r8);

        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMinor>;

        $r8 = virtualinvoke r3.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()>();

        virtualinvoke $r7.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i0, $r8);

        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor>;

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label1;

        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor>;

        $r8 = virtualinvoke r3.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()>();

        virtualinvoke $r7.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i0, $r8);

     label1:
        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor>;

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label2;

        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor>;

        $r8 = virtualinvoke r3.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()>();

        virtualinvoke $r7.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i0, $r8);

     label2:
        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor>;

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label3;

        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor>;

        $r8 = virtualinvoke r3.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()>();

        virtualinvoke $r7.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i0, $r8);

     label3:
        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor>;

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label4;

        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor>;

        $r8 = virtualinvoke r3.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()>();

        virtualinvoke $r7.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i0, $r8);

     label4:
        virtualinvoke $r7.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r3.<androidx.appcompat.widget.ContentFrameLayout: void requestLayout()>();

        return;
    }

    private void attachToWindow(android.view.Window)
    {
        android.content.Context r6;
        java.lang.IllegalStateException r9;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.graphics.drawable.Drawable $r8;
        android.view.Window$Callback $r4;
        int[] $r2;
        androidx.appcompat.widget.TintTypedArray $r7;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r5;
        android.view.Window $r1, r3;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.Window;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        if r3 != null goto label3;

        $r4 = virtualinvoke $r1.<android.view.Window: android.view.Window$Callback getCallback()>();

        z0 = $r4 instanceof androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        if z0 != 0 goto label2;

        r5 = new androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        specialinvoke r5.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)>(r0, $r4);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback> = r5;

        r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        virtualinvoke $r1.<android.view.Window: void setCallback(android.view.Window$Callback)>(r5);

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r2 = <androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable>;

        $r7 = staticinvoke <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])>(r6, null, $r2);

        $r8 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)>(0);

        if $r8 == null goto label1;

        virtualinvoke $r1.<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r8);

     label1:
        virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: void recycle()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow> = $r1;

        return;

     label2:
        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AppCompat has already installed itself into the Window");

        throw r9;

     label3:
        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AppCompat has already installed itself into the Window");

        throw r9;
    }

    private int calculateNightMode()
    {
        int $i0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $i0 == -100 goto label1;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        return $i0;

     label1:
        $i0 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: int getDefaultNightMode()>();

        return $i0;
    }

    private void cleanupAutoManagers()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        if $r1 == null goto label1;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label1:
        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        if $r1 == null goto label2;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label2:
        return;
    }

    private android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context, int, android.content.res.Configuration)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.res.Configuration $r2, $r4, $r5;
        int $i0, $i1;
        android.content.res.Resources $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.res.Configuration;

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r4.<android.content.res.Configuration: int uiMode>;

        $i0 = $i0 & 48;

        goto label4;

     label2:
        $i0 = 32;

        goto label4;

     label3:
        $i0 = 16;

     label4:
        $r5 = new android.content.res.Configuration;

        specialinvoke $r5.<android.content.res.Configuration: void <init>()>();

        $r5.<android.content.res.Configuration: float fontScale> = 0.0F;

        if $r2 == null goto label5;

        virtualinvoke $r5.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>($r2);

     label5:
        $i1 = $r5.<android.content.res.Configuration: int uiMode>;

        $i1 = $i1 & -49;

        $i0 = $i1 | $i0;

        $r5.<android.content.res.Configuration: int uiMode> = $i0;

        return $r5;
    }

    private android.view.ViewGroup createSubDecor()
    {
        android.content.Context r1, r9;
        java.lang.IllegalStateException $r24;
        android.widget.FrameLayout $r15;
        androidx.appcompat.widget.DecorContentParent r10;
        android.content.res.TypedArray $r3;
        int[] r2;
        int i0;
        android.view.View $r7;
        androidx.appcompat.app.AppCompatDelegateImpl$3 $r20;
        java.lang.String $r17;
        android.content.res.Resources$Theme $r8;
        boolean $z0;
        androidx.appcompat.app.AppCompatDelegateImpl$5 $r21;
        androidx.appcompat.widget.ContentFrameLayout r13;
        android.view.LayoutInflater $r5;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.IllegalArgumentException $r23;
        android.view.ViewGroup r6, r14;
        android.view.Window$Callback $r11;
        androidx.appcompat.view.ContextThemeWrapper $r19;
        android.widget.TextView r12;
        android.util.TypedValue $r18;
        java.lang.StringBuilder r16, $r22;
        android.view.Window r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        r2 = <androidx.appcompat.R$styleable: int[] AppCompatTheme>;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>(r2);

        i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar>;

        $z0 = virtualinvoke $r3.<android.content.res.TypedArray: boolean hasValue(int)>(i0);

        if $z0 == 0 goto label19;

        i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowNoTitle>;

        $z0 = virtualinvoke $r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, 0);

        if $z0 == 0 goto label01;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(1);

        goto label02;

     label01:
        i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar>;

        $z0 = virtualinvoke $r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, 0);

        if $z0 == 0 goto label02;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(108);

     label02:
        i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBarOverlay>;

        $z0 = virtualinvoke $r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, 0);

        if $z0 == 0 goto label03;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(109);

     label03:
        i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionModeOverlay>;

        $z0 = virtualinvoke $r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, 0);

        if $z0 == 0 goto label04;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(10);

     label04:
        i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_android_windowIsFloating>;

        $z0 = virtualinvoke $r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, 0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating> = $z0;

        virtualinvoke $r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()>();

        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        virtualinvoke r4.<android.view.Window: android.view.View getDecorView()>();

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r5 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r1);

        r6 = null;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

        if $z0 != 0 goto label11;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating>;

        if $z0 == 0 goto label05;

        i0 = <androidx.appcompat.R$layout: int abc_dialog_title_material>;

        $r7 = virtualinvoke $r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(i0, null);

        r6 = (android.view.ViewGroup) $r7;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar> = 0;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar> = 0;

        goto label13;

     label05:
        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $z0 == 0 goto label13;

        $r18 = new android.util.TypedValue;

        specialinvoke $r18.<android.util.TypedValue: void <init>()>();

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r8 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        i0 = <androidx.appcompat.R$attr: int actionBarTheme>;

        virtualinvoke $r8.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i0, $r18, 1);

        i0 = $r18.<android.util.TypedValue: int resourceId>;

        if i0 == 0 goto label06;

        $r19 = new androidx.appcompat.view.ContextThemeWrapper;

        r1 = $r19;

        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        i0 = $r18.<android.util.TypedValue: int resourceId>;

        specialinvoke $r19.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r9, i0);

        goto label07;

     label06:
        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label07:
        $r5 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r1);

        i0 = <androidx.appcompat.R$layout: int abc_screen_toolbar>;

        $r7 = virtualinvoke $r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(i0, null);

        r6 = (android.view.ViewGroup) $r7;

        i0 = <androidx.appcompat.R$id: int decor_content_parent>;

        $r7 = virtualinvoke r6.<android.view.ViewGroup: android.view.View findViewById(int)>(i0);

        r10 = (androidx.appcompat.widget.DecorContentParent) $r7;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent> = r10;

        r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $r11 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        interfaceinvoke r10.<androidx.appcompat.widget.DecorContentParent: void setWindowCallback(android.view.Window$Callback)>($r11);

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        if $z0 == 0 goto label08;

        r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke r10.<androidx.appcompat.widget.DecorContentParent: void initFeature(int)>(109);

     label08:
        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress>;

        if $z0 == 0 goto label09;

        r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke r10.<androidx.appcompat.widget.DecorContentParent: void initFeature(int)>(2);

     label09:
        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress>;

        if $z0 == 0 goto label10;

        r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke r10.<androidx.appcompat.widget.DecorContentParent: void initFeature(int)>(5);

     label10:
        goto label13;

     label11:
        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        if $z0 == 0 goto label12;

        i0 = <androidx.appcompat.R$layout: int abc_screen_simple_overlay_action_mode>;

        $r7 = virtualinvoke $r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(i0, null);

        r6 = (android.view.ViewGroup) $r7;

        goto label13;

     label12:
        i0 = <androidx.appcompat.R$layout: int abc_screen_simple>;

        $r7 = virtualinvoke $r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(i0, null);

        r6 = (android.view.ViewGroup) $r7;

     label13:
        if r6 == null goto label18;

        $r20 = new androidx.appcompat.app.AppCompatDelegateImpl$3;

        specialinvoke $r20.<androidx.appcompat.app.AppCompatDelegateImpl$3: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>(r6, $r20);

        r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if r10 != null goto label14;

        i0 = <androidx.appcompat.R$id: int title>;

        $r7 = virtualinvoke r6.<android.view.ViewGroup: android.view.View findViewById(int)>(i0);

        r12 = (android.widget.TextView) $r7;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView> = r12;

     label14:
        staticinvoke <androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)>(r6);

        i0 = <androidx.appcompat.R$id: int action_bar_activity_content>;

        $r7 = virtualinvoke r6.<android.view.ViewGroup: android.view.View findViewById(int)>(i0);

        r13 = (androidx.appcompat.widget.ContentFrameLayout) $r7;

        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r7 = virtualinvoke r4.<android.view.Window: android.view.View findViewById(int)>(16908290);

        r14 = (android.view.ViewGroup) $r7;

        if r14 == null goto label17;

     label15:
        i0 = virtualinvoke r14.<android.view.ViewGroup: int getChildCount()>();

        if i0 <= 0 goto label16;

        $r7 = virtualinvoke r14.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        virtualinvoke r14.<android.view.ViewGroup: void removeViewAt(int)>(0);

        virtualinvoke r13.<androidx.appcompat.widget.ContentFrameLayout: void addView(android.view.View)>($r7);

        goto label15;

     label16:
        virtualinvoke r14.<android.view.ViewGroup: void setId(int)>(-1);

        virtualinvoke r13.<androidx.appcompat.widget.ContentFrameLayout: void setId(int)>(16908290);

        $z0 = r14 instanceof android.widget.FrameLayout;

        if $z0 == 0 goto label17;

        $r15 = (android.widget.FrameLayout) r14;

        virtualinvoke $r15.<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>(null);

     label17:
        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        virtualinvoke r4.<android.view.Window: void setContentView(android.view.View)>(r6);

        $r21 = new androidx.appcompat.app.AppCompatDelegateImpl$5;

        specialinvoke $r21.<androidx.appcompat.app.AppCompatDelegateImpl$5: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        virtualinvoke r13.<androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)>($r21);

        return r6;

     label18:
        $r23 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        r16 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppCompat does not support the current theme features: { windowActionBar: ");

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        r16 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r16 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowActionBarOverlay: ");

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        r16 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r16 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", android:windowIsFloating: ");

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating>;

        r16 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r16 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowActionModeOverlay: ");

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        r16 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r16 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowNoTitle: ");

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

        r16 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r16 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r17 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r23;

     label19:
        virtualinvoke $r3.<android.content.res.TypedArray: void recycle()>();

        $r24 = new java.lang.IllegalStateException;

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You need to use a Theme.AppCompat theme (or descendant) with this activity.");

        throw $r24;
    }

    private void ensureSubDecor()
    {
        java.lang.CharSequence $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r6;
        androidx.appcompat.view.menu.MenuBuilder $r7;
        android.view.ViewGroup $r1;
        androidx.appcompat.widget.DecorContentParent r3;
        androidx.appcompat.app.ActionBar $r4;
        android.widget.TextView r5;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if z0 != 0 goto label5;

        $r1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor> = $r1;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()>();

        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if z0 != 0 goto label3;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if r3 == null goto label1;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke r3.<androidx.appcompat.widget.DecorContentParent: void setWindowTitle(java.lang.CharSequence)>($r2);

        goto label3;

     label1:
        $r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        if $r4 == null goto label2;

        $r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        virtualinvoke $r4.<androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>($r2);

        goto label3;

     label2:
        r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>;

        if r5 == null goto label3;

        r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>;

        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

     label3:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()>();

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)>($r1);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled> = 1;

        $r6 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if z0 != 0 goto label5;

        if $r6 == null goto label4;

        $r7 = $r6.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r7 != null goto label5;

     label4:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)>(108);

     label5:
        return;
    }

    private void ensureWindow()
    {
        java.lang.IllegalStateException $r4;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Object $r2;
        android.view.Window $r1;
        android.app.Activity $r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        if $r1 != null goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r2 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r3 = (android.app.Activity) $r2;

        $r1 = virtualinvoke $r3.<android.app.Activity: android.view.Window getWindow()>();

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)>($r1);

     label1:
        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        if $r1 == null goto label2;

        return;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("We have not been given a Window");

        throw $r4;
    }

    private static android.content.res.Configuration generateConfigDelta(android.content.res.Configuration, android.content.res.Configuration)
    {
        byte $b1;
        java.util.Locale $r3, $r4;
        android.content.res.Configuration $r0, $r1, r2;
        int $i0, $i2;
        float $f0, $f1;
        boolean $z0;

        $r0 := @parameter0: android.content.res.Configuration;

        $r1 := @parameter1: android.content.res.Configuration;

        r2 = new android.content.res.Configuration;

        specialinvoke r2.<android.content.res.Configuration: void <init>()>();

        r2.<android.content.res.Configuration: float fontScale> = 0.0F;

        if $r1 == null goto label23;

        $i0 = virtualinvoke $r0.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r1);

        if $i0 != 0 goto label01;

        return r2;

     label01:
        $f0 = $r0.<android.content.res.Configuration: float fontScale>;

        $f1 = $r1.<android.content.res.Configuration: float fontScale>;

        $b1 = $f0 cmpl $f1;

        if $b1 == 0 goto label02;

        $f0 = $r1.<android.content.res.Configuration: float fontScale>;

        r2.<android.content.res.Configuration: float fontScale> = $f0;

     label02:
        $i0 = $r0.<android.content.res.Configuration: int mcc>;

        $i2 = $r1.<android.content.res.Configuration: int mcc>;

        if $i0 == $i2 goto label03;

        $i0 = $r1.<android.content.res.Configuration: int mcc>;

        r2.<android.content.res.Configuration: int mcc> = $i0;

     label03:
        $i0 = $r0.<android.content.res.Configuration: int mnc>;

        $i2 = $r1.<android.content.res.Configuration: int mnc>;

        if $i0 == $i2 goto label04;

        $i0 = $r1.<android.content.res.Configuration: int mnc>;

        r2.<android.content.res.Configuration: int mnc> = $i0;

     label04:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label05;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi24: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)>($r0, $r1, r2);

        goto label06;

     label05:
        $r3 = $r0.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = $r1.<android.content.res.Configuration: java.util.Locale locale>;

        $z0 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 != 0 goto label06;

        $r3 = $r1.<android.content.res.Configuration: java.util.Locale locale>;

        r2.<android.content.res.Configuration: java.util.Locale locale> = $r3;

     label06:
        $i0 = $r0.<android.content.res.Configuration: int touchscreen>;

        $i2 = $r1.<android.content.res.Configuration: int touchscreen>;

        if $i0 == $i2 goto label07;

        $i0 = $r1.<android.content.res.Configuration: int touchscreen>;

        r2.<android.content.res.Configuration: int touchscreen> = $i0;

     label07:
        $i0 = $r0.<android.content.res.Configuration: int keyboard>;

        $i2 = $r1.<android.content.res.Configuration: int keyboard>;

        if $i0 == $i2 goto label08;

        $i0 = $r1.<android.content.res.Configuration: int keyboard>;

        r2.<android.content.res.Configuration: int keyboard> = $i0;

     label08:
        $i0 = $r0.<android.content.res.Configuration: int keyboardHidden>;

        $i2 = $r1.<android.content.res.Configuration: int keyboardHidden>;

        if $i0 == $i2 goto label09;

        $i0 = $r1.<android.content.res.Configuration: int keyboardHidden>;

        r2.<android.content.res.Configuration: int keyboardHidden> = $i0;

     label09:
        $i0 = $r0.<android.content.res.Configuration: int navigation>;

        $i2 = $r1.<android.content.res.Configuration: int navigation>;

        if $i0 == $i2 goto label10;

        $i0 = $r1.<android.content.res.Configuration: int navigation>;

        r2.<android.content.res.Configuration: int navigation> = $i0;

     label10:
        $i0 = $r0.<android.content.res.Configuration: int navigationHidden>;

        $i2 = $r1.<android.content.res.Configuration: int navigationHidden>;

        if $i0 == $i2 goto label11;

        $i0 = $r1.<android.content.res.Configuration: int navigationHidden>;

        r2.<android.content.res.Configuration: int navigationHidden> = $i0;

     label11:
        $i0 = $r0.<android.content.res.Configuration: int orientation>;

        $i2 = $r1.<android.content.res.Configuration: int orientation>;

        if $i0 == $i2 goto label12;

        $i0 = $r1.<android.content.res.Configuration: int orientation>;

        r2.<android.content.res.Configuration: int orientation> = $i0;

     label12:
        $i0 = $r0.<android.content.res.Configuration: int screenLayout>;

        $i0 = $i0 & 15;

        $i2 = $r1.<android.content.res.Configuration: int screenLayout>;

        $i2 = $i2 & 15;

        if $i0 == $i2 goto label13;

        $i0 = r2.<android.content.res.Configuration: int screenLayout>;

        $i2 = $r1.<android.content.res.Configuration: int screenLayout>;

        $i2 = $i2 & 15;

        $i0 = $i0 | $i2;

        r2.<android.content.res.Configuration: int screenLayout> = $i0;

     label13:
        $i0 = $r0.<android.content.res.Configuration: int screenLayout>;

        $i0 = $i0 & 192;

        $i2 = $r1.<android.content.res.Configuration: int screenLayout>;

        $i2 = $i2 & 192;

        if $i0 == $i2 goto label14;

        $i0 = r2.<android.content.res.Configuration: int screenLayout>;

        $i2 = $r1.<android.content.res.Configuration: int screenLayout>;

        $i2 = $i2 & 192;

        $i0 = $i0 | $i2;

        r2.<android.content.res.Configuration: int screenLayout> = $i0;

     label14:
        $i0 = $r0.<android.content.res.Configuration: int screenLayout>;

        $i0 = $i0 & 48;

        $i2 = $r1.<android.content.res.Configuration: int screenLayout>;

        $i2 = $i2 & 48;

        if $i0 == $i2 goto label15;

        $i0 = r2.<android.content.res.Configuration: int screenLayout>;

        $i2 = $r1.<android.content.res.Configuration: int screenLayout>;

        $i2 = $i2 & 48;

        $i0 = $i0 | $i2;

        r2.<android.content.res.Configuration: int screenLayout> = $i0;

     label15:
        $i0 = $r0.<android.content.res.Configuration: int screenLayout>;

        $i0 = $i0 & 768;

        $i2 = $r1.<android.content.res.Configuration: int screenLayout>;

        $i2 = $i2 & 768;

        if $i0 == $i2 goto label16;

        $i0 = r2.<android.content.res.Configuration: int screenLayout>;

        $i2 = $r1.<android.content.res.Configuration: int screenLayout>;

        $i2 = $i2 & 768;

        $i0 = $i0 | $i2;

        r2.<android.content.res.Configuration: int screenLayout> = $i0;

     label16:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label17;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi26: void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)>($r0, $r1, r2);

     label17:
        $i0 = $r0.<android.content.res.Configuration: int uiMode>;

        $i0 = $i0 & 15;

        $i2 = $r1.<android.content.res.Configuration: int uiMode>;

        $i2 = $i2 & 15;

        if $i0 == $i2 goto label18;

        $i0 = r2.<android.content.res.Configuration: int uiMode>;

        $i2 = $r1.<android.content.res.Configuration: int uiMode>;

        $i2 = $i2 & 15;

        $i0 = $i0 | $i2;

        r2.<android.content.res.Configuration: int uiMode> = $i0;

     label18:
        $i0 = $r0.<android.content.res.Configuration: int uiMode>;

        $i0 = $i0 & 48;

        $i2 = $r1.<android.content.res.Configuration: int uiMode>;

        $i2 = $i2 & 48;

        if $i0 == $i2 goto label19;

        $i0 = r2.<android.content.res.Configuration: int uiMode>;

        $i2 = $r1.<android.content.res.Configuration: int uiMode>;

        $i2 = $i2 & 48;

        $i0 = $i0 | $i2;

        r2.<android.content.res.Configuration: int uiMode> = $i0;

     label19:
        $i0 = $r0.<android.content.res.Configuration: int screenWidthDp>;

        $i2 = $r1.<android.content.res.Configuration: int screenWidthDp>;

        if $i0 == $i2 goto label20;

        $i0 = $r1.<android.content.res.Configuration: int screenWidthDp>;

        r2.<android.content.res.Configuration: int screenWidthDp> = $i0;

     label20:
        $i0 = $r0.<android.content.res.Configuration: int screenHeightDp>;

        $i2 = $r1.<android.content.res.Configuration: int screenHeightDp>;

        if $i0 == $i2 goto label21;

        $i0 = $r1.<android.content.res.Configuration: int screenHeightDp>;

        r2.<android.content.res.Configuration: int screenHeightDp> = $i0;

     label21:
        $i0 = $r0.<android.content.res.Configuration: int smallestScreenWidthDp>;

        $i2 = $r1.<android.content.res.Configuration: int smallestScreenWidthDp>;

        if $i0 == $i2 goto label22;

        $i0 = $r1.<android.content.res.Configuration: int smallestScreenWidthDp>;

        r2.<android.content.res.Configuration: int smallestScreenWidthDp> = $i0;

     label22:
        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi17: void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)>($r0, $r1, r2);

     label23:
        return r2;
    }

    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        if $r2 != null goto label1;

        $r3 = new androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager;

        specialinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)>(r0, $r1);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager> = $r3;

     label1:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        return $r2;
    }

    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.TwilightManager $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.content.Context;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        if $r3 != null goto label1;

        $r4 = new androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager;

        $r2 = staticinvoke <androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)>($r1);

        specialinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)>(r0, $r2);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager> = $r4;

     label1:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        return $r3;
    }

    private void initWindowDecorActionBar()
    {
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.WindowDecorActionBar $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Object $r2;
        android.app.Dialog $r5;
        android.app.Activity $r4;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $z0 == 0 goto label4;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r2 instanceof android.app.Activity;

        if $z0 == 0 goto label2;

        $r3 = new androidx.appcompat.app.WindowDecorActionBar;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r4 = (android.app.Activity) $r2;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        specialinvoke $r3.<androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)>($r4, $z0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = $r3;

        goto label3;

     label2:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r2 instanceof android.app.Dialog;

        if $z0 == 0 goto label3;

        $r3 = new androidx.appcompat.app.WindowDecorActionBar;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r5 = (android.app.Dialog) $r2;

        specialinvoke $r3.<androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)>($r5);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = $r3;

     label3:
        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $r1 == null goto label4;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp>;

        virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>($z0);

     label4:
        return;
    }

    private boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;
        androidx.appcompat.view.menu.MenuBuilder r4;
        android.view.View r3;
        androidx.appcompat.view.menu.MenuView $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        r3 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        if r3 == null goto label1;

        r3 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView> = r3;

        return 1;

     label1:
        r4 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if r4 != null goto label2;

        return 0;

     label2:
        r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback>;

        if r5 != null goto label3;

        r5 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback;

        specialinvoke r5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback> = r5;

     label3:
        r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback>;

        $r2 = virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)>(r5);

        r3 = (android.view.View) $r2;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView> = r3;

        r3 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        if r3 == null goto label4;

        return 1;

     label4:
        return 0;
    }

    private boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        android.content.Context $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()>();

        virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setStyle(android.content.Context)>($r2);

        $r3 = new androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView;

        $r2 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext>;

        specialinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)>(r0, $r2);

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView> = $r3;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity> = 81;

        return 1;
    }

    private boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        android.content.Context r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;
        androidx.appcompat.view.menu.MenuBuilder r10;
        androidx.appcompat.widget.DecorContentParent r3;
        androidx.appcompat.view.ContextThemeWrapper $r9;
        android.util.TypedValue r4;
        int i0;
        android.content.res.Resources$Theme $r5, r6, $r8;
        android.content.res.Resources $r7;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if i0 == 0 goto label1;

        i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if i0 != 108 goto label6;

     label1:
        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if r3 == null goto label6;

        r4 = new android.util.TypedValue;

        specialinvoke r4.<android.util.TypedValue: void <init>()>();

        $r5 = virtualinvoke r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        i0 = <androidx.appcompat.R$attr: int actionBarTheme>;

        virtualinvoke $r5.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i0, r4, 1);

        r6 = null;

        i0 = r4.<android.util.TypedValue: int resourceId>;

        if i0 == 0 goto label2;

        $r7 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        r6 = $r8;

        virtualinvoke $r8.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($r5);

        i0 = r4.<android.util.TypedValue: int resourceId>;

        virtualinvoke $r8.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>(i0, 1);

        i0 = <androidx.appcompat.R$attr: int actionBarWidgetTheme>;

        virtualinvoke $r8.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i0, r4, 1);

        goto label3;

     label2:
        i0 = <androidx.appcompat.R$attr: int actionBarWidgetTheme>;

        virtualinvoke $r5.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i0, r4, 1);

     label3:
        i0 = r4.<android.util.TypedValue: int resourceId>;

        if i0 == 0 goto label5;

        if r6 != null goto label4;

        $r7 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        r6 = $r8;

        virtualinvoke $r8.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($r5);

     label4:
        i0 = r4.<android.util.TypedValue: int resourceId>;

        virtualinvoke r6.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>(i0, 1);

     label5:
        if r6 == null goto label6;

        $r9 = new androidx.appcompat.view.ContextThemeWrapper;

        specialinvoke $r9.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r2, 0);

        r2 = $r9;

        $r5 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r5.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>(r6);

     label6:
        r10 = new androidx.appcompat.view.menu.MenuBuilder;

        specialinvoke r10.<androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)>(r2);

        virtualinvoke r10.<androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)>(r0);

        virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)>(r10);

        return 1;
    }

    private void invalidatePanelMenu(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0, $i1;
        android.view.View $r1;
        android.view.Window $r2;
        java.lang.Runnable $r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $i1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures>;

        $i0 = 1 << $i0;

        $i0 = $i1 | $i0;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures> = $i0;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted>;

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r1 = virtualinvoke $r2.<android.view.Window: android.view.View getDecorView()>();

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>($r1, $r3);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted> = 1;

     label1:
        return;
    }

    private boolean isActivityManifestHandlingUiMode()
    {
        android.content.Context r2;
        android.content.pm.PackageManager $r3;
        android.content.ComponentName r4;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.pm.PackageManager$NameNotFoundException r7;
        int i0, i1;
        android.content.pm.ActivityInfo $r6;
        java.lang.Object r1;
        java.lang.Class $r5;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiModeChecked>;

        if z0 != 0 goto label9;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        z0 = r1 instanceof android.app.Activity;

        if z0 == 0 goto label9;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r3 = virtualinvoke r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        if $r3 != null goto label1;

        return 0;

     label1:
        i0 = 0;

        i1 = <android.os.Build$VERSION: int SDK_INT>;

        if i1 < 29 goto label2;

        i0 = 269221888;

        goto label3;

     label2:
        i1 = <android.os.Build$VERSION: int SDK_INT>;

        if i1 < 24 goto label3;

        i0 = 786432;

     label3:
        r4 = new android.content.ComponentName;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

     label4:
        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r2, $r5);

        $r6 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r4, i0);

     label5:
        if $r6 == null goto label6;

        i0 = $r6.<android.content.pm.ActivityInfo: int configChanges>;

        i0 = i0 & 512;

        if i0 == 0 goto label6;

        z0 = 1;

        goto label7;

     label6:
        z0 = 0;

     label7:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode> = z0;

        goto label9;

     label8:
        r7 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("AppCompatDelegate", "Exception while getting ActivityInfo", r7);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode> = 0;

     label9:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiModeChecked> = 1;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode>;

        return z0;

        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label8;
    }

    private boolean onKeyDownPanel(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i1 != 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($i0, 1);

        $z0 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z0 != 0 goto label1;

        $z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($r2, $r1);

        return $z0;

     label1:
        return 0;
    }

    private boolean onKeyUpPanel(int, android.view.KeyEvent)
    {
        android.content.Context $r5;
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r3;
        androidx.appcompat.widget.DecorContentParent $r4;
        androidx.appcompat.view.ActionMode r2;
        android.media.AudioManager r8;
        android.view.ViewConfiguration $r6;
        int $i0;
        java.lang.Object $r7;
        boolean z0, $z1, $z2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if r2 == null goto label1;

        return 0;

     label1:
        z0 = 0;

        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($i0, 1);

        if $i0 != 0 goto label3;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r4 == null goto label3;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z1 = interfaceinvoke $r4.<androidx.appcompat.widget.DecorContentParent: boolean canShowOverflowMenu()>();

        if $z1 == 0 goto label3;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r6 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r5);

        $z1 = virtualinvoke $r6.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        if $z1 != 0 goto label3;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z1 = interfaceinvoke $r4.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()>();

        if $z1 != 0 goto label2;

        $z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if $z1 != 0 goto label7;

        $z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($r3, $r1);

        if $z1 == 0 goto label7;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        z0 = interfaceinvoke $r4.<androidx.appcompat.widget.DecorContentParent: boolean showOverflowMenu()>();

        goto label7;

     label2:
        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        z0 = interfaceinvoke $r4.<androidx.appcompat.widget.DecorContentParent: boolean hideOverflowMenu()>();

        goto label7;

     label3:
        $z1 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z1 != 0 goto label6;

        $z1 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled>;

        if $z1 == 0 goto label4;

        goto label6;

     label4:
        $z1 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared>;

        if $z1 == 0 goto label7;

        $z1 = 1;

        $z2 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent>;

        if $z2 == 0 goto label5;

        $r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        $z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($r3, $r1);

     label5:
        if $z1 == 0 goto label7;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($r3, $r1);

        z0 = 1;

        goto label7;

     label6:
        z0 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($r3, 1);

     label7:
        if z0 == 0 goto label9;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r5 = virtualinvoke $r5.<android.content.Context: android.content.Context getApplicationContext()>();

        $r7 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        r8 = (android.media.AudioManager) $r7;

        if r8 == null goto label8;

        virtualinvoke r8.<android.media.AudioManager: void playSoundEffect(int)>(0);

        return z0;

     label8:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AppCompatDelegate", "Couldn\'t get audio manager");

     label9:
        return z0;
    }

    private void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.KeyEvent)
    {
        android.content.Context r3;
        android.view.ViewParent $r14;
        android.view.KeyEvent $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;
        android.view.WindowManager r9;
        byte b2;
        int $i0, $i1, $i3;
        android.view.View r11;
        android.view.WindowManager$LayoutParams $r15;
        boolean z0;
        android.view.ViewGroup$LayoutParams $r12, r13;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder r7;
        android.view.ViewGroup r10;
        android.view.Window$Callback $r6;
        android.content.res.Configuration $r5;
        java.lang.Object $r8;
        android.content.res.Resources $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $r2 := @parameter1: android.view.KeyEvent;

        z0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if z0 != 0 goto label18;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if z0 == 0 goto label01;

        return;

     label01:
        $i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if $i0 != 0 goto label04;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r4 = virtualinvoke r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r5.<android.content.res.Configuration: int screenLayout>;

        $i0 = $i0 & 15;

        if $i0 != 4 goto label02;

        z0 = 1;

        goto label03;

     label02:
        z0 = 0;

     label03:
        if z0 == 0 goto label04;

        return;

     label04:
        $r6 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if $r6 == null goto label05;

        $i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        r7 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        z0 = interfaceinvoke $r6.<android.view.Window$Callback: boolean onMenuOpened(int,android.view.Menu)>($i0, r7);

        if z0 != 0 goto label05;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($r1, 1);

        return;

     label05:
        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r8 = virtualinvoke r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r9 = (android.view.WindowManager) $r8;

        if r9 != null goto label06;

        return;

     label06:
        z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($r1, $r2);

        if z0 != 0 goto label07;

        return;

     label07:
        b2 = -2;

        r10 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if r10 == null goto label10;

        z0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView>;

        if z0 == 0 goto label08;

        goto label10;

     label08:
        r11 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        if r11 == null goto label09;

        r11 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        $r12 = virtualinvoke r11.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $r12 == null goto label16;

        $i0 = $r12.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 != -1 goto label16;

        b2 = -1;

        goto label16;

     label09:
        goto label16;

     label10:
        r10 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if r10 != null goto label11;

        z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>($r1);

        if z0 == 0 goto label18;

        r10 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if r10 != null goto label12;

        return;

     label11:
        z0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView>;

        if z0 == 0 goto label12;

        r10 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        $i0 = virtualinvoke r10.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label12;

        r10 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        virtualinvoke r10.<android.view.ViewGroup: void removeAllViews()>();

     label12:
        z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>($r1);

        if z0 == 0 goto label17;

        z0 = virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean hasPanelItems()>();

        if z0 != 0 goto label13;

        goto label17;

     label13:
        r11 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        $r12 = virtualinvoke r11.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r13 = $r12;

        if $r12 != null goto label14;

        r13 = new android.view.ViewGroup$LayoutParams;

        specialinvoke r13.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

     label14:
        $i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int background>;

        r10 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        virtualinvoke r10.<android.view.ViewGroup: void setBackgroundResource(int)>($i0);

        r11 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        $r14 = virtualinvoke r11.<android.view.View: android.view.ViewParent getParent()>();

        z0 = $r14 instanceof android.view.ViewGroup;

        if z0 == 0 goto label15;

        r10 = (android.view.ViewGroup) $r14;

        r11 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        virtualinvoke r10.<android.view.ViewGroup: void removeView(android.view.View)>(r11);

     label15:
        r10 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        r11 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        virtualinvoke r10.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r11, r13);

        r11 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        z0 = virtualinvoke r11.<android.view.View: boolean hasFocus()>();

        if z0 != 0 goto label09;

        r11 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        virtualinvoke r11.<android.view.View: boolean requestFocus()>();

        goto label09;

     label16:
        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 0;

        $r15 = new android.view.WindowManager$LayoutParams;

        $i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int x>;

        $i1 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int y>;

        $i3 = (int) b2;

        specialinvoke $r15.<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int,int,int)>($i3, -2, $i0, $i1, 1002, 8519680, -3);

        $i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity>;

        $r15.<android.view.WindowManager$LayoutParams: int gravity> = $i0;

        $i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int windowAnimations>;

        $r15.<android.view.WindowManager$LayoutParams: int windowAnimations> = $i0;

        r10 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        interfaceinvoke r9.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r10, $r15);

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen> = 1;

        return;

     label17:
        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

     label18:
        return;
    }

    private boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, int, android.view.KeyEvent, int)
    {
        android.view.KeyEvent $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;
        androidx.appcompat.view.menu.MenuBuilder $r3;
        androidx.appcompat.widget.DecorContentParent $r4;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.KeyEvent;

        $i1 := @parameter3: int;

        $z0 = virtualinvoke $r2.<android.view.KeyEvent: boolean isSystem()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = 0;

        $z1 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared>;

        if $z1 != 0 goto label2;

        $z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($r1, $r2);

        if $z1 == 0 goto label3;

     label2:
        $r3 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r3 == null goto label3;

        $r3 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $z0 = virtualinvoke $r3.<androidx.appcompat.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)>($i0, $r2, $i1);

     label3:
        if $z0 == 0 goto label4;

        $i0 = $i1 & 1;

        if $i0 != 0 goto label4;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r4 != null goto label4;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($r1, 1);

     label4:
        return $z0;
    }

    private boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.KeyEvent)
    {
        android.view.KeyEvent $r2;
        android.os.Bundle r10;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1, r4;
        androidx.appcompat.widget.DecorContentParent r7;
        androidx.appcompat.app.ActionBar $r8;
        int i0;
        android.view.View $r6;
        boolean z0, z1;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback $r3, $r12;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder r9;
        android.view.Window$Callback $r5;
        android.view.KeyCharacterMap $r11;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $r2 := @parameter1: android.view.KeyEvent;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if z0 == 0 goto label01;

        return 0;

     label01:
        z0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared>;

        if z0 == 0 goto label02;

        return 1;

     label02:
        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if r4 == null goto label03;

        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if r4 == $r1 goto label03;

        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>(r4, 0);

     label03:
        $r5 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if $r5 == null goto label04;

        i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        $r6 = interfaceinvoke $r5.<android.view.Window$Callback: android.view.View onCreatePanelView(int)>(i0);

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView> = $r6;

     label04:
        i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if i0 == 0 goto label06;

        i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if i0 != 108 goto label05;

        goto label06;

     label05:
        z0 = 0;

        goto label07;

     label06:
        z0 = 1;

     label07:
        if z0 == 0 goto label08;

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if r7 == null goto label08;

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke r7.<androidx.appcompat.widget.DecorContentParent: void setMenuPrepared()>();

     label08:
        $r6 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        if $r6 != null goto label23;

        if z0 == 0 goto label09;

        $r8 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        z1 = $r8 instanceof androidx.appcompat.app.ToolbarActionBar;

        if z1 != 0 goto label23;

     label09:
        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if r9 == null goto label10;

        z1 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent>;

        if z1 == 0 goto label15;

     label10:
        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if r9 != null goto label11;

        z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>($r1);

        if z1 == 0 goto label24;

        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if r9 != null goto label11;

        return 0;

     label11:
        if z0 == 0 goto label13;

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if r7 == null goto label13;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        if $r3 != null goto label12;

        $r12 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback;

        specialinvoke $r12.<androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback> = $r12;

     label12:
        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        interfaceinvoke r7.<androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>(r9, $r3);

     label13:
        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke r9.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        z1 = interfaceinvoke $r5.<android.view.Window$Callback: boolean onCreatePanelMenu(int,android.view.Menu)>(i0, r9);

        if z1 != 0 goto label14;

        virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)>(null);

        if z0 == 0 goto label24;

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if r7 == null goto label24;

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        interfaceinvoke r7.<androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>(null, $r3);

        return 0;

     label14:
        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent> = 0;

     label15:
        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke r9.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        r10 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState>;

        if r10 == null goto label16;

        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        r10 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState>;

        virtualinvoke r9.<androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>(r10);

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState> = null;

     label16:
        $r6 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        z1 = interfaceinvoke $r5.<android.view.Window$Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(0, $r6, r9);

        if z1 != 0 goto label18;

        if z0 == 0 goto label17;

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if r7 == null goto label17;

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        interfaceinvoke r7.<androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>(null, $r3);

     label17:
        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke r9.<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

        return 0;

     label18:
        if $r2 == null goto label19;

        i0 = virtualinvoke $r2.<android.view.KeyEvent: int getDeviceId()>();

        goto label20;

     label19:
        i0 = -1;

     label20:
        $r11 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(i0);

        i0 = virtualinvoke $r11.<android.view.KeyCharacterMap: int getKeyboardType()>();

        if i0 == 1 goto label21;

        z0 = 1;

        goto label22;

     label21:
        z0 = 0;

     label22:
        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode> = z0;

        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        z0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode>;

        virtualinvoke r9.<androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)>(z0);

        r9 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke r9.<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

     label23:
        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 1;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 0;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel> = $r1;

        return 1;

     label24:
        return 0;
    }

    private void reopenMenu(boolean)
    {
        android.content.Context r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r5;
        androidx.appcompat.view.menu.MenuBuilder $r6;
        java.lang.Runnable $r9;
        androidx.appcompat.widget.DecorContentParent r1;
        android.view.Window$Callback $r4;
        android.view.ViewConfiguration $r3;
        int $i0;
        android.view.View $r8;
        android.view.Window $r7;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 := @parameter0: boolean;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if r1 == null goto label6;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z1 = interfaceinvoke r1.<androidx.appcompat.widget.DecorContentParent: boolean canShowOverflowMenu()>();

        if $z1 == 0 goto label6;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r2);

        $z1 = virtualinvoke $r3.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        if $z1 == 0 goto label1;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z1 = interfaceinvoke r1.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowPending()>();

        if $z1 == 0 goto label6;

     label1:
        $r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z1 = interfaceinvoke r1.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()>();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke r1.<androidx.appcompat.widget.DecorContentParent: boolean hideOverflowMenu()>();

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if $z0 != 0 goto label7;

        $r5 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        $r6 = $r5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        interfaceinvoke $r4.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(108, $r6);

        return;

     label3:
        if $r4 == null goto label7;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if $z0 != 0 goto label7;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted>;

        if $z0 == 0 goto label4;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label4;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r8 = virtualinvoke $r7.<android.view.Window: android.view.View getDecorView()>();

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        virtualinvoke $r8.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r9);

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        interfaceinvoke $r9.<java.lang.Runnable: void run()>();

     label4:
        $r5 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        $r6 = $r5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r6 == null goto label5;

        $z0 = $r5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent>;

        if $z0 != 0 goto label5;

        $r8 = $r5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        $r6 = $r5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $z0 = interfaceinvoke $r4.<android.view.Window$Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(0, $r8, $r6);

        if $z0 == 0 goto label5;

        $r6 = $r5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        interfaceinvoke $r4.<android.view.Window$Callback: boolean onMenuOpened(int,android.view.Menu)>(108, $r6);

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke r1.<androidx.appcompat.widget.DecorContentParent: boolean showOverflowMenu()>();

     label5:
        return;

     label6:
        $r5 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        $r5.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($r5, 0);

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($r5, null);

     label7:
        return;
    }

    private int sanitizeWindowFeatureId(int)
    {
        int $i0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        if $i0 != 8 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR id when requesting this feature.");

        return 108;

     label1:
        if $i0 != 9 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY id when requesting this feature.");

        return 109;

     label2:
        return $i0;
    }

    private boolean shouldInheritContext(android.view.ViewParent)
    {
        android.view.ViewParent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r3, $r4;
        android.view.Window r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.ViewParent;

        if $r1 != null goto label1;

        return 0;

     label1:
        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r3 = virtualinvoke r2.<android.view.Window: android.view.View getDecorView()>();

     label2:
        if $r1 != null goto label3;

        return 1;

     label3:
        if $r1 == $r3 goto label5;

        $z0 = $r1 instanceof android.view.View;

        if $z0 == 0 goto label5;

        $r4 = (android.view.View) $r1;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>($r4);

        if $z0 == 0 goto label4;

        return 0;

     label4:
        $r1 = interfaceinvoke $r1.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label2;

     label5:
        return 0;
    }

    private void throwFeatureRequestIfSubDecorInstalled()
    {
        android.util.AndroidRuntimeException $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new android.util.AndroidRuntimeException;

        specialinvoke $r1.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Window feature must be requested before adding content");

        throw $r1;
    }

    private androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.ContextWrapper $r3;
        androidx.appcompat.app.AppCompatActivity $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label1:
        if $r1 == null goto label3;

        $z0 = $r1 instanceof androidx.appcompat.app.AppCompatActivity;

        if $z0 == 0 goto label2;

        $r2 = (androidx.appcompat.app.AppCompatActivity) $r1;

        return $r2;

     label2:
        $z0 = $r1 instanceof android.content.ContextWrapper;

        if $z0 == 0 goto label3;

        $r3 = (android.content.ContextWrapper) $r1;

        $r1 = virtualinvoke $r3.<android.content.ContextWrapper: android.content.Context getBaseContext()>();

        goto label1;

     label3:
        return null;
    }

    private boolean updateForNightMode(int, boolean)
    {
        android.content.Context r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatActivity $r7;
        android.content.res.Configuration $r2, $r4;
        int $i0, i1, i2;
        java.lang.Object $r5;
        android.app.Activity $r6;
        boolean $z0, z1, $z2;
        android.content.res.Resources $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        z1 = 0;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)>(r1, $i0, null);

        $z2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()>();

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i1 = $r4.<android.content.res.Configuration: int uiMode>;

        i1 = i1 & 48;

        i2 = $r2.<android.content.res.Configuration: int uiMode>;

        i2 = i2 & 48;

        if i1 == i2 goto label2;

        if $z0 == 0 goto label2;

        if $z2 != 0 goto label2;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached>;

        if $z0 == 0 goto label2;

        $z0 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext>;

        if $z0 != 0 goto label1;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated>;

        if $z0 == 0 goto label2;

     label1:
        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r5 instanceof android.app.Activity;

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r6 = (android.app.Activity) $r5;

        $z0 = virtualinvoke $r6.<android.app.Activity: boolean isChild()>();

        if $z0 != 0 goto label2;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r6 = (android.app.Activity) $r5;

        staticinvoke <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>($r6);

        z1 = 1;

     label2:
        if z1 != 0 goto label3;

        if i1 == i2 goto label3;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)>(i2, $z2, null);

        z1 = 1;

     label3:
        if z1 == 0 goto label4;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r5 instanceof androidx.appcompat.app.AppCompatActivity;

        if $z0 == 0 goto label4;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r7 = (androidx.appcompat.app.AppCompatActivity) $r5;

        virtualinvoke $r7.<androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)>($i0);

     label4:
        return z1;
    }

    private void updateResourcesConfigurationForNightMode(int, boolean, android.content.res.Configuration)
    {
        android.content.Context r3;
        androidx.lifecycle.Lifecycle $r10;
        androidx.lifecycle.LifecycleOwner r9;
        int $i0, i1;
        android.content.res.Resources$Theme $r6;
        boolean $z0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.lifecycle.Lifecycle$State $r2, $r11;
        android.content.res.Configuration $r1, $r5, $r12;
        java.lang.Object r7;
        android.app.Activity r8;
        android.content.res.Resources $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: android.content.res.Configuration;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r4 = virtualinvoke r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = new android.content.res.Configuration;

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        specialinvoke $r12.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r5);

        if $r1 == null goto label1;

        virtualinvoke $r12.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r1);

     label1:
        $r1 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i1 = $r1.<android.content.res.Configuration: int uiMode>;

        i1 = i1 & -49;

        $i0 = i1 | $i0;

        $r12.<android.content.res.Configuration: int uiMode> = $i0;

        virtualinvoke $r4.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r12, null);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 26 goto label2;

        staticinvoke <androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)>($r4);

     label2:
        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId>;

        if $i0 == 0 goto label3;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId>;

        virtualinvoke r3.<android.content.Context: void setTheme(int)>($i0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label3;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r6 = virtualinvoke r3.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId>;

        virtualinvoke $r6.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($i0, 1);

     label3:
        if $z0 == 0 goto label6;

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = r7 instanceof android.app.Activity;

        if $z0 == 0 goto label6;

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        r8 = (android.app.Activity) r7;

        $z0 = r8 instanceof androidx.lifecycle.LifecycleOwner;

        if $z0 == 0 goto label5;

        r9 = (androidx.lifecycle.LifecycleOwner) r8;

        $r10 = interfaceinvoke r9.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r11 = virtualinvoke $r10.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r2 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $z0 = virtualinvoke $r11.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r2);

        if $z0 == 0 goto label4;

        virtualinvoke r8.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>($r12);

     label4:
        return;

     label5:
        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted>;

        if $z0 == 0 goto label6;

        virtualinvoke r8.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>($r12);

     label6:
        return;
    }

    private void updateStatusGuardColor(android.view.View)
    {
        android.content.Context $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0;
        android.view.View $r1;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.View;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)>($r1);

        $i0 = $i0 & 8192;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $i0 = <androidx.appcompat.R$color: int abc_decor_view_status_guard_light>;

        $i0 = staticinvoke <androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>($r2, $i0);

        goto label4;

     label3:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $i0 = <androidx.appcompat.R$color: int abc_decor_view_status_guard>;

        $i0 = staticinvoke <androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>($r2, $i0);

     label4:
        virtualinvoke $r1.<android.view.View: void setBackgroundColor(int)>($i0);

        return;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r1, $r4;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r5;
        android.view.ViewGroup r3;
        android.view.Window$Callback $r6;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r4 = virtualinvoke r3.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        r3 = (android.view.ViewGroup) $r4;

        virtualinvoke r3.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r2);

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r6 = virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $r6.<android.view.Window$Callback: void onContentChanged()>();

        return;
    }

    public boolean applyDayNight()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>(1);

        return $z0;
    }

    public android.content.Context attachBaseContext2(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.IllegalStateException r5, r6;
        android.content.pm.PackageManager $r7;
        android.content.pm.PackageManager$NameNotFoundException r13;
        java.lang.NullPointerException r12;
        int $i0;
        android.view.ContextThemeWrapper r4;
        android.content.res.Resources$Theme $r11;
        boolean z0, z1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.RuntimeException r14;
        androidx.appcompat.view.ContextThemeWrapper r2;
        android.content.res.Configuration $r3, $r10;
        android.content.pm.ApplicationInfo $r8;
        android.content.res.Resources $r9;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.content.Context;

        z0 = 1;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached> = 1;

        $i0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()>();

        $i0 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)>($r1, $i0);

        z1 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanApplyOverrideConfiguration>;

        if z1 == 0 goto label04;

        z1 = $r1 instanceof android.view.ContextThemeWrapper;

        if z1 == 0 goto label04;

        $r3 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)>($r1, $i0, null);

        r4 = (android.view.ContextThemeWrapper) $r1;

     label01:
        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl: void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration)>(r4, $r3);

     label02:
        return $r1;

     label03:
        r5 := @caughtexception;

     label04:
        z1 = $r1 instanceof androidx.appcompat.view.ContextThemeWrapper;

        if z1 == 0 goto label08;

        $r3 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)>($r1, $i0, null);

        r2 = (androidx.appcompat.view.ContextThemeWrapper) $r1;

     label05:
        virtualinvoke r2.<androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>($r3);

     label06:
        return $r1;

     label07:
        r6 := @caughtexception;

     label08:
        z1 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext>;

        if z1 != 0 goto label09;

        $r1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)>($r1);

        return $r1;

     label09:
        $r7 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r9 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r8);

        $r3 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

     label10:
        $r9 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        z1 = virtualinvoke $r3.<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>($r10);

        if z1 != 0 goto label11;

        $r3 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration)>($r3, $r10);

        goto label12;

     label11:
        $r3 = null;

     label12:
        $r3 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)>($r1, $i0, $r3);

        r2 = new androidx.appcompat.view.ContextThemeWrapper;

        $i0 = <androidx.appcompat.R$style: int Theme_AppCompat_Empty>;

        specialinvoke r2.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r1, $i0);

        virtualinvoke r2.<androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>($r3);

     label13:
        $r11 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

     label14:
        if $r11 == null goto label15;

        goto label16;

     label15:
        z0 = 0;

     label16:
        goto label18;

     label17:
        r12 := @caughtexception;

        z0 = 0;

     label18:
        if z0 == 0 goto label19;

        $r11 = virtualinvoke r2.<androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>();

        staticinvoke <androidx.core.content.res.ResourcesCompat$ThemeCompat: void rebase(android.content.res.Resources$Theme)>($r11);

     label19:
        $r1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)>(r2);

        return $r1;

     label20:
        r13 := @caughtexception;

        r14 = new java.lang.RuntimeException;

        specialinvoke r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Application failed to obtain resources from itself", r13);

        throw r14;

        catch java.lang.IllegalStateException from label01 to label02 with label03;
        catch java.lang.IllegalStateException from label05 to label06 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label20;
        catch java.lang.NullPointerException from label13 to label14 with label17;
    }

    void callOnPanelClosed(int, androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] $r4;
        android.view.Window$Callback $r1;
        int $i0, $i1;
        android.view.Menu $r3;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r5;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $r2 := @parameter1: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $r3 := @parameter2: android.view.Menu;

        if $r3 != null goto label2;

        if $r2 != null goto label1;

        if $i0 < 0 goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        $r2 = $r4[$i0];

     label1:
        if $r2 == null goto label2;

        $r3 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

     label2:
        if $r2 == null goto label3;

        $z0 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z0 != 0 goto label3;

        return;

     label3:
        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if $z0 != 0 goto label4;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r1 = virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $r1.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>($i0, $r3);

     label4:
        return;
    }

    void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder $r1;
        androidx.appcompat.widget.DecorContentParent r3;
        android.view.Window$Callback $r2;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu>;

        if z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu> = 1;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke r3.<androidx.appcompat.widget.DecorContentParent: void dismissPopups()>();

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if $r2 == null goto label2;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if z0 != 0 goto label2;

        interfaceinvoke $r2.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(108, $r1);

     label2:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu> = 0;

        return;
    }

    void closePanel(int)
    {
        int $i0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($i0, 1);

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($r1, 1);

        return;
    }

    void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, boolean)
    {
        android.content.Context r4;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1, $r8;
        androidx.appcompat.view.menu.MenuBuilder r3;
        android.view.WindowManager r6;
        androidx.appcompat.widget.DecorContentParent r2;
        android.view.ViewGroup $r7;
        int i0;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if i0 != 0 goto label1;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if r2 == null goto label1;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z1 = interfaceinvoke r2.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()>();

        if $z1 == 0 goto label1;

        r3 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)>(r3);

        return;

     label1:
        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r5 = virtualinvoke r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r6 = (android.view.WindowManager) $r5;

        if r6 == null goto label2;

        $z1 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z1 == 0 goto label2;

        $r7 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if $r7 == null goto label2;

        $r7 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        interfaceinvoke r6.<android.view.WindowManager: void removeView(android.view.View)>($r7);

        if $z0 == 0 goto label2;

        i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)>(i0, $r1, null);

     label2:
        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 0;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen> = 0;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView> = null;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if $r8 != $r1 goto label3;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel> = null;

     label3:
        return;
    }

    public android.view.View createView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        java.lang.Throwable r15;
        android.content.Context $r3, r6;
        android.view.ViewParent $r18;
        java.lang.Object[] $r13;
        java.lang.reflect.Constructor $r12;
        android.content.res.TypedArray $r8;
        android.util.AttributeSet $r4;
        int[] r7;
        int i0;
        android.view.View $r1;
        java.lang.String $r2, $r9;
        boolean $z0, z1, z2;
        org.xmlpull.v1.XmlPullParser r17;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Class[] $r11;
        androidx.appcompat.app.AppCompatViewInflater r5;
        java.lang.Class $r10;
        java.lang.Object $r14;
        java.lang.StringBuilder $r16;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.Context;

        $r4 := @parameter3: android.util.AttributeSet;

        r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater>;

        $z0 = 0;

        if r5 != null goto label4;

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        r7 = <androidx.appcompat.R$styleable: int[] AppCompatTheme>;

        $r8 = virtualinvoke r6.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>(r7);

        i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_viewInflaterClass>;

        $r9 = virtualinvoke $r8.<android.content.res.TypedArray: java.lang.String getString(int)>(i0);

        if $r9 != null goto label1;

        r5 = new androidx.appcompat.app.AppCompatViewInflater;

        specialinvoke r5.<androidx.appcompat.app.AppCompatViewInflater: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater> = r5;

        goto label4;

     label1:
        $r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r9);

        $r11 = newarray (java.lang.Class)[0];

        $r12 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r11);

        $r13 = newarray (java.lang.Object)[0];

        $r14 = virtualinvoke $r12.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r13);

        r5 = (androidx.appcompat.app.AppCompatViewInflater) $r14;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater> = r5;

     label2:
        goto label4;

     label3:
        r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to instantiate custom view inflater ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Falling back to default.");

        $r9 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("AppCompatDelegate", $r9, r15);

        r5 = new androidx.appcompat.app.AppCompatViewInflater;

        specialinvoke r5.<androidx.appcompat.app.AppCompatViewInflater: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater> = r5;

     label4:
        z1 = 0;

        z2 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>;

        if z2 == 0 goto label7;

        z1 = $r4 instanceof org.xmlpull.v1.XmlPullParser;

        if z1 == 0 goto label5;

        r17 = (org.xmlpull.v1.XmlPullParser) $r4;

        i0 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i0 <= 1 goto label6;

        $z0 = 1;

        goto label6;

     label5:
        $r18 = (android.view.ViewParent) $r1;

        $z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldInheritContext(android.view.ViewParent)>($r18);

     label6:
        z1 = $z0;

     label7:
        r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater>;

        $z0 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>;

        z2 = staticinvoke <androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>();

        $r1 = virtualinvoke r5.<androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)>($r1, $r2, $r3, $r4, z1, $z0, 1, z2);

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void dismissPopups()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r7;
        androidx.appcompat.view.menu.MenuBuilder $r8;
        android.widget.PopupWindow r2;
        java.lang.IllegalArgumentException r6;
        java.lang.Runnable $r5;
        androidx.appcompat.widget.DecorContentParent r1;
        android.view.View $r4;
        android.view.Window r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if r1 == null goto label1;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke r1.<androidx.appcompat.widget.DecorContentParent: void dismissPopups()>();

     label1:
        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if r2 == null goto label6;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r4 = virtualinvoke r3.<android.view.Window: android.view.View getDecorView()>();

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke $r4.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r5);

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        $z0 = virtualinvoke r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 == 0 goto label5;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

     label2:
        virtualinvoke r2.<android.widget.PopupWindow: void dismiss()>();

     label3:
        goto label5;

     label4:
        r6 := @caughtexception;

     label5:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup> = null;

     label6:
        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        $r7 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        if $r7 == null goto label7;

        $r8 = $r7.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r8 == null goto label7;

        $r8 = $r7.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r8.<androidx.appcompat.view.menu.MenuBuilder: void close()>();

     label7:
        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window$Callback $r6;
        int $i0, $i1;
        android.view.View $r4;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r5;
        java.lang.Object r2;
        android.view.Window r3;
        boolean z0, z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.KeyEvent;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        z0 = r2 instanceof androidx.core.view.KeyEventDispatcher$Component;

        z1 = 1;

        if z0 != 0 goto label1;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        z0 = r2 instanceof androidx.appcompat.app.AppCompatDialog;

        if z0 == 0 goto label2;

     label1:
        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r4 = virtualinvoke r3.<android.view.Window: android.view.View getDecorView()>();

        if $r4 == null goto label2;

        z0 = staticinvoke <androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)>($r4, $r1);

        if z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != 82 goto label3;

        r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r6 = virtualinvoke r5.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        z0 = interfaceinvoke $r6.<android.view.Window$Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        if z0 == 0 goto label3;

        return 1;

     label3:
        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label4;

        goto label5;

     label4:
        z1 = 0;

     label5:
        if z1 == 0 goto label6;

        z1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return z1;

     label6:
        z1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        return z1;
    }

    void doInvalidatePanelMenu(int)
    {
        android.os.Bundle $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;
        androidx.appcompat.view.menu.MenuBuilder $r2;
        int $i0, $i1;
        androidx.appcompat.widget.DecorContentParent $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($i0, 1);

        $r2 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r2 == null goto label2;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        $r2 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r2.<androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>($r3);

        $i1 = virtualinvoke $r3.<android.os.Bundle: int size()>();

        if $i1 <= 0 goto label1;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState> = $r3;

     label1:
        $r2 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r2.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        $r2 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r2.<androidx.appcompat.view.menu.MenuBuilder: void clear()>();

     label2:
        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent> = 1;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

        if $i0 == 108 goto label3;

        if $i0 != 0 goto label4;

     label3:
        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r4 == null goto label4;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        if $r1 == null goto label4;

        $r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>($r1, null);

     label4:
        return;
    }

    void endOnGoingFadeAnimation()
    {
        androidx.core.view.ViewPropertyAnimatorCompat $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        if $r1 == null goto label1;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        virtualinvoke $r1.<androidx.core.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        return;
    }

    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r3;
        androidx.appcompat.view.menu.MenuBuilder $r4;
        android.view.Menu $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] r2;
        int i0, i1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.Menu;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        if r2 == null goto label1;

        i0 = lengthof r2;

        goto label2;

     label1:
        i0 = 0;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r3 = r2[i1];

        if r3 == null goto label4;

        $r4 = r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r4 != $r1 goto label4;

        return r3;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return null;
    }

    public android.view.View findViewById(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0;
        android.view.View $r1;
        android.view.Window $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r1 = virtualinvoke $r2.<android.view.Window: android.view.View findViewById(int)>($i0);

        return $r1;
    }

    final android.content.Context getActionBarThemedContext()
    {
        android.content.Context r1;
        androidx.appcompat.app.ActionBar $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 = null;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $r2 == null goto label1;

        r1 = virtualinvoke $r2.<androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()>();

     label1:
        if r1 != null goto label2;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label2:
        return r1;
    }

    final androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r1;
        android.content.Context $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>($r2);

        return $r1;
    }

    public final androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl;

        specialinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        return $r1;
    }

    public int getLocalNightMode()
    {
        int i0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        return i0;
    }

    public android.view.MenuInflater getMenuInflater()
    {
        android.content.Context $r1;
        androidx.appcompat.app.ActionBar $r4;
        androidx.appcompat.view.SupportMenuInflater $r3;
        android.view.MenuInflater $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater>;

        if $r2 != null goto label3;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()>();

        $r3 = new androidx.appcompat.view.SupportMenuInflater;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $r4 == null goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        $r1 = virtualinvoke $r4.<androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()>();

        goto label2;

     label1:
        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label2:
        specialinvoke $r3.<androidx.appcompat.view.SupportMenuInflater: void <init>(android.content.Context)>($r1);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater> = $r3;

     label3:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater>;

        return $r2;
    }

    protected androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r4;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] r1, r2, r3;
        int $i0, i1;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        r2 = r1;

        if r1 == null goto label1;

        i1 = lengthof r1;

        if i1 > $i0 goto label3;

     label1:
        i1 = $i0 + 1;

        r3 = newarray (androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)[i1];

        if r1 == null goto label2;

        i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, i1);

     label2:
        r2 = r3;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels> = r3;

     label3:
        r4 = r2[$i0];

        if r4 != null goto label4;

        r4 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        specialinvoke r4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void <init>(int)>($i0);

        r2[$i0] = r4;

     label4:
        return r4;
    }

    android.view.ViewGroup getSubDecor()
    {
        android.view.ViewGroup r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        return r1;
    }

    public androidx.appcompat.app.ActionBar getSupportActionBar()
    {
        androidx.appcompat.app.ActionBar r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()>();

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        return r1;
    }

    final java.lang.CharSequence getTitle()
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Object $r2;
        android.app.Activity $r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r2 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r3 = (android.app.Activity) $r2;

        $r1 = virtualinvoke $r3.<android.app.Activity: java.lang.CharSequence getTitle()>();

        return $r1;

     label1:
        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle>;

        return $r1;
    }

    final android.view.Window$Callback getWindowCallback()
    {
        android.view.Window $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window$Callback $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r1 = virtualinvoke $r2.<android.view.Window: android.view.Window$Callback getCallback()>();

        return $r1;
    }

    public boolean hasWindowFeature(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0, $i1;
        android.view.Window $r1;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        z0 = 0;

        $i1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)>($i0);

        lookupswitch($i1)
        {
            case 1: goto label07;
            case 2: goto label06;
            case 5: goto label05;
            case 10: goto label04;
            case 108: goto label03;
            case 109: goto label02;
            default: goto label01;
        };

     label01:
        goto label08;

     label02:
        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        goto label08;

     label03:
        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        goto label08;

     label04:
        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        goto label08;

     label05:
        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress>;

        goto label08;

     label06:
        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress>;

        goto label08;

     label07:
        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

     label08:
        if z0 != 0 goto label10;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        z0 = virtualinvoke $r1.<android.view.Window: boolean hasFeature(int)>($i0);

        if z0 == 0 goto label09;

        goto label10;

     label09:
        return 0;

     label10:
        return 1;
    }

    public void installViewFactory()
    {
        android.content.Context r1;
        android.view.LayoutInflater $r2;
        android.view.LayoutInflater$Factory $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.LayoutInflater$Factory2 $r4;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r1);

        $r3 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>();

        if $r3 != null goto label1;

        staticinvoke <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>($r2, r0);

        return;

     label1:
        $r4 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()>();

        $z0 = $r4 instanceof androidx.appcompat.app.AppCompatDelegateImpl;

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "The Activity\'s LayoutInflater already has a Factory installed so we can not install AppCompat\'s");

     label2:
        return;
    }

    public void invalidateOptionsMenu()
    {
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)>(0);

        return;
    }

    public boolean isHandleNativeActionModesEnabled()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes>;

        return z0;
    }

    int mapNightMode(android.content.Context, int)
    {
        android.content.Context $r1, $r3;
        java.lang.IllegalStateException $r6;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r2;
        android.app.UiModeManager r5;
        int $i0;
        java.lang.Object $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        lookupswitch($i0)
        {
            case -100: goto label6;
            case -1: goto label5;
            case 0: goto label3;
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown value set for night mode. Please use one of the MODE_NIGHT values from AppCompatDelegate.");

        throw $r6;

     label2:
        $r2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)>($r1);

        $i0 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>();

        return $i0;

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label4;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/UiModeManager;");

        r5 = (android.app.UiModeManager) $r4;

        $i0 = virtualinvoke r5.<android.app.UiModeManager: int getNightMode()>();

        if $i0 != 0 goto label4;

        return -1;

     label4:
        $r2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>($r1);

        $i0 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>();

     label5:
        return $i0;

     label6:
        return -1;
    }

    boolean onBackPressed()
    {
        androidx.appcompat.app.ActionBar $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.ActionMode r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if r1 == null goto label1;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        virtualinvoke r1.<androidx.appcompat.view.ActionMode: void finish()>();

        return 1;

     label1:
        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<androidx.appcompat.app.ActionBar: boolean collapseActionView()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.content.Context $r2;
        androidx.appcompat.app.ActionBar $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.res.Configuration $r1;
        androidx.appcompat.widget.AppCompatDrawableManager $r4;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.content.res.Configuration;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if z0 == 0 goto label1;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $r3 == null goto label1;

        virtualinvoke $r3.<androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>($r1);

     label1:
        $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()>();

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        virtualinvoke $r4.<androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)>($r2);

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>(0);

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.IllegalArgumentException r6;
        androidx.appcompat.app.ActionBar $r7;
        java.lang.Object r2;
        java.lang.String r3, $r5;
        android.app.Activity r4;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.os.Bundle;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached> = 1;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)>(0);

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()>();

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        z0 = r2 instanceof android.app.Activity;

        if z0 == 0 goto label7;

        r3 = null;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        r4 = (android.app.Activity) r2;

     label1:
        $r5 = staticinvoke <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)>(r4);

     label2:
        r3 = $r5;

        goto label4;

     label3:
        r6 := @caughtexception;

     label4:
        if r3 == null goto label6;

        $r7 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        if $r7 != null goto label5;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp> = 1;

        goto label6;

     label5:
        virtualinvoke $r7.<androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>(1);

     label6:
        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)>(r0);

     label7:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated> = 1;

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public final android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r3;
        android.util.AttributeSet $r4;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r1;
        java.lang.String $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.Context;

        $r4 := @parameter3: android.util.AttributeSet;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>($r1, $r2, $r3, $r4);

        return $r1;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r2;
        android.util.AttributeSet $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r4;
        java.lang.String $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: android.util.AttributeSet;

        $r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(null, $r1, $r2, $r3);

        return $r4;
    }

    public void onDestroy()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Runnable $r4;
        java.lang.Integer $r9;
        androidx.appcompat.app.ActionBar $r10;
        int $i0;
        android.view.View $r3;
        java.lang.Object $r1;
        java.lang.Class $r7;
        java.lang.String $r8;
        android.view.Window $r2;
        android.app.Activity $r5;
        boolean $z0;
        androidx.collection.SimpleArrayMap $r6;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r1 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)>(r0);

     label1:
        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted>;

        if $z0 == 0 goto label2;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.View getDecorView()>();

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        virtualinvoke $r3.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r4);

     label2:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted> = 0;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed> = 1;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $i0 == -100 goto label3;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r1 instanceof android.app.Activity;

        if $z0 == 0 goto label3;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r5 = (android.app.Activity) $r1;

        $z0 = virtualinvoke $r5.<android.app.Activity: boolean isChangingConfigurations()>();

        if $z0 == 0 goto label3;

        $r6 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r6.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label4;

     label3:
        $r6 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>($r8);

     label4:
        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $r10 == null goto label5;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        virtualinvoke $r10.<androidx.appcompat.app.ActionBar: void onDestroy()>();

     label5:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()>();

        return;
    }

    boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $z0 = 1;

        lookupswitch($i0)
        {
            case 4: goto label3;
            case 82: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDownPanel(int,android.view.KeyEvent)>(0, $r1);

        return 1;

     label3:
        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getFlags()>();

        $i0 = $i0 & 128;

        if $i0 == 0 goto label4;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown> = $z0;

        return 0;
    }

    boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.ActionBar $r2;
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r3;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<androidx.appcompat.app.ActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)>($i0, $r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if r3 == null goto label2;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)>(r3, $i0, $r1, 1);

        if $z0 == 0 goto label2;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if r3 == null goto label4;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 1;

        return 1;

     label2:
        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if r3 != null goto label3;

        r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(r3, $r1);

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)>(r3, $i0, $r1, 1);

        r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        if $z0 == 0 goto label5;

        return 1;

     label3:
        return 0;

     label4:
        return 1;

     label5:
        return 0;
    }

    boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r2;
        int $i0;
        boolean z0, $z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        lookupswitch($i0)
        {
            case 4: goto label3;
            case 82: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUpPanel(int,android.view.KeyEvent)>(0, $r1);

        return 1;

     label3:
        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown>;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown> = 0;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        if $r2 == null goto label4;

        $z1 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z1 == 0 goto label4;

        if z0 != 0 goto label6;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($r2, 1);

        return 1;

     label4:
        z0 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onBackPressed()>();

        if z0 == 0 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        return 1;
    }

    public boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder, android.view.MenuItem)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r4;
        int $i0;
        android.view.MenuItem $r2;
        android.view.Window$Callback $r3;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $r2 := @parameter1: android.view.MenuItem;

        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if $r3 == null goto label1;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if z0 != 0 goto label1;

        $r1 = virtualinvoke $r1.<androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()>();

        $r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)>($r1);

        if $r4 == null goto label1;

        $i0 = $r4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        z0 = interfaceinvoke $r3.<android.view.Window$Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>($i0, $r2);

        return z0;

     label1:
        return 0;
    }

    public void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void reopenMenu(boolean)>(1);

        return;
    }

    void onMenuOpened(int)
    {
        int $i0;
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        if $i0 != 108 goto label1;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)>(1);

     label1:
        return;
    }

    void onPanelClosed(int)
    {
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r2;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        if $i0 != 108 goto label1;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $r1 == null goto label2;

        virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)>(0);

        goto label2;

     label1:
        if $i0 != 0 goto label2;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>($i0, 1);

        $z0 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($r2, 0);

     label2:
        return;
    }

    public void onPostCreate(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        return;
    }

    public void onPostResume()
    {
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(1);

     label1:
        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onStart()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted> = 1;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()>();

        return;
    }

    public void onStop()
    {
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted> = 0;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(0);

     label1:
        return;
    }

    void onSubDecorInstalled(android.view.ViewGroup)
    {
        android.view.ViewGroup $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.ViewGroup;

        return;
    }

    final androidx.appcompat.app.ActionBar peekSupportActionBar()
    {
        androidx.appcompat.app.ActionBar r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        return r1;
    }

    public boolean requestWindowFeature(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0;
        android.view.Window $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $i0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)>($i0);

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

        if $z0 == 0 goto label1;

        if $i0 != 108 goto label1;

        return 0;

     label1:
        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $z0 == 0 goto label2;

        if $i0 != 1 goto label2;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar> = 0;

     label2:
        lookupswitch($i0)
        {
            case 1: goto label9;
            case 2: goto label8;
            case 5: goto label7;
            case 10: goto label6;
            case 108: goto label5;
            case 109: goto label4;
            default: goto label3;
        };

     label3:
        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $z0 = virtualinvoke $r1.<android.view.Window: boolean requestFeature(int)>($i0);

        return $z0;

     label4:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar> = 1;

        return 1;

     label5:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar> = 1;

        return 1;

     label6:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode> = 1;

        return 1;

     label7:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress> = 1;

        return 1;

     label8:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress> = 1;

        return 1;

     label9:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle> = 1;

        return 1;
    }

    public void setContentView(int)
    {
        android.content.Context $r3;
        android.view.LayoutInflater $r4;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.ViewGroup r1;
        android.view.Window$Callback $r6;
        int $i0;
        android.view.View $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r2 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        r1 = (android.view.ViewGroup) $r2;

        virtualinvoke r1.<android.view.ViewGroup: void removeAllViews()>();

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, r1);

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r6 = virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $r6.<android.view.Window$Callback: void onContentChanged()>();

        return;
    }

    public void setContentView(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r1, $r3;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r4;
        android.view.ViewGroup r2;
        android.view.Window$Callback $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        r2 = (android.view.ViewGroup) $r3;

        virtualinvoke r2.<android.view.ViewGroup: void removeAllViews()>();

        virtualinvoke r2.<android.view.ViewGroup: void addView(android.view.View)>($r1);

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r5 = virtualinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $r5.<android.view.Window$Callback: void onContentChanged()>();

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r1, $r4;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r5;
        android.view.ViewGroup r3;
        android.view.Window$Callback $r6;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r4 = virtualinvoke r3.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        r3 = (android.view.ViewGroup) $r4;

        virtualinvoke r3.<android.view.ViewGroup: void removeAllViews()>();

        virtualinvoke r3.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r2);

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r6 = virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $r6.<android.view.Window$Callback: void onContentChanged()>();

        return;
    }

    public void setHandleNativeActionModesEnabled(boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 := @parameter0: boolean;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes> = $z0;

        return;
    }

    public void setLocalNightMode(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        $i1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $i1 == $i0 goto label1;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = $i0;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()>();

     label1:
        return;
    }

    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    {
        java.lang.IllegalStateException r9;
        androidx.appcompat.app.ToolbarActionBar r4;
        java.lang.CharSequence $r5;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window$Callback $r8;
        androidx.appcompat.app.ActionBar $r3;
        androidx.appcompat.widget.Toolbar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r6;
        java.lang.Object r2;
        android.view.Window $r7;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.widget.Toolbar;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        z0 = r2 instanceof android.app.Activity;

        if z0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        z0 = $r3 instanceof androidx.appcompat.app.WindowDecorActionBar;

        if z0 != 0 goto label5;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater> = null;

        if $r3 == null goto label2;

        virtualinvoke $r3.<androidx.appcompat.app.ActionBar: void onDestroy()>();

     label2:
        if $r1 == null goto label3;

        r4 = new androidx.appcompat.app.ToolbarActionBar;

        $r5 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()>();

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        specialinvoke r4.<androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)>($r1, $r5, $r6);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = r4;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r8 = virtualinvoke r4.<androidx.appcompat.app.ToolbarActionBar: android.view.Window$Callback getWrappedWindowCallback()>();

        virtualinvoke $r7.<android.view.Window: void setCallback(android.view.Window$Callback)>($r8);

        goto label4;

     label3:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = null;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        virtualinvoke $r7.<android.view.Window: void setCallback(android.view.Window$Callback)>($r6);

     label4:
        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()>();

        return;

     label5:
        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Activity already has an action bar supplied by the window decor. Do not request Window.FEATURE_SUPPORT_ACTION_BAR and set windowActionBar to false in your theme to use a Toolbar instead.");

        throw r9;
    }

    public void setTheme(int)
    {
        int $i0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 := @parameter0: int;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId> = $i0;

        return;
    }

    public final void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.ActionBar $r3;
        android.widget.TextView $r4;
        java.lang.CharSequence $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.widget.DecorContentParent $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle> = $r1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r2 == null goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorContentParent: void setWindowTitle(java.lang.CharSequence)>($r1);

        return;

     label1:
        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        if $r3 == null goto label2;

        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        virtualinvoke $r3.<androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>($r1);

        return;

     label2:
        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>;

        if $r4 == null goto label3;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>;

        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

     label3:
        return;
    }

    final boolean shouldAnimateActionModeView()
    {
        android.view.ViewGroup $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        if $r1 == null goto label1;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 r3;
        androidx.appcompat.app.ActionBar $r4;
        androidx.appcompat.app.AppCompatCallback $r5;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.ActionMode$Callback $r1;
        java.lang.IllegalArgumentException r6;
        androidx.appcompat.view.ActionMode $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.view.ActionMode$Callback;

        if $r1 == null goto label4;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r2 == null goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        virtualinvoke $r2.<androidx.appcompat.view.ActionMode: void finish()>();

     label1:
        r3 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        specialinvoke r3.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)>(r0, $r1);

        $r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if $r4 == null goto label2;

        $r2 = virtualinvoke $r4.<androidx.appcompat.app.ActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)>(r3);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = $r2;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r2 == null goto label2;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        if $r5 == null goto label2;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        interfaceinvoke $r5.<androidx.appcompat.app.AppCompatCallback: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)>($r2);

     label2:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r2 != null goto label3;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)>(r3);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = $r2;

     label3:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        return $r2;

     label4:
        r6 = new java.lang.IllegalArgumentException;

        specialinvoke r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ActionMode callback can not be null.");

        throw r6;
    }

    androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
    {
        java.lang.AbstractMethodError r5;
        java.lang.Runnable $r22;
        android.view.View $r15;
        boolean z0, z1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.widget.ViewStubCompat r16;
        androidx.appcompat.widget.ActionBarContextView r6, $r26;
        android.util.DisplayMetrics $r13;
        android.view.ViewGroup r14;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 $r23;
        android.view.Window r21;
        android.content.Context r7, $r11;
        android.view.ViewParent $r20;
        androidx.appcompat.app.AppCompatCallback r3;
        androidx.core.view.ViewPropertyAnimatorCompat $r19;
        androidx.appcompat.view.ActionMode$Callback $r1;
        int i0;
        android.view.Menu $r18;
        android.content.res.Resources$Theme $r8, $r10;
        androidx.appcompat.app.AppCompatDelegateImpl$7 $r30;
        androidx.appcompat.app.AppCompatDelegateImpl$6 $r28;
        android.view.LayoutInflater $r17;
        android.widget.PopupWindow r12, $r27;
        androidx.appcompat.view.StandaloneActionMode $r29;
        androidx.appcompat.view.ActionMode r2, $r4;
        androidx.appcompat.view.ContextThemeWrapper $r25;
        android.util.TypedValue $r24;
        android.content.res.Resources $r9;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.appcompat.view.ActionMode$Callback;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if r2 == null goto label01;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        virtualinvoke r2.<androidx.appcompat.view.ActionMode: void finish()>();

     label01:
        z0 = $r1 instanceof androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        if z0 != 0 goto label02;

        $r23 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        specialinvoke $r23.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)>(r0, $r1);

        $r1 = $r23;

     label02:
        r2 = null;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        if r3 == null goto label06;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed>;

        if z0 != 0 goto label06;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

     label03:
        $r4 = interfaceinvoke r3.<androidx.appcompat.app.AppCompatCallback: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)>($r1);

     label04:
        r2 = $r4;

        goto label06;

     label05:
        r5 := @caughtexception;

     label06:
        if r2 == null goto label07;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = r2;

        goto label17;

     label07:
        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        z0 = 1;

        if r6 != null goto label11;

        z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating>;

        if z1 == 0 goto label10;

        $r24 = new android.util.TypedValue;

        specialinvoke $r24.<android.util.TypedValue: void <init>()>();

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r8 = virtualinvoke r7.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        i0 = <androidx.appcompat.R$attr: int actionBarTheme>;

        virtualinvoke $r8.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i0, $r24, 1);

        i0 = $r24.<android.util.TypedValue: int resourceId>;

        if i0 == 0 goto label08;

        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r9 = virtualinvoke r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        virtualinvoke $r10.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($r8);

        i0 = $r24.<android.util.TypedValue: int resourceId>;

        virtualinvoke $r10.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>(i0, 1);

        $r25 = new androidx.appcompat.view.ContextThemeWrapper;

        r7 = $r25;

        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        specialinvoke $r25.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r11, 0);

        $r8 = virtualinvoke $r25.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r8.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($r10);

        goto label09;

     label08:
        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label09:
        $r26 = new androidx.appcompat.widget.ActionBarContextView;

        specialinvoke $r26.<androidx.appcompat.widget.ActionBarContextView: void <init>(android.content.Context)>(r7);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView> = $r26;

        $r27 = new android.widget.PopupWindow;

        i0 = <androidx.appcompat.R$attr: int actionModePopupWindowStyle>;

        specialinvoke $r27.<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>(r7, null, i0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup> = $r27;

        r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        staticinvoke <androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)>(r12, 2);

        r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke r12.<android.widget.PopupWindow: void setContentView(android.view.View)>(r6);

        r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke r12.<android.widget.PopupWindow: void setWidth(int)>(-1);

        $r10 = virtualinvoke r7.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        i0 = <androidx.appcompat.R$attr: int actionBarSize>;

        virtualinvoke $r10.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i0, $r24, 1);

        i0 = $r24.<android.util.TypedValue: int data>;

        $r9 = virtualinvoke r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke $r9.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>(i0, $r13);

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke r6.<androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)>(i0);

        r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke r12.<android.widget.PopupWindow: void setHeight(int)>(-2);

        $r28 = new androidx.appcompat.app.AppCompatDelegateImpl$6;

        specialinvoke $r28.<androidx.appcompat.app.AppCompatDelegateImpl$6: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup> = $r28;

        goto label11;

     label10:
        r14 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        i0 = <androidx.appcompat.R$id: int action_mode_bar_stub>;

        $r15 = virtualinvoke r14.<android.view.ViewGroup: android.view.View findViewById(int)>(i0);

        r16 = (androidx.appcompat.widget.ViewStubCompat) $r15;

        if r16 == null goto label11;

        r7 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()>();

        $r17 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r7);

        virtualinvoke r16.<androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)>($r17);

        $r15 = virtualinvoke r16.<androidx.appcompat.widget.ViewStubCompat: android.view.View inflate()>();

        r6 = (androidx.appcompat.widget.ActionBarContextView) $r15;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView> = r6;

     label11:
        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        if r6 == null goto label17;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke r6.<androidx.appcompat.widget.ActionBarContextView: void killMode()>();

        $r29 = new androidx.appcompat.view.StandaloneActionMode;

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        r7 = virtualinvoke r6.<androidx.appcompat.widget.ActionBarContextView: android.content.Context getContext()>();

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if r12 != null goto label12;

        goto label13;

     label12:
        z0 = 0;

     label13:
        specialinvoke $r29.<androidx.appcompat.view.StandaloneActionMode: void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean)>(r7, r6, $r1, z0);

        $r18 = virtualinvoke $r29.<androidx.appcompat.view.ActionMode: android.view.Menu getMenu()>();

        z0 = interfaceinvoke $r1.<androidx.appcompat.view.ActionMode$Callback: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>($r29, $r18);

        if z0 == 0 goto label16;

        virtualinvoke $r29.<androidx.appcompat.view.ActionMode: void invalidate()>();

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke r6.<androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)>($r29);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = $r29;

        z0 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldAnimateActionModeView()>();

        if z0 == 0 goto label14;

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke r6.<androidx.appcompat.widget.ActionBarContextView: void setAlpha(float)>(0.0F);

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r19 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>(r6);

        $r19 = virtualinvoke $r19.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = $r19;

        $r19 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        $r30 = new androidx.appcompat.app.AppCompatDelegateImpl$7;

        specialinvoke $r30.<androidx.appcompat.app.AppCompatDelegateImpl$7: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        virtualinvoke $r19.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>($r30);

        goto label15;

     label14:
        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke r6.<androidx.appcompat.widget.ActionBarContextView: void setAlpha(float)>(1.0F);

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke r6.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(0);

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke r6.<androidx.appcompat.widget.ActionBarContextView: void sendAccessibilityEvent(int)>(32);

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r20 = virtualinvoke r6.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewParent getParent()>();

        z0 = $r20 instanceof android.view.View;

        if z0 == 0 goto label15;

        r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r20 = virtualinvoke r6.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewParent getParent()>();

        $r15 = (android.view.View) $r20;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r15);

     label15:
        r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if r12 == null goto label17;

        r21 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r15 = virtualinvoke r21.<android.view.Window: android.view.View getDecorView()>();

        $r22 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke $r15.<android.view.View: boolean post(java.lang.Runnable)>($r22);

        goto label17;

     label16:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = null;

     label17:
        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if r2 == null goto label18;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        if r3 == null goto label18;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        interfaceinvoke r3.<androidx.appcompat.app.AppCompatCallback: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)>(r2);

     label18:
        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        return r2;

        catch java.lang.AbstractMethodError from label03 to label04 with label05;
    }

    final int updateStatusGuard(androidx.core.view.WindowInsetsCompat, android.graphics.Rect)
    {
        android.graphics.Rect $r2, r3, r7;
        android.content.Context $r10;
        byte $b7;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        android.view.View r9, $r12;
        android.widget.FrameLayout$LayoutParams $r13;
        androidx.core.view.WindowInsetsCompat $r1;
        boolean z0, z1, $z2;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.widget.ActionBarContextView r4;
        android.view.ViewGroup r8;
        android.view.ViewGroup$MarginLayoutParams r6, r11;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        $r2 := @parameter1: android.graphics.Rect;

        i0 = 0;

        if $r1 == null goto label01;

        i0 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        goto label02;

     label01:
        if $r2 == null goto label02;

        i0 = $r2.<android.graphics.Rect: int top>;

     label02:
        z0 = 0;

        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        if r4 == null goto label24;

        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r5 = virtualinvoke r4.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        z1 = $r5 instanceof android.view.ViewGroup$MarginLayoutParams;

        if z1 == 0 goto label23;

        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r5 = virtualinvoke r4.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.view.ViewGroup$MarginLayoutParams) $r5;

        z1 = 0;

        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $z2 = virtualinvoke r4.<androidx.appcompat.widget.ActionBarContextView: boolean isShown()>();

        if $z2 == 0 goto label20;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1>;

        if r3 != null goto label03;

        r7 = new android.graphics.Rect;

        specialinvoke r7.<android.graphics.Rect: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1> = r7;

        r7 = new android.graphics.Rect;

        specialinvoke r7.<android.graphics.Rect: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2> = r7;

     label03:
        r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1>;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2>;

        if $r1 != null goto label04;

        virtualinvoke r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        goto label05;

     label04:
        $i1 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $i2 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $i3 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $i4 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        virtualinvoke r7.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i4);

     label05:
        r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        staticinvoke <androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)>(r8, r7, r3);

        $i3 = r7.<android.graphics.Rect: int top>;

        $i4 = r7.<android.graphics.Rect: int left>;

        i5 = r7.<android.graphics.Rect: int right>;

        r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>(r8);

        if $r1 != null goto label06;

        $i1 = 0;

        goto label07;

     label06:
        $i1 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

     label07:
        if $r1 != null goto label08;

        $i2 = 0;

        goto label09;

     label08:
        $i2 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

     label09:
        i6 = r6.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if i6 != $i3 goto label10;

        i6 = r6.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        if i6 != $i4 goto label10;

        i6 = r6.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        if i6 == i5 goto label11;

     label10:
        r6.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = $i3;

        r6.<android.view.ViewGroup$MarginLayoutParams: int leftMargin> = $i4;

        r6.<android.view.ViewGroup$MarginLayoutParams: int rightMargin> = i5;

        z1 = 1;

     label11:
        if $i3 <= 0 goto label12;

        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if r9 != null goto label12;

        $r12 = new android.view.View;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        specialinvoke $r12.<android.view.View: void <init>(android.content.Context)>($r10);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard> = $r12;

        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        virtualinvoke r9.<android.view.View: void setVisibility(int)>(8);

        $r13 = new android.widget.FrameLayout$LayoutParams;

        $i3 = r6.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        specialinvoke $r13.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-1, $i3, 51);

        $r13.<android.widget.FrameLayout$LayoutParams: int leftMargin> = $i1;

        $r13.<android.widget.FrameLayout$LayoutParams: int rightMargin> = $i2;

        r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        virtualinvoke r8.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r9, -1, $r13);

        goto label14;

     label12:
        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if r9 == null goto label14;

        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        $r5 = virtualinvoke r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r11 = (android.view.ViewGroup$MarginLayoutParams) $r5;

        $i3 = r11.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $i4 = r6.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i3 != $i4 goto label13;

        $i3 = r11.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        if $i3 != $i1 goto label13;

        $i3 = r11.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        if $i3 == $i2 goto label14;

     label13:
        $i3 = r6.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        r11.<android.view.ViewGroup$MarginLayoutParams: int height> = $i3;

        r11.<android.view.ViewGroup$MarginLayoutParams: int leftMargin> = $i1;

        r11.<android.view.ViewGroup$MarginLayoutParams: int rightMargin> = $i2;

        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        virtualinvoke r9.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r11);

        goto label14;

     label14:
        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if r9 == null goto label15;

        z0 = 1;

        goto label16;

     label15:
        z0 = 0;

     label16:
        if z0 == 0 goto label17;

        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        $i1 = virtualinvoke r9.<android.view.View: int getVisibility()>();

        if $i1 == 0 goto label17;

        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateStatusGuardColor(android.view.View)>(r9);

     label17:
        $z2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        if $z2 != 0 goto label18;

        if z0 == 0 goto label18;

        $i1 = 0;

        goto label19;

     label18:
        $i1 = i0;

     label19:
        goto label22;

     label20:
        $i1 = r6.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i1 == 0 goto label21;

        z1 = 1;

        r6.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = 0;

        $i1 = i0;

        goto label22;

     label21:
        $i1 = i0;

     label22:
        if z1 == 0 goto label25;

        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke r4.<androidx.appcompat.widget.ActionBarContextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r6);

        goto label25;

     label23:
        $i1 = i0;

        goto label25;

     label24:
        $i1 = i0;

     label25:
        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if r9 == null goto label28;

        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if z0 == 0 goto label26;

        $b7 = 0;

        goto label27;

     label26:
        $b7 = 8;

     label27:
        virtualinvoke r9.<android.view.View: void setVisibility(int)>($b7);

     label28:
        return $i1;
    }
}
