final class kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 extends kotlin.coroutines.jvm.internal.RestrictedSuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlin.jvm.functions.Function2 $operation;
    final kotlin.sequences.Sequence $this_runningReduce;
    private java.lang.Object L$0;
    java.lang.Object L$1;
    java.lang.Object L$2;
    int label;

    void <init>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r3;
        kotlin.sequences.Sequence $r1;
        kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 r0;
        kotlin.jvm.functions.Function2 $r2;

        r0 := @this: kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1;

        $r1 := @parameter0: kotlin.sequences.Sequence;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.sequences.Sequence $this_runningReduce> = $r1;

        r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.jvm.functions.Function2 $operation> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.sequences.Sequence $r3;
        kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 r0, $r5;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r5 = new kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1;

        $r3 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.sequences.Sequence $this_runningReduce>;

        $r4 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.jvm.functions.Function2 $operation>;

        specialinvoke $r5.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r3, $r4, $r2);

        $r5.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r5;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r4;
        kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 r0;
        java.lang.Object $r1, $r2;
        kotlin.sequences.SequenceScope $r3;

        r0 := @this: kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.sequences.SequenceScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlin.sequences.SequenceScope, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 r0;
        java.lang.Object $r4;
        kotlin.sequences.SequenceScope $r1;

        r0 := @this: kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1;

        $r1 := @parameter0: kotlin.sequences.SequenceScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.IllegalStateException $r3;
        kotlin.coroutines.Continuation $r11;
        int i0;
        kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 r0, r4;
        kotlin.sequences.SequenceScope $r8;
        boolean $z0;
        java.util.Iterator r7, $r10;
        kotlin.sequences.Sequence r9;
        kotlin.jvm.functions.Function2 $r12;
        kotlin.Unit r13;
        java.lang.Object $r1, $r2, r5, r6;

        r0 := @this: kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label2:
        r4 = r0;

        r5 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$2>;

        r6 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$1>;

        r7 = (java.util.Iterator) r6;

        r6 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$0>;

        $r8 = (kotlin.sequences.SequenceScope) r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label5;

     label3:
        r4 = r0;

        r5 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$2>;

        r6 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$1>;

        r7 = (java.util.Iterator) r6;

        r6 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$0>;

        $r8 = (kotlin.sequences.SequenceScope) r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label5;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r4 = r0;

        $r1 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$0>;

        $r8 = (kotlin.sequences.SequenceScope) $r1;

        r9 = r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.sequences.Sequence $this_runningReduce>;

        $r10 = interfaceinvoke r9.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

        r7 = $r10;

        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r1 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r5 = $r1;

        $r11 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$0> = $r8;

        r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$1> = $r10;

        r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$2> = $r1;

        r0.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: int label> = 1;

        $r1 = virtualinvoke $r8.<kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r11);

        if $r1 != $r2 goto label5;

        return $r2;

     label5:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r12 = r4.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.jvm.functions.Function2 $operation>;

        $r1 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r1 = interfaceinvoke $r12.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r5, $r1);

        r5 = $r1;

        $r11 = (kotlin.coroutines.Continuation) r4;

        r4.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$0> = $r8;

        r4.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$1> = r7;

        r4.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$2> = $r1;

        r4.<kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: int label> = 2;

        $r1 = virtualinvoke $r8.<kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r11);

        if $r1 != $r2 goto label5;

        return $r2;

     label6:
        r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r13;
    }
}
