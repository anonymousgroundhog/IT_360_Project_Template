final class com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound extends com.google.common.collect.AbstractNavigableMap
{
    private final com.google.common.collect.Range lowerBoundWindow;
    private final java.util.NavigableMap rangesByLowerBound;
    private final java.util.NavigableMap rangesByUpperBound;
    private final com.google.common.collect.Range restriction;

    private void <init>(com.google.common.collect.Range, com.google.common.collect.Range, java.util.NavigableMap)
    {
        com.google.common.collect.Range r1, r2;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.lang.Object $r4;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound $r6;
        java.util.NavigableMap r3, $r5;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        r1 := @parameter0: com.google.common.collect.Range;

        r2 := @parameter1: com.google.common.collect.Range;

        r3 := @parameter2: java.util.NavigableMap;

        specialinvoke r0.<com.google.common.collect.AbstractNavigableMap: void <init>()>();

        $r4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r1 = (com.google.common.collect.Range) $r4;

        r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow> = r1;

        $r4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r1 = (com.google.common.collect.Range) $r4;

        r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction> = r1;

        $r4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r5 = (java.util.NavigableMap) $r4;

        r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap rangesByLowerBound> = $r5;

        $r6 = new com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        specialinvoke $r6.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: void <init>(java.util.NavigableMap)>(r3);

        r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap rangesByUpperBound> = $r6;

        return;
    }

    void <init>(com.google.common.collect.Range, com.google.common.collect.Range, java.util.NavigableMap, com.google.common.collect.TreeRangeSet$1)
    {
        com.google.common.collect.TreeRangeSet$1 $r4;
        com.google.common.collect.Range $r1, $r2;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.util.NavigableMap $r3;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r1 := @parameter0: com.google.common.collect.Range;

        $r2 := @parameter1: com.google.common.collect.Range;

        $r3 := @parameter2: java.util.NavigableMap;

        $r4 := @parameter3: com.google.common.collect.TreeRangeSet$1;

        specialinvoke r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: void <init>(com.google.common.collect.Range,com.google.common.collect.Range,java.util.NavigableMap)>($r1, $r2, $r3);

        return;
    }

    static com.google.common.collect.Range access$300(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound)
    {
        com.google.common.collect.Range r1;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound $r0;

        $r0 := @parameter0: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        r1 = $r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        return r1;
    }

    static com.google.common.collect.Range access$400(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound)
    {
        com.google.common.collect.Range r1;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound $r0;

        $r0 := @parameter0: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        r1 = $r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow>;

        return r1;
    }

    private java.util.NavigableMap subMap(com.google.common.collect.Range)
    {
        com.google.common.collect.Range r1, $r3;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0, $r5;
        java.util.NavigableMap $r2;
        com.google.common.collect.ImmutableSortedMap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        r1 := @parameter0: com.google.common.collect.Range;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow>;

        $z0 = virtualinvoke r1.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r3);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap of()>();

        return $r4;

     label1:
        $r5 = new com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow>;

        $r3 = virtualinvoke $r3.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>(r1);

        r1 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap rangesByLowerBound>;

        specialinvoke $r5.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: void <init>(com.google.common.collect.Range,com.google.common.collect.Range,java.util.NavigableMap)>($r3, r1, $r2);

        return $r5;
    }

    public java.util.Comparator comparator()
    {
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        com.google.common.collect.Ordering $r1;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        return $r1;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.Range $r2;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range get(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    java.util.Iterator descendingEntryIterator()
    {
        com.google.common.collect.Cut r5, $r6;
        java.util.Iterator $r12;
        java.util.Collection $r11;
        com.google.common.collect.Range r2;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2 $r13;
        java.util.NavigableMap r8;
        com.google.common.collect.Ordering $r4;
        com.google.common.collect.BoundType $r1, $r10;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.lang.Object $r7;
        java.lang.Comparable $r9;
        com.google.common.collect.UnmodifiableIterator $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        $z0 = virtualinvoke r2.<com.google.common.collect.Range: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator emptyIterator()>();

        return $r3;

     label1:
        $r4 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow>;

        r5 = r2.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        $r6 = r2.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r6 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowValue(java.lang.Comparable)>($r6);

        $r7 = virtualinvoke $r4.<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>(r5, $r6);

        r5 = (com.google.common.collect.Cut) $r7;

        r8 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap rangesByLowerBound>;

        $r9 = virtualinvoke r5.<com.google.common.collect.Cut: java.lang.Comparable endpoint()>();

        $r6 = (com.google.common.collect.Cut) $r9;

        $r10 = virtualinvoke r5.<com.google.common.collect.Cut: com.google.common.collect.BoundType typeAsUpperBound()>();

        $r1 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType CLOSED>;

        if $r10 != $r1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r8 = interfaceinvoke r8.<java.util.NavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>($r6, $z0);

        r8 = interfaceinvoke r8.<java.util.NavigableMap: java.util.NavigableMap descendingMap()>();

        $r11 = interfaceinvoke r8.<java.util.NavigableMap: java.util.Collection values()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

        $r13 = new com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2;

        specialinvoke $r13.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2: void <init>(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound,java.util.Iterator)>(r0, $r12);

        return $r13;
    }

    java.util.Iterator entryIterator()
    {
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        boolean $z0, z1;
        com.google.common.collect.Cut r4, r5;
        java.util.Iterator $r8;
        java.util.Collection $r7;
        com.google.common.collect.Range r2;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1 $r13;
        java.util.NavigableMap r6;
        com.google.common.collect.Ordering $r11;
        com.google.common.collect.BoundType $r1, $r10;
        java.lang.Comparable $r9;
        java.lang.Object $r12;
        com.google.common.collect.UnmodifiableIterator $r3;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        $z0 = virtualinvoke r2.<com.google.common.collect.Range: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator emptyIterator()>();

        return $r3;

     label1:
        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow>;

        r4 = r2.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        r5 = r2.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $z0 = virtualinvoke r4.<com.google.common.collect.Cut: boolean isLessThan(java.lang.Comparable)>(r5);

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator emptyIterator()>();

        return $r3;

     label2:
        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow>;

        r4 = r2.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        r5 = r2.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $z0 = virtualinvoke r4.<com.google.common.collect.Cut: boolean isLessThan(java.lang.Comparable)>(r5);

        z1 = 0;

        if $z0 == 0 goto label3;

        r6 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap rangesByUpperBound>;

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        r4 = r2.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        r6 = interfaceinvoke r6.<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>(r4, 0);

        $r7 = interfaceinvoke r6.<java.util.NavigableMap: java.util.Collection values()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

        goto label5;

     label3:
        r6 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap rangesByLowerBound>;

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow>;

        r4 = r2.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r9 = virtualinvoke r4.<com.google.common.collect.Cut: java.lang.Comparable endpoint()>();

        r4 = (com.google.common.collect.Cut) $r9;

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow>;

        $r10 = virtualinvoke r2.<com.google.common.collect.Range: com.google.common.collect.BoundType lowerBoundType()>();

        $r1 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType CLOSED>;

        if $r10 != $r1 goto label4;

        z1 = 1;

     label4:
        r6 = interfaceinvoke r6.<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>(r4, z1);

        $r7 = interfaceinvoke r6.<java.util.NavigableMap: java.util.Collection values()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $r11 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow>;

        r4 = r2.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        r2 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        r5 = r2.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        r5 = staticinvoke <com.google.common.collect.Cut: com.google.common.collect.Cut belowValue(java.lang.Comparable)>(r5);

        $r12 = virtualinvoke $r11.<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>(r4, r5);

        r4 = (com.google.common.collect.Cut) $r12;

        $r13 = new com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1;

        specialinvoke $r13.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1: void <init>(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound,java.util.Iterator,com.google.common.collect.Cut)>(r0, $r8, r4);

        return $r13;
    }

    public com.google.common.collect.Range get(java.lang.Object)
    {
        com.google.common.collect.Cut r2, r4;
        java.util.Map$Entry $r6;
        com.google.common.collect.Range r3, $r7;
        java.util.NavigableMap r5;
        java.lang.ClassCastException r8;
        int $i0;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.lang.Object $r1;
        boolean z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof com.google.common.collect.Cut;

        if z0 == 0 goto label26;

     label01:
        r2 = (com.google.common.collect.Cut) $r1;

     label02:
        r3 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range lowerBoundWindow>;

     label03:
        z0 = virtualinvoke r3.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>(r2);

     label04:
        if z0 == 0 goto label24;

        r3 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        r4 = r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

     label05:
        $i0 = virtualinvoke r2.<com.google.common.collect.Cut: int compareTo(com.google.common.collect.Cut)>(r4);

     label06:
        if $i0 < 0 goto label26;

        r3 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        r4 = r3.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

     label07:
        $i0 = virtualinvoke r2.<com.google.common.collect.Cut: int compareTo(com.google.common.collect.Cut)>(r4);

     label08:
        if $i0 < 0 goto label09;

        return null;

     label09:
        r3 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        r4 = r3.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

     label10:
        z0 = virtualinvoke r2.<com.google.common.collect.Cut: boolean equals(java.lang.Object)>(r4);

     label11:
        if z0 == 0 goto label19;

        r5 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap rangesByLowerBound>;

     label12:
        $r6 = interfaceinvoke r5.<java.util.NavigableMap: java.util.Map$Entry floorEntry(java.lang.Object)>(r2);

        $r1 = staticinvoke <com.google.common.collect.Maps: java.lang.Object valueOrNull(java.util.Map$Entry)>($r6);

        r3 = (com.google.common.collect.Range) $r1;

     label13:
        if r3 == null goto label18;

        r2 = r3.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r7 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

        r4 = $r7.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

     label14:
        $i0 = virtualinvoke r2.<com.google.common.collect.Cut: int compareTo(com.google.common.collect.Cut)>(r4);

     label15:
        if $i0 <= 0 goto label18;

        $r7 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

     label16:
        r3 = virtualinvoke r3.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r7);

     label17:
        return r3;

     label18:
        goto label24;

     label19:
        r5 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap rangesByLowerBound>;

     label20:
        $r1 = interfaceinvoke r5.<java.util.NavigableMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (com.google.common.collect.Range) $r1;

     label21:
        if r3 == null goto label24;

        $r7 = r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range restriction>;

     label22:
        r3 = virtualinvoke r3.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r7);

     label23:
        return r3;

     label24:
        return null;

     label25:
        r8 := @caughtexception;

     label26:
        return null;

        catch java.lang.ClassCastException from label01 to label02 with label25;
        catch java.lang.ClassCastException from label03 to label04 with label25;
        catch java.lang.ClassCastException from label05 to label06 with label25;
        catch java.lang.ClassCastException from label07 to label08 with label25;
        catch java.lang.ClassCastException from label10 to label11 with label25;
        catch java.lang.ClassCastException from label12 to label13 with label25;
        catch java.lang.ClassCastException from label14 to label15 with label25;
        catch java.lang.ClassCastException from label16 to label17 with label25;
        catch java.lang.ClassCastException from label20 to label21 with label25;
        catch java.lang.ClassCastException from label22 to label23 with label25;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.Range $r1;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: com.google.common.collect.Range get(java.lang.Object)>($r2);

        return $r1;
    }

    public java.util.NavigableMap headMap(com.google.common.collect.Cut, boolean)
    {
        com.google.common.collect.Cut r1;
        com.google.common.collect.BoundType $r2;
        com.google.common.collect.Range $r3;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.util.NavigableMap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        r1 := @parameter0: com.google.common.collect.Cut;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType)>(r1, $r2);

        $r4 = specialinvoke r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap subMap(com.google.common.collect.Range)>($r3);

        return $r4;
    }

    public volatile java.util.NavigableMap headMap(java.lang.Object, boolean)
    {
        com.google.common.collect.Cut $r3;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.lang.Object $r2;
        java.util.NavigableMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = (com.google.common.collect.Cut) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean)>($r3, $z0);

        return $r1;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.util.Iterator $r1;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.Iterator entryIterator()>();

        $i0 = staticinvoke <com.google.common.collect.Iterators: int size(java.util.Iterator)>($r1);

        return $i0;
    }

    public java.util.NavigableMap subMap(com.google.common.collect.Cut, boolean, com.google.common.collect.Cut, boolean)
    {
        com.google.common.collect.Cut r1, r2;
        com.google.common.collect.Range $r5;
        java.util.NavigableMap $r6;
        com.google.common.collect.BoundType $r3, $r4;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        r1 := @parameter0: com.google.common.collect.Cut;

        $z0 := @parameter1: boolean;

        r2 := @parameter2: com.google.common.collect.Cut;

        $z1 := @parameter3: boolean;

        $r3 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r4 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z1);

        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType)>(r1, $r3, r2, $r4);

        $r6 = specialinvoke r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap subMap(com.google.common.collect.Range)>($r5);

        return $r6;
    }

    public volatile java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean)
    {
        com.google.common.collect.Cut $r4, $r5;
        java.util.NavigableMap $r1;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.lang.Object $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 := @parameter2: java.lang.Object;

        $z1 := @parameter3: boolean;

        $r4 = (com.google.common.collect.Cut) $r2;

        $r5 = (com.google.common.collect.Cut) $r3;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean)>($r4, $z0, $r5, $z1);

        return $r1;
    }

    public java.util.NavigableMap tailMap(com.google.common.collect.Cut, boolean)
    {
        com.google.common.collect.Cut r1;
        com.google.common.collect.BoundType $r2;
        com.google.common.collect.Range $r3;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.util.NavigableMap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        r1 := @parameter0: com.google.common.collect.Cut;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType)>(r1, $r2);

        $r4 = specialinvoke r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap subMap(com.google.common.collect.Range)>($r3);

        return $r4;
    }

    public volatile java.util.NavigableMap tailMap(java.lang.Object, boolean)
    {
        com.google.common.collect.Cut $r3;
        com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound r0;
        java.lang.Object $r2;
        java.util.NavigableMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = (com.google.common.collect.Cut) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound: java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean)>($r3, $z0);

        return $r1;
    }
}
