final class com.google.common.io.Closer$SuppressingSuppressor extends java.lang.Object implements com.google.common.io.Closer$Suppressor
{
    private final java.lang.reflect.Method addSuppressed;

    private void <init>(java.lang.reflect.Method)
    {
        com.google.common.io.Closer$SuppressingSuppressor r0;
        java.lang.reflect.Method $r1;

        r0 := @this: com.google.common.io.Closer$SuppressingSuppressor;

        $r1 := @parameter0: java.lang.reflect.Method;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.io.Closer$SuppressingSuppressor: java.lang.reflect.Method addSuppressed> = $r1;

        return;
    }

    static com.google.common.io.Closer$SuppressingSuppressor tryCreate()
    {
        java.lang.Throwable r4;
        com.google.common.io.Closer$SuppressingSuppressor $r3;
        java.lang.Class[] $r2;
        java.lang.Class r1;
        java.lang.reflect.Method $r0;

        r1 = class "Ljava/lang/Throwable;";

     label1:
        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/Throwable;";

        $r0 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addSuppressed", $r2);

     label2:
        $r3 = new com.google.common.io.Closer$SuppressingSuppressor;

        specialinvoke $r3.<com.google.common.io.Closer$SuppressingSuppressor: void <init>(java.lang.reflect.Method)>($r0);

        return $r3;

     label3:
        r4 := @caughtexception;

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void suppress(java.io.Closeable, java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable $r2, $r3, r6;
        com.google.common.io.Closer$SuppressingSuppressor r0;
        java.lang.Object[] $r5;
        com.google.common.io.Closer$LoggingSuppressor $r7;
        java.io.Closeable $r1;
        java.lang.reflect.Method r4;

        r0 := @this: com.google.common.io.Closer$SuppressingSuppressor;

        $r1 := @parameter0: java.io.Closeable;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 := @parameter2: java.lang.Throwable;

        if $r2 != $r3 goto label1;

        return;

     label1:
        r4 = r0.<com.google.common.io.Closer$SuppressingSuppressor: java.lang.reflect.Method addSuppressed>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r3;

        virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r5);

     label2:
        return;

     label3:
        r6 := @caughtexception;

        $r7 = <com.google.common.io.Closer$LoggingSuppressor: com.google.common.io.Closer$LoggingSuppressor INSTANCE>;

        virtualinvoke $r7.<com.google.common.io.Closer$LoggingSuppressor: void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable)>($r1, $r2, $r3);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
