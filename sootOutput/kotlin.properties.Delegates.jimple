public final class kotlin.properties.Delegates extends java.lang.Object
{
    public static final kotlin.properties.Delegates INSTANCE;

    static void <clinit>()
    {
        kotlin.properties.Delegates $r0;

        $r0 = new kotlin.properties.Delegates;

        specialinvoke $r0.<kotlin.properties.Delegates: void <init>()>();

        <kotlin.properties.Delegates: kotlin.properties.Delegates INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        kotlin.properties.Delegates r0;

        r0 := @this: kotlin.properties.Delegates;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final kotlin.properties.ReadWriteProperty notNull()
    {
        kotlin.properties.ReadWriteProperty $r2;
        kotlin.properties.Delegates r0;
        kotlin.properties.NotNullVar $r1;

        r0 := @this: kotlin.properties.Delegates;

        $r1 = new kotlin.properties.NotNullVar;

        specialinvoke $r1.<kotlin.properties.NotNullVar: void <init>()>();

        $r2 = (kotlin.properties.ReadWriteProperty) $r1;

        return $r2;
    }

    public final kotlin.properties.ReadWriteProperty observable(java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.properties.Delegates$observable$1 $r3;
        kotlin.jvm.functions.Function3 $r2;
        kotlin.properties.ReadWriteProperty $r4;
        java.lang.Object $r1;
        kotlin.properties.Delegates r0;

        r0 := @this: kotlin.properties.Delegates;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "onChange");

        $r3 = new kotlin.properties.Delegates$observable$1;

        specialinvoke $r3.<kotlin.properties.Delegates$observable$1: void <init>(java.lang.Object,kotlin.jvm.functions.Function3)>($r1, $r2);

        $r4 = (kotlin.properties.ReadWriteProperty) $r3;

        return $r4;
    }

    public final kotlin.properties.ReadWriteProperty vetoable(java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r2;
        kotlin.properties.ReadWriteProperty $r4;
        java.lang.Object $r1;
        kotlin.properties.Delegates$vetoable$1 $r3;
        kotlin.properties.Delegates r0;

        r0 := @this: kotlin.properties.Delegates;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "onChange");

        $r3 = new kotlin.properties.Delegates$vetoable$1;

        specialinvoke $r3.<kotlin.properties.Delegates$vetoable$1: void <init>(java.lang.Object,kotlin.jvm.functions.Function3)>($r1, $r2);

        $r4 = (kotlin.properties.ReadWriteProperty) $r3;

        return $r4;
    }
}
