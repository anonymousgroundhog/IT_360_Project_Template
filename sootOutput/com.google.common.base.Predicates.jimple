public final class com.google.common.base.Predicates extends java.lang.Object
{

    private void <init>()
    {
        com.google.common.base.Predicates r0;

        r0 := @this: com.google.common.base.Predicates;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String access$800(java.lang.String, java.lang.Iterable)
    {
        java.lang.String $r0;
        java.lang.Iterable $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Iterable;

        $r0 = staticinvoke <com.google.common.base.Predicates: java.lang.String toStringHelper(java.lang.String,java.lang.Iterable)>($r0, $r1);

        return $r0;
    }

    public static com.google.common.base.Predicate alwaysFalse()
    {
        com.google.common.base.Predicates$ObjectPredicate $r1;
        com.google.common.base.Predicate $r0;

        $r1 = <com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate ALWAYS_FALSE>;

        $r0 = virtualinvoke $r1.<com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()>();

        return $r0;
    }

    public static com.google.common.base.Predicate alwaysTrue()
    {
        com.google.common.base.Predicates$ObjectPredicate $r1;
        com.google.common.base.Predicate $r0;

        $r1 = <com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate ALWAYS_TRUE>;

        $r0 = virtualinvoke $r1.<com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()>();

        return $r0;
    }

    public static com.google.common.base.Predicate and(com.google.common.base.Predicate, com.google.common.base.Predicate)
    {
        com.google.common.base.Predicates$AndPredicate $r2;
        java.util.List $r4;
        com.google.common.base.Predicate r0, r1;
        java.lang.Object $r3;

        r0 := @parameter0: com.google.common.base.Predicate;

        r1 := @parameter1: com.google.common.base.Predicate;

        $r2 = new com.google.common.base.Predicates$AndPredicate;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r0 = (com.google.common.base.Predicate) $r3;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r1 = (com.google.common.base.Predicate) $r3;

        $r4 = staticinvoke <com.google.common.base.Predicates: java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate)>(r0, r1);

        specialinvoke $r2.<com.google.common.base.Predicates$AndPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r4, null);

        return $r2;
    }

    public static com.google.common.base.Predicate and(java.lang.Iterable)
    {
        com.google.common.base.Predicates$AndPredicate $r1;
        java.util.List $r2;
        java.lang.Iterable r0;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = new com.google.common.base.Predicates$AndPredicate;

        $r2 = staticinvoke <com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Iterable)>(r0);

        specialinvoke $r1.<com.google.common.base.Predicates$AndPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r2, null);

        return $r1;
    }

    public static transient com.google.common.base.Predicate and(com.google.common.base.Predicate[])
    {
        com.google.common.base.Predicate[] r0;
        com.google.common.base.Predicates$AndPredicate $r1;
        java.util.List $r2;

        r0 := @parameter0: com.google.common.base.Predicate[];

        $r1 = new com.google.common.base.Predicates$AndPredicate;

        $r2 = staticinvoke <com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Object[])>(r0);

        specialinvoke $r1.<com.google.common.base.Predicates$AndPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r2, null);

        return $r1;
    }

    private static java.util.List asList(com.google.common.base.Predicate, com.google.common.base.Predicate)
    {
        java.util.List $r2;
        com.google.common.base.Predicate r0, r1;
        com.google.common.base.Predicate[] $r3;

        r0 := @parameter0: com.google.common.base.Predicate;

        r1 := @parameter1: com.google.common.base.Predicate;

        $r3 = newarray (com.google.common.base.Predicate)[2];

        $r3[0] = r0;

        $r3[1] = r1;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        return $r2;
    }

    public static com.google.common.base.Predicate compose(com.google.common.base.Predicate, com.google.common.base.Function)
    {
        com.google.common.base.Predicates$CompositionPredicate $r2;
        com.google.common.base.Function r1;
        com.google.common.base.Predicate r0;

        r0 := @parameter0: com.google.common.base.Predicate;

        r1 := @parameter1: com.google.common.base.Function;

        $r2 = new com.google.common.base.Predicates$CompositionPredicate;

        specialinvoke $r2.<com.google.common.base.Predicates$CompositionPredicate: void <init>(com.google.common.base.Predicate,com.google.common.base.Function,com.google.common.base.Predicates$1)>(r0, r1, null);

        return $r2;
    }

    public static com.google.common.base.Predicate contains(java.util.regex.Pattern)
    {
        java.util.regex.Pattern $r0;
        com.google.common.base.JdkPattern $r2;
        com.google.common.base.Predicates$ContainsPatternPredicate $r1;

        $r0 := @parameter0: java.util.regex.Pattern;

        $r1 = new com.google.common.base.Predicates$ContainsPatternPredicate;

        $r2 = new com.google.common.base.JdkPattern;

        specialinvoke $r2.<com.google.common.base.JdkPattern: void <init>(java.util.regex.Pattern)>($r0);

        specialinvoke $r1.<com.google.common.base.Predicates$ContainsPatternPredicate: void <init>(com.google.common.base.CommonPattern)>($r2);

        return $r1;
    }

    public static com.google.common.base.Predicate containsPattern(java.lang.String)
    {
        java.lang.String $r0;
        com.google.common.base.Predicates$ContainsPatternFromStringPredicate $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.google.common.base.Predicates$ContainsPatternFromStringPredicate;

        specialinvoke $r1.<com.google.common.base.Predicates$ContainsPatternFromStringPredicate: void <init>(java.lang.String)>($r0);

        return $r1;
    }

    static java.util.List defensiveCopy(java.lang.Iterable)
    {
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.Iterable r0;
        java.util.ArrayList r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Iterable;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return r1;
    }

    private static transient java.util.List defensiveCopy(java.lang.Object[])
    {
        java.util.List $r1;
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r1 = staticinvoke <com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Iterable)>($r1);

        return $r1;
    }

    public static com.google.common.base.Predicate equalTo(java.lang.Object)
    {
        java.lang.Object r0;
        com.google.common.base.Predicate $r1;
        com.google.common.base.Predicates$IsEqualToPredicate $r2;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate isNull()>();

        return $r1;

     label1:
        $r2 = new com.google.common.base.Predicates$IsEqualToPredicate;

        specialinvoke $r2.<com.google.common.base.Predicates$IsEqualToPredicate: void <init>(java.lang.Object,com.google.common.base.Predicates$1)>(r0, null);

        $r1 = virtualinvoke $r2.<com.google.common.base.Predicates$IsEqualToPredicate: com.google.common.base.Predicate withNarrowedType()>();

        return $r1;
    }

    public static com.google.common.base.Predicate in(java.util.Collection)
    {
        java.util.Collection r0;
        com.google.common.base.Predicates$InPredicate $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new com.google.common.base.Predicates$InPredicate;

        specialinvoke $r1.<com.google.common.base.Predicates$InPredicate: void <init>(java.util.Collection,com.google.common.base.Predicates$1)>(r0, null);

        return $r1;
    }

    public static com.google.common.base.Predicate instanceOf(java.lang.Class)
    {
        java.lang.Class r0;
        com.google.common.base.Predicates$InstanceOfPredicate $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new com.google.common.base.Predicates$InstanceOfPredicate;

        specialinvoke $r1.<com.google.common.base.Predicates$InstanceOfPredicate: void <init>(java.lang.Class,com.google.common.base.Predicates$1)>(r0, null);

        return $r1;
    }

    public static com.google.common.base.Predicate isNull()
    {
        com.google.common.base.Predicates$ObjectPredicate $r1;
        com.google.common.base.Predicate $r0;

        $r1 = <com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate IS_NULL>;

        $r0 = virtualinvoke $r1.<com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()>();

        return $r0;
    }

    public static com.google.common.base.Predicate not(com.google.common.base.Predicate)
    {
        com.google.common.base.Predicate r0;
        com.google.common.base.Predicates$NotPredicate $r1;

        r0 := @parameter0: com.google.common.base.Predicate;

        $r1 = new com.google.common.base.Predicates$NotPredicate;

        specialinvoke $r1.<com.google.common.base.Predicates$NotPredicate: void <init>(com.google.common.base.Predicate)>(r0);

        return $r1;
    }

    public static com.google.common.base.Predicate notNull()
    {
        com.google.common.base.Predicates$ObjectPredicate $r1;
        com.google.common.base.Predicate $r0;

        $r1 = <com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate NOT_NULL>;

        $r0 = virtualinvoke $r1.<com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()>();

        return $r0;
    }

    public static com.google.common.base.Predicate or(com.google.common.base.Predicate, com.google.common.base.Predicate)
    {
        java.util.List $r4;
        com.google.common.base.Predicate r0, r1;
        java.lang.Object $r3;
        com.google.common.base.Predicates$OrPredicate $r2;

        r0 := @parameter0: com.google.common.base.Predicate;

        r1 := @parameter1: com.google.common.base.Predicate;

        $r2 = new com.google.common.base.Predicates$OrPredicate;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r0 = (com.google.common.base.Predicate) $r3;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r1 = (com.google.common.base.Predicate) $r3;

        $r4 = staticinvoke <com.google.common.base.Predicates: java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate)>(r0, r1);

        specialinvoke $r2.<com.google.common.base.Predicates$OrPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r4, null);

        return $r2;
    }

    public static com.google.common.base.Predicate or(java.lang.Iterable)
    {
        java.util.List $r2;
        com.google.common.base.Predicates$OrPredicate $r1;
        java.lang.Iterable r0;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = new com.google.common.base.Predicates$OrPredicate;

        $r2 = staticinvoke <com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Iterable)>(r0);

        specialinvoke $r1.<com.google.common.base.Predicates$OrPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r2, null);

        return $r1;
    }

    public static transient com.google.common.base.Predicate or(com.google.common.base.Predicate[])
    {
        com.google.common.base.Predicate[] r0;
        java.util.List $r2;
        com.google.common.base.Predicates$OrPredicate $r1;

        r0 := @parameter0: com.google.common.base.Predicate[];

        $r1 = new com.google.common.base.Predicates$OrPredicate;

        $r2 = staticinvoke <com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Object[])>(r0);

        specialinvoke $r1.<com.google.common.base.Predicates$OrPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r2, null);

        return $r1;
    }

    public static com.google.common.base.Predicate subtypeOf(java.lang.Class)
    {
        java.lang.Class r0;
        com.google.common.base.Predicates$SubtypeOfPredicate $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new com.google.common.base.Predicates$SubtypeOfPredicate;

        specialinvoke $r1.<com.google.common.base.Predicates$SubtypeOfPredicate: void <init>(java.lang.Class,com.google.common.base.Predicates$1)>(r0, null);

        return $r1;
    }

    private static java.lang.String toStringHelper(java.lang.String, java.lang.Iterable)
    {
        java.util.Iterator $r3;
        java.lang.StringBuilder r2;
        java.lang.Object $r4;
        java.lang.String $r0;
        java.lang.Iterable r1;
        boolean z0, $z1;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Iterable;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Predicates.");

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        z0 = 1;

        $r3 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if z0 != 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        z0 = 0;

        goto label1;

     label3:
        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r0 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
}
