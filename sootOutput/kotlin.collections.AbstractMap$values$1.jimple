public final class kotlin.collections.AbstractMap$values$1 extends kotlin.collections.AbstractCollection
{
    final kotlin.collections.AbstractMap this$0;

    void <init>(kotlin.collections.AbstractMap)
    {
        kotlin.collections.AbstractMap$values$1 r0;
        kotlin.collections.AbstractMap $r1;

        r0 := @this: kotlin.collections.AbstractMap$values$1;

        $r1 := @parameter0: kotlin.collections.AbstractMap;

        r0.<kotlin.collections.AbstractMap$values$1: kotlin.collections.AbstractMap this$0> = $r1;

        specialinvoke r0.<kotlin.collections.AbstractCollection: void <init>()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object $r1;
        kotlin.collections.AbstractMap$values$1 r0;
        kotlin.collections.AbstractMap $r2;
        boolean $z0;

        r0 := @this: kotlin.collections.AbstractMap$values$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<kotlin.collections.AbstractMap$values$1: kotlin.collections.AbstractMap this$0>;

        $z0 = virtualinvoke $r2.<kotlin.collections.AbstractMap: boolean containsValue(java.lang.Object)>($r1);

        return $z0;
    }

    public int getSize()
    {
        int $i0;
        kotlin.collections.AbstractMap$values$1 r0;
        kotlin.collections.AbstractMap $r1;

        r0 := @this: kotlin.collections.AbstractMap$values$1;

        $r1 = r0.<kotlin.collections.AbstractMap$values$1: kotlin.collections.AbstractMap this$0>;

        $i0 = virtualinvoke $r1.<kotlin.collections.AbstractMap: int size()>();

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        kotlin.collections.AbstractMap$values$1 r0;
        kotlin.collections.AbstractMap r1;
        kotlin.collections.AbstractMap$values$1$iterator$1 $r4;

        r0 := @this: kotlin.collections.AbstractMap$values$1;

        r1 = r0.<kotlin.collections.AbstractMap$values$1: kotlin.collections.AbstractMap this$0>;

        $r2 = virtualinvoke r1.<kotlin.collections.AbstractMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = new kotlin.collections.AbstractMap$values$1$iterator$1;

        specialinvoke $r4.<kotlin.collections.AbstractMap$values$1$iterator$1: void <init>(java.util.Iterator)>($r3);

        $r3 = (java.util.Iterator) $r4;

        return $r3;
    }
}
