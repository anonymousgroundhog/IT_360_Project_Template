final class com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{
    private static final java.util.logging.Logger logger;
    private final java.lang.Runtime runtime;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/google/common/util/concurrent/UncaughtExceptionHandlers$Exiter;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter: java.util.logging.Logger logger> = $r2;

        return;
    }

    void <init>(java.lang.Runtime)
    {
        com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter r0;
        java.lang.Runtime $r1;

        r0 := @this: com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter;

        $r1 := @parameter0: java.lang.Runtime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter: java.lang.Runtime runtime> = $r1;

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r2, r8, r11;
        java.io.PrintStream $r9;
        java.lang.Object[] $r3;
        java.lang.Runtime r10;
        java.util.logging.Logger r4;
        java.util.logging.Level $r5;
        com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter r0;
        java.util.Locale $r6;
        java.lang.Thread $r1;
        java.lang.String $r7;

        r0 := @this: com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

     label1:
        r4 = <com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter: java.util.logging.Logger logger>;

        $r5 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r6 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "Caught an exception in %s.  Shutting down.", $r3);

        virtualinvoke r4.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r5, $r7, $r2);

     label2:
        goto label5;

     label3:
        r8 := @caughtexception;

     label4:
        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r7 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r7 = virtualinvoke r8.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label5:
        r10 = r0.<com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter: java.lang.Runtime runtime>;

        virtualinvoke r10.<java.lang.Runtime: void exit(int)>(1);

        return;

     label6:
        r11 := @caughtexception;

        r10 = r0.<com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter: java.lang.Runtime runtime>;

        virtualinvoke r10.<java.lang.Runtime: void exit(int)>(1);

        throw r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
