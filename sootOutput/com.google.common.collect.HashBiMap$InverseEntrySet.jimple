class com.google.common.collect.HashBiMap$InverseEntrySet extends com.google.common.collect.HashBiMap$View
{

    void <init>(com.google.common.collect.HashBiMap)
    {
        com.google.common.collect.HashBiMap r1;
        com.google.common.collect.HashBiMap$InverseEntrySet r0;

        r0 := @this: com.google.common.collect.HashBiMap$InverseEntrySet;

        r1 := @parameter0: com.google.common.collect.HashBiMap;

        specialinvoke r0.<com.google.common.collect.HashBiMap$View: void <init>(com.google.common.collect.HashBiMap)>(r1);

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map$Entry r2;
        java.lang.Object[] $r5;
        com.google.common.collect.HashBiMap r4;
        com.google.common.collect.HashBiMap$InverseEntrySet r0;
        int $i0;
        java.lang.Object $r1, $r3;
        boolean z0;

        r0 := @this: com.google.common.collect.HashBiMap$InverseEntrySet;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof java.util.Map$Entry;

        if z0 == 0 goto label1;

        r2 = (java.util.Map$Entry) $r1;

        $r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r1 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = r0.<com.google.common.collect.HashBiMap$InverseEntrySet: com.google.common.collect.HashBiMap biMap>;

        $i0 = virtualinvoke r4.<com.google.common.collect.HashBiMap: int findEntryByValue(java.lang.Object)>($r3);

        if $i0 == -1 goto label1;

        r4 = r0.<com.google.common.collect.HashBiMap$InverseEntrySet: com.google.common.collect.HashBiMap biMap>;

        $r5 = r4.<com.google.common.collect.HashBiMap: java.lang.Object[] keys>;

        $r3 = $r5[$i0];

        z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r1);

        if z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    volatile java.lang.Object forEntry(int)
    {
        int $i0;
        java.util.Map$Entry $r1;
        com.google.common.collect.HashBiMap$InverseEntrySet r0;

        r0 := @this: com.google.common.collect.HashBiMap$InverseEntrySet;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.google.common.collect.HashBiMap$InverseEntrySet: java.util.Map$Entry forEntry(int)>($i0);

        return $r1;
    }

    java.util.Map$Entry forEntry(int)
    {
        com.google.common.collect.HashBiMap $r2;
        com.google.common.collect.HashBiMap$InverseEntrySet r0;
        com.google.common.collect.HashBiMap$EntryForValue $r1;
        int $i0;

        r0 := @this: com.google.common.collect.HashBiMap$InverseEntrySet;

        $i0 := @parameter0: int;

        $r1 = new com.google.common.collect.HashBiMap$EntryForValue;

        $r2 = r0.<com.google.common.collect.HashBiMap$InverseEntrySet: com.google.common.collect.HashBiMap biMap>;

        specialinvoke $r1.<com.google.common.collect.HashBiMap$EntryForValue: void <init>(com.google.common.collect.HashBiMap,int)>($r2, $i0);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry r2;
        java.lang.Object[] $r5;
        com.google.common.collect.HashBiMap r4;
        com.google.common.collect.HashBiMap$InverseEntrySet r0;
        int $i0, $i1;
        java.lang.Object $r1, $r3;
        boolean z0;

        r0 := @this: com.google.common.collect.HashBiMap$InverseEntrySet;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof java.util.Map$Entry;

        if z0 == 0 goto label1;

        r2 = (java.util.Map$Entry) $r1;

        $r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r1 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $i0 = staticinvoke <com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>($r3);

        r4 = r0.<com.google.common.collect.HashBiMap$InverseEntrySet: com.google.common.collect.HashBiMap biMap>;

        $i1 = virtualinvoke r4.<com.google.common.collect.HashBiMap: int findEntryByValue(java.lang.Object,int)>($r3, $i0);

        if $i1 == -1 goto label1;

        r4 = r0.<com.google.common.collect.HashBiMap$InverseEntrySet: com.google.common.collect.HashBiMap biMap>;

        $r5 = r4.<com.google.common.collect.HashBiMap: java.lang.Object[] keys>;

        $r3 = $r5[$i1];

        z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r1);

        if z0 == 0 goto label1;

        r4 = r0.<com.google.common.collect.HashBiMap$InverseEntrySet: com.google.common.collect.HashBiMap biMap>;

        virtualinvoke r4.<com.google.common.collect.HashBiMap: void removeEntryValueHashKnown(int,int)>($i1, $i0);

        return 1;

     label1:
        return 0;
    }
}
