final class kotlinx.coroutines.flow.FlowKt__BuildersKt extends java.lang.Object
{

    public static final kotlinx.coroutines.flow.Flow asFlow(java.lang.Iterable)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3 $r1;
        java.lang.Iterable $r0;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3: void <init>(java.lang.Iterable)>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow asFlow(java.util.Iterator)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4 $r1;
        java.util.Iterator $r0;

        $r0 := @parameter0: java.util.Iterator;

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4: void <init>(java.util.Iterator)>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function0)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1 $r1;
        kotlin.jvm.functions.Function0 $r0;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1: void <init>(kotlin.jvm.functions.Function0)>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlin.jvm.functions.Function1 $r0;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2 $r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.IntRange)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9 $r1;
        kotlin.ranges.IntRange $r0;

        $r0 := @parameter0: kotlin.ranges.IntRange;

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9: void <init>(kotlin.ranges.IntRange)>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.LongRange)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10 $r1;
        kotlin.ranges.LongRange $r0;

        $r0 := @parameter0: kotlin.ranges.LongRange;

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: void <init>(kotlin.ranges.LongRange)>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow asFlow(kotlin.sequences.Sequence)
    {
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5 $r1;
        kotlinx.coroutines.flow.Flow $r2;
        kotlin.sequences.Sequence $r0;

        $r0 := @parameter0: kotlin.sequences.Sequence;

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5: void <init>(kotlin.sequences.Sequence)>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow asFlow(int[])
    {
        kotlinx.coroutines.flow.Flow $r2;
        int[] $r0;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7 $r1;

        $r0 := @parameter0: int[];

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7: void <init>(int[])>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow asFlow(long[])
    {
        kotlinx.coroutines.flow.Flow $r2;
        long[] $r0;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8 $r1;

        $r0 := @parameter0: long[];

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8: void <init>(long[])>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow asFlow(java.lang.Object[])
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6 $r1;
        java.lang.Object[] $r0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6: void <init>(java.lang.Object[])>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlin.jvm.functions.Function2 $r0;
        kotlinx.coroutines.flow.CallbackFlowBuilder $r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function2;

        $r1 = new kotlinx.coroutines.flow.CallbackFlowBuilder;

        specialinvoke $r1.<kotlinx.coroutines.flow.CallbackFlowBuilder: void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r0, null, 0, null, 14, null);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow channelFlow(kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlin.jvm.functions.Function2 $r0;
        kotlinx.coroutines.flow.ChannelFlowBuilder $r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function2;

        $r1 = new kotlinx.coroutines.flow.ChannelFlowBuilder;

        specialinvoke $r1.<kotlinx.coroutines.flow.ChannelFlowBuilder: void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r0, null, 0, null, 14, null);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow emptyFlow()
    {
        kotlinx.coroutines.flow.Flow $r1;
        kotlinx.coroutines.flow.EmptyFlow $r0;

        $r0 = <kotlinx.coroutines.flow.EmptyFlow: kotlinx.coroutines.flow.EmptyFlow INSTANCE>;

        $r1 = (kotlinx.coroutines.flow.Flow) $r0;

        return $r1;
    }

    public static final kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.SafeFlow $r1;
        kotlinx.coroutines.flow.Flow $r2;
        kotlin.jvm.functions.Function2 $r0;

        $r0 := @parameter0: kotlin.jvm.functions.Function2;

        $r1 = new kotlinx.coroutines.flow.SafeFlow;

        specialinvoke $r1.<kotlinx.coroutines.flow.SafeFlow: void <init>(kotlin.jvm.functions.Function2)>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow flowOf(java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2 $r1;
        kotlinx.coroutines.flow.Flow $r2;
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2: void <init>(java.lang.Object)>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }

    public static final transient kotlinx.coroutines.flow.Flow flowOf(java.lang.Object[])
    {
        kotlinx.coroutines.flow.Flow $r2;
        java.lang.Object[] $r0;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1 $r1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1: void <init>(java.lang.Object[])>($r0);

        $r2 = (kotlinx.coroutines.flow.Flow) $r1;

        return $r2;
    }
}
