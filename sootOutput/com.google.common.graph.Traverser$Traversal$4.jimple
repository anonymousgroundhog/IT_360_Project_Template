class com.google.common.graph.Traverser$Traversal$4 extends com.google.common.collect.AbstractIterator
{
    final com.google.common.graph.Traverser$Traversal this$0;
    final java.util.Deque val$ancestorStack;
    final java.util.Deque val$horizon;

    void <init>(com.google.common.graph.Traverser$Traversal, java.util.Deque, java.util.Deque)
    {
        com.google.common.graph.Traverser$Traversal $r1;
        java.util.Deque $r2, $r3;
        com.google.common.graph.Traverser$Traversal$4 r0;

        r0 := @this: com.google.common.graph.Traverser$Traversal$4;

        $r1 := @parameter0: com.google.common.graph.Traverser$Traversal;

        $r2 := @parameter1: java.util.Deque;

        $r3 := @parameter2: java.util.Deque;

        r0.<com.google.common.graph.Traverser$Traversal$4: com.google.common.graph.Traverser$Traversal this$0> = $r1;

        r0.<com.google.common.graph.Traverser$Traversal$4: java.util.Deque val$horizon> = $r2;

        r0.<com.google.common.graph.Traverser$Traversal$4: java.util.Deque val$ancestorStack> = $r3;

        specialinvoke r0.<com.google.common.collect.AbstractIterator: void <init>()>();

        return;
    }

    protected java.lang.Object computeNext()
    {
        java.util.Iterator $r6;
        com.google.common.graph.Traverser$Traversal r1;
        java.util.Deque r2;
        java.lang.Iterable $r5;
        java.lang.Object $r3;
        com.google.common.graph.SuccessorsFunction r4;
        com.google.common.graph.Traverser$Traversal$4 r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.Traverser$Traversal$4;

        r1 = r0.<com.google.common.graph.Traverser$Traversal$4: com.google.common.graph.Traverser$Traversal this$0>;

        r2 = r0.<com.google.common.graph.Traverser$Traversal$4: java.util.Deque val$horizon>;

        $r3 = virtualinvoke r1.<com.google.common.graph.Traverser$Traversal: java.lang.Object visitNext(java.util.Deque)>(r2);

     label1:
        if $r3 == null goto label3;

        r1 = r0.<com.google.common.graph.Traverser$Traversal$4: com.google.common.graph.Traverser$Traversal this$0>;

        r4 = r1.<com.google.common.graph.Traverser$Traversal: com.google.common.graph.SuccessorsFunction successorFunction>;

        $r5 = interfaceinvoke r4.<com.google.common.graph.SuccessorsFunction: java.lang.Iterable successors(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r3;

     label2:
        r2 = r0.<com.google.common.graph.Traverser$Traversal$4: java.util.Deque val$horizon>;

        interfaceinvoke r2.<java.util.Deque: void addFirst(java.lang.Object)>($r6);

        r2 = r0.<com.google.common.graph.Traverser$Traversal$4: java.util.Deque val$ancestorStack>;

        interfaceinvoke r2.<java.util.Deque: void push(java.lang.Object)>($r3);

        r1 = r0.<com.google.common.graph.Traverser$Traversal$4: com.google.common.graph.Traverser$Traversal this$0>;

        r2 = r0.<com.google.common.graph.Traverser$Traversal$4: java.util.Deque val$horizon>;

        $r3 = virtualinvoke r1.<com.google.common.graph.Traverser$Traversal: java.lang.Object visitNext(java.util.Deque)>(r2);

        goto label1;

     label3:
        r2 = r0.<com.google.common.graph.Traverser$Traversal$4: java.util.Deque val$ancestorStack>;

        $z0 = interfaceinvoke r2.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        r2 = r0.<com.google.common.graph.Traverser$Traversal$4: java.util.Deque val$ancestorStack>;

        $r3 = interfaceinvoke r2.<java.util.Deque: java.lang.Object pop()>();

        return $r3;

     label4:
        $r3 = virtualinvoke r0.<com.google.common.graph.Traverser$Traversal$4: java.lang.Object endOfData()>();

        return $r3;
    }
}
