public class androidx.work.impl.diagnostics.DiagnosticsReceiver extends android.content.BroadcastReceiver
{
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("DiagnosticsRcvr");

        <androidx.work.impl.diagnostics.DiagnosticsReceiver: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>()
    {
        androidx.work.impl.diagnostics.DiagnosticsReceiver r0;

        r0 := @this: androidx.work.impl.diagnostics.DiagnosticsReceiver;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        android.content.Context $r1;
        java.lang.IllegalStateException r8;
        androidx.work.OneTimeWorkRequest $r7;
        androidx.work.impl.diagnostics.DiagnosticsReceiver r0;
        android.content.Intent $r2;
        androidx.work.Logger $r3;
        java.lang.Throwable[] $r5;
        androidx.work.WorkManager $r6;
        java.lang.String $r4;

        r0 := @this: androidx.work.impl.diagnostics.DiagnosticsReceiver;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r4 = <androidx.work.impl.diagnostics.DiagnosticsReceiver: java.lang.String TAG>;

        $r5 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r3.<androidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])>($r4, "Requesting diagnostics", $r5);

     label2:
        $r6 = staticinvoke <androidx.work.WorkManager: androidx.work.WorkManager getInstance(android.content.Context)>($r1);

        $r7 = staticinvoke <androidx.work.OneTimeWorkRequest: androidx.work.OneTimeWorkRequest 'from'(java.lang.Class)>(class "Landroidx/work/impl/workers/DiagnosticsWorker;");

        virtualinvoke $r6.<androidx.work.WorkManager: androidx.work.Operation enqueue(androidx.work.WorkRequest)>($r7);

     label3:
        return;

     label4:
        r8 := @caughtexception;

        $r3 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r4 = <androidx.work.impl.diagnostics.DiagnosticsReceiver: java.lang.String TAG>;

        $r5 = newarray (java.lang.Throwable)[1];

        $r5[0] = r8;

        virtualinvoke $r3.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable[])>($r4, "WorkManager is not initialized", $r5);

        return;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
    }
}
