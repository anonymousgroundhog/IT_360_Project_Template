public final class kotlin.text.CharCategory$Companion extends java.lang.Object
{

    private void <init>()
    {
        kotlin.text.CharCategory$Companion r0;

        r0 := @this: kotlin.text.CharCategory$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.jvm.internal.DefaultConstructorMarker $r1;
        kotlin.text.CharCategory$Companion r0;

        r0 := @this: kotlin.text.CharCategory$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<kotlin.text.CharCategory$Companion: void <init>()>();

        return;
    }

    public final kotlin.text.CharCategory valueOf(int)
    {
        java.lang.IllegalArgumentException $r7;
        kotlin.text.CharCategory[] $r1;
        int $i0;
        kotlin.text.CharCategory $r2;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r4;
        kotlin.text.CharCategory$Companion r0;
        boolean $z0;
        kotlin.ranges.IntRange $r5;

        r0 := @this: kotlin.text.CharCategory$Companion;

        $i0 := @parameter0: int;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(0, 16);

        $z0 = virtualinvoke $r5.<kotlin.ranges.IntRange: boolean contains(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <kotlin.text.CharCategory: kotlin.text.CharCategory[] values()>();

        $r2 = $r1[$i0];

        return $r2;

     label1:
        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(18, 30);

        $z0 = virtualinvoke $r5.<kotlin.ranges.IntRange: boolean contains(int)>($i0);

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <kotlin.text.CharCategory: kotlin.text.CharCategory[] values()>();

        $i0 = $i0 + -1;

        $r2 = $r1[$i0];

        return $r2;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Category #");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not defined.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r7;
    }
}
