public final class kotlin.ranges.ULongRange extends kotlin.ranges.ULongProgression implements kotlin.ranges.ClosedRange, kotlin.ranges.OpenEndRange
{
    public static final kotlin.ranges.ULongRange$Companion Companion;
    private static final kotlin.ranges.ULongRange EMPTY;

    static void <clinit>()
    {
        kotlin.ranges.ULongRange$Companion $r0;
        kotlin.ranges.ULongRange $r1;

        $r0 = new kotlin.ranges.ULongRange$Companion;

        specialinvoke $r0.<kotlin.ranges.ULongRange$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.ranges.ULongRange: kotlin.ranges.ULongRange$Companion Companion> = $r0;

        $r1 = new kotlin.ranges.ULongRange;

        specialinvoke $r1.<kotlin.ranges.ULongRange: void <init>(long,long,kotlin.jvm.internal.DefaultConstructorMarker)>(-1L, 0L, null);

        <kotlin.ranges.ULongRange: kotlin.ranges.ULongRange EMPTY> = $r1;

        return;
    }

    private void <init>(long, long)
    {
        long $l0, $l1;
        kotlin.ranges.ULongRange r0;

        r0 := @this: kotlin.ranges.ULongRange;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        specialinvoke r0.<kotlin.ranges.ULongProgression: void <init>(long,long,long,kotlin.jvm.internal.DefaultConstructorMarker)>($l0, $l1, 1L, null);

        return;
    }

    public void <init>(long, long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.ranges.ULongRange r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;
        long $l0, $l1;

        r0 := @this: kotlin.ranges.ULongRange;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<kotlin.ranges.ULongRange: void <init>(long,long)>($l0, $l1);

        return;
    }

    public static final kotlin.ranges.ULongRange access$getEMPTY$cp()
    {
        kotlin.ranges.ULongRange r0;

        r0 = <kotlin.ranges.ULongRange: kotlin.ranges.ULongRange EMPTY>;

        return r0;
    }

    public static void getEndExclusive-s-VKNKU$annotations()
    {
        return;
    }

    public volatile boolean contains(java.lang.Comparable)
    {
        kotlin.ranges.ULongRange r0;
        java.lang.Comparable $r1;
        long $l0;
        kotlin.ULong $r2;
        boolean $z0;

        r0 := @this: kotlin.ranges.ULongRange;

        $r1 := @parameter0: java.lang.Comparable;

        $r2 = (kotlin.ULong) $r1;

        $l0 = virtualinvoke $r2.<kotlin.ULong: long unbox-impl()>();

        $z0 = virtualinvoke r0.<kotlin.ranges.ULongRange: boolean contains-VKZWuLQ(long)>($l0);

        return $z0;
    }

    public boolean contains-VKZWuLQ(long)
    {
        kotlin.ranges.ULongRange r0;
        int $i2;
        long $l0, $l1;

        r0 := @this: kotlin.ranges.ULongRange;

        $l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getFirst-s-VKNKU()>();

        $i2 = staticinvoke <kotlin.UByte$$ExternalSyntheticBackport4: int m(long,long)>($l1, $l0);

        if $i2 > 0 goto label1;

        $l1 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getLast-s-VKNKU()>();

        $i2 = staticinvoke <kotlin.UByte$$ExternalSyntheticBackport4: int m(long,long)>($l0, $l1);

        if $i2 > 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        byte $b2;
        kotlin.ranges.ULongRange r0, $r2;
        java.lang.Object $r1;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: kotlin.ranges.ULongRange;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlin.ranges.ULongRange;

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke r0.<kotlin.ranges.ULongRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = (kotlin.ranges.ULongRange) $r1;

        $z0 = virtualinvoke $r2.<kotlin.ranges.ULongRange: boolean isEmpty()>();

        if $z0 != 0 goto label2;

     label1:
        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getFirst-s-VKNKU()>();

        $r2 = (kotlin.ranges.ULongRange) $r1;

        $l1 = virtualinvoke $r2.<kotlin.ranges.ULongRange: long getFirst-s-VKNKU()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label3;

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getLast-s-VKNKU()>();

        r0 = (kotlin.ranges.ULongRange) $r1;

        $l1 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getLast-s-VKNKU()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public volatile java.lang.Comparable getEndExclusive()
    {
        long $l0;
        kotlin.ranges.ULongRange r0;
        kotlin.ULong $r1;

        r0 := @this: kotlin.ranges.ULongRange;

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getEndExclusive-s-VKNKU()>();

        $r1 = staticinvoke <kotlin.ULong: kotlin.ULong box-impl(long)>($l0);

        return $r1;
    }

    public long getEndExclusive-s-VKNKU()
    {
        java.lang.IllegalStateException $r1;
        byte $b1;
        kotlin.ranges.ULongRange r0;
        long $l0, $l2;
        java.lang.String $r2;

        r0 := @this: kotlin.ranges.ULongRange;

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getLast-s-VKNKU()>();

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getLast-s-VKNKU()>();

        $l2 = (long) 1;

        $l2 = $l2 & 4294967295L;

        $l2 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l2);

        $l0 = $l0 + $l2;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        return $l0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r2 = "Cannot return the exclusive upper bound of a range that includes MAX_VALUE.";

        $r2 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public volatile java.lang.Comparable getEndInclusive()
    {
        long $l0;
        kotlin.ranges.ULongRange r0;
        kotlin.ULong $r1;

        r0 := @this: kotlin.ranges.ULongRange;

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getEndInclusive-s-VKNKU()>();

        $r1 = staticinvoke <kotlin.ULong: kotlin.ULong box-impl(long)>($l0);

        return $r1;
    }

    public long getEndInclusive-s-VKNKU()
    {
        long $l0;
        kotlin.ranges.ULongRange r0;

        r0 := @this: kotlin.ranges.ULongRange;

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getLast-s-VKNKU()>();

        return $l0;
    }

    public volatile java.lang.Comparable getStart()
    {
        long $l0;
        kotlin.ranges.ULongRange r0;
        kotlin.ULong $r1;

        r0 := @this: kotlin.ranges.ULongRange;

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getStart-s-VKNKU()>();

        $r1 = staticinvoke <kotlin.ULong: kotlin.ULong box-impl(long)>($l0);

        return $r1;
    }

    public long getStart-s-VKNKU()
    {
        long $l0;
        kotlin.ranges.ULongRange r0;

        r0 := @this: kotlin.ranges.ULongRange;

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getFirst-s-VKNKU()>();

        return $l0;
    }

    public int hashCode()
    {
        kotlin.ranges.ULongRange r0;
        int $i2, $i3;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: kotlin.ranges.ULongRange;

        $z0 = virtualinvoke r0.<kotlin.ranges.ULongRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return -1;

     label1:
        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getFirst-s-VKNKU()>();

        $l1 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getFirst-s-VKNKU()>();

        $l1 = $l1 >>> 32;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $l0 = $l0 ^ $l1;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        $i2 = (int) $l0;

        $i2 = $i2 * 31;

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getLast-s-VKNKU()>();

        $l1 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getLast-s-VKNKU()>();

        $l1 = $l1 >>> 32;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $l0 = $l0 ^ $l1;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        $i3 = (int) $l0;

        $i2 = $i3 + $i2;

        return $i2;
    }

    public boolean isEmpty()
    {
        kotlin.ranges.ULongRange r0;
        int $i2;
        long $l0, $l1;

        r0 := @this: kotlin.ranges.ULongRange;

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getFirst-s-VKNKU()>();

        $l1 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getLast-s-VKNKU()>();

        $i2 = staticinvoke <kotlin.UByte$$ExternalSyntheticBackport4: int m(long,long)>($l0, $l1);

        if $i2 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        kotlin.ranges.ULongRange r0;
        java.lang.StringBuilder $r1;
        long $l0;
        java.lang.String $r2;

        r0 := @this: kotlin.ranges.ULongRange;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getFirst-s-VKNKU()>();

        $r2 = staticinvoke <kotlin.ULong: java.lang.String toString-impl(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $l0 = virtualinvoke r0.<kotlin.ranges.ULongRange: long getLast-s-VKNKU()>();

        $r2 = staticinvoke <kotlin.ULong: java.lang.String toString-impl(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
