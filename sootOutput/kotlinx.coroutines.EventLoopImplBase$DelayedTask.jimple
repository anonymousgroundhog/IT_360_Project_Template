public abstract class kotlinx.coroutines.EventLoopImplBase$DelayedTask extends java.lang.Object implements java.lang.Runnable, java.lang.Comparable, kotlinx.coroutines.DisposableHandle, kotlinx.coroutines.internal.ThreadSafeHeapNode
{
    private volatile java.lang.Object _heap;
    private int index;
    public long nanoTime;

    public void <init>(long)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        long $l0;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime> = $l0;

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index> = -1;

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (kotlinx.coroutines.EventLoopImplBase$DelayedTask) $r1;

        $i0 = virtualinvoke r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)>($r2);

        return $i0;
    }

    public int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0, $r1;
        byte $b2;
        int $i3;
        long l0, $l1;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $r1 := @parameter0: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        l0 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        $l1 = $r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        l0 = l0 - $l1;

        $b2 = l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label1;

        return 1;

     label1:
        $b2 = l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label2;

        return -1;

     label2:
        return 0;
    }

    public final void dispose()
    {
        kotlinx.coroutines.internal.Symbol $r2;
        java.lang.Throwable $r6;
        kotlinx.coroutines.internal.ThreadSafeHeapNode $r4;
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        kotlin.Unit $r5;
        kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue $r3;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        entermonitor r0;

     label1:
        r1 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap>;

        $r2 = staticinvoke <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()>();

     label2:
        if r1 != $r2 goto label3;

        exitmonitor r0;

        return;

     label3:
        $z0 = r1 instanceof kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue;

        if $z0 == 0 goto label4;

        $r3 = (kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) r1;

        goto label5;

     label4:
        $r3 = null;

     label5:
        if $r3 == null goto label6;

        $r4 = (kotlinx.coroutines.internal.ThreadSafeHeapNode) r0;

        virtualinvoke $r3.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)>($r4);

     label6:
        $r2 = staticinvoke <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()>();

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap> = $r2;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label7:
        exitmonitor r0;

        return;

     label8:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label7 with label8;
    }

    public kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        kotlinx.coroutines.internal.ThreadSafeHeap $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $r1 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap>;

        $z0 = $r1 instanceof kotlinx.coroutines.internal.ThreadSafeHeap;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.internal.ThreadSafeHeap) $r1;

        return $r2;

     label1:
        return null;
    }

    public int getIndex()
    {
        int i0;
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        i0 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index>;

        return i0;
    }

    public final int scheduleTask(long, kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue, kotlinx.coroutines.EventLoopImplBase)
    {
        java.lang.Throwable $r8, $r9;
        kotlinx.coroutines.EventLoopImplBase r2;
        long l0, l2, $l3;
        byte $b1;
        kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue r1;
        int $i4;
        boolean $z0;
        kotlinx.coroutines.internal.Symbol $r4;
        kotlinx.coroutines.internal.ThreadSafeHeapNode $r6;
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0, r7;
        kotlinx.coroutines.internal.ThreadSafeHeap $r5;
        java.lang.Object $r3;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        l0 := @parameter0: long;

        r1 := @parameter1: kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue;

        r2 := @parameter2: kotlinx.coroutines.EventLoopImplBase;

        entermonitor r0;

     label01:
        $r3 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap>;

        $r4 = staticinvoke <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()>();

     label02:
        if $r3 != $r4 goto label03;

        exitmonitor r0;

        return 2;

     label03:
        $r5 = (kotlinx.coroutines.internal.ThreadSafeHeap) r1;

        entermonitor $r5;

     label04:
        $r6 = virtualinvoke $r5.<kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()>();

        r7 = (kotlinx.coroutines.EventLoopImplBase$DelayedTask) $r6;

        $z0 = staticinvoke <kotlinx.coroutines.EventLoopImplBase: boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase)>(r2);

     label05:
        if $z0 == 0 goto label09;

     label06:
        exitmonitor $r5;

     label07:
        exitmonitor r0;

        return 1;

     label08:
        $r8 := @caughtexception;

        goto label27;

     label09:
        if r7 != null goto label13;

     label10:
        r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow> = l0;

     label11:
        goto label18;

     label12:
        $r9 := @caughtexception;

        goto label24;

     label13:
        l2 = r7.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        $l3 = l2 - l0;

        $b1 = $l3 cmp 0L;

        $i4 = (int) $b1;

        if $i4 < 0 goto label14;

        goto label15;

     label14:
        l0 = l2;

     label15:
        l2 = r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow>;

     label16:
        l2 = l0 - l2;

        $b1 = l2 cmp 0L;

        $i4 = (int) $b1;

        if $i4 <= 0 goto label18;

     label17:
        r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow> = l0;

     label18:
        l0 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        l2 = r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow>;

        l0 = l0 - l2;

        $b1 = l0 cmp 0L;

        $i4 = (int) $b1;

        if $i4 >= 0 goto label19;

        l0 = r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow>;

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime> = l0;

     label19:
        $r6 = (kotlinx.coroutines.internal.ThreadSafeHeapNode) r0;

        virtualinvoke $r5.<kotlinx.coroutines.internal.ThreadSafeHeap: void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode)>($r6);

     label20:
        exitmonitor $r5;

     label21:
        exitmonitor r0;

        return 0;

     label22:
        $r9 := @caughtexception;

        goto label24;

     label23:
        $r9 := @caughtexception;

     label24:
        exitmonitor $r5;

        throw $r9;

     label25:
        $r8 := @caughtexception;

        goto label27;

     label26:
        $r8 := @caughtexception;

     label27:
        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label16 with label23;
        catch java.lang.Throwable from label17 to label20 with label22;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label24 to label25 with label25;
    }

    public void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
    {
        kotlinx.coroutines.internal.Symbol $r3;
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        kotlinx.coroutines.internal.ThreadSafeHeap $r1;
        java.lang.Object $r2;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $r1 := @parameter0: kotlinx.coroutines.internal.ThreadSafeHeap;

        $r2 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap>;

        $r3 = staticinvoke <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()>();

        if $r2 == $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap> = $r1;

        return;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = "Failed requirement.";

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public void setIndex(int)
    {
        int $i0;
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $i0 := @parameter0: int;

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index> = $i0;

        return;
    }

    public final boolean timeToExecute(long)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        byte $b1;
        int $i3;
        long $l0, $l2;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $l0 := @parameter0: long;

        $l2 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        $l0 = $l0 - $l2;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        java.lang.StringBuilder $r1;
        long $l0;
        java.lang.String $r2;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delayed[nanos=");

        $l0 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
