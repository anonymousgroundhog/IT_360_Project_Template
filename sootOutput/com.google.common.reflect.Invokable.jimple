public abstract class com.google.common.reflect.Invokable extends java.lang.Object implements java.lang.reflect.AnnotatedElement, java.lang.reflect.Member
{
    private final java.lang.reflect.AccessibleObject accessibleObject;
    private final java.lang.reflect.Member member;

    void <init>(java.lang.reflect.AccessibleObject)
    {
        java.lang.reflect.AccessibleObject r1;
        com.google.common.reflect.Invokable r0;
        java.lang.reflect.Member $r2;

        r0 := @this: com.google.common.reflect.Invokable;

        r1 := @parameter0: java.lang.reflect.AccessibleObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<com.google.common.reflect.Invokable: java.lang.reflect.AccessibleObject accessibleObject> = r1;

        $r2 = (java.lang.reflect.Member) r1;

        r0.<com.google.common.reflect.Invokable: java.lang.reflect.Member member> = $r2;

        return;
    }

    public static com.google.common.reflect.Invokable 'from'(java.lang.reflect.Constructor)
    {
        java.lang.reflect.Constructor r0;
        com.google.common.reflect.Invokable$ConstructorInvokable $r1;

        r0 := @parameter0: java.lang.reflect.Constructor;

        $r1 = new com.google.common.reflect.Invokable$ConstructorInvokable;

        specialinvoke $r1.<com.google.common.reflect.Invokable$ConstructorInvokable: void <init>(java.lang.reflect.Constructor)>(r0);

        return $r1;
    }

    public static com.google.common.reflect.Invokable 'from'(java.lang.reflect.Method)
    {
        com.google.common.reflect.Invokable$MethodInvokable $r1;
        java.lang.reflect.Method $r0;

        $r0 := @parameter0: java.lang.reflect.Method;

        $r1 = new com.google.common.reflect.Invokable$MethodInvokable;

        specialinvoke $r1.<com.google.common.reflect.Invokable$MethodInvokable: void <init>(java.lang.reflect.Method)>($r0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.reflect.Member $r5, $r6;
        com.google.common.reflect.TypeToken $r3, $r4;
        com.google.common.reflect.Invokable r0, r2;
        java.lang.Object $r1;
        boolean z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof com.google.common.reflect.Invokable;

        if z0 == 0 goto label1;

        r2 = (com.google.common.reflect.Invokable) $r1;

        $r3 = virtualinvoke r0.<com.google.common.reflect.Invokable: com.google.common.reflect.TypeToken getOwnerType()>();

        $r4 = virtualinvoke r2.<com.google.common.reflect.Invokable: com.google.common.reflect.TypeToken getOwnerType()>();

        z0 = virtualinvoke $r3.<com.google.common.reflect.TypeToken: boolean equals(java.lang.Object)>($r4);

        if z0 == 0 goto label1;

        $r5 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.Member member>;

        $r6 = r2.<com.google.common.reflect.Invokable: java.lang.reflect.Member member>;

        z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        java.lang.reflect.AccessibleObject $r3;
        com.google.common.reflect.Invokable r0;
        java.lang.'annotation'.Annotation $r2;
        java.lang.Class r1;

        r0 := @this: com.google.common.reflect.Invokable;

        r1 := @parameter0: java.lang.Class;

        $r3 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.AccessibleObject accessibleObject>;

        $r2 = virtualinvoke $r3.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        return $r2;
    }

    public final java.lang.'annotation'.Annotation[] getAnnotations()
    {
        java.lang.'annotation'.Annotation[] $r1;
        java.lang.reflect.AccessibleObject $r2;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r2 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.AccessibleObject accessibleObject>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation[] getAnnotations()>();

        return $r1;
    }

    public final java.lang.'annotation'.Annotation[] getDeclaredAnnotations()
    {
        java.lang.'annotation'.Annotation[] $r1;
        java.lang.reflect.AccessibleObject $r2;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r2 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.AccessibleObject accessibleObject>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();

        return $r1;
    }

    public final java.lang.Class getDeclaringClass()
    {
        java.lang.Class $r1;
        com.google.common.reflect.Invokable r0;
        java.lang.reflect.Member $r2;

        r0 := @this: com.google.common.reflect.Invokable;

        $r2 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.Member member>;

        $r1 = interfaceinvoke $r2.<java.lang.reflect.Member: java.lang.Class getDeclaringClass()>();

        return $r1;
    }

    public final com.google.common.collect.ImmutableList getExceptionTypes()
    {
        com.google.common.reflect.TypeToken $r4;
        com.google.common.collect.ImmutableList $r5;
        java.lang.reflect.Type r1;
        com.google.common.reflect.Invokable r0;
        int $i0, $i1;
        java.lang.reflect.Type[] $r3;
        com.google.common.collect.ImmutableList$Builder $r2;

        r0 := @this: com.google.common.reflect.Invokable;

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        $r3 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.reflect.Type[] getGenericExceptionTypes()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r1 = $r3[$i1];

        $r4 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.reflect.Type)>(r1);

        virtualinvoke $r2.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke $r2.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        return $r5;
    }

    abstract java.lang.reflect.Type[] getGenericExceptionTypes();

    abstract java.lang.reflect.Type[] getGenericParameterTypes();

    abstract java.lang.reflect.Type getGenericReturnType();

    public final int getModifiers()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        java.lang.reflect.Member $r1;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.Member member>;

        $i0 = interfaceinvoke $r1.<java.lang.reflect.Member: int getModifiers()>();

        return $i0;
    }

    public final java.lang.String getName()
    {
        java.lang.String $r1;
        com.google.common.reflect.Invokable r0;
        java.lang.reflect.Member $r2;

        r0 := @this: com.google.common.reflect.Invokable;

        $r2 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.Member member>;

        $r1 = interfaceinvoke $r2.<java.lang.reflect.Member: java.lang.String getName()>();

        return $r1;
    }

    public com.google.common.reflect.TypeToken getOwnerType()
    {
        java.lang.Class $r1;
        com.google.common.reflect.TypeToken $r2;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.Class getDeclaringClass()>();

        $r2 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.Class)>($r1);

        return $r2;
    }

    abstract java.lang.'annotation'.Annotation[][] getParameterAnnotations();

    public final com.google.common.collect.ImmutableList getParameters()
    {
        java.lang.'annotation'.Annotation[][] $r3;
        com.google.common.reflect.Parameter $r5;
        java.lang.'annotation'.Annotation[] $r1;
        com.google.common.reflect.TypeToken $r7;
        com.google.common.collect.ImmutableList $r8;
        java.lang.reflect.Type $r6;
        com.google.common.reflect.Invokable r0;
        java.lang.reflect.Type[] $r2;
        int i0, $i1;
        com.google.common.collect.ImmutableList$Builder $r4;

        r0 := @this: com.google.common.reflect.Invokable;

        $r2 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $r3 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r5 = new com.google.common.reflect.Parameter;

        $r6 = $r2[i0];

        $r7 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.reflect.Type)>($r6);

        $r1 = $r3[i0];

        specialinvoke $r5.<com.google.common.reflect.Parameter: void <init>(com.google.common.reflect.Invokable,int,com.google.common.reflect.TypeToken,java.lang.'annotation'.Annotation[])>(r0, i0, $r7, $r1);

        virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r5);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        return $r8;
    }

    public final com.google.common.reflect.TypeToken getReturnType()
    {
        com.google.common.reflect.TypeToken $r2;
        java.lang.reflect.Type $r1;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.reflect.Type getGenericReturnType()>();

        $r2 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.reflect.Type)>($r1);

        return $r2;
    }

    public abstract java.lang.reflect.TypeVariable[] getTypeParameters();

    public int hashCode()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        java.lang.reflect.Member $r1;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.Member member>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public final transient java.lang.Object invoke(java.lang.Object, java.lang.Object[]) throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException
    {
        java.lang.Object[] $r2;
        com.google.common.reflect.Invokable r0;
        java.lang.Object r1, $r3;

        r0 := @this: com.google.common.reflect.Invokable;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (java.lang.Object[]) $r3;

        r1 = virtualinvoke r0.<com.google.common.reflect.Invokable: java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[])>(r1, $r2);

        return r1;
    }

    abstract java.lang.Object invokeInternal(java.lang.Object, java.lang.Object[]) throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException;

    public final boolean isAbstract()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = virtualinvoke r0.<com.google.common.reflect.Invokable: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        return $z0;
    }

    public final boolean isAccessible()
    {
        java.lang.reflect.AccessibleObject $r1;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.AccessibleObject accessibleObject>;

        $z0 = virtualinvoke $r1.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();

        return $z0;
    }

    public final boolean isAnnotationPresent(java.lang.Class)
    {
        java.lang.reflect.AccessibleObject $r2;
        com.google.common.reflect.Invokable r0;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.AccessibleObject accessibleObject>;

        $z0 = virtualinvoke $r2.<java.lang.reflect.AccessibleObject: boolean isAnnotationPresent(java.lang.Class)>(r1);

        return $z0;
    }

    public final boolean isFinal()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = virtualinvoke r0.<com.google.common.reflect.Invokable: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i0);

        return $z0;
    }

    public final boolean isNative()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = virtualinvoke r0.<com.google.common.reflect.Invokable: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isNative(int)>($i0);

        return $z0;
    }

    public abstract boolean isOverridable();

    public final boolean isPackagePrivate()
    {
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $z0 = virtualinvoke r0.<com.google.common.reflect.Invokable: boolean isPrivate()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r0.<com.google.common.reflect.Invokable: boolean isPublic()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r0.<com.google.common.reflect.Invokable: boolean isProtected()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isPrivate()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = virtualinvoke r0.<com.google.common.reflect.Invokable: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>($i0);

        return $z0;
    }

    public final boolean isProtected()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = virtualinvoke r0.<com.google.common.reflect.Invokable: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isProtected(int)>($i0);

        return $z0;
    }

    public final boolean isPublic()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = virtualinvoke r0.<com.google.common.reflect.Invokable: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        return $z0;
    }

    public final boolean isStatic()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = virtualinvoke r0.<com.google.common.reflect.Invokable: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        return $z0;
    }

    public final boolean isSynchronized()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = virtualinvoke r0.<com.google.common.reflect.Invokable: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isSynchronized(int)>($i0);

        return $z0;
    }

    public final boolean isSynthetic()
    {
        com.google.common.reflect.Invokable r0;
        boolean $z0;
        java.lang.reflect.Member $r1;

        r0 := @this: com.google.common.reflect.Invokable;

        $r1 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.Member member>;

        $z0 = interfaceinvoke $r1.<java.lang.reflect.Member: boolean isSynthetic()>();

        return $z0;
    }

    final boolean isTransient()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = virtualinvoke r0.<com.google.common.reflect.Invokable: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>($i0);

        return $z0;
    }

    public abstract boolean isVarArgs();

    final boolean isVolatile()
    {
        int $i0;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $i0 = virtualinvoke r0.<com.google.common.reflect.Invokable: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isVolatile(int)>($i0);

        return $z0;
    }

    public final com.google.common.reflect.Invokable returning(com.google.common.reflect.TypeToken)
    {
        com.google.common.reflect.TypeToken r1, $r2;
        java.lang.IllegalArgumentException r3;
        com.google.common.reflect.Invokable r0;
        int $i0, $i1;
        java.lang.StringBuilder $r7;
        java.lang.String $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        r1 := @parameter0: com.google.common.reflect.TypeToken;

        $r2 = virtualinvoke r0.<com.google.common.reflect.Invokable: com.google.common.reflect.TypeToken getReturnType()>();

        $z0 = virtualinvoke r1.<com.google.common.reflect.TypeToken: boolean isSupertypeOf(com.google.common.reflect.TypeToken)>($r2);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        r3 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke r0.<com.google.common.reflect.Invokable: com.google.common.reflect.TypeToken getReturnType()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + 35;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invokable is known to return ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", not ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw r3;
    }

    public final com.google.common.reflect.Invokable returning(java.lang.Class)
    {
        java.lang.Class r1;
        com.google.common.reflect.TypeToken $r2;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.common.reflect.TypeToken: com.google.common.reflect.TypeToken of(java.lang.Class)>(r1);

        r0 = virtualinvoke r0.<com.google.common.reflect.Invokable: com.google.common.reflect.Invokable returning(com.google.common.reflect.TypeToken)>($r2);

        return r0;
    }

    public final void setAccessible(boolean)
    {
        java.lang.reflect.AccessibleObject $r1;
        com.google.common.reflect.Invokable r0;
        boolean $z0;

        r0 := @this: com.google.common.reflect.Invokable;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.AccessibleObject accessibleObject>;

        virtualinvoke $r1.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>($z0);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.reflect.Invokable r0;
        java.lang.reflect.Member $r2;

        r0 := @this: com.google.common.reflect.Invokable;

        $r2 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.Member member>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public final boolean trySetAccessible()
    {
        java.lang.reflect.AccessibleObject r1;
        java.lang.RuntimeException r2;
        com.google.common.reflect.Invokable r0;

        r0 := @this: com.google.common.reflect.Invokable;

     label1:
        r1 = r0.<com.google.common.reflect.Invokable: java.lang.reflect.AccessibleObject accessibleObject>;

        virtualinvoke r1.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(1);

     label2:
        return 1;

     label3:
        r2 := @caughtexception;

        return 0;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }
}
