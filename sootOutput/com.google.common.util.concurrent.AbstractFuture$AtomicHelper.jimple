abstract class com.google.common.util.concurrent.AbstractFuture$AtomicHelper extends java.lang.Object
{

    private void <init>()
    {
        com.google.common.util.concurrent.AbstractFuture$AtomicHelper r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$AtomicHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.google.common.util.concurrent.AbstractFuture$1)
    {
        com.google.common.util.concurrent.AbstractFuture$AtomicHelper r0;
        com.google.common.util.concurrent.AbstractFuture$1 $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture$AtomicHelper;

        $r1 := @parameter0: com.google.common.util.concurrent.AbstractFuture$1;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture$AtomicHelper: void <init>()>();

        return;
    }

    abstract boolean casListeners(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Listener, com.google.common.util.concurrent.AbstractFuture$Listener);

    abstract boolean casValue(com.google.common.util.concurrent.AbstractFuture, java.lang.Object, java.lang.Object);

    abstract boolean casWaiters(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter);

    abstract com.google.common.util.concurrent.AbstractFuture$Listener gasListeners(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Listener);

    abstract com.google.common.util.concurrent.AbstractFuture$Waiter gasWaiters(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Waiter);

    abstract void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter);

    abstract void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter, java.lang.Thread);
}
