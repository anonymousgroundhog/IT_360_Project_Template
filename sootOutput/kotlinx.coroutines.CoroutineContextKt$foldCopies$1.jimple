final class kotlinx.coroutines.CoroutineContextKt$foldCopies$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function2
{
    public static final kotlinx.coroutines.CoroutineContextKt$foldCopies$1 INSTANCE;

    static void <clinit>()
    {
        kotlinx.coroutines.CoroutineContextKt$foldCopies$1 $r0;

        $r0 = new kotlinx.coroutines.CoroutineContextKt$foldCopies$1;

        specialinvoke $r0.<kotlinx.coroutines.CoroutineContextKt$foldCopies$1: void <init>()>();

        <kotlinx.coroutines.CoroutineContextKt$foldCopies$1: kotlinx.coroutines.CoroutineContextKt$foldCopies$1 INSTANCE> = $r0;

        return;
    }

    void <init>()
    {
        kotlinx.coroutines.CoroutineContextKt$foldCopies$1 r0;

        r0 := @this: kotlinx.coroutines.CoroutineContextKt$foldCopies$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.CoroutineContextKt$foldCopies$1 r0;
        kotlin.coroutines.CoroutineContext$Element $r4;
        java.lang.Object $r1, $r2;
        kotlin.coroutines.CoroutineContext $r3;

        r0 := @this: kotlinx.coroutines.CoroutineContextKt$foldCopies$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.coroutines.CoroutineContext) $r1;

        $r4 = (kotlin.coroutines.CoroutineContext$Element) $r2;

        $r3 = virtualinvoke r0.<kotlinx.coroutines.CoroutineContextKt$foldCopies$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)>($r3, $r4);

        return $r3;
    }

    public final kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext$Element)
    {
        kotlinx.coroutines.CoroutineContextKt$foldCopies$1 r0;
        kotlin.coroutines.CoroutineContext$Element $r2;
        kotlinx.coroutines.CopyableThreadContextElement $r3;
        kotlin.coroutines.CoroutineContext $r1, $r4;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.CoroutineContextKt$foldCopies$1;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter1: kotlin.coroutines.CoroutineContext$Element;

        $z0 = $r2 instanceof kotlinx.coroutines.CopyableThreadContextElement;

        if $z0 == 0 goto label1;

        $r3 = (kotlinx.coroutines.CopyableThreadContextElement) $r2;

        $r3 = interfaceinvoke $r3.<kotlinx.coroutines.CopyableThreadContextElement: kotlinx.coroutines.CopyableThreadContextElement copyForChild()>();

        $r4 = (kotlin.coroutines.CoroutineContext) $r3;

        $r1 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r4);

        return $r1;

     label1:
        $r4 = (kotlin.coroutines.CoroutineContext) $r2;

        $r1 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r4);

        return $r1;
    }
}
