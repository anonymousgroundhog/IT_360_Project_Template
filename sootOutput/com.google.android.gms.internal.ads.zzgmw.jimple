public final class com.google.android.gms.internal.ads.zzgmw extends java.lang.Object
{
    private static final java.util.logging.Logger zza;
    private static final java.util.concurrent.atomic.AtomicBoolean zzb;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicBoolean $r3;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/google/android/gms/internal/ads/zzgmw;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.android.gms.internal.ads.zzgmw: java.util.logging.Logger zza> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        <com.google.android.gms.internal.ads.zzgmw: java.util.concurrent.atomic.AtomicBoolean zzb> = $r3;

        return;
    }

    private void <init>()
    {
        com.google.android.gms.internal.ads.zzgmw r0;

        r0 := @this: com.google.android.gms.internal.ads.zzgmw;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Boolean zza()
    {
        java.lang.Object[] $r3;
        java.lang.Class[] $r1;
        java.util.logging.Logger $r7;
        java.lang.Exception $r6;
        java.util.logging.Level $r8;
        java.lang.Boolean $r5;
        java.lang.Class $r0;
        java.lang.Object $r4;
        java.lang.reflect.Method $r2;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.conscrypt.Conscrypt");

     label2:
        $r1 = newarray (java.lang.Class)[0];

     label3:
        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isBoringSslFIPSBuild", $r1);

     label4:
        $r3 = newarray (java.lang.Object)[0];

     label5:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

        $r5 = (java.lang.Boolean) $r4;

     label6:
        return $r5;

     label7:
        $r6 := @caughtexception;

        $r7 = <com.google.android.gms.internal.ads.zzgmw: java.util.logging.Logger zza>;

        $r8 = <java.util.logging.Level: java.util.logging.Level INFO>;

        virtualinvoke $r7.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>($r8, "com.google.crypto.tink.config.internal.TinkFipsUtil", "checkConscryptIsAvailableAndUsesFipsBoringSsl", "Conscrypt is not available or does not support checking for FIPS build.");

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r5;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static boolean zzb()
    {
        java.util.concurrent.atomic.AtomicBoolean $r0;
        boolean $z0;

        $r0 = <com.google.android.gms.internal.ads.zzgmw: java.util.concurrent.atomic.AtomicBoolean zzb>;

        $z0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
