final class kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlinx.coroutines.channels.ReceiveChannel $second;
    final kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow;
    final kotlin.jvm.functions.Function3 $transform;
    final java.lang.Object $value;
    java.lang.Object L$0;
    int label;

    void <init>(kotlinx.coroutines.channels.ReceiveChannel, kotlinx.coroutines.flow.FlowCollector, kotlin.jvm.functions.Function3, java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r5;
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1 r0;
        kotlinx.coroutines.flow.FlowCollector $r2;
        kotlinx.coroutines.channels.ReceiveChannel $r1;
        kotlin.jvm.functions.Function3 $r3;
        java.lang.Object $r4;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1;

        $r1 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r2 := @parameter1: kotlinx.coroutines.flow.FlowCollector;

        $r3 := @parameter2: kotlin.jvm.functions.Function3;

        $r4 := @parameter3: java.lang.Object;

        $r5 := @parameter4: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $second> = $r1;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow> = $r2;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlin.jvm.functions.Function3 $transform> = $r3;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object $value> = $r4;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r5);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1 r0, $r6;
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlinx.coroutines.channels.ReceiveChannel $r3;
        kotlin.jvm.functions.Function3 $r5;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r6 = new kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $second>;

        $r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        $r5 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlin.jvm.functions.Function3 $transform>;

        $r1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object $value>;

        specialinvoke $r6.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: void <init>(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Object,kotlin.coroutines.Continuation)>($r3, $r4, $r5, $r1, $r2);

        $r2 = (kotlin.coroutines.Continuation) $r6;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlin.Unit $r3;
        kotlin.coroutines.Continuation $r4;
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1 r0;
        java.lang.Object $r1, $r2;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.Unit) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlin.Unit, kotlin.coroutines.Continuation)
    {
        kotlin.Unit $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1 r0;
        java.lang.Object $r3;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1;

        $r1 := @parameter0: kotlin.Unit;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1) $r2;

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r3 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r1);

        return $r3;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.Throwable $r10, r11;
        java.lang.IllegalStateException $r3;
        kotlin.coroutines.Continuation $r9;
        kotlinx.coroutines.channels.ReceiveChannel $r8;
        int i0;
        kotlinx.coroutines.flow.internal.AbortFlowException r12;
        boolean $z0;
        kotlinx.coroutines.internal.Symbol r14;
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1 r0, r6;
        kotlinx.coroutines.channels.ChannelResult $r7;
        kotlin.jvm.functions.Function3 $r13;
        kotlin.Unit r15;
        kotlinx.coroutines.flow.FlowCollector $r5;
        java.lang.Object $r1, $r2, $r4;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label04;
            case 2: goto label03;
            case 3: goto label02;
            default: goto label01;
        };

     label01:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label02:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label12;

     label03:
        $r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r5 = (kotlinx.coroutines.flow.FlowCollector) $r4;

        goto label11;

     label04:
        r6 = r0;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = (kotlinx.coroutines.channels.ChannelResult) $r1;

        $r1 = virtualinvoke $r7.<kotlinx.coroutines.channels.ChannelResult: java.lang.Object unbox-impl()>();

        goto label06;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r6 = r0;

        $r8 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $second>;

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: int label> = 1;

        $r4 = interfaceinvoke $r8.<kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)>($r9);

        $r1 = $r4;

        if $r4 != $r2 goto label06;

        return $r2;

     label06:
        $r5 = r6.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        $z0 = $r1 instanceof kotlinx.coroutines.channels.ChannelResult$Failed;

        if $z0 == 0 goto label08;

        $r10 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r1);

        r11 = $r10;

        if $r10 != null goto label07;

        r12 = new kotlinx.coroutines.flow.internal.AbortFlowException;

        specialinvoke r12.<kotlinx.coroutines.flow.internal.AbortFlowException: void <init>(kotlinx.coroutines.flow.FlowCollector)>($r5);

        r11 = (java.lang.Throwable) r12;

     label07:
        throw r11;

     label08:
        $r5 = r6.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        $r13 = r6.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlin.jvm.functions.Function3 $transform>;

        $r4 = r6.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object $value>;

        r14 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        if $r1 != r14 goto label09;

        $r1 = null;

     label09:
        r6.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object L$0> = $r5;

        r6.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: int label> = 2;

        $r1 = interfaceinvoke $r13.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r1, r6);

        if $r1 != $r2 goto label10;

        return $r2;

     label10:
        r0 = r6;

     label11:
        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object L$0> = null;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: int label> = 3;

        $r1 = interfaceinvoke $r5.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r9);

        if $r1 != $r2 goto label12;

        return $r2;

     label12:
        r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r15;
    }
}
