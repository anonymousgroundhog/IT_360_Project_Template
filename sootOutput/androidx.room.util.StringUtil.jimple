public class androidx.room.util.StringUtil extends java.lang.Object
{
    public static final java.lang.String[] EMPTY_STRING_ARRAY;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[0];

        <androidx.room.util.StringUtil: java.lang.String[] EMPTY_STRING_ARRAY> = $r0;

        return;
    }

    private void <init>()
    {
        androidx.room.util.StringUtil r0;

        r0 := @this: androidx.room.util.StringUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void appendPlaceholders(java.lang.StringBuilder, int)
    {
        int $i0, i1, $i2;
        java.lang.StringBuilder $r0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $i2 = $i0 + -1;

        if i1 >= $i2 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static java.lang.String joinIntoString(java.util.List)
    {
        java.lang.Integer $r2;
        java.util.List r0;
        int $i0, i1, $i2;
        java.lang.Object $r1;
        java.lang.StringBuilder $r4;
        java.lang.String $r3;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

        return "";

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

     label3:
        if i1 >= $i0 goto label5;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r2 = (java.lang.Integer) $r1;

        $i2 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i2 = $i0 + -1;

        if i1 >= $i2 goto label4;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.StringBuilder newStringBuilder()
    {
        java.lang.StringBuilder $r0;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        return $r0;
    }

    public static java.util.List splitToIntList(java.lang.String)
    {
        java.util.StringTokenizer r1;
        int $i0;
        java.lang.NumberFormatException r4;
        java.lang.String $r0;
        java.lang.Integer $r3;
        java.util.ArrayList r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r1 = new java.util.StringTokenizer;

        specialinvoke r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r0, ",");

     label2:
        $z0 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z0 == 0 goto label6;

        $r0 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label3:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3);

     label4:
        goto label2;

     label5:
        r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ROOM", "Malformed integer list", r4);

        goto label2;

     label6:
        return r2;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }
}
