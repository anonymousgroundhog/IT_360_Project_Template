public abstract class com.google.common.collect.ForwardingSortedMap extends com.google.common.collect.ForwardingMap implements java.util.SortedMap
{

    protected void <init>()
    {
        com.google.common.collect.ForwardingSortedMap r0;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        specialinvoke r0.<com.google.common.collect.ForwardingMap: void <init>()>();

        return;
    }

    static int unsafeCompare(java.util.Comparator, java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.Comparable $r3;
        java.util.Comparator r0;

        r0 := @parameter0: java.util.Comparator;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        if r0 != null goto label1;

        $r3 = (java.lang.Comparable) $r1;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);

        return $i0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $i0;
    }

    public java.util.Comparator comparator()
    {
        java.util.Comparator $r2;
        com.google.common.collect.ForwardingSortedMap r0;
        java.util.SortedMap $r1;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.SortedMap delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.util.Comparator comparator()>();

        return $r2;
    }

    protected volatile java.lang.Object delegate()
    {
        com.google.common.collect.ForwardingSortedMap r0;
        java.util.SortedMap $r1;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.SortedMap delegate()>();

        return $r1;
    }

    protected volatile java.util.Map delegate()
    {
        com.google.common.collect.ForwardingSortedMap r0;
        java.util.SortedMap $r1;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.SortedMap delegate()>();

        return $r1;
    }

    protected abstract java.util.SortedMap delegate();

    public java.lang.Object firstKey()
    {
        java.lang.Object $r2;
        com.google.common.collect.ForwardingSortedMap r0;
        java.util.SortedMap $r1;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.SortedMap delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object firstKey()>();

        return $r2;
    }

    public java.util.SortedMap headMap(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.common.collect.ForwardingSortedMap r0;
        java.util.SortedMap $r2;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.SortedMap delegate()>();

        $r2 = interfaceinvoke $r2.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(r1);

        return $r2;
    }

    public java.lang.Object lastKey()
    {
        java.lang.Object $r2;
        com.google.common.collect.ForwardingSortedMap r0;
        java.util.SortedMap $r1;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.SortedMap delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object lastKey()>();

        return $r2;
    }

    protected boolean standardContainsKey(java.lang.Object)
    {
        java.lang.ClassCastException r7;
        java.lang.NullPointerException r5;
        int $i0;
        java.lang.Object $r1, $r3;
        java.util.Comparator $r4;
        java.util.NoSuchElementException r6;
        com.google.common.collect.ForwardingSortedMap r0;
        java.util.SortedMap $r2;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = interfaceinvoke r0.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object firstKey()>();

        $r4 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.Comparator comparator()>();

        $i0 = staticinvoke <com.google.common.collect.ForwardingSortedMap: int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object)>($r4, $r3, $r1);

     label2:
        if $i0 != 0 goto label6;

        return 1;

     label3:
        r5 := @caughtexception;

        return 0;

     label4:
        r6 := @caughtexception;

        return 0;

     label5:
        r7 := @caughtexception;

     label6:
        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.util.NoSuchElementException from label1 to label2 with label4;
        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    protected java.util.SortedMap standardSubMap(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, r2;
        java.util.Comparator $r3;
        com.google.common.collect.ForwardingSortedMap r0;
        java.util.SortedMap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.Comparator comparator()>();

        $i0 = staticinvoke <com.google.common.collect.ForwardingSortedMap: int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object)>($r3, r1, r2);

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "fromKey must be <= toKey");

        $r4 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.SortedMap tailMap(java.lang.Object)>(r1);

        $r4 = interfaceinvoke $r4.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(r2);

        return $r4;
    }

    public java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        com.google.common.collect.ForwardingSortedMap r0;
        java.util.SortedMap $r3;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.SortedMap delegate()>();

        $r3 = interfaceinvoke $r3.<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public java.util.SortedMap tailMap(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.common.collect.ForwardingSortedMap r0;
        java.util.SortedMap $r2;

        r0 := @this: com.google.common.collect.ForwardingSortedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ForwardingSortedMap: java.util.SortedMap delegate()>();

        $r2 = interfaceinvoke $r2.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>(r1);

        return $r2;
    }
}
