public class androidx.room.util.FileUtil extends java.lang.Object
{

    private void <init>()
    {
        androidx.room.util.FileUtil r0;

        r0 := @this: androidx.room.util.FileUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void copy(java.nio.channels.ReadableByteChannel, java.nio.channels.FileChannel) throws java.io.IOException
    {
        java.io.OutputStream $r3;
        java.lang.Throwable r5;
        byte[] r4;
        java.nio.channels.ReadableByteChannel $r0;
        int i0;
        java.nio.channels.FileChannel $r1;
        java.io.InputStream $r2;

        $r0 := @parameter0: java.nio.channels.ReadableByteChannel;

        $r1 := @parameter1: java.nio.channels.FileChannel;

     label01:
        i0 = <android.os.Build$VERSION: int SDK_INT>;

     label02:
        if i0 <= 23 goto label05;

     label03:
        virtualinvoke $r1.<java.nio.channels.FileChannel: long transferFrom(java.nio.channels.ReadableByteChannel,long,long)>($r0, 0L, 9223372036854775807L);

     label04:
        goto label11;

     label05:
        $r2 = staticinvoke <java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)>($r0);

        $r3 = staticinvoke <java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)>($r1);

     label06:
        r4 = newarray (byte)[4096];

     label07:
        i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>(r4);

     label08:
        if i0 <= 0 goto label11;

     label09:
        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r4, 0, i0);

     label10:
        goto label07;

     label11:
        virtualinvoke $r1.<java.nio.channels.FileChannel: void force(boolean)>(0);

     label12:
        interfaceinvoke $r0.<java.nio.channels.ReadableByteChannel: void close()>();

        virtualinvoke $r1.<java.nio.channels.FileChannel: void close()>();

        return;

     label13:
        r5 := @caughtexception;

        interfaceinvoke $r0.<java.nio.channels.ReadableByteChannel: void close()>();

        virtualinvoke $r1.<java.nio.channels.FileChannel: void close()>();

        throw r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }
}
