final class kotlin.jvm.internal.ArrayIterator extends java.lang.Object implements java.util.Iterator, kotlin.jvm.internal.markers.KMappedMarker
{
    private final java.lang.Object[] array;
    private int index;

    public void <init>(java.lang.Object[])
    {
        java.lang.Object[] $r1;
        kotlin.jvm.internal.ArrayIterator r0;

        r0 := @this: kotlin.jvm.internal.ArrayIterator;

        $r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "array");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.jvm.internal.ArrayIterator: java.lang.Object[] array> = $r1;

        return;
    }

    public final java.lang.Object[] getArray()
    {
        java.lang.Object[] r1;
        kotlin.jvm.internal.ArrayIterator r0;

        r0 := @this: kotlin.jvm.internal.ArrayIterator;

        r1 = r0.<kotlin.jvm.internal.ArrayIterator: java.lang.Object[] array>;

        return r1;
    }

    public boolean hasNext()
    {
        java.lang.Object[] $r1;
        kotlin.jvm.internal.ArrayIterator r0;
        int $i0, $i1;

        r0 := @this: kotlin.jvm.internal.ArrayIterator;

        $i0 = r0.<kotlin.jvm.internal.ArrayIterator: int index>;

        $r1 = r0.<kotlin.jvm.internal.ArrayIterator: java.lang.Object[] array>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object next()
    {
        java.lang.Object[] r2;
        java.lang.ArrayIndexOutOfBoundsException r4;
        kotlin.jvm.internal.ArrayIterator r0;
        int $i0, $i1;
        java.lang.Object r3;
        java.lang.String $r1;
        java.util.NoSuchElementException $r5;

        r0 := @this: kotlin.jvm.internal.ArrayIterator;

        r2 = r0.<kotlin.jvm.internal.ArrayIterator: java.lang.Object[] array>;

        $i0 = r0.<kotlin.jvm.internal.ArrayIterator: int index>;

        $i1 = $i0 + 1;

        r0.<kotlin.jvm.internal.ArrayIterator: int index> = $i1;

     label1:
        r3 = r2[$i0];

     label2:
        return r3;

     label3:
        r4 := @caughtexception;

        $i0 = r0.<kotlin.jvm.internal.ArrayIterator: int index>;

        $i0 = $i0 + -1;

        r0.<kotlin.jvm.internal.ArrayIterator: int index> = $i0;

        $r5 = new java.util.NoSuchElementException;

        $r1 = virtualinvoke r4.<java.lang.ArrayIndexOutOfBoundsException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r1);

        throw $r5;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        kotlin.jvm.internal.ArrayIterator r0;

        r0 := @this: kotlin.jvm.internal.ArrayIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }
}
