final class com.google.common.util.concurrent.Futures$CallbackListener extends java.lang.Object implements java.lang.Runnable
{
    final com.google.common.util.concurrent.FutureCallback callback;
    final java.util.concurrent.Future future;

    void <init>(java.util.concurrent.Future, com.google.common.util.concurrent.FutureCallback)
    {
        java.util.concurrent.Future r1;
        com.google.common.util.concurrent.Futures$CallbackListener r0;
        com.google.common.util.concurrent.FutureCallback r2;

        r0 := @this: com.google.common.util.concurrent.Futures$CallbackListener;

        r1 := @parameter0: java.util.concurrent.Future;

        r2 := @parameter1: com.google.common.util.concurrent.FutureCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.util.concurrent.Futures$CallbackListener: java.util.concurrent.Future future> = r1;

        r0.<com.google.common.util.concurrent.Futures$CallbackListener: com.google.common.util.concurrent.FutureCallback callback> = r2;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r3, r6;
        com.google.common.util.concurrent.FutureCallback $r4;
        java.util.concurrent.ExecutionException r7;
        java.util.concurrent.Future r1;
        com.google.common.util.concurrent.internal.InternalFutureFailureAccess r2;
        java.lang.Object $r5;
        com.google.common.util.concurrent.Futures$CallbackListener r0;
        boolean z0;

        r0 := @this: com.google.common.util.concurrent.Futures$CallbackListener;

        r1 = r0.<com.google.common.util.concurrent.Futures$CallbackListener: java.util.concurrent.Future future>;

        z0 = r1 instanceof com.google.common.util.concurrent.internal.InternalFutureFailureAccess;

        if z0 == 0 goto label1;

        r1 = r0.<com.google.common.util.concurrent.Futures$CallbackListener: java.util.concurrent.Future future>;

        r2 = (com.google.common.util.concurrent.internal.InternalFutureFailureAccess) r1;

        $r3 = staticinvoke <com.google.common.util.concurrent.internal.InternalFutures: java.lang.Throwable tryInternalFastPathGetFailure(com.google.common.util.concurrent.internal.InternalFutureFailureAccess)>(r2);

        if $r3 == null goto label1;

        $r4 = r0.<com.google.common.util.concurrent.Futures$CallbackListener: com.google.common.util.concurrent.FutureCallback callback>;

        interfaceinvoke $r4.<com.google.common.util.concurrent.FutureCallback: void onFailure(java.lang.Throwable)>($r3);

        return;

     label1:
        r1 = r0.<com.google.common.util.concurrent.Futures$CallbackListener: java.util.concurrent.Future future>;

     label2:
        $r5 = staticinvoke <com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>(r1);

     label3:
        $r4 = r0.<com.google.common.util.concurrent.Futures$CallbackListener: com.google.common.util.concurrent.FutureCallback callback>;

        interfaceinvoke $r4.<com.google.common.util.concurrent.FutureCallback: void onSuccess(java.lang.Object)>($r5);

        return;

     label4:
        r6 := @caughtexception;

        goto label6;

     label5:
        r6 := @caughtexception;

     label6:
        $r4 = r0.<com.google.common.util.concurrent.Futures$CallbackListener: com.google.common.util.concurrent.FutureCallback callback>;

        interfaceinvoke $r4.<com.google.common.util.concurrent.FutureCallback: void onFailure(java.lang.Throwable)>(r6);

        return;

     label7:
        r7 := @caughtexception;

        $r4 = r0.<com.google.common.util.concurrent.Futures$CallbackListener: com.google.common.util.concurrent.FutureCallback callback>;

        $r3 = virtualinvoke r7.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        interfaceinvoke $r4.<com.google.common.util.concurrent.FutureCallback: void onFailure(java.lang.Throwable)>($r3);

        return;

        catch java.util.concurrent.ExecutionException from label2 to label3 with label7;
        catch java.lang.RuntimeException from label1 to label3 with label5;
        catch java.lang.Error from label1 to label3 with label4;
    }

    public java.lang.String toString()
    {
        com.google.common.base.MoreObjects$ToStringHelper $r2;
        java.lang.String $r3;
        com.google.common.util.concurrent.Futures$CallbackListener r0;
        com.google.common.util.concurrent.FutureCallback $r1;

        r0 := @this: com.google.common.util.concurrent.Futures$CallbackListener;

        $r2 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>(r0);

        $r1 = r0.<com.google.common.util.concurrent.Futures$CallbackListener: com.google.common.util.concurrent.FutureCallback callback>;

        $r2 = virtualinvoke $r2.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r3;
    }
}
