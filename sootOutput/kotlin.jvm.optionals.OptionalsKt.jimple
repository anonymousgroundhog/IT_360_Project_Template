public final class kotlin.jvm.optionals.OptionalsKt extends java.lang.Object
{

    public static final kotlin.sequences.Sequence asSequence(java.util.Optional)
    {
        java.lang.Object[] $r2;
        kotlin.sequences.Sequence $r3;
        java.util.Optional $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Optional;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = virtualinvoke $r0.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<java.util.Optional: java.lang.Object get()>();

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r1;

        $r3 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence sequenceOf(java.lang.Object[])>($r2);

        return $r3;

     label1:
        $r3 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r3;
    }

    public static final java.lang.Object getOrDefault(java.util.Optional, java.lang.Object)
    {
        java.util.Optional $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Optional;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = virtualinvoke $r0.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<java.util.Optional: java.lang.Object get()>();

     label1:
        return $r1;
    }

    public static final java.lang.Object getOrElse(java.util.Optional, kotlin.jvm.functions.Function0)
    {
        java.util.Optional $r0;
        java.lang.Object $r2;
        kotlin.jvm.functions.Function0 $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Optional;

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "defaultValue");

        $z0 = virtualinvoke $r0.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<java.util.Optional: java.lang.Object get()>();

        return $r2;

     label1:
        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return $r2;
    }

    public static final java.lang.Object getOrNull(java.util.Optional)
    {
        java.util.Optional $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.Optional;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        return $r1;
    }

    public static final java.util.Collection toCollection(java.util.Optional, java.util.Collection)
    {
        java.util.Collection $r1;
        java.util.Optional $r0;
        java.lang.Object $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Optional;

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $z0 = virtualinvoke $r0.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<java.util.Optional: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "get()");

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

     label1:
        return $r1;
    }

    public static final java.util.List toList(java.util.Optional)
    {
        java.util.List $r2;
        java.util.Optional $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Optional;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = virtualinvoke $r0.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<java.util.Optional: java.lang.Object get()>();

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r1);

        return $r2;

     label1:
        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;
    }

    public static final java.util.Set toSet(java.util.Optional)
    {
        java.util.Optional $r0;
        java.util.Set $r2;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Optional;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = virtualinvoke $r0.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<java.util.Optional: java.lang.Object get()>();

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r1);

        return $r2;

     label1:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }
}
