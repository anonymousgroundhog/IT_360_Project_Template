final class com.google.common.collect.TopKSelector extends java.lang.Object
{
    private final java.lang.Object[] buffer;
    private int bufferSize;
    private final java.util.Comparator comparator;
    private final int k;
    private java.lang.Object threshold;

    private void <init>(java.util.Comparator, int)
    {
        java.lang.Object[] $r3;
        int $i0;
        java.lang.Object $r2;
        java.util.Comparator r1;
        com.google.common.collect.TopKSelector r0;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.TopKSelector;

        r1 := @parameter0: java.util.Comparator;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "comparator");

        r1 = (java.util.Comparator) $r2;

        r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator> = r1;

        r0.<com.google.common.collect.TopKSelector: int k> = $i0;

        $z0 = 1;

        if $i0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>($z1, "k (%s) must be >= 0", $i0);

        if $i0 > 1073741823 goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>($z0, "k (%s) must be <= Integer.MAX_VALUE / 2", $i0);

        $i0 = staticinvoke <com.google.common.math.IntMath: int checkedMultiply(int,int)>($i0, 2);

        $r3 = newarray (java.lang.Object)[$i0];

        r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer> = $r3;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = 0;

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = null;

        return;
    }

    public static com.google.common.collect.TopKSelector greatest(int)
    {
        int $i0;
        com.google.common.collect.Ordering $r0;
        com.google.common.collect.TopKSelector $r1;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r1 = staticinvoke <com.google.common.collect.TopKSelector: com.google.common.collect.TopKSelector greatest(int,java.util.Comparator)>($i0, $r0);

        return $r1;
    }

    public static com.google.common.collect.TopKSelector greatest(int, java.util.Comparator)
    {
        com.google.common.collect.Ordering $r2;
        int $i0;
        java.util.Comparator r0;
        com.google.common.collect.TopKSelector $r1;

        $i0 := @parameter0: int;

        r0 := @parameter1: java.util.Comparator;

        $r1 = new com.google.common.collect.TopKSelector;

        $r2 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>(r0);

        $r2 = virtualinvoke $r2.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        specialinvoke $r1.<com.google.common.collect.TopKSelector: void <init>(java.util.Comparator,int)>($r2, $i0);

        return $r1;
    }

    public static com.google.common.collect.TopKSelector least(int)
    {
        int $i0;
        com.google.common.collect.Ordering $r0;
        com.google.common.collect.TopKSelector $r1;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r1 = staticinvoke <com.google.common.collect.TopKSelector: com.google.common.collect.TopKSelector least(int,java.util.Comparator)>($i0, $r0);

        return $r1;
    }

    public static com.google.common.collect.TopKSelector least(int, java.util.Comparator)
    {
        int $i0;
        java.util.Comparator r0;
        com.google.common.collect.TopKSelector $r1;

        $i0 := @parameter0: int;

        r0 := @parameter1: java.util.Comparator;

        $r1 = new com.google.common.collect.TopKSelector;

        specialinvoke $r1.<com.google.common.collect.TopKSelector: void <init>(java.util.Comparator,int)>(r0, $i0);

        return $r1;
    }

    private int partition(int, int, int)
    {
        java.lang.Object[] r1, r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r2, r4;
        java.util.Comparator $r5;
        com.google.common.collect.TopKSelector r0;

        r0 := @this: com.google.common.collect.TopKSelector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r2 = r1[$i2];

        r2 = staticinvoke <com.google.common.collect.NullnessCasts: java.lang.Object uncheckedCastNullableTToT(java.lang.Object)>(r2);

        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r3 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r4 = r3[$i1];

        r1[$i2] = r4;

        $i2 = $i0;

     label1:
        if $i0 >= $i1 goto label3;

        $r5 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r4 = r1[$i0];

        r4 = staticinvoke <com.google.common.collect.NullnessCasts: java.lang.Object uncheckedCastNullableTToT(java.lang.Object)>(r4);

        $i3 = interfaceinvoke $r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r4, r2);

        if $i3 >= 0 goto label2;

        specialinvoke r0.<com.google.common.collect.TopKSelector: void swap(int,int)>($i2, $i0);

        $i2 = $i2 + 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r3 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r4 = r3[$i2];

        r1[$i1] = r4;

        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r1[$i2] = r2;

        return $i2;
    }

    private void swap(int, int)
    {
        java.lang.Object[] r1, $r3;
        int $i0, $i1;
        java.lang.Object r2, $r4;
        com.google.common.collect.TopKSelector r0;

        r0 := @this: com.google.common.collect.TopKSelector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r2 = r1[$i0];

        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r3 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r4 = $r3[$i1];

        r1[$i0] = $r4;

        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r1[$i1] = r2;

        return;
    }

    private void trim()
    {
        java.lang.Object[] r3;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.Object r4, $r5;
        java.util.Comparator $r1;
        com.google.common.collect.TopKSelector r0;
        java.math.RoundingMode r2;

        r0 := @this: com.google.common.collect.TopKSelector;

        i0 = 0;

        i1 = r0.<com.google.common.collect.TopKSelector: int k>;

        i1 = i1 * 2;

        i2 = i1 + -1;

        i1 = 0;

        i3 = 0;

        r2 = <java.math.RoundingMode: java.math.RoundingMode CEILING>;

        i4 = staticinvoke <com.google.common.math.IntMath: int log2(int,java.math.RoundingMode)>(i2, r2);

        i4 = i4 * 3;

     label1:
        if i0 >= i2 goto label4;

        i5 = i0 + i2;

        i5 = i5 + 1;

        i5 = i5 >>> 1;

        i5 = specialinvoke r0.<com.google.common.collect.TopKSelector: int partition(int,int,int)>(i0, i2, i5);

        i6 = r0.<com.google.common.collect.TopKSelector: int k>;

        if i5 <= i6 goto label2;

        i2 = i5 + -1;

        goto label3;

     label2:
        i6 = r0.<com.google.common.collect.TopKSelector: int k>;

        if i5 >= i6 goto label4;

        i0 = i0 + 1;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i0);

        i1 = i5;

     label3:
        i3 = i3 + 1;

        if i3 < i4 goto label1;

        r3 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        i3 = i2 + 1;

        $r1 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>(r3, i0, i3, $r1);

        goto label4;

     label4:
        i0 = r0.<com.google.common.collect.TopKSelector: int k>;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = i0;

        r3 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r4 = r3[i1];

        r4 = staticinvoke <com.google.common.collect.NullnessCasts: java.lang.Object uncheckedCastNullableTToT(java.lang.Object)>(r4);

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = r4;

        i0 = i1 + 1;

     label5:
        i1 = r0.<com.google.common.collect.TopKSelector: int k>;

        if i0 >= i1 goto label7;

        $r1 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        r3 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r4 = r3[i0];

        r4 = staticinvoke <com.google.common.collect.NullnessCasts: java.lang.Object uncheckedCastNullableTToT(java.lang.Object)>(r4);

        $r5 = r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold>;

        $r5 = staticinvoke <com.google.common.collect.NullnessCasts: java.lang.Object uncheckedCastNullableTToT(java.lang.Object)>($r5);

        i1 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r4, $r5);

        if i1 <= 0 goto label6;

        r3 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        r4 = r3[i0];

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = r4;

     label6:
        i0 = i0 + 1;

        goto label5;

     label7:
        return;
    }

    public void offer(java.lang.Object)
    {
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.Object r1, $r4;
        java.util.Comparator $r3;
        com.google.common.collect.TopKSelector r0;

        r0 := @this: com.google.common.collect.TopKSelector;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<com.google.common.collect.TopKSelector: int k>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i0 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        if $i0 != 0 goto label2;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $r2[0] = r1;

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = r1;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = 1;

        return;

     label2:
        $i0 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $i1 = r0.<com.google.common.collect.TopKSelector: int k>;

        if $i0 >= $i1 goto label3;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i0 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $i1 = $i0 + 1;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = $i1;

        $r2[$i0] = r1;

        $r3 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        $r4 = r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold>;

        $r4 = staticinvoke <com.google.common.collect.NullnessCasts: java.lang.Object uncheckedCastNullableTToT(java.lang.Object)>($r4);

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, $r4);

        if $i0 <= 0 goto label4;

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = r1;

        return;

     label3:
        $r3 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        $r4 = r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold>;

        $r4 = staticinvoke <com.google.common.collect.NullnessCasts: java.lang.Object uncheckedCastNullableTToT(java.lang.Object)>($r4);

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, $r4);

        if $i0 >= 0 goto label4;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i0 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $i1 = $i0 + 1;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = $i1;

        $r2[$i0] = r1;

        $i0 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $i1 = r0.<com.google.common.collect.TopKSelector: int k>;

        $i1 = $i1 * 2;

        if $i0 != $i1 goto label4;

        specialinvoke r0.<com.google.common.collect.TopKSelector: void trim()>();

     label4:
        return;
    }

    public void offerAll(java.lang.Iterable)
    {
        java.util.Iterator $r2;
        com.google.common.collect.TopKSelector r0;
        java.lang.Iterable r1;

        r0 := @this: com.google.common.collect.TopKSelector;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        virtualinvoke r0.<com.google.common.collect.TopKSelector: void offerAll(java.util.Iterator)>($r2);

        return;
    }

    public void offerAll(java.util.Iterator)
    {
        java.util.Iterator r1;
        java.lang.Object $r2;
        com.google.common.collect.TopKSelector r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.TopKSelector;

        r1 := @parameter0: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<com.google.common.collect.TopKSelector: void offer(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    public java.util.List topK()
    {
        java.lang.Object[] r1, $r3;
        java.util.List $r5;
        int $i0, $i1;
        java.lang.Object $r4;
        java.util.Comparator $r2;
        com.google.common.collect.TopKSelector r0;

        r0 := @this: com.google.common.collect.TopKSelector;

        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i0 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $r2 = r0.<com.google.common.collect.TopKSelector: java.util.Comparator comparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>(r1, 0, $i0, $r2);

        $i0 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        $i1 = r0.<com.google.common.collect.TopKSelector: int k>;

        if $i0 <= $i1 goto label1;

        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i0 = r0.<com.google.common.collect.TopKSelector: int k>;

        $r3 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i1 = lengthof $r3;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>(r1, $i0, $i1, null);

        $i0 = r0.<com.google.common.collect.TopKSelector: int k>;

        r0.<com.google.common.collect.TopKSelector: int bufferSize> = $i0;

        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i0 = r0.<com.google.common.collect.TopKSelector: int k>;

        $i0 = $i0 + -1;

        $r4 = r1[$i0];

        r0.<com.google.common.collect.TopKSelector: java.lang.Object threshold> = $r4;

     label1:
        r1 = r0.<com.google.common.collect.TopKSelector: java.lang.Object[] buffer>;

        $i0 = r0.<com.google.common.collect.TopKSelector: int bufferSize>;

        r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, $i0);

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        return $r5;
    }
}
