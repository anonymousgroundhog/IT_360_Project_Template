class androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy extends java.lang.Object implements androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService
{
    public static androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy;

        r1 = r0.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy r0;

        r0 := @this: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy;

        return "androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService";
    }

    public void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) throws android.os.RemoteException
    {
        java.lang.Throwable r5;
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService $r4;
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy r0;
        androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r3;
        boolean $z0;

        r0 := @this: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy;

        $r1 := @parameter0: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService");

     label02:
        if $r1 == null goto label05;

     label03:
        $r3 = interfaceinvoke $r1.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        $r3 = null;

     label06:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r3);

        $r3 = r0.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r2, null, 1);

     label07:
        if $z0 != 0 goto label12;

     label08:
        $r4 = staticinvoke <androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService getDefaultImpl()>();

     label09:
        if $r4 == null goto label12;

     label10:
        $r4 = staticinvoke <androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService getDefaultImpl()>();

        interfaceinvoke $r4.<androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService: void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback)>($r1);

     label11:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        r5 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
