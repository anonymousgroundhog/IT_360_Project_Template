class com.google.common.util.concurrent.ExecutionSequencer$2 extends java.lang.Object implements com.google.common.util.concurrent.AsyncCallable
{
    final com.google.common.util.concurrent.AsyncCallable val$callable;
    final com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor val$taskExecutor;

    void <init>(com.google.common.util.concurrent.ExecutionSequencer, com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor, com.google.common.util.concurrent.AsyncCallable)
    {
        com.google.common.util.concurrent.ExecutionSequencer$2 r0;
        com.google.common.util.concurrent.ExecutionSequencer $r1;
        com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor $r2;
        com.google.common.util.concurrent.AsyncCallable $r3;

        r0 := @this: com.google.common.util.concurrent.ExecutionSequencer$2;

        $r1 := @parameter0: com.google.common.util.concurrent.ExecutionSequencer;

        $r2 := @parameter1: com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor;

        $r3 := @parameter2: com.google.common.util.concurrent.AsyncCallable;

        r0.<com.google.common.util.concurrent.ExecutionSequencer$2: com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor val$taskExecutor> = $r2;

        r0.<com.google.common.util.concurrent.ExecutionSequencer$2: com.google.common.util.concurrent.AsyncCallable val$callable> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture call() throws java.lang.Exception
    {
        com.google.common.util.concurrent.ListenableFuture $r2;
        com.google.common.util.concurrent.ExecutionSequencer$2 r0;
        com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor $r1;
        boolean $z0;
        com.google.common.util.concurrent.AsyncCallable $r3;

        r0 := @this: com.google.common.util.concurrent.ExecutionSequencer$2;

        $r1 = r0.<com.google.common.util.concurrent.ExecutionSequencer$2: com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor val$taskExecutor>;

        $z0 = staticinvoke <com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor: boolean access$200(com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor)>($r1);

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateCancelledFuture()>();

        return $r2;

     label1:
        $r3 = r0.<com.google.common.util.concurrent.ExecutionSequencer$2: com.google.common.util.concurrent.AsyncCallable val$callable>;

        $r2 = interfaceinvoke $r3.<com.google.common.util.concurrent.AsyncCallable: com.google.common.util.concurrent.ListenableFuture call()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.common.util.concurrent.ExecutionSequencer$2 r0;
        com.google.common.util.concurrent.AsyncCallable $r2;

        r0 := @this: com.google.common.util.concurrent.ExecutionSequencer$2;

        $r2 = r0.<com.google.common.util.concurrent.ExecutionSequencer$2: com.google.common.util.concurrent.AsyncCallable val$callable>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }
}
