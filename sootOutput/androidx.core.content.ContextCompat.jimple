public class androidx.core.content.ContextCompat extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.Object sLock;
    private static final java.lang.Object sSync;
    private static android.util.TypedValue sTempValue;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <androidx.core.content.ContextCompat: java.lang.String TAG> = "ContextCompat";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.core.content.ContextCompat: java.lang.Object sLock> = $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.core.content.ContextCompat: java.lang.Object sSync> = $r0;

        return;
    }

    protected void <init>()
    {
        androidx.core.content.ContextCompat r0;

        r0 := @this: androidx.core.content.ContextCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int checkSelfPermission(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r1, "permission must be non-null");

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $i0 = virtualinvoke $r0.<android.content.Context: int checkPermission(java.lang.String,int,int)>($r1, $i0, $i1);

        return $i0;
    }

    public static android.content.Context createDeviceProtectedStorageContext(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r0 = staticinvoke <androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>($r0);

        return $r0;

     label1:
        return null;
    }

    private static java.io.File createFilesDir(java.io.File)
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.io.File $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $r1 = <androidx.core.content.ContextCompat: java.lang.Object sSync>;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

        if $z0 == 0 goto label3;

        exitmonitor $r1;

     label2:
        return $r0;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create files subdir ");

        $r3 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContextCompat", $r3);

     label4:
        exitmonitor $r1;

     label5:
        return $r0;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static java.lang.String getAttributionTag(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 30 goto label1;

        $r1 = staticinvoke <androidx.core.content.ContextCompat$Api30Impl: java.lang.String getAttributionTag(android.content.Context)>($r0);

        return $r1;

     label1:
        return null;
    }

    public static java.io.File getCodeCacheDir(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)>($r0);

        return $r1;
    }

    public static int getColor(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        $i0 = staticinvoke <androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)>($r0, $i0);

        return $i0;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i0);

        return $i0;
    }

    public static android.content.res.ColorStateList getColorStateList(android.content.Context, int)
    {
        android.content.res.ColorStateList $r3;
        android.content.Context $r0;
        int $i0;
        android.content.res.Resources$Theme $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r1, $i0, $r2);

        return $r3;
    }

    public static java.io.File getDataDir(android.content.Context)
    {
        android.content.Context $r0;
        int i0;
        java.lang.String r3;
        android.content.pm.ApplicationInfo $r2;
        java.io.File $r1;

        $r0 := @parameter0: android.content.Context;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 24 goto label1;

        $r1 = staticinvoke <androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)>($r0);

        return $r1;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        r3 = $r2.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        if r3 == null goto label2;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r3);

        return $r1;

     label2:
        return null;
    }

    public static android.graphics.drawable.Drawable getDrawable(android.content.Context, int)
    {
        int $i0;
        android.content.Context $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r0, $i0);

        return $r1;
    }

    public static java.io.File[] getExternalCacheDirs(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File[] $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)>($r0);

        return $r1;
    }

    public static java.io.File[] getExternalFilesDirs(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.io.File[] $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public static java.util.concurrent.Executor getMainExecutor(android.content.Context)
    {
        android.content.Context $r0;
        java.util.concurrent.Executor $r1;
        android.os.Handler $r2;
        android.os.Looper $r3;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r1 = staticinvoke <androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r0);

        return $r1;

     label1:
        $r2 = new android.os.Handler;

        $r3 = virtualinvoke $r0.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        $r1 = staticinvoke <androidx.core.os.ExecutorCompat: java.util.concurrent.Executor create(android.os.Handler)>($r2);

        return $r1;
    }

    public static java.io.File getNoBackupFilesDir(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)>($r0);

        return $r1;
    }

    public static java.io.File[] getObbDirs(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File[] $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)>($r0);

        return $r1;
    }

    public static java.lang.Object getSystemService(android.content.Context, java.lang.Class)
    {
        android.content.Context $r0;
        int i0;
        java.lang.Class r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 23 goto label1;

        $r2 = staticinvoke <androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>($r0, r1);

        return $r2;

     label1:
        $r3 = staticinvoke <androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>($r0, r1);

        if $r3 == null goto label2;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>($r3);

        return $r2;

     label2:
        return null;
    }

    public static java.lang.String getSystemServiceName(android.content.Context, java.lang.Class)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.Class r1;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r2 = staticinvoke <androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>($r0, r1);

        return $r2;

     label1:
        $r3 = <androidx.core.content.ContextCompat$LegacyServiceMapHolder: java.util.HashMap SERVICES>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r2 = (java.lang.String) $r4;

        return $r2;
    }

    public static boolean isDeviceProtectedStorage(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $z0 = staticinvoke <androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)>($r0);

        return $z0;

     label1:
        return 0;
    }

    public static boolean startActivities(android.content.Context, android.content.Intent[])
    {
        android.content.Context $r0;
        android.content.Intent[] $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.Intent[];

        $z0 = staticinvoke <androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>($r0, $r1, null);

        return $z0;
    }

    public static boolean startActivities(android.content.Context, android.content.Intent[], android.os.Bundle)
    {
        android.content.Context $r0;
        android.content.Intent[] $r1;
        android.os.Bundle $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.Intent[];

        $r2 := @parameter2: android.os.Bundle;

        staticinvoke <androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>($r0, $r1, $r2);

        return 1;
    }

    public static void startActivity(android.content.Context, android.content.Intent, android.os.Bundle)
    {
        android.content.Context $r0;
        android.content.Intent $r1;
        android.os.Bundle $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.Intent;

        $r2 := @parameter2: android.os.Bundle;

        staticinvoke <androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)>($r0, $r1, $r2);

        return;
    }

    public static void startForegroundService(android.content.Context, android.content.Intent)
    {
        int $i0;
        android.content.Context $r0;
        android.content.Intent $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.Intent;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        staticinvoke <androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)>($r0, $r1);

        return;

     label1:
        virtualinvoke $r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>($r1);

        return;
    }
}
