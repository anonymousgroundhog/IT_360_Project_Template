final class com.google.common.graph.DirectedGraphConnections extends java.lang.Object implements com.google.common.graph.GraphConnections
{
    private static final java.lang.Object PRED;
    private final java.util.Map adjacentNodeValues;
    private final java.util.List orderedNodeConnections;
    private int predecessorCount;
    private int successorCount;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED> = $r0;

        return;
    }

    private void <init>(java.util.Map, java.util.List, int, int)
    {
        java.util.List r2;
        java.util.Map r1, $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        com.google.common.graph.DirectedGraphConnections r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.DirectedGraphConnections;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.List;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.util.Map) $r3;

        r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues> = $r4;

        r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections> = r2;

        $i2 = staticinvoke <com.google.common.graph.Graphs: int checkNonNegative(int)>($i0);

        r0.<com.google.common.graph.DirectedGraphConnections: int predecessorCount> = $i2;

        $i2 = staticinvoke <com.google.common.graph.Graphs: int checkNonNegative(int)>($i1);

        r0.<com.google.common.graph.DirectedGraphConnections: int successorCount> = $i2;

        $i2 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i0 > $i2 goto label1;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i1 > $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        return;
    }

    static java.util.List access$000(com.google.common.graph.DirectedGraphConnections)
    {
        java.util.List r1;
        com.google.common.graph.DirectedGraphConnections $r0;

        $r0 := @parameter0: com.google.common.graph.DirectedGraphConnections;

        r1 = $r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        return r1;
    }

    static java.util.Map access$100(com.google.common.graph.DirectedGraphConnections)
    {
        com.google.common.graph.DirectedGraphConnections $r0;
        java.util.Map r1;

        $r0 := @parameter0: com.google.common.graph.DirectedGraphConnections;

        r1 = $r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        return r1;
    }

    static boolean access$200(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <com.google.common.graph.DirectedGraphConnections: boolean isPredecessor(java.lang.Object)>($r0);

        return $z0;
    }

    static int access$300(com.google.common.graph.DirectedGraphConnections)
    {
        int i0;
        com.google.common.graph.DirectedGraphConnections $r0;

        $r0 := @parameter0: com.google.common.graph.DirectedGraphConnections;

        i0 = $r0.<com.google.common.graph.DirectedGraphConnections: int predecessorCount>;

        return i0;
    }

    static boolean access$400(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <com.google.common.graph.DirectedGraphConnections: boolean isSuccessor(java.lang.Object)>($r0);

        return $z0;
    }

    static int access$500(com.google.common.graph.DirectedGraphConnections)
    {
        int i0;
        com.google.common.graph.DirectedGraphConnections $r0;

        $r0 := @parameter0: com.google.common.graph.DirectedGraphConnections;

        i0 = $r0.<com.google.common.graph.DirectedGraphConnections: int successorCount>;

        return i0;
    }

    private static boolean isPredecessor(java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        if $r0 == $r1 goto label2;

        $z0 = $r0 instanceof com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private static boolean isSuccessor(java.lang.Object)
    {
        java.lang.Object $r0, $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        if $r0 == $r1 goto label1;

        if $r0 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    static com.google.common.graph.EndpointPair lambda$incidentEdgeIterator$0(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        com.google.common.graph.EndpointPair $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <com.google.common.graph.EndpointPair: com.google.common.graph.EndpointPair ordered(java.lang.Object,java.lang.Object)>($r1, $r0);

        return $r2;
    }

    static com.google.common.graph.EndpointPair lambda$incidentEdgeIterator$1(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        com.google.common.graph.EndpointPair $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <com.google.common.graph.EndpointPair: com.google.common.graph.EndpointPair ordered(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $r2;
    }

    static com.google.common.graph.EndpointPair lambda$incidentEdgeIterator$2(java.lang.Object, com.google.common.graph.DirectedGraphConnections$NodeConnection)
    {
        java.lang.Object $r0, $r2;
        com.google.common.graph.DirectedGraphConnections$NodeConnection $r1;
        com.google.common.graph.EndpointPair $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.google.common.graph.DirectedGraphConnections$NodeConnection;

        $z0 = $r1 instanceof com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ;

        if $z0 == 0 goto label1;

        $r2 = $r1.<com.google.common.graph.DirectedGraphConnections$NodeConnection: java.lang.Object node>;

        $r3 = staticinvoke <com.google.common.graph.EndpointPair: com.google.common.graph.EndpointPair ordered(java.lang.Object,java.lang.Object)>($r0, $r2);

        return $r3;

     label1:
        $r2 = $r1.<com.google.common.graph.DirectedGraphConnections$NodeConnection: java.lang.Object node>;

        $r3 = staticinvoke <com.google.common.graph.EndpointPair: com.google.common.graph.EndpointPair ordered(java.lang.Object,java.lang.Object)>($r2, $r0);

        return $r3;
    }

    static com.google.common.graph.DirectedGraphConnections of(com.google.common.graph.ElementOrder)
    {
        com.google.common.graph.ElementOrder r0;
        com.google.common.graph.ElementOrder$Type $r3;
        java.util.HashMap $r1;
        java.lang.AssertionError r4;
        java.util.ArrayList r5;
        int[] r2;
        int $i0;
        com.google.common.graph.DirectedGraphConnections $r6;

        r0 := @parameter0: com.google.common.graph.ElementOrder;

        r2 = <com.google.common.graph.DirectedGraphConnections$5: int[] $SwitchMap$com$google$common$graph$ElementOrder$Type>;

        $r3 = virtualinvoke r0.<com.google.common.graph.ElementOrder: com.google.common.graph.ElementOrder$Type type()>();

        $i0 = virtualinvoke $r3.<com.google.common.graph.ElementOrder$Type: int ordinal()>();

        $i0 = r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.lang.AssertionError;

        $r3 = virtualinvoke r0.<com.google.common.graph.ElementOrder: com.google.common.graph.ElementOrder$Type type()>();

        specialinvoke r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw r4;

     label2:
        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        goto label4;

     label3:
        r5 = null;

     label4:
        $r6 = new com.google.common.graph.DirectedGraphConnections;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int,float)>(4, 1.0F);

        specialinvoke $r6.<com.google.common.graph.DirectedGraphConnections: void <init>(java.util.Map,java.util.List,int,int)>($r1, r5, 0, 0);

        return $r6;
    }

    static com.google.common.graph.DirectedGraphConnections ofImmutable(java.lang.Object, java.lang.Iterable, com.google.common.base.Function)
    {
        com.google.common.graph.DirectedGraphConnections$PredAndSucc r8;
        java.util.HashMap r3;
        java.lang.Iterable r1;
        com.google.common.graph.EndpointPair r7;
        com.google.common.collect.ImmutableList $r15;
        int i0, i1;
        boolean $z0;
        com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ r10;
        com.google.common.base.Function r2;
        java.util.Iterator $r5;
        java.lang.Object r0, $r6, r11, $r12, $r13;
        com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred r9;
        com.google.common.graph.DirectedGraphConnections $r14;
        com.google.common.collect.ImmutableList$Builder $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Iterable;

        r2 := @parameter2: com.google.common.base.Function;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        i0 = 0;

        i1 = 0;

        $r5 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.google.common.graph.EndpointPair) $r6;

        $r6 = virtualinvoke r7.<com.google.common.graph.EndpointPair: java.lang.Object nodeU()>();

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r7.<com.google.common.graph.EndpointPair: java.lang.Object nodeV()>();

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        r8 = new com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        $r6 = interfaceinvoke r2.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>(r0);

        specialinvoke r8.<com.google.common.graph.DirectedGraphConnections$PredAndSucc: void <init>(java.lang.Object)>($r6);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r8);

        r9 = new com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred;

        specialinvoke r9.<com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred: void <init>(java.lang.Object)>(r0);

        virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>(r9);

        r10 = new com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ;

        specialinvoke r10.<com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ: void <init>(java.lang.Object)>(r0);

        virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>(r10);

        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r7.<com.google.common.graph.EndpointPair: java.lang.Object nodeV()>();

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label4;

        $r6 = virtualinvoke r7.<com.google.common.graph.EndpointPair: java.lang.Object nodeU()>();

        r11 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        r11 = interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r11);

        if r11 == null goto label3;

        r8 = new com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        specialinvoke r8.<com.google.common.graph.DirectedGraphConnections$PredAndSucc: void <init>(java.lang.Object)>(r11);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r8);

     label3:
        r9 = new com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred;

        specialinvoke r9.<com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred: void <init>(java.lang.Object)>($r6);

        virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>(r9);

        i0 = i0 + 1;

        goto label1;

     label4:
        $r6 = virtualinvoke r7.<com.google.common.graph.EndpointPair: java.lang.Object nodeU()>();

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r6 = virtualinvoke r7.<com.google.common.graph.EndpointPair: java.lang.Object nodeV()>();

        r11 = interfaceinvoke r2.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>($r6);

        $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r11);

        if $r12 == null goto label7;

        $r13 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        if $r12 != $r13 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        r8 = new com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        specialinvoke r8.<com.google.common.graph.DirectedGraphConnections$PredAndSucc: void <init>(java.lang.Object)>(r11);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r8);

     label7:
        r10 = new com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ;

        specialinvoke r10.<com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ: void <init>(java.lang.Object)>($r6);

        virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>(r10);

        i1 = i1 + 1;

        goto label1;

     label8:
        $r14 = new com.google.common.graph.DirectedGraphConnections;

        $r15 = virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        specialinvoke $r14.<com.google.common.graph.DirectedGraphConnections: void <init>(java.util.Map,java.util.List,int,int)>(r3, $r15, i0, i1);

        return $r14;
    }

    public void addPredecessor(java.lang.Object, java.lang.Object)
    {
        com.google.common.graph.DirectedGraphConnections$PredAndSucc $r6;
        java.util.List $r7;
        java.util.Map r4;
        int $i0;
        java.lang.Object r1, r2, r5;
        com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred $r3;
        com.google.common.graph.DirectedGraphConnections r0;
        boolean z0;

        r0 := @this: com.google.common.graph.DirectedGraphConnections;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r4 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        r2 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        r2 = interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        if r2 != null goto label1;

        z0 = 1;

        goto label4;

     label1:
        z0 = r2 instanceof com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        if z0 == 0 goto label2;

        r4 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        z0 = 0;

        goto label4;

     label2:
        r5 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        if r2 == r5 goto label3;

        r4 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        $r6 = new com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        specialinvoke $r6.<com.google.common.graph.DirectedGraphConnections$PredAndSucc: void <init>(java.lang.Object)>(r2);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        if z0 == 0 goto label5;

        $i0 = r0.<com.google.common.graph.DirectedGraphConnections: int predecessorCount>;

        $i0 = $i0 + 1;

        r0.<com.google.common.graph.DirectedGraphConnections: int predecessorCount> = $i0;

        staticinvoke <com.google.common.graph.Graphs: int checkPositive(int)>($i0);

        $r7 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        if $r7 == null goto label5;

        $r7 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        $r3 = new com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred;

        specialinvoke $r3.<com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred: void <init>(java.lang.Object)>(r1);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

     label5:
        return;
    }

    public java.lang.Object addSuccessor(java.lang.Object, java.lang.Object)
    {
        com.google.common.graph.DirectedGraphConnections$PredAndSucc $r6;
        java.util.List $r8;
        java.util.Map r4;
        int $i0;
        java.lang.Object r1, r2, $r5, r7;
        com.google.common.graph.DirectedGraphConnections r0;
        com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ $r3;
        boolean z0;

        r0 := @this: com.google.common.graph.DirectedGraphConnections;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r4 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        $r5 = interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        if $r5 != null goto label1;

        r2 = null;

        goto label4;

     label1:
        z0 = $r5 instanceof com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        if z0 == 0 goto label2;

        r4 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        $r6 = new com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        specialinvoke $r6.<com.google.common.graph.DirectedGraphConnections$PredAndSucc: void <init>(java.lang.Object)>(r2);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        $r6 = (com.google.common.graph.DirectedGraphConnections$PredAndSucc) $r5;

        r2 = staticinvoke <com.google.common.graph.DirectedGraphConnections$PredAndSucc: java.lang.Object access$600(com.google.common.graph.DirectedGraphConnections$PredAndSucc)>($r6);

        goto label4;

     label2:
        r7 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        if $r5 != r7 goto label3;

        r4 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        $r6 = new com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        specialinvoke $r6.<com.google.common.graph.DirectedGraphConnections$PredAndSucc: void <init>(java.lang.Object)>(r2);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        r2 = null;

        goto label4;

     label3:
        r2 = $r5;

     label4:
        if r2 != null goto label5;

        $i0 = r0.<com.google.common.graph.DirectedGraphConnections: int successorCount>;

        $i0 = $i0 + 1;

        r0.<com.google.common.graph.DirectedGraphConnections: int successorCount> = $i0;

        staticinvoke <com.google.common.graph.Graphs: int checkPositive(int)>($i0);

        $r8 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        if $r8 == null goto label5;

        $r8 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        $r3 = new com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ;

        specialinvoke $r3.<com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ: void <init>(java.lang.Object)>(r1);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r3);

     label5:
        if r2 != null goto label6;

        return null;

     label6:
        return r2;
    }

    public java.util.Set adjacentNodes()
    {
        java.util.List $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        com.google.common.graph.DirectedGraphConnections r0;
        com.google.common.graph.DirectedGraphConnections$1 $r4;

        r0 := @this: com.google.common.graph.DirectedGraphConnections;

        $r1 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        if $r1 != null goto label1;

        $r2 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        return $r3;

     label1:
        $r4 = new com.google.common.graph.DirectedGraphConnections$1;

        specialinvoke $r4.<com.google.common.graph.DirectedGraphConnections$1: void <init>(com.google.common.graph.DirectedGraphConnections)>(r0);

        return $r4;
    }

    public java.util.Iterator incidentEdgeIterator(java.lang.Object)
    {
        java.util.Iterator $r4, $r6;
        java.util.Set $r3;
        java.util.concurrent.atomic.AtomicBoolean r9;
        java.util.List r2;
        com.google.common.graph.DirectedGraphConnections$4 $r10;
        java.lang.Object r1;
        com.google.common.graph.DirectedGraphConnections$$ExternalSyntheticLambda0 r5;
        com.google.common.graph.DirectedGraphConnections r0;
        com.google.common.graph.DirectedGraphConnections$$ExternalSyntheticLambda2 r8;
        com.google.common.graph.DirectedGraphConnections$$ExternalSyntheticLambda1 $r7;

        r0 := @this: com.google.common.graph.DirectedGraphConnections;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        if r2 != null goto label1;

        $r3 = virtualinvoke r0.<com.google.common.graph.DirectedGraphConnections: java.util.Set predecessors()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        r5 = new com.google.common.graph.DirectedGraphConnections$$ExternalSyntheticLambda0;

        specialinvoke r5.<com.google.common.graph.DirectedGraphConnections$$ExternalSyntheticLambda0: void <init>(java.lang.Object)>(r1);

        $r4 = staticinvoke <com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>($r4, r5);

        $r3 = virtualinvoke r0.<com.google.common.graph.DirectedGraphConnections: java.util.Set successors()>();

        $r6 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r7 = new com.google.common.graph.DirectedGraphConnections$$ExternalSyntheticLambda1;

        specialinvoke $r7.<com.google.common.graph.DirectedGraphConnections$$ExternalSyntheticLambda1: void <init>(java.lang.Object)>(r1);

        $r6 = staticinvoke <com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>($r6, $r7);

        $r4 = staticinvoke <com.google.common.collect.Iterators: java.util.Iterator concat(java.util.Iterator,java.util.Iterator)>($r4, $r6);

        goto label2;

     label1:
        r2 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        $r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

        r8 = new com.google.common.graph.DirectedGraphConnections$$ExternalSyntheticLambda2;

        specialinvoke r8.<com.google.common.graph.DirectedGraphConnections$$ExternalSyntheticLambda2: void <init>(java.lang.Object)>(r1);

        $r4 = staticinvoke <com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>($r4, r8);

     label2:
        r9 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke r9.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        $r10 = new com.google.common.graph.DirectedGraphConnections$4;

        specialinvoke $r10.<com.google.common.graph.DirectedGraphConnections$4: void <init>(com.google.common.graph.DirectedGraphConnections,java.util.Iterator,java.util.concurrent.atomic.AtomicBoolean)>(r0, $r4, r9);

        return $r10;
    }

    public java.util.Set predecessors()
    {
        com.google.common.graph.DirectedGraphConnections$2 $r1;
        com.google.common.graph.DirectedGraphConnections r0;

        r0 := @this: com.google.common.graph.DirectedGraphConnections;

        $r1 = new com.google.common.graph.DirectedGraphConnections$2;

        specialinvoke $r1.<com.google.common.graph.DirectedGraphConnections$2: void <init>(com.google.common.graph.DirectedGraphConnections)>(r0);

        return $r1;
    }

    public void removePredecessor(java.lang.Object)
    {
        com.google.common.graph.DirectedGraphConnections$PredAndSucc $r5;
        java.util.List $r6;
        java.util.Map r2;
        int $i0;
        java.lang.Object r1, $r3, r4;
        com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred $r7;
        com.google.common.graph.DirectedGraphConnections r0;
        boolean z0;

        r0 := @this: com.google.common.graph.DirectedGraphConnections;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        if $r3 != r4 goto label1;

        r2 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        z0 = 1;

        goto label3;

     label1:
        z0 = $r3 instanceof com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        if z0 == 0 goto label2;

        r2 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        $r5 = (com.google.common.graph.DirectedGraphConnections$PredAndSucc) $r3;

        $r3 = staticinvoke <com.google.common.graph.DirectedGraphConnections$PredAndSucc: java.lang.Object access$600(com.google.common.graph.DirectedGraphConnections$PredAndSucc)>($r5);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        if z0 == 0 goto label4;

        $i0 = r0.<com.google.common.graph.DirectedGraphConnections: int predecessorCount>;

        $i0 = $i0 + -1;

        r0.<com.google.common.graph.DirectedGraphConnections: int predecessorCount> = $i0;

        staticinvoke <com.google.common.graph.Graphs: int checkNonNegative(int)>($i0);

        $r6 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        if $r6 == null goto label4;

        $r6 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        $r7 = new com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred;

        specialinvoke $r7.<com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred: void <init>(java.lang.Object)>(r1);

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>($r7);

     label4:
        return;
    }

    public java.lang.Object removeSuccessor(java.lang.Object)
    {
        com.google.common.graph.DirectedGraphConnections$PredAndSucc r5;
        java.util.List $r6;
        java.util.Map r2;
        int $i0;
        java.lang.Object $r1, $r3, r4;
        com.google.common.graph.DirectedGraphConnections r0;
        boolean z0;
        com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ $r7;

        r0 := @this: com.google.common.graph.DirectedGraphConnections;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        r2 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 == null goto label3;

        r4 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        if $r3 != r4 goto label1;

        goto label3;

     label1:
        z0 = $r3 instanceof com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        if z0 == 0 goto label2;

        r2 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        r4 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r4);

        r5 = (com.google.common.graph.DirectedGraphConnections$PredAndSucc) $r3;

        $r3 = staticinvoke <com.google.common.graph.DirectedGraphConnections$PredAndSucc: java.lang.Object access$600(com.google.common.graph.DirectedGraphConnections$PredAndSucc)>(r5);

        goto label4;

     label2:
        r2 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        goto label4;

     label3:
        $r3 = null;

     label4:
        if $r3 == null goto label5;

        $i0 = r0.<com.google.common.graph.DirectedGraphConnections: int successorCount>;

        $i0 = $i0 + -1;

        r0.<com.google.common.graph.DirectedGraphConnections: int successorCount> = $i0;

        staticinvoke <com.google.common.graph.Graphs: int checkNonNegative(int)>($i0);

        $r6 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        if $r6 == null goto label5;

        $r6 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.List orderedNodeConnections>;

        $r7 = new com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ;

        specialinvoke $r7.<com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ: void <init>(java.lang.Object)>($r1);

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>($r7);

     label5:
        if $r3 != null goto label6;

        return null;

     label6:
        return $r3;
    }

    public java.util.Set successors()
    {
        com.google.common.graph.DirectedGraphConnections$3 $r1;
        com.google.common.graph.DirectedGraphConnections r0;

        r0 := @this: com.google.common.graph.DirectedGraphConnections;

        $r1 = new com.google.common.graph.DirectedGraphConnections$3;

        specialinvoke $r1.<com.google.common.graph.DirectedGraphConnections$3: void <init>(com.google.common.graph.DirectedGraphConnections)>(r0);

        return $r1;
    }

    public java.lang.Object value(java.lang.Object)
    {
        com.google.common.graph.DirectedGraphConnections$PredAndSucc $r4;
        java.util.Map r2;
        java.lang.Object r1, $r3;
        com.google.common.graph.DirectedGraphConnections r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.DirectedGraphConnections;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = r0.<com.google.common.graph.DirectedGraphConnections: java.util.Map adjacentNodeValues>;

        r1 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = <com.google.common.graph.DirectedGraphConnections: java.lang.Object PRED>;

        if r1 != $r3 goto label1;

        return null;

     label1:
        $z0 = r1 instanceof com.google.common.graph.DirectedGraphConnections$PredAndSucc;

        if $z0 == 0 goto label2;

        $r4 = (com.google.common.graph.DirectedGraphConnections$PredAndSucc) r1;

        r1 = staticinvoke <com.google.common.graph.DirectedGraphConnections$PredAndSucc: java.lang.Object access$600(com.google.common.graph.DirectedGraphConnections$PredAndSucc)>($r4);

     label2:
        return r1;
    }
}
