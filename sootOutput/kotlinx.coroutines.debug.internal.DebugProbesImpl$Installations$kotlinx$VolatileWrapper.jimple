final class kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper extends java.lang.Object
{
    private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater installations$FU;
    private volatile int installations;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class "Lkotlinx/coroutines/debug/internal/DebugProbesImpl$Installations$kotlinx$VolatileWrapper;", "installations");

        <kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: java.util.concurrent.atomic.AtomicIntegerFieldUpdater installations$FU> = $r0;

        return;
    }

    private void <init>()
    {
        kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper r0;

        r0 := @this: kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: void <init>()>();

        return;
    }

    public static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$getInstallations$FU$p()
    {
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater r0;

        r0 = <kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: java.util.concurrent.atomic.AtomicIntegerFieldUpdater installations$FU>;

        return r0;
    }
}
