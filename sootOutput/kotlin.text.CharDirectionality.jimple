public final enum class kotlin.text.CharDirectionality extends java.lang.Enum
{
    private static final kotlin.text.CharDirectionality[] $VALUES;
    public static final enum kotlin.text.CharDirectionality ARABIC_NUMBER;
    public static final enum kotlin.text.CharDirectionality BOUNDARY_NEUTRAL;
    public static final enum kotlin.text.CharDirectionality COMMON_NUMBER_SEPARATOR;
    public static final kotlin.text.CharDirectionality$Companion Companion;
    public static final enum kotlin.text.CharDirectionality EUROPEAN_NUMBER;
    public static final enum kotlin.text.CharDirectionality EUROPEAN_NUMBER_SEPARATOR;
    public static final enum kotlin.text.CharDirectionality EUROPEAN_NUMBER_TERMINATOR;
    public static final enum kotlin.text.CharDirectionality LEFT_TO_RIGHT;
    public static final enum kotlin.text.CharDirectionality LEFT_TO_RIGHT_EMBEDDING;
    public static final enum kotlin.text.CharDirectionality LEFT_TO_RIGHT_OVERRIDE;
    public static final enum kotlin.text.CharDirectionality NONSPACING_MARK;
    public static final enum kotlin.text.CharDirectionality OTHER_NEUTRALS;
    public static final enum kotlin.text.CharDirectionality PARAGRAPH_SEPARATOR;
    public static final enum kotlin.text.CharDirectionality POP_DIRECTIONAL_FORMAT;
    public static final enum kotlin.text.CharDirectionality RIGHT_TO_LEFT;
    public static final enum kotlin.text.CharDirectionality RIGHT_TO_LEFT_ARABIC;
    public static final enum kotlin.text.CharDirectionality RIGHT_TO_LEFT_EMBEDDING;
    public static final enum kotlin.text.CharDirectionality RIGHT_TO_LEFT_OVERRIDE;
    public static final enum kotlin.text.CharDirectionality SEGMENT_SEPARATOR;
    public static final enum kotlin.text.CharDirectionality UNDEFINED;
    public static final enum kotlin.text.CharDirectionality WHITESPACE;
    private static final kotlin.Lazy directionalityMap$delegate;
    private final int value;

    private static final kotlin.text.CharDirectionality[] $values()
    {
        kotlin.text.CharDirectionality $r1;
        kotlin.text.CharDirectionality[] $r0;

        $r0 = newarray (kotlin.text.CharDirectionality)[20];

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality UNDEFINED>;

        $r0[0] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT>;

        $r0[1] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT>;

        $r0[2] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_ARABIC>;

        $r0[3] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER>;

        $r0[4] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_SEPARATOR>;

        $r0[5] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_TERMINATOR>;

        $r0[6] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality ARABIC_NUMBER>;

        $r0[7] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality COMMON_NUMBER_SEPARATOR>;

        $r0[8] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality NONSPACING_MARK>;

        $r0[9] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality BOUNDARY_NEUTRAL>;

        $r0[10] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality PARAGRAPH_SEPARATOR>;

        $r0[11] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality SEGMENT_SEPARATOR>;

        $r0[12] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality WHITESPACE>;

        $r0[13] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality OTHER_NEUTRALS>;

        $r0[14] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_EMBEDDING>;

        $r0[15] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_OVERRIDE>;

        $r0[16] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_EMBEDDING>;

        $r0[17] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_OVERRIDE>;

        $r0[18] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality POP_DIRECTIONAL_FORMAT>;

        $r0[19] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        kotlin.text.CharDirectionality$Companion $r5;
        kotlin.text.CharDirectionality$Companion$directionalityMap$2 $r1;
        kotlin.text.CharDirectionality $r4;
        kotlin.text.CharDirectionality[] $r0;
        kotlin.jvm.functions.Function0 $r2;
        kotlin.Lazy $r3;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("UNDEFINED", 0, -1);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality UNDEFINED> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("LEFT_TO_RIGHT", 1, 0);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("RIGHT_TO_LEFT", 2, 1);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("RIGHT_TO_LEFT_ARABIC", 3, 2);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_ARABIC> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("EUROPEAN_NUMBER", 4, 3);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("EUROPEAN_NUMBER_SEPARATOR", 5, 4);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_SEPARATOR> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("EUROPEAN_NUMBER_TERMINATOR", 6, 5);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_TERMINATOR> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("ARABIC_NUMBER", 7, 6);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality ARABIC_NUMBER> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("COMMON_NUMBER_SEPARATOR", 8, 7);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality COMMON_NUMBER_SEPARATOR> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("NONSPACING_MARK", 9, 8);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality NONSPACING_MARK> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("BOUNDARY_NEUTRAL", 10, 9);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality BOUNDARY_NEUTRAL> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("PARAGRAPH_SEPARATOR", 11, 10);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality PARAGRAPH_SEPARATOR> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("SEGMENT_SEPARATOR", 12, 11);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality SEGMENT_SEPARATOR> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("WHITESPACE", 13, 12);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality WHITESPACE> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("OTHER_NEUTRALS", 14, 13);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality OTHER_NEUTRALS> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("LEFT_TO_RIGHT_EMBEDDING", 15, 14);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_EMBEDDING> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("LEFT_TO_RIGHT_OVERRIDE", 16, 15);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_OVERRIDE> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("RIGHT_TO_LEFT_EMBEDDING", 17, 16);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_EMBEDDING> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("RIGHT_TO_LEFT_OVERRIDE", 18, 17);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_OVERRIDE> = $r4;

        $r4 = new kotlin.text.CharDirectionality;

        specialinvoke $r4.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("POP_DIRECTIONAL_FORMAT", 19, 18);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality POP_DIRECTIONAL_FORMAT> = $r4;

        $r0 = staticinvoke <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $values()>();

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $VALUES> = $r0;

        $r5 = new kotlin.text.CharDirectionality$Companion;

        specialinvoke $r5.<kotlin.text.CharDirectionality$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality$Companion Companion> = $r5;

        $r1 = <kotlin.text.CharDirectionality$Companion$directionalityMap$2: kotlin.text.CharDirectionality$Companion$directionalityMap$2 INSTANCE>;

        $r2 = (kotlin.jvm.functions.Function0) $r1;

        $r3 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r2);

        <kotlin.text.CharDirectionality: kotlin.Lazy directionalityMap$delegate> = $r3;

        return;
    }

    private void <init>(java.lang.String, int, int)
    {
        kotlin.text.CharDirectionality r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: kotlin.text.CharDirectionality;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<kotlin.text.CharDirectionality: int value> = $i1;

        return;
    }

    public static final kotlin.Lazy access$getDirectionalityMap$delegate$cp()
    {
        kotlin.Lazy r0;

        r0 = <kotlin.text.CharDirectionality: kotlin.Lazy directionalityMap$delegate>;

        return r0;
    }

    public static kotlin.text.CharDirectionality valueOf(java.lang.String)
    {
        kotlin.text.CharDirectionality $r2;
        java.lang.String $r0;
        java.lang.Enum $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lkotlin/text/CharDirectionality;", $r0);

        $r2 = (kotlin.text.CharDirectionality) $r1;

        return $r2;
    }

    public static kotlin.text.CharDirectionality[] values()
    {
        java.lang.Object $r0;
        kotlin.text.CharDirectionality[] $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (kotlin.text.CharDirectionality[]) $r0;

        return $r1;
    }

    public final int getValue()
    {
        kotlin.text.CharDirectionality r0;
        int i0;

        r0 := @this: kotlin.text.CharDirectionality;

        i0 = r0.<kotlin.text.CharDirectionality: int value>;

        return i0;
    }
}
