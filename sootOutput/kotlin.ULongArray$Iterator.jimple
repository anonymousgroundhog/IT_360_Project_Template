final class kotlin.ULongArray$Iterator extends java.lang.Object implements java.util.Iterator, kotlin.jvm.internal.markers.KMappedMarker
{
    private final long[] array;
    private int index;

    public void <init>(long[])
    {
        kotlin.ULongArray$Iterator r0;
        long[] $r1;

        r0 := @this: kotlin.ULongArray$Iterator;

        $r1 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "array");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.ULongArray$Iterator: long[] array> = $r1;

        return;
    }

    public boolean hasNext()
    {
        long[] $r1;
        int $i0, $i1;
        kotlin.ULongArray$Iterator r0;

        r0 := @this: kotlin.ULongArray$Iterator;

        $i0 = r0.<kotlin.ULongArray$Iterator: int index>;

        $r1 = r0.<kotlin.ULongArray$Iterator: long[] array>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile java.lang.Object next()
    {
        long $l0;
        kotlin.ULongArray$Iterator r0;
        kotlin.ULong $r1;

        r0 := @this: kotlin.ULongArray$Iterator;

        $l0 = virtualinvoke r0.<kotlin.ULongArray$Iterator: long next-s-VKNKU()>();

        $r1 = staticinvoke <kotlin.ULong: kotlin.ULong box-impl(long)>($l0);

        return $r1;
    }

    public long next-s-VKNKU()
    {
        long[] $r1;
        int $i0, $i1;
        long $l2;
        kotlin.ULongArray$Iterator r0;
        java.lang.String $r3;
        java.util.NoSuchElementException $r2;

        r0 := @this: kotlin.ULongArray$Iterator;

        $i0 = r0.<kotlin.ULongArray$Iterator: int index>;

        $r1 = r0.<kotlin.ULongArray$Iterator: long[] array>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r1 = r0.<kotlin.ULongArray$Iterator: long[] array>;

        $i1 = r0.<kotlin.ULongArray$Iterator: int index>;

        $i0 = $i1 + 1;

        r0.<kotlin.ULongArray$Iterator: int index> = $i0;

        $l2 = $r1[$i1];

        $l2 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l2);

        return $l2;

     label1:
        $r2 = new java.util.NoSuchElementException;

        $i0 = r0.<kotlin.ULongArray$Iterator: int index>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        kotlin.ULongArray$Iterator r0;

        r0 := @this: kotlin.ULongArray$Iterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }
}
