class com.google.common.base.CharMatcher$Negated extends com.google.common.base.CharMatcher
{
    final com.google.common.base.CharMatcher original;

    void <init>(com.google.common.base.CharMatcher)
    {
        com.google.common.base.CharMatcher $r1;
        com.google.common.base.CharMatcher$Negated r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.base.CharMatcher$Negated;

        $r1 := @parameter0: com.google.common.base.CharMatcher;

        specialinvoke r0.<com.google.common.base.CharMatcher: void <init>()>();

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r1 = (com.google.common.base.CharMatcher) $r2;

        r0.<com.google.common.base.CharMatcher$Negated: com.google.common.base.CharMatcher original> = $r1;

        return;
    }

    public volatile boolean apply(java.lang.Object)
    {
        com.google.common.base.CharMatcher$Negated r0;
        java.lang.Character $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.common.base.CharMatcher$Negated;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Character) $r1;

        $z0 = specialinvoke r0.<com.google.common.base.CharMatcher: boolean apply(java.lang.Character)>($r2);

        return $z0;
    }

    public int countIn(java.lang.CharSequence)
    {
        com.google.common.base.CharMatcher$Negated r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        com.google.common.base.CharMatcher $r2;

        r0 := @this: com.google.common.base.CharMatcher$Negated;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $r2 = r0.<com.google.common.base.CharMatcher$Negated: com.google.common.base.CharMatcher original>;

        $i1 = virtualinvoke $r2.<com.google.common.base.CharMatcher: int countIn(java.lang.CharSequence)>($r1);

        $i0 = $i0 - $i1;

        return $i0;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$Negated r0;
        com.google.common.base.CharMatcher $r1;
        char $c0;
        boolean $z0;

        r0 := @this: com.google.common.base.CharMatcher$Negated;

        $c0 := @parameter0: char;

        $r1 = r0.<com.google.common.base.CharMatcher$Negated: com.google.common.base.CharMatcher original>;

        $z0 = virtualinvoke $r1.<com.google.common.base.CharMatcher: boolean matches(char)>($c0);

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public boolean matchesAllOf(java.lang.CharSequence)
    {
        com.google.common.base.CharMatcher$Negated r0;
        java.lang.CharSequence $r1;
        com.google.common.base.CharMatcher $r2;
        boolean $z0;

        r0 := @this: com.google.common.base.CharMatcher$Negated;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.google.common.base.CharMatcher$Negated: com.google.common.base.CharMatcher original>;

        $z0 = virtualinvoke $r2.<com.google.common.base.CharMatcher: boolean matchesNoneOf(java.lang.CharSequence)>($r1);

        return $z0;
    }

    public boolean matchesNoneOf(java.lang.CharSequence)
    {
        com.google.common.base.CharMatcher$Negated r0;
        java.lang.CharSequence $r1;
        com.google.common.base.CharMatcher $r2;
        boolean $z0;

        r0 := @this: com.google.common.base.CharMatcher$Negated;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.google.common.base.CharMatcher$Negated: com.google.common.base.CharMatcher original>;

        $z0 = virtualinvoke $r2.<com.google.common.base.CharMatcher: boolean matchesAllOf(java.lang.CharSequence)>($r1);

        return $z0;
    }

    public com.google.common.base.CharMatcher negate()
    {
        com.google.common.base.CharMatcher r1;
        com.google.common.base.CharMatcher$Negated r0;

        r0 := @this: com.google.common.base.CharMatcher$Negated;

        r1 = r0.<com.google.common.base.CharMatcher$Negated: com.google.common.base.CharMatcher original>;

        return r1;
    }

    void setBits(java.util.BitSet)
    {
        com.google.common.base.CharMatcher$Negated r0;
        com.google.common.base.CharMatcher $r3;
        java.util.BitSet $r1, r2;

        r0 := @this: com.google.common.base.CharMatcher$Negated;

        $r1 := @parameter0: java.util.BitSet;

        r2 = new java.util.BitSet;

        specialinvoke r2.<java.util.BitSet: void <init>()>();

        $r3 = r0.<com.google.common.base.CharMatcher$Negated: com.google.common.base.CharMatcher original>;

        virtualinvoke $r3.<com.google.common.base.CharMatcher: void setBits(java.util.BitSet)>(r2);

        virtualinvoke r2.<java.util.BitSet: void flip(int,int)>(0, 65536);

        virtualinvoke $r1.<java.util.BitSet: void or(java.util.BitSet)>(r2);

        return;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher$Negated r0;
        com.google.common.base.CharMatcher $r2;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r4;

        r0 := @this: com.google.common.base.CharMatcher$Negated;

        $r2 = r0.<com.google.common.base.CharMatcher$Negated: com.google.common.base.CharMatcher original>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + 9;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".negate()");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
