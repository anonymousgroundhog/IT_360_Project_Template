public class com.google.common.collect.ImmutableListMultimap extends com.google.common.collect.ImmutableMultimap implements com.google.common.collect.ListMultimap
{
    private static final long serialVersionUID;
    private transient com.google.common.collect.ImmutableListMultimap inverse;

    void <init>(com.google.common.collect.ImmutableMap, int)
    {
        int $i0;
        com.google.common.collect.ImmutableMap r1;
        com.google.common.collect.ImmutableListMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        r1 := @parameter0: com.google.common.collect.ImmutableMap;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.google.common.collect.ImmutableMultimap: void <init>(com.google.common.collect.ImmutableMap,int)>(r1, $i0);

        return;
    }

    public static com.google.common.collect.ImmutableListMultimap$Builder builder()
    {
        com.google.common.collect.ImmutableListMultimap$Builder $r0;

        $r0 = new com.google.common.collect.ImmutableListMultimap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableListMultimap$Builder: void <init>()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableListMultimap copyOf(com.google.common.collect.Multimap)
    {
        com.google.common.collect.ImmutableListMultimap $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        com.google.common.collect.Multimap r0;
        boolean $z0;

        r0 := @parameter0: com.google.common.collect.Multimap;

        $z0 = interfaceinvoke r0.<com.google.common.collect.Multimap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of()>();

        return $r1;

     label1:
        $z0 = r0 instanceof com.google.common.collect.ImmutableListMultimap;

        if $z0 == 0 goto label2;

        $r1 = (com.google.common.collect.ImmutableListMultimap) r0;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableListMultimap: boolean isPartialView()>();

        if $z0 != 0 goto label2;

        return $r1;

     label2:
        $r2 = interfaceinvoke r0.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r1 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap fromMapEntries(java.util.Collection,java.util.Comparator)>($r3, null);

        return $r1;
    }

    public static com.google.common.collect.ImmutableListMultimap copyOf(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        com.google.common.collect.ImmutableListMultimap$Builder $r1;
        com.google.common.collect.ImmutableListMultimap $r2;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = new com.google.common.collect.ImmutableListMultimap$Builder;

        specialinvoke $r1.<com.google.common.collect.ImmutableListMultimap$Builder: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Iterable)>(r0);

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap build()>();

        return $r2;
    }

    static com.google.common.collect.ImmutableListMultimap fromMapEntries(java.util.Collection, java.util.Comparator)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        com.google.common.collect.ImmutableMap $r9;
        java.util.Collection r0;
        com.google.common.collect.ImmutableMap$Builder r3;
        com.google.common.collect.ImmutableList $r8;
        com.google.common.collect.ImmutableListMultimap $r2;
        int $i0, $i1;
        java.lang.Object $r5, $r7;
        java.util.Comparator r1;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Comparator;

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of()>();

        return $r2;

     label1:
        r3 = new com.google.common.collect.ImmutableMap$Builder;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        specialinvoke r3.<com.google.common.collect.ImmutableMap$Builder: void <init>(int)>($i0);

        $i0 = 0;

        $r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r0 = (java.util.Collection) $r7;

        if r1 != null goto label3;

        $r8 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>(r0);

        goto label4;

     label3:
        $r8 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList sortedCopyOf(java.util.Comparator,java.lang.Iterable)>(r1, r0);

     label4:
        $z0 = virtualinvoke $r8.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        virtualinvoke r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r5, $r8);

        $i1 = virtualinvoke $r8.<com.google.common.collect.ImmutableList: int size()>();

        $i0 = $i0 + $i1;

        goto label2;

     label5:
        $r2 = new com.google.common.collect.ImmutableListMultimap;

        $r9 = virtualinvoke r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap buildOrThrow()>();

        specialinvoke $r2.<com.google.common.collect.ImmutableListMultimap: void <init>(com.google.common.collect.ImmutableMap,int)>($r9, $i0);

        return $r2;
    }

    private com.google.common.collect.ImmutableListMultimap invert()
    {
        java.util.Map$Entry r5;
        com.google.common.collect.ImmutableCollection $r2;
        com.google.common.collect.ImmutableListMultimap r0, $r7;
        com.google.common.collect.ImmutableListMultimap$Builder $r1;
        java.lang.Object $r4, $r6;
        com.google.common.collect.UnmodifiableIterator $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r1 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap$Builder builder()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableCollection entries()>();

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableCollection: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r1.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>($r4, $r6);

        goto label1;

     label2:
        $r7 = virtualinvoke $r1.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap build()>();

        $r7.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap inverse> = r0;

        return $r7;
    }

    public static com.google.common.collect.ImmutableListMultimap of()
    {
        com.google.common.collect.EmptyImmutableListMultimap r0;

        r0 = <com.google.common.collect.EmptyImmutableListMultimap: com.google.common.collect.EmptyImmutableListMultimap INSTANCE>;

        return r0;
    }

    public static com.google.common.collect.ImmutableListMultimap of(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap$Builder $r2;
        com.google.common.collect.ImmutableListMultimap $r3;
        java.lang.Object r0, r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap$Builder builder()>();

        virtualinvoke $r2.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r0, r1);

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap build()>();

        return $r3;
    }

    public static com.google.common.collect.ImmutableListMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap$Builder $r4;
        com.google.common.collect.ImmutableListMultimap $r5;
        java.lang.Object r0, r1, r2, r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r4 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap$Builder builder()>();

        virtualinvoke $r4.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r0, r1);

        virtualinvoke $r4.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r2, r3);

        $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap build()>();

        return $r5;
    }

    public static com.google.common.collect.ImmutableListMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap$Builder $r6;
        com.google.common.collect.ImmutableListMultimap $r7;
        java.lang.Object r0, r1, r2, r3, r4, r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        $r6 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap$Builder builder()>();

        virtualinvoke $r6.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r0, r1);

        virtualinvoke $r6.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r2, r3);

        virtualinvoke $r6.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r4, r5);

        $r7 = virtualinvoke $r6.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap build()>();

        return $r7;
    }

    public static com.google.common.collect.ImmutableListMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap$Builder $r8;
        com.google.common.collect.ImmutableListMultimap $r9;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        $r8 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap$Builder builder()>();

        virtualinvoke $r8.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r0, r1);

        virtualinvoke $r8.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r2, r3);

        virtualinvoke $r8.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r4, r5);

        virtualinvoke $r8.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r6, r7);

        $r9 = virtualinvoke $r8.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap build()>();

        return $r9;
    }

    public static com.google.common.collect.ImmutableListMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableListMultimap$Builder $r10;
        com.google.common.collect.ImmutableListMultimap $r11;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7, r8, r9;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        r8 := @parameter8: java.lang.Object;

        r9 := @parameter9: java.lang.Object;

        $r10 = staticinvoke <com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap$Builder builder()>();

        virtualinvoke $r10.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r0, r1);

        virtualinvoke $r10.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r2, r3);

        virtualinvoke $r10.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r4, r5);

        virtualinvoke $r10.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r6, r7);

        virtualinvoke $r10.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)>(r8, r9);

        $r11 = virtualinvoke $r10.<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap build()>();

        return $r11;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.lang.Throwable $r13;
        java.io.ObjectInputStream $r1;
        com.google.common.collect.ImmutableList $r6;
        int $i0, i1, i2, $i3, i4;
        java.io.InvalidObjectException r7;
        java.lang.String $r9;
        com.google.common.collect.Serialization$FieldSetter r11;
        com.google.common.collect.ImmutableMap $r10;
        java.lang.IllegalArgumentException r12;
        com.google.common.collect.ImmutableMap$Builder $r2;
        com.google.common.collect.ImmutableListMultimap r0;
        java.lang.Object $r3, $r5;
        java.lang.StringBuilder r8;
        com.google.common.collect.ImmutableList$Builder $r4;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $i0 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        if $i0 < 0 goto label8;

        $r2 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        i1 = 0;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label5;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $i3 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        if $i3 <= 0 goto label4;

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        i4 = 0;

     label2:
        if i4 >= $i3 goto label3;

        $r5 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r5);

        i4 = i4 + 1;

        goto label2;

     label3:
        $r6 = virtualinvoke $r4.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        virtualinvoke $r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r3, $r6);

        i1 = i1 + $i3;

        i2 = i2 + 1;

        goto label1;

     label4:
        r7 = new java.io.InvalidObjectException;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>(int)>(31);

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value count ");

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r7.<java.io.InvalidObjectException: void <init>(java.lang.String)>($r9);

        throw r7;

     label5:
        $r10 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap buildOrThrow()>();

     label6:
        r11 = <com.google.common.collect.ImmutableMultimap$FieldSettersHolder: com.google.common.collect.Serialization$FieldSetter MAP_FIELD_SETTER>;

        virtualinvoke r11.<com.google.common.collect.Serialization$FieldSetter: void set(java.lang.Object,java.lang.Object)>(r0, $r10);

        r11 = <com.google.common.collect.ImmutableMultimap$FieldSettersHolder: com.google.common.collect.Serialization$FieldSetter SIZE_FIELD_SETTER>;

        virtualinvoke r11.<com.google.common.collect.Serialization$FieldSetter: void set(java.lang.Object,int)>(r0, i1);

        return;

     label7:
        r12 := @caughtexception;

        r7 = new java.io.InvalidObjectException;

        $r9 = virtualinvoke r12.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke r7.<java.io.InvalidObjectException: void <init>(java.lang.String)>($r9);

        $r13 = virtualinvoke r7.<java.io.InvalidObjectException: java.lang.Throwable initCause(java.lang.Throwable)>(r12);

        r7 = (java.io.InvalidObjectException) $r13;

        throw r7;

     label8:
        r7 = new java.io.InvalidObjectException;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>(int)>(29);

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key count ");

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r7.<java.io.InvalidObjectException: void <init>(java.lang.String)>($r9);

        throw r7;

        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream $r1;
        com.google.common.collect.ImmutableListMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        staticinvoke <com.google.common.collect.Serialization: void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)>(r0, $r1);

        return;
    }

    public volatile com.google.common.collect.ImmutableCollection get(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.ImmutableListMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList get(java.lang.Object)>($r2);

        return $r1;
    }

    public com.google.common.collect.ImmutableList get(java.lang.Object)
    {
        com.google.common.collect.ImmutableList r3;
        com.google.common.collect.ImmutableMap r2;
        com.google.common.collect.ImmutableListMultimap r0;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableMap map>;

        r1 = virtualinvoke r2.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.google.common.collect.ImmutableList) r1;

        if r3 != null goto label1;

        r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

     label1:
        return r3;
    }

    public volatile java.util.Collection get(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.ImmutableListMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList get(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile java.util.List get(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.ImmutableListMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList get(java.lang.Object)>($r2);

        return $r1;
    }

    public com.google.common.collect.ImmutableListMultimap inverse()
    {
        com.google.common.collect.ImmutableListMultimap r0, r1;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        r1 = r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap inverse>;

        if r1 != null goto label1;

        r1 = specialinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap invert()>();

        r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap inverse> = r1;

     label1:
        return r1;
    }

    public volatile com.google.common.collect.ImmutableMultimap inverse()
    {
        com.google.common.collect.ImmutableListMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap inverse()>();

        return r0;
    }

    public volatile com.google.common.collect.ImmutableCollection removeAll(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.ImmutableListMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList removeAll(java.lang.Object)>($r2);

        return $r1;
    }

    public final com.google.common.collect.ImmutableList removeAll(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r2;
        java.lang.Object $r1;
        com.google.common.collect.ImmutableListMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public volatile java.util.Collection removeAll(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.ImmutableListMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList removeAll(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile java.util.List removeAll(java.lang.Object)
    {
        java.lang.Object $r2;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.ImmutableListMultimap r0;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList removeAll(java.lang.Object)>($r2);

        return $r1;
    }

    public volatile com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.ImmutableList $r2;
        com.google.common.collect.ImmutableListMultimap r0;
        java.lang.Object $r3;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        return $r2;
    }

    public final com.google.common.collect.ImmutableList replaceValues(java.lang.Object, java.lang.Iterable)
    {
        java.lang.UnsupportedOperationException $r3;
        com.google.common.collect.ImmutableListMultimap r0;
        java.lang.Object r1;
        java.lang.Iterable r2;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public volatile java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.ImmutableList $r2;
        com.google.common.collect.ImmutableListMultimap r0;
        java.lang.Object $r3;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        return $r2;
    }

    public volatile java.util.List replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.ImmutableList $r2;
        com.google.common.collect.ImmutableListMultimap r0;
        java.lang.Object $r3;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableListMultimap;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList replaceValues(java.lang.Object,java.lang.Iterable)>($r3, $r1);

        return $r2;
    }
}
