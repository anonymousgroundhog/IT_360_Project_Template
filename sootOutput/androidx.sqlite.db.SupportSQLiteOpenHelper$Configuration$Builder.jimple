public class androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder extends java.lang.Object
{
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback mCallback;
    android.content.Context mContext;
    java.lang.String mName;
    boolean mUseNoBackUpDirectory;

    void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder r0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: android.content.Context mContext> = $r1;

        return;
    }

    public androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build()
    {
        android.content.Context $r3;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder r0;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration $r5;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r4;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Callback $r2;
        boolean $z0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder;

        $r2 = r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback mCallback>;

        if $r2 == null goto label4;

        $r3 = r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: android.content.Context mContext>;

        if $r3 == null goto label3;

        $z0 = r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: boolean mUseNoBackUpDirectory>;

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: java.lang.String mName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must set a non-null database name to a configuration that uses the no backup directory.");

        throw $r4;

     label2:
        $r5 = new androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration;

        $r3 = r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: android.content.Context mContext>;

        $r1 = r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: java.lang.String mName>;

        $r2 = r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback mCallback>;

        $z0 = r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: boolean mUseNoBackUpDirectory>;

        specialinvoke $r5.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration: void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean)>($r3, $r1, $r2, $z0);

        return $r5;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must set a non-null context to create the configuration.");

        throw $r4;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must set a callback to create the configuration.");

        throw $r4;
    }

    public androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback)
    {
        androidx.sqlite.db.SupportSQLiteOpenHelper$Callback $r1;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder r0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder;

        $r1 := @parameter0: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback;

        r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback mCallback> = $r1;

        return r0;
    }

    public androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String)
    {
        java.lang.String $r1;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder r0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder;

        $r1 := @parameter0: java.lang.String;

        r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: java.lang.String mName> = $r1;

        return r0;
    }

    public androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder noBackupDirectory(boolean)
    {
        androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder r0;
        boolean $z0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder;

        $z0 := @parameter0: boolean;

        r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: boolean mUseNoBackUpDirectory> = $z0;

        return r0;
    }
}
