class kotlin.collections.AbstractList$IteratorImpl extends java.lang.Object implements java.util.Iterator, kotlin.jvm.internal.markers.KMappedMarker
{
    private int index;
    final kotlin.collections.AbstractList this$0;

    public void <init>(kotlin.collections.AbstractList)
    {
        kotlin.collections.AbstractList$IteratorImpl r0;
        kotlin.collections.AbstractList $r1;

        r0 := @this: kotlin.collections.AbstractList$IteratorImpl;

        $r1 := @parameter0: kotlin.collections.AbstractList;

        r0.<kotlin.collections.AbstractList$IteratorImpl: kotlin.collections.AbstractList this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected final int getIndex()
    {
        kotlin.collections.AbstractList$IteratorImpl r0;
        int i0;

        r0 := @this: kotlin.collections.AbstractList$IteratorImpl;

        i0 = r0.<kotlin.collections.AbstractList$IteratorImpl: int index>;

        return i0;
    }

    public boolean hasNext()
    {
        kotlin.collections.AbstractList$IteratorImpl r0;
        kotlin.collections.AbstractList $r1;
        int $i0, $i1;

        r0 := @this: kotlin.collections.AbstractList$IteratorImpl;

        $i1 = r0.<kotlin.collections.AbstractList$IteratorImpl: int index>;

        $r1 = r0.<kotlin.collections.AbstractList$IteratorImpl: kotlin.collections.AbstractList this$0>;

        $i0 = virtualinvoke $r1.<kotlin.collections.AbstractList: int size()>();

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object next()
    {
        kotlin.collections.AbstractList$IteratorImpl r0;
        kotlin.collections.AbstractList $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;
        boolean $z0;

        r0 := @this: kotlin.collections.AbstractList$IteratorImpl;

        $z0 = virtualinvoke r0.<kotlin.collections.AbstractList$IteratorImpl: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<kotlin.collections.AbstractList$IteratorImpl: kotlin.collections.AbstractList this$0>;

        $i0 = r0.<kotlin.collections.AbstractList$IteratorImpl: int index>;

        $i1 = $i0 + 1;

        r0.<kotlin.collections.AbstractList$IteratorImpl: int index> = $i1;

        $r2 = virtualinvoke $r1.<kotlin.collections.AbstractList: java.lang.Object get(int)>($i0);

        return $r2;

     label1:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;
    }

    public void remove()
    {
        kotlin.collections.AbstractList$IteratorImpl r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: kotlin.collections.AbstractList$IteratorImpl;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }

    protected final void setIndex(int)
    {
        kotlin.collections.AbstractList$IteratorImpl r0;
        int $i0;

        r0 := @this: kotlin.collections.AbstractList$IteratorImpl;

        $i0 := @parameter0: int;

        r0.<kotlin.collections.AbstractList$IteratorImpl: int index> = $i0;

        return;
    }
}
