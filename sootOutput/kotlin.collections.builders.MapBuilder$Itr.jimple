public class kotlin.collections.builders.MapBuilder$Itr extends java.lang.Object
{
    private int index;
    private int lastIndex;
    private final kotlin.collections.builders.MapBuilder map;

    public void <init>(kotlin.collections.builders.MapBuilder)
    {
        kotlin.collections.builders.MapBuilder$Itr r0;
        kotlin.collections.builders.MapBuilder $r1;

        r0 := @this: kotlin.collections.builders.MapBuilder$Itr;

        $r1 := @parameter0: kotlin.collections.builders.MapBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "map");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder map> = $r1;

        r0.<kotlin.collections.builders.MapBuilder$Itr: int lastIndex> = -1;

        virtualinvoke r0.<kotlin.collections.builders.MapBuilder$Itr: void initNext$kotlin_stdlib()>();

        return;
    }

    public final int getIndex$kotlin_stdlib()
    {
        int i0;
        kotlin.collections.builders.MapBuilder$Itr r0;

        r0 := @this: kotlin.collections.builders.MapBuilder$Itr;

        i0 = r0.<kotlin.collections.builders.MapBuilder$Itr: int index>;

        return i0;
    }

    public final int getLastIndex$kotlin_stdlib()
    {
        int i0;
        kotlin.collections.builders.MapBuilder$Itr r0;

        r0 := @this: kotlin.collections.builders.MapBuilder$Itr;

        i0 = r0.<kotlin.collections.builders.MapBuilder$Itr: int lastIndex>;

        return i0;
    }

    public final kotlin.collections.builders.MapBuilder getMap$kotlin_stdlib()
    {
        kotlin.collections.builders.MapBuilder$Itr r0;
        kotlin.collections.builders.MapBuilder r1;

        r0 := @this: kotlin.collections.builders.MapBuilder$Itr;

        r1 = r0.<kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder map>;

        return r1;
    }

    public final boolean hasNext()
    {
        int $i0, $i1;
        kotlin.collections.builders.MapBuilder$Itr r0;
        kotlin.collections.builders.MapBuilder $r1;

        r0 := @this: kotlin.collections.builders.MapBuilder$Itr;

        $i1 = r0.<kotlin.collections.builders.MapBuilder$Itr: int index>;

        $r1 = r0.<kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder map>;

        $i0 = staticinvoke <kotlin.collections.builders.MapBuilder: int access$getLength$p(kotlin.collections.builders.MapBuilder)>($r1);

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final void initNext$kotlin_stdlib()
    {
        int[] $r2;
        int $i0, $i1;
        kotlin.collections.builders.MapBuilder$Itr r0;
        kotlin.collections.builders.MapBuilder $r1;

        r0 := @this: kotlin.collections.builders.MapBuilder$Itr;

     label1:
        $i0 = r0.<kotlin.collections.builders.MapBuilder$Itr: int index>;

        $r1 = r0.<kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder map>;

        $i1 = staticinvoke <kotlin.collections.builders.MapBuilder: int access$getLength$p(kotlin.collections.builders.MapBuilder)>($r1);

        if $i0 >= $i1 goto label2;

        $r1 = r0.<kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder map>;

        $r2 = staticinvoke <kotlin.collections.builders.MapBuilder: int[] access$getPresenceArray$p(kotlin.collections.builders.MapBuilder)>($r1);

        $i0 = r0.<kotlin.collections.builders.MapBuilder$Itr: int index>;

        $i0 = $r2[$i0];

        if $i0 >= 0 goto label2;

        $i0 = r0.<kotlin.collections.builders.MapBuilder$Itr: int index>;

        $i0 = $i0 + 1;

        r0.<kotlin.collections.builders.MapBuilder$Itr: int index> = $i0;

        goto label1;

     label2:
        return;
    }

    public final void remove()
    {
        java.lang.IllegalStateException $r3;
        int $i0;
        kotlin.collections.builders.MapBuilder$Itr r0;
        java.lang.String $r1;
        kotlin.collections.builders.MapBuilder $r2;
        boolean $z0;

        r0 := @this: kotlin.collections.builders.MapBuilder$Itr;

        $i0 = r0.<kotlin.collections.builders.MapBuilder$Itr: int lastIndex>;

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = r0.<kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder map>;

        virtualinvoke $r2.<kotlin.collections.builders.MapBuilder: void checkIsMutable$kotlin_stdlib()>();

        $r2 = r0.<kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder map>;

        $i0 = r0.<kotlin.collections.builders.MapBuilder$Itr: int lastIndex>;

        staticinvoke <kotlin.collections.builders.MapBuilder: void access$removeKeyAt(kotlin.collections.builders.MapBuilder,int)>($r2, $i0);

        r0.<kotlin.collections.builders.MapBuilder$Itr: int lastIndex> = -1;

        return;

     label3:
        $r3 = new java.lang.IllegalStateException;

        $r1 = "Call next() before removing element from the iterator.";

        $r1 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public final void setIndex$kotlin_stdlib(int)
    {
        int $i0;
        kotlin.collections.builders.MapBuilder$Itr r0;

        r0 := @this: kotlin.collections.builders.MapBuilder$Itr;

        $i0 := @parameter0: int;

        r0.<kotlin.collections.builders.MapBuilder$Itr: int index> = $i0;

        return;
    }

    public final void setLastIndex$kotlin_stdlib(int)
    {
        int $i0;
        kotlin.collections.builders.MapBuilder$Itr r0;

        r0 := @this: kotlin.collections.builders.MapBuilder$Itr;

        $i0 := @parameter0: int;

        r0.<kotlin.collections.builders.MapBuilder$Itr: int lastIndex> = $i0;

        return;
    }
}
