public final class kotlin.collections.builders.MapBuilder$EntryRef extends java.lang.Object implements java.util.Map$Entry, kotlin.jvm.internal.markers.KMutableMap$Entry
{
    private final int index;
    private final kotlin.collections.builders.MapBuilder map;

    public void <init>(kotlin.collections.builders.MapBuilder, int)
    {
        int $i0;
        kotlin.collections.builders.MapBuilder $r1;
        kotlin.collections.builders.MapBuilder$EntryRef r0;

        r0 := @this: kotlin.collections.builders.MapBuilder$EntryRef;

        $r1 := @parameter0: kotlin.collections.builders.MapBuilder;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "map");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.collections.builders.MapBuilder$EntryRef: kotlin.collections.builders.MapBuilder map> = $r1;

        r0.<kotlin.collections.builders.MapBuilder$EntryRef: int index> = $i0;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        kotlin.collections.builders.MapBuilder$EntryRef r0;
        java.lang.Object $r1, $r3, $r4;
        boolean $z0;

        r0 := @this: kotlin.collections.builders.MapBuilder$EntryRef;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Map$Entry) $r1;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = virtualinvoke r0.<kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object getKey()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label1;

        $r2 = (java.util.Map$Entry) $r1;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3 = virtualinvoke r0.<kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object getValue()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object getKey()
    {
        java.lang.Object[] $r1;
        kotlin.collections.builders.MapBuilder$EntryRef r0;
        int $i0;
        java.lang.Object $r3;
        kotlin.collections.builders.MapBuilder $r2;

        r0 := @this: kotlin.collections.builders.MapBuilder$EntryRef;

        $r2 = r0.<kotlin.collections.builders.MapBuilder$EntryRef: kotlin.collections.builders.MapBuilder map>;

        $r1 = staticinvoke <kotlin.collections.builders.MapBuilder: java.lang.Object[] access$getKeysArray$p(kotlin.collections.builders.MapBuilder)>($r2);

        $i0 = r0.<kotlin.collections.builders.MapBuilder$EntryRef: int index>;

        $r3 = $r1[$i0];

        return $r3;
    }

    public java.lang.Object getValue()
    {
        java.lang.Object[] $r1;
        kotlin.collections.builders.MapBuilder$EntryRef r0;
        int $i0;
        java.lang.Object $r3;
        kotlin.collections.builders.MapBuilder $r2;

        r0 := @this: kotlin.collections.builders.MapBuilder$EntryRef;

        $r2 = r0.<kotlin.collections.builders.MapBuilder$EntryRef: kotlin.collections.builders.MapBuilder map>;

        $r1 = staticinvoke <kotlin.collections.builders.MapBuilder: java.lang.Object[] access$getValuesArray$p(kotlin.collections.builders.MapBuilder)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        $i0 = r0.<kotlin.collections.builders.MapBuilder$EntryRef: int index>;

        $r3 = $r1[$i0];

        return $r3;
    }

    public int hashCode()
    {
        kotlin.collections.builders.MapBuilder$EntryRef r0;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: kotlin.collections.builders.MapBuilder$EntryRef;

        $r1 = virtualinvoke r0.<kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object getKey()>();

        $i0 = 0;

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $r1 = virtualinvoke r0.<kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object getValue()>();

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

     label3:
        $i0 = $i1 ^ $i0;

        return $i0;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.lang.Object[] $r2;
        kotlin.collections.builders.MapBuilder$EntryRef r0;
        int $i0;
        java.lang.Object $r1, r4;
        kotlin.collections.builders.MapBuilder r3;

        r0 := @this: kotlin.collections.builders.MapBuilder$EntryRef;

        $r1 := @parameter0: java.lang.Object;

        r3 = r0.<kotlin.collections.builders.MapBuilder$EntryRef: kotlin.collections.builders.MapBuilder map>;

        virtualinvoke r3.<kotlin.collections.builders.MapBuilder: void checkIsMutable$kotlin_stdlib()>();

        r3 = r0.<kotlin.collections.builders.MapBuilder$EntryRef: kotlin.collections.builders.MapBuilder map>;

        $r2 = staticinvoke <kotlin.collections.builders.MapBuilder: java.lang.Object[] access$allocateValuesArray(kotlin.collections.builders.MapBuilder)>(r3);

        $i0 = r0.<kotlin.collections.builders.MapBuilder$EntryRef: int index>;

        r4 = $r2[$i0];

        $i0 = r0.<kotlin.collections.builders.MapBuilder$EntryRef: int index>;

        $r2[$i0] = $r1;

        return r4;
    }

    public java.lang.String toString()
    {
        kotlin.collections.builders.MapBuilder$EntryRef r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: kotlin.collections.builders.MapBuilder$EntryRef;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object getKey()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r2 = virtualinvoke r0.<kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object getValue()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
