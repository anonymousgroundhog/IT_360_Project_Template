class com.google.common.collect.Sets$1 extends com.google.common.collect.Sets$SetView
{
    final java.util.Set val$set1;
    final java.util.Set val$set2;

    void <init>(java.util.Set, java.util.Set)
    {
        java.util.Set $r1, $r2;
        com.google.common.collect.Sets$1 r0;

        r0 := @this: com.google.common.collect.Sets$1;

        $r2 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.util.Set;

        r0.<com.google.common.collect.Sets$1: java.util.Set val$set1> = $r2;

        r0.<com.google.common.collect.Sets$1: java.util.Set val$set2> = $r1;

        specialinvoke r0.<com.google.common.collect.Sets$SetView: void <init>(com.google.common.collect.Sets$1)>(null);

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Set $r2;
        java.lang.Object $r1;
        com.google.common.collect.Sets$1 r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Sets$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set1>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set2>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public java.util.Set copyInto(java.util.Set)
    {
        java.util.Set r1, $r2;
        com.google.common.collect.Sets$1 r0;

        r0 := @this: com.google.common.collect.Sets$1;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set1>;

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        $r2 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set2>;

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        return r1;
    }

    public com.google.common.collect.ImmutableSet immutableCopy()
    {
        com.google.common.collect.ImmutableSet $r3;
        com.google.common.collect.ImmutableSet$Builder $r1;
        java.util.Set $r2;
        com.google.common.collect.Sets$1 r0;

        r0 := @this: com.google.common.collect.Sets$1;

        $r1 = new com.google.common.collect.ImmutableSet$Builder;

        specialinvoke $r1.<com.google.common.collect.ImmutableSet$Builder: void <init>()>();

        $r2 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set1>;

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable)>($r2);

        $r2 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set2>;

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable)>($r2);

        $r3 = virtualinvoke $r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        return $r3;
    }

    public boolean isEmpty()
    {
        java.util.Set $r1;
        com.google.common.collect.Sets$1 r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Sets$1;

        $r1 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set1>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set2>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public com.google.common.collect.UnmodifiableIterator iterator()
    {
        com.google.common.collect.Sets$1$1 $r1;
        com.google.common.collect.Sets$1 r0;

        r0 := @this: com.google.common.collect.Sets$1;

        $r1 = new com.google.common.collect.Sets$1$1;

        specialinvoke $r1.<com.google.common.collect.Sets$1$1: void <init>(com.google.common.collect.Sets$1)>(r0);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.UnmodifiableIterator $r1;
        com.google.common.collect.Sets$1 r0;

        r0 := @this: com.google.common.collect.Sets$1;

        $r1 = virtualinvoke r0.<com.google.common.collect.Sets$1: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    public int size()
    {
        java.util.Iterator $r2;
        int $i0;
        java.util.Set r1;
        java.lang.Object $r3;
        com.google.common.collect.Sets$1 r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Sets$1;

        r1 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set1>;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        r1 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set2>;

        $r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r1 = r0.<com.google.common.collect.Sets$1: java.util.Set val$set1>;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $i0;
    }
}
