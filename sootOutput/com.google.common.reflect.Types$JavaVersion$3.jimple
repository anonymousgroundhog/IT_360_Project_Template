final enum class com.google.common.reflect.Types$JavaVersion$3 extends com.google.common.reflect.Types$JavaVersion
{

    void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        com.google.common.reflect.Types$JavaVersion$3 r0;

        r0 := @this: com.google.common.reflect.Types$JavaVersion$3;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.google.common.reflect.Types$JavaVersion: void <init>(java.lang.String,int,com.google.common.reflect.Types$1)>($r1, $i0, null);

        return;
    }

    java.lang.reflect.Type newArrayType(java.lang.reflect.Type)
    {
        com.google.common.reflect.Types$JavaVersion $r2;
        com.google.common.reflect.Types$JavaVersion$3 r0;
        java.lang.reflect.Type $r1;

        r0 := @this: com.google.common.reflect.Types$JavaVersion$3;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 = <com.google.common.reflect.Types$JavaVersion$3: com.google.common.reflect.Types$JavaVersion JAVA7>;

        $r1 = virtualinvoke $r2.<com.google.common.reflect.Types$JavaVersion: java.lang.reflect.Type newArrayType(java.lang.reflect.Type)>($r1);

        return $r1;
    }

    java.lang.String typeName(java.lang.reflect.Type)
    {
        java.lang.IllegalAccessException r8;
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException r11;
        java.lang.Class[] $r2;
        java.lang.RuntimeException $r9;
        java.lang.AssertionError $r12;
        com.google.common.reflect.Types$JavaVersion$3 r0;
        java.lang.reflect.InvocationTargetException r10;
        java.lang.reflect.Type $r1;
        java.lang.Class r3;
        java.lang.Object $r6;
        java.lang.String $r7;
        java.lang.reflect.Method $r4;

        r0 := @this: com.google.common.reflect.Types$JavaVersion$3;

        $r1 := @parameter0: java.lang.reflect.Type;

        r3 = class "Ljava/lang/reflect/Type;";

        $r2 = newarray (java.lang.Class)[0];

     label1:
        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getTypeName", $r2);

     label2:
        $r5 = newarray (java.lang.Object)[0];

     label3:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r5);

     label4:
        $r7 = (java.lang.String) $r6;

        return $r7;

     label5:
        r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r8);

        throw $r9;

     label6:
        r10 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r10);

        throw $r9;

     label7:
        r11 := @caughtexception;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>("Type.getTypeName should be available in Java 8");

        throw $r12;

        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label6;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label3 to label4 with label5;
    }

    java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)
    {
        com.google.common.reflect.Types$JavaVersion $r2;
        com.google.common.reflect.Types$JavaVersion$3 r0;
        java.lang.reflect.Type $r1;

        r0 := @this: com.google.common.reflect.Types$JavaVersion$3;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 = <com.google.common.reflect.Types$JavaVersion$3: com.google.common.reflect.Types$JavaVersion JAVA7>;

        $r1 = virtualinvoke $r2.<com.google.common.reflect.Types$JavaVersion: java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)>($r1);

        return $r1;
    }
}
