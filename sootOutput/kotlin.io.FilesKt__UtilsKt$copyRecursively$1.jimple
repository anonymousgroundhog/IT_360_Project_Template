final class kotlin.io.FilesKt__UtilsKt$copyRecursively$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function2
{
    public static final kotlin.io.FilesKt__UtilsKt$copyRecursively$1 INSTANCE;

    static void <clinit>()
    {
        kotlin.io.FilesKt__UtilsKt$copyRecursively$1 $r0;

        $r0 = new kotlin.io.FilesKt__UtilsKt$copyRecursively$1;

        specialinvoke $r0.<kotlin.io.FilesKt__UtilsKt$copyRecursively$1: void <init>()>();

        <kotlin.io.FilesKt__UtilsKt$copyRecursively$1: kotlin.io.FilesKt__UtilsKt$copyRecursively$1 INSTANCE> = $r0;

        return;
    }

    void <init>()
    {
        kotlin.io.FilesKt__UtilsKt$copyRecursively$1 r0;

        r0 := @this: kotlin.io.FilesKt__UtilsKt$copyRecursively$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        java.lang.Void $r3;
        kotlin.io.FilesKt__UtilsKt$copyRecursively$1 r0;
        java.lang.Object $r1, $r2;
        java.io.IOException $r5;
        java.io.File $r4;

        r0 := @this: kotlin.io.FilesKt__UtilsKt$copyRecursively$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r4 = (java.io.File) $r1;

        $r5 = (java.io.IOException) $r2;

        $r3 = virtualinvoke r0.<kotlin.io.FilesKt__UtilsKt$copyRecursively$1: java.lang.Void invoke(java.io.File,java.io.IOException)>($r4, $r5);

        return $r3;
    }

    public final java.lang.Void invoke(java.io.File, java.io.IOException)
    {
        java.io.IOException $r1;
        kotlin.io.FilesKt__UtilsKt$copyRecursively$1 r0;
        java.io.File $r2;

        r0 := @this: kotlin.io.FilesKt__UtilsKt$copyRecursively$1;

        $r2 := @parameter0: java.io.File;

        $r1 := @parameter1: java.io.IOException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<anonymous parameter 0>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "exception");

        throw $r1;
    }
}
