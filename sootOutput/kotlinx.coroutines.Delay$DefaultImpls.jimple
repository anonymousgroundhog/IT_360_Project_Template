public final class kotlinx.coroutines.Delay$DefaultImpls extends java.lang.Object
{

    public static java.lang.Object delay(kotlinx.coroutines.Delay, long, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r1, $r2;
        kotlinx.coroutines.Delay $r0;
        long $l0;
        kotlinx.coroutines.CancellableContinuationImpl $r7;
        kotlin.Unit r6;
        byte $b1;
        kotlinx.coroutines.CancellableContinuation r3;
        int $i2;
        java.lang.Object $r4, $r5;

        $r0 := @parameter0: kotlinx.coroutines.Delay;

        $l0 := @parameter1: long;

        $r1 := @parameter2: kotlin.coroutines.Continuation;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 > 0 goto label1;

        r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r6;

     label1:
        $r7 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r1);

        specialinvoke $r7.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r2, 1);

        virtualinvoke $r7.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r3 = (kotlinx.coroutines.CancellableContinuation) $r7;

        interfaceinvoke $r0.<kotlinx.coroutines.Delay: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)>($l0, r3);

        $r4 = virtualinvoke $r7.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label2;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label2:
        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label3;

        return $r4;

     label3:
        r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r6;
    }

    public static kotlinx.coroutines.DisposableHandle invokeOnTimeout(kotlinx.coroutines.Delay, long, java.lang.Runnable, kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.DisposableHandle $r3;
        kotlinx.coroutines.Delay $r0;
        long $l0;
        java.lang.Runnable $r1;
        kotlin.coroutines.CoroutineContext $r2;

        $r0 := @parameter0: kotlinx.coroutines.Delay;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.lang.Runnable;

        $r2 := @parameter3: kotlin.coroutines.CoroutineContext;

        $r0 = staticinvoke <kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay getDefaultDelay()>();

        $r3 = interfaceinvoke $r0.<kotlinx.coroutines.Delay: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)>($l0, $r1, $r2);

        return $r3;
    }
}
