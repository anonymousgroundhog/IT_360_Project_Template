abstract class com.google.common.graph.Traverser$Traversal extends java.lang.Object
{
    final com.google.common.graph.SuccessorsFunction successorFunction;

    void <init>(com.google.common.graph.SuccessorsFunction)
    {
        com.google.common.graph.Traverser$Traversal r0;
        com.google.common.graph.SuccessorsFunction r1;

        r0 := @this: com.google.common.graph.Traverser$Traversal;

        r1 := @parameter0: com.google.common.graph.SuccessorsFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.graph.Traverser$Traversal: com.google.common.graph.SuccessorsFunction successorFunction> = r1;

        return;
    }

    static com.google.common.graph.Traverser$Traversal inGraph(com.google.common.graph.SuccessorsFunction)
    {
        java.util.HashSet r1;
        com.google.common.graph.SuccessorsFunction r0;
        com.google.common.graph.Traverser$Traversal$1 $r2;

        r0 := @parameter0: com.google.common.graph.SuccessorsFunction;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        $r2 = new com.google.common.graph.Traverser$Traversal$1;

        specialinvoke $r2.<com.google.common.graph.Traverser$Traversal$1: void <init>(com.google.common.graph.SuccessorsFunction,java.util.Set)>(r0, r1);

        return $r2;
    }

    static com.google.common.graph.Traverser$Traversal inTree(com.google.common.graph.SuccessorsFunction)
    {
        com.google.common.graph.SuccessorsFunction r0;
        com.google.common.graph.Traverser$Traversal$2 $r1;

        r0 := @parameter0: com.google.common.graph.SuccessorsFunction;

        $r1 = new com.google.common.graph.Traverser$Traversal$2;

        specialinvoke $r1.<com.google.common.graph.Traverser$Traversal$2: void <init>(com.google.common.graph.SuccessorsFunction)>(r0);

        return $r1;
    }

    private java.util.Iterator topDown(java.util.Iterator, com.google.common.graph.Traverser$InsertionOrder)
    {
        java.util.Iterator r1;
        com.google.common.graph.Traverser$InsertionOrder $r2;
        com.google.common.graph.Traverser$Traversal r0;
        java.util.ArrayDeque r3;
        com.google.common.graph.Traverser$Traversal$3 $r4;

        r0 := @this: com.google.common.graph.Traverser$Traversal;

        r1 := @parameter0: java.util.Iterator;

        $r2 := @parameter1: com.google.common.graph.Traverser$InsertionOrder;

        r3 = new java.util.ArrayDeque;

        specialinvoke r3.<java.util.ArrayDeque: void <init>()>();

        interfaceinvoke r3.<java.util.Deque: boolean add(java.lang.Object)>(r1);

        $r4 = new com.google.common.graph.Traverser$Traversal$3;

        specialinvoke $r4.<com.google.common.graph.Traverser$Traversal$3: void <init>(com.google.common.graph.Traverser$Traversal,java.util.Deque,com.google.common.graph.Traverser$InsertionOrder)>(r0, r3, $r2);

        return $r4;
    }

    final java.util.Iterator breadthFirst(java.util.Iterator)
    {
        com.google.common.graph.Traverser$Traversal r0;
        java.util.Iterator r1;
        com.google.common.graph.Traverser$InsertionOrder $r2;

        r0 := @this: com.google.common.graph.Traverser$Traversal;

        r1 := @parameter0: java.util.Iterator;

        $r2 = <com.google.common.graph.Traverser$InsertionOrder: com.google.common.graph.Traverser$InsertionOrder BACK>;

        r1 = specialinvoke r0.<com.google.common.graph.Traverser$Traversal: java.util.Iterator topDown(java.util.Iterator,com.google.common.graph.Traverser$InsertionOrder)>(r1, $r2);

        return r1;
    }

    final java.util.Iterator postOrder(java.util.Iterator)
    {
        java.util.Iterator r1;
        com.google.common.graph.Traverser$Traversal r0;
        java.util.ArrayDeque r2, r3;
        com.google.common.graph.Traverser$Traversal$4 $r4;

        r0 := @this: com.google.common.graph.Traverser$Traversal;

        r1 := @parameter0: java.util.Iterator;

        r2 = new java.util.ArrayDeque;

        specialinvoke r2.<java.util.ArrayDeque: void <init>()>();

        r3 = new java.util.ArrayDeque;

        specialinvoke r3.<java.util.ArrayDeque: void <init>()>();

        interfaceinvoke r3.<java.util.Deque: boolean add(java.lang.Object)>(r1);

        $r4 = new com.google.common.graph.Traverser$Traversal$4;

        specialinvoke $r4.<com.google.common.graph.Traverser$Traversal$4: void <init>(com.google.common.graph.Traverser$Traversal,java.util.Deque,java.util.Deque)>(r0, r3, r2);

        return $r4;
    }

    final java.util.Iterator preOrder(java.util.Iterator)
    {
        com.google.common.graph.Traverser$Traversal r0;
        java.util.Iterator r1;
        com.google.common.graph.Traverser$InsertionOrder $r2;

        r0 := @this: com.google.common.graph.Traverser$Traversal;

        r1 := @parameter0: java.util.Iterator;

        $r2 = <com.google.common.graph.Traverser$InsertionOrder: com.google.common.graph.Traverser$InsertionOrder FRONT>;

        r1 = specialinvoke r0.<com.google.common.graph.Traverser$Traversal: java.util.Iterator topDown(java.util.Iterator,com.google.common.graph.Traverser$InsertionOrder)>(r1, $r2);

        return r1;
    }

    abstract java.lang.Object visitNext(java.util.Deque);
}
