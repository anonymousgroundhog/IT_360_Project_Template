public final class kotlinx.coroutines.internal.CoroutineExceptionHandlerImpl_commonKt extends java.lang.Object
{

    public static final void handleUncaughtCoroutineException(kotlin.coroutines.CoroutineContext, java.lang.Throwable)
    {
        java.lang.Throwable $r1, r2, r9;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        kotlin.coroutines.CoroutineContext $r0;
        kotlinx.coroutines.internal.DiagnosticCoroutineContextException r8;
        kotlinx.coroutines.CoroutineExceptionHandler r6;
        java.lang.Object $r5;
        kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed r7;
        boolean $z0;

        $r0 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r1 := @parameter1: java.lang.Throwable;

        $r3 = staticinvoke <kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: java.util.Collection getPlatformExceptionHandlers()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (kotlinx.coroutines.CoroutineExceptionHandler) $r5;

     label2:
        interfaceinvoke r6.<kotlinx.coroutines.CoroutineExceptionHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)>($r0, $r1);

     label3:
        goto label1;

     label4:
        r2 := @caughtexception;

        r2 = staticinvoke <kotlinx.coroutines.CoroutineExceptionHandlerKt: java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable)>($r1, r2);

        staticinvoke <kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: void propagateExceptionFinalResort(java.lang.Throwable)>(r2);

        goto label1;

     label5:
        r7 := @caughtexception;

        return;

     label6:
        r8 = new kotlinx.coroutines.internal.DiagnosticCoroutineContextException;

        specialinvoke r8.<kotlinx.coroutines.internal.DiagnosticCoroutineContextException: void <init>(kotlin.coroutines.CoroutineContext)>($r0);

        r2 = (java.lang.Throwable) r8;

        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r1, r2);

     label7:
        goto label9;

     label8:
        r9 := @caughtexception;

     label9:
        staticinvoke <kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: void propagateExceptionFinalResort(java.lang.Throwable)>($r1);

        return;

        catch kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
}
