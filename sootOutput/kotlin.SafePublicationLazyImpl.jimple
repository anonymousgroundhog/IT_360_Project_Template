final class kotlin.SafePublicationLazyImpl extends java.lang.Object implements kotlin.Lazy, java.io.Serializable
{
    public static final kotlin.SafePublicationLazyImpl$Companion Companion;
    private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater;
    private volatile java.lang.Object _value;
    private final java.lang.Object 'final';
    private volatile kotlin.jvm.functions.Function0 initializer;

    static void <clinit>()
    {
        kotlin.SafePublicationLazyImpl$Companion $r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r0;

        $r1 = new kotlin.SafePublicationLazyImpl$Companion;

        specialinvoke $r1.<kotlin.SafePublicationLazyImpl$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.SafePublicationLazyImpl: kotlin.SafePublicationLazyImpl$Companion Companion> = $r1;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lkotlin/SafePublicationLazyImpl;", class "Ljava/lang/Object;", "_value");

        <kotlin.SafePublicationLazyImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater> = $r0;

        return;
    }

    public void <init>(kotlin.jvm.functions.Function0)
    {
        kotlin.UNINITIALIZED_VALUE $r2;
        kotlin.SafePublicationLazyImpl r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: kotlin.SafePublicationLazyImpl;

        $r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "initializer");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.SafePublicationLazyImpl: kotlin.jvm.functions.Function0 initializer> = $r1;

        $r2 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        r0.<kotlin.SafePublicationLazyImpl: java.lang.Object _value> = $r2;

        $r2 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        r0.<kotlin.SafePublicationLazyImpl: java.lang.Object 'final'> = $r2;

        return;
    }

    private final java.lang.Object writeReplace()
    {
        java.lang.Object $r2;
        kotlin.InitializedLazyImpl $r1;
        kotlin.SafePublicationLazyImpl r0;

        r0 := @this: kotlin.SafePublicationLazyImpl;

        $r1 = new kotlin.InitializedLazyImpl;

        $r2 = virtualinvoke r0.<kotlin.SafePublicationLazyImpl: java.lang.Object getValue()>();

        specialinvoke $r1.<kotlin.InitializedLazyImpl: void <init>(java.lang.Object)>($r2);

        return $r1;
    }

    public java.lang.Object getValue()
    {
        kotlin.SafePublicationLazyImpl r0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        java.lang.Object r1;
        kotlin.UNINITIALIZED_VALUE $r2;
        kotlin.jvm.functions.Function0 r3;
        boolean $z0;

        r0 := @this: kotlin.SafePublicationLazyImpl;

        r1 = r0.<kotlin.SafePublicationLazyImpl: java.lang.Object _value>;

        $r2 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        if r1 == $r2 goto label1;

        return r1;

     label1:
        r3 = r0.<kotlin.SafePublicationLazyImpl: kotlin.jvm.functions.Function0 initializer>;

        if r3 == null goto label2;

        r1 = interfaceinvoke r3.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r4 = <kotlin.SafePublicationLazyImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater>;

        $r2 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r0, $r2, r1);

        if $z0 == 0 goto label2;

        r0.<kotlin.SafePublicationLazyImpl: kotlin.jvm.functions.Function0 initializer> = null;

        return r1;

     label2:
        r1 = r0.<kotlin.SafePublicationLazyImpl: java.lang.Object _value>;

        return r1;
    }

    public boolean isInitialized()
    {
        java.lang.Object $r2;
        kotlin.UNINITIALIZED_VALUE $r1;
        kotlin.SafePublicationLazyImpl r0;

        r0 := @this: kotlin.SafePublicationLazyImpl;

        $r2 = r0.<kotlin.SafePublicationLazyImpl: java.lang.Object _value>;

        $r1 = <kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        kotlin.SafePublicationLazyImpl r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: kotlin.SafePublicationLazyImpl;

        $z0 = virtualinvoke r0.<kotlin.SafePublicationLazyImpl: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<kotlin.SafePublicationLazyImpl: java.lang.Object getValue()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        return $r2;

     label1:
        return "Lazy value not initialized yet.";
    }
}
