public final enum class org.checkerframework.framework.qual.TypeUseLocation extends java.lang.Enum
{
    private static final org.checkerframework.framework.qual.TypeUseLocation[] $VALUES;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation ALL;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation CONSTRUCTOR_RESULT;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation EXCEPTION_PARAMETER;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation EXPLICIT_LOWER_BOUND;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation EXPLICIT_UPPER_BOUND;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation FIELD;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation IMPLICIT_LOWER_BOUND;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation IMPLICIT_UPPER_BOUND;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation LOCAL_VARIABLE;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation LOWER_BOUND;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation OTHERWISE;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation PARAMETER;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation RECEIVER;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation RESOURCE_VARIABLE;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation RETURN;
    public static final enum org.checkerframework.framework.qual.TypeUseLocation UPPER_BOUND;

    static void <clinit>()
    {
        org.checkerframework.framework.qual.TypeUseLocation $r0;
        org.checkerframework.framework.qual.TypeUseLocation[] $r1;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("FIELD", 0);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation FIELD> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("LOCAL_VARIABLE", 1);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation LOCAL_VARIABLE> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("RESOURCE_VARIABLE", 2);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation RESOURCE_VARIABLE> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("EXCEPTION_PARAMETER", 3);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation EXCEPTION_PARAMETER> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("RECEIVER", 4);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation RECEIVER> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("PARAMETER", 5);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation PARAMETER> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("RETURN", 6);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation RETURN> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("CONSTRUCTOR_RESULT", 7);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation CONSTRUCTOR_RESULT> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("LOWER_BOUND", 8);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation LOWER_BOUND> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("EXPLICIT_LOWER_BOUND", 9);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation EXPLICIT_LOWER_BOUND> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("IMPLICIT_LOWER_BOUND", 10);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation IMPLICIT_LOWER_BOUND> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("UPPER_BOUND", 11);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation UPPER_BOUND> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("EXPLICIT_UPPER_BOUND", 12);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation EXPLICIT_UPPER_BOUND> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("IMPLICIT_UPPER_BOUND", 13);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation IMPLICIT_UPPER_BOUND> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("OTHERWISE", 14);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation OTHERWISE> = $r0;

        $r0 = new org.checkerframework.framework.qual.TypeUseLocation;

        specialinvoke $r0.<org.checkerframework.framework.qual.TypeUseLocation: void <init>(java.lang.String,int)>("ALL", 15);

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation ALL> = $r0;

        $r1 = newarray (org.checkerframework.framework.qual.TypeUseLocation)[16];

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation FIELD>;

        $r1[0] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation LOCAL_VARIABLE>;

        $r1[1] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation RESOURCE_VARIABLE>;

        $r1[2] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation EXCEPTION_PARAMETER>;

        $r1[3] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation RECEIVER>;

        $r1[4] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation PARAMETER>;

        $r1[5] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation RETURN>;

        $r1[6] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation CONSTRUCTOR_RESULT>;

        $r1[7] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation LOWER_BOUND>;

        $r1[8] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation EXPLICIT_LOWER_BOUND>;

        $r1[9] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation IMPLICIT_LOWER_BOUND>;

        $r1[10] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation UPPER_BOUND>;

        $r1[11] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation EXPLICIT_UPPER_BOUND>;

        $r1[12] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation IMPLICIT_UPPER_BOUND>;

        $r1[13] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation OTHERWISE>;

        $r1[14] = $r0;

        $r0 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation ALL>;

        $r1[15] = $r0;

        <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        org.checkerframework.framework.qual.TypeUseLocation r0;

        r0 := @this: org.checkerframework.framework.qual.TypeUseLocation;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static org.checkerframework.framework.qual.TypeUseLocation valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.checkerframework.framework.qual.TypeUseLocation $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/checkerframework/framework/qual/TypeUseLocation;", $r0);

        $r2 = (org.checkerframework.framework.qual.TypeUseLocation) $r1;

        return $r2;
    }

    public static org.checkerframework.framework.qual.TypeUseLocation[] values()
    {
        java.lang.Object $r0;
        org.checkerframework.framework.qual.TypeUseLocation[] $r1;

        $r1 = <org.checkerframework.framework.qual.TypeUseLocation: org.checkerframework.framework.qual.TypeUseLocation[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.checkerframework.framework.qual.TypeUseLocation[]) $r0;

        return $r1;
    }
}
