final class com.google.common.collect.Hashing extends java.lang.Object
{
    private static final long C1;
    private static final long C2;
    private static final int MAX_TABLE_SIZE;

    private void <init>()
    {
        com.google.common.collect.Hashing r0;

        r0 := @this: com.google.common.collect.Hashing;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int closedTableSize(int, double)
    {
        int $i0, $i1, $i2;
        double $d0, $d1;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 2);

        $i1 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i0);

        $d1 = (double) $i1;

        $d0 = $d1 * $d0;

        $i2 = (int) $d0;

        if $i0 <= $i2 goto label2;

        $i0 = $i1 << 1;

        if $i0 <= 0 goto label1;

        return $i0;

     label1:
        return 1073741824;

     label2:
        return $i1;
    }

    static boolean needsResizing(int, int, double)
    {
        byte $b2;
        int $i0, $i1;
        double $d0, $d1, $d2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $d0 := @parameter2: double;

        $d1 = (double) $i0;

        $d2 = (double) $i1;

        $d0 = $d2 * $d0;

        $b2 = $d1 cmpl $d0;

        $i0 = (int) $b2;

        if $i0 <= 0 goto label1;

        if $i1 >= 1073741824 goto label1;

        return 1;

     label1:
        return 0;
    }

    static int smear(int)
    {
        int $i0;
        long $l1;

        $i0 := @parameter0: int;

        $l1 = (long) $i0;

        $l1 = $l1 * -862048943L;

        $i0 = (int) $l1;

        $i0 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>($i0, 15);

        $l1 = (long) $i0;

        $l1 = $l1 * 461845907L;

        $i0 = (int) $l1;

        return $i0;
    }

    static int smearedHash(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.Object: int hashCode()>();

     label2:
        $i0 = staticinvoke <com.google.common.collect.Hashing: int smear(int)>($i0);

        return $i0;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.Hashing: int MAX_TABLE_SIZE> = 1073741824;

        <com.google.common.collect.Hashing: long C2> = 461845907L;

        <com.google.common.collect.Hashing: long C1> = -862048943L;

        return;
    }
}
