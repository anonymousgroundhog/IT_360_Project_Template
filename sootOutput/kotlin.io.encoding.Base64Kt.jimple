public final class kotlin.io.encoding.Base64Kt extends java.lang.Object
{
    private static final int[] base64DecodeMap;
    private static final byte[] base64EncodeMap;
    private static final int[] base64UrlDecodeMap;
    private static final byte[] base64UrlEncodeMap;

    static void <clinit>()
    {
        byte[] $r0;
        byte b3;
        int[] $r1;
        int i0, $i1, $i2, $i4;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 43;

        $r0[63] = 47;

        <kotlin.io.encoding.Base64Kt: byte[] base64EncodeMap> = $r0;

        $r1 = newarray (int)[256];

        staticinvoke <kotlin.collections.ArraysKt: void fill$default(int[],int,int,int,int,java.lang.Object)>($r1, -1, 0, 0, 6, null);

        $r1[61] = -2;

        $r0 = <kotlin.io.encoding.Base64Kt: byte[] base64EncodeMap>;

        i0 = 0;

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        b3 = $r0[$i2];

        $i4 = (int) b3;

        $r1[$i4] = i0;

        $i2 = $i2 + 1;

        i0 = i0 + 1;

        goto label1;

     label2:
        <kotlin.io.encoding.Base64Kt: int[] base64DecodeMap> = $r1;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 45;

        $r0[63] = 95;

        <kotlin.io.encoding.Base64Kt: byte[] base64UrlEncodeMap> = $r0;

        $r1 = newarray (int)[256];

        staticinvoke <kotlin.collections.ArraysKt: void fill$default(int[],int,int,int,int,java.lang.Object)>($r1, -1, 0, 0, 6, null);

        $r1[61] = -2;

        $r0 = <kotlin.io.encoding.Base64Kt: byte[] base64UrlEncodeMap>;

        i0 = 0;

        $i1 = lengthof $r0;

        $i2 = 0;

     label3:
        if $i2 >= $i1 goto label4;

        b3 = $r0[$i2];

        $i4 = (int) b3;

        $r1[$i4] = i0;

        $i2 = $i2 + 1;

        i0 = i0 + 1;

        goto label3;

     label4:
        <kotlin.io.encoding.Base64Kt: int[] base64UrlDecodeMap> = $r1;

        return;
    }

    public static final int[] access$getBase64DecodeMap$p()
    {
        int[] r0;

        r0 = <kotlin.io.encoding.Base64Kt: int[] base64DecodeMap>;

        return r0;
    }

    public static final byte[] access$getBase64EncodeMap$p()
    {
        byte[] r0;

        r0 = <kotlin.io.encoding.Base64Kt: byte[] base64EncodeMap>;

        return r0;
    }

    public static final int[] access$getBase64UrlDecodeMap$p()
    {
        int[] r0;

        r0 = <kotlin.io.encoding.Base64Kt: int[] base64UrlDecodeMap>;

        return r0;
    }

    public static final byte[] access$getBase64UrlEncodeMap$p()
    {
        byte[] r0;

        r0 = <kotlin.io.encoding.Base64Kt: byte[] base64UrlEncodeMap>;

        return r0;
    }

    private static void getBase64DecodeMap$annotations()
    {
        return;
    }

    private static void getBase64EncodeMap$annotations()
    {
        return;
    }

    private static void getBase64UrlDecodeMap$annotations()
    {
        return;
    }

    private static void getBase64UrlEncodeMap$annotations()
    {
        return;
    }

    public static final boolean isInMimeAlphabet(int)
    {
        int[] $r0;
        int $i0, $i1;
        boolean $z0;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r0 = <kotlin.io.encoding.Base64Kt: int[] base64DecodeMap>;

        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = <kotlin.io.encoding.Base64Kt: int[] base64DecodeMap>;

        $i0 = $r0[$i0];

        if $i0 == -1 goto label3;

        return 1;

     label3:
        return 0;
    }
}
