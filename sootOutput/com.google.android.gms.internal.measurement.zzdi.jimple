final class com.google.android.gms.internal.measurement.zzdi extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    private final java.util.concurrent.ThreadFactory zza;

    void <init>(com.google.android.gms.internal.measurement.zzee)
    {
        java.util.concurrent.ThreadFactory $r1;
        com.google.android.gms.internal.measurement.zzee $r2;
        com.google.android.gms.internal.measurement.zzdi r0;

        r0 := @this: com.google.android.gms.internal.measurement.zzdi;

        $r2 := @parameter0: com.google.android.gms.internal.measurement.zzee;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>();

        r0.<com.google.android.gms.internal.measurement.zzdi: java.util.concurrent.ThreadFactory zza> = $r1;

        return;
    }

    public final java.lang.Thread newThread(java.lang.Runnable)
    {
        java.lang.Thread $r1;
        java.util.concurrent.ThreadFactory $r3;
        java.lang.Runnable $r2;
        com.google.android.gms.internal.measurement.zzdi r0;

        r0 := @this: com.google.android.gms.internal.measurement.zzdi;

        $r2 := @parameter0: java.lang.Runnable;

        $r3 = r0.<com.google.android.gms.internal.measurement.zzdi: java.util.concurrent.ThreadFactory zza>;

        $r1 = interfaceinvoke $r3.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>($r2);

        virtualinvoke $r1.<java.lang.Thread: void setName(java.lang.String)>("ScionFrontendApi");

        return $r1;
    }
}
