public final class androidx.work.ArrayCreatingInputMerger extends androidx.work.InputMerger
{

    public void <init>()
    {
        androidx.work.ArrayCreatingInputMerger r0;

        r0 := @this: androidx.work.ArrayCreatingInputMerger;

        specialinvoke r0.<androidx.work.InputMerger: void <init>()>();

        return;
    }

    private java.lang.Object concatenateArrayAndNonArray(java.lang.Object, java.lang.Object)
    {
        androidx.work.ArrayCreatingInputMerger r0;
        int $i0, $i1;
        java.lang.Object $r1, $r2, $r4;
        java.lang.Class $r3;

        r0 := @this: androidx.work.ArrayCreatingInputMerger;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $i1 = $i0 + 1;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, $i1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, $i0);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r4, $i0, $r2);

        return $r4;
    }

    private java.lang.Object concatenateArrays(java.lang.Object, java.lang.Object)
    {
        androidx.work.ArrayCreatingInputMerger r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r2, $r4;
        java.lang.Class $r3;

        r0 := @this: androidx.work.ArrayCreatingInputMerger;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r1);

        $i1 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $i2 = $i0 + $i1;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, $i2);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, $i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, $i0, $i1);

        return $r4;
    }

    private java.lang.Object concatenateNonArrays(java.lang.Object, java.lang.Object)
    {
        androidx.work.ArrayCreatingInputMerger r0;
        java.lang.Object $r1, $r2, $r4;
        java.lang.Class $r3;

        r0 := @this: androidx.work.ArrayCreatingInputMerger;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, 2);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r4, 0, $r1);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r4, 1, $r2);

        return $r4;
    }

    private java.lang.Object createArrayFor(java.lang.Object)
    {
        androidx.work.ArrayCreatingInputMerger r0;
        java.lang.Object $r1, $r3;
        java.lang.Class $r2;

        r0 := @this: androidx.work.ArrayCreatingInputMerger;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, 1);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r3, 0, $r1);

        return $r3;
    }

    public androidx.work.Data merge(java.util.List)
    {
        java.util.HashMap r3;
        java.util.Map $r7;
        java.lang.String r11;
        androidx.work.Data r6;
        boolean $z0;
        java.util.Map$Entry r10;
        java.util.Iterator $r4, $r9;
        java.util.Set $r8;
        java.lang.IllegalArgumentException $r16;
        java.util.List r1;
        androidx.work.ArrayCreatingInputMerger r0;
        androidx.work.Data$Builder r2;
        java.lang.Object $r5, $r13;
        java.lang.Class $r12, $r14, $r15;

        r0 := @this: androidx.work.ArrayCreatingInputMerger;

        r1 := @parameter0: java.util.List;

        r2 = new androidx.work.Data$Builder;

        specialinvoke r2.<androidx.work.Data$Builder: void <init>()>();

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.work.Data) $r5;

        $r7 = virtualinvoke r6.<androidx.work.Data: java.util.Map getKeyValueMap()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label01;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        r11 = (java.lang.String) $r5;

        $r5 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        if $r13 != null goto label04;

        $z0 = virtualinvoke $r12.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label03;

        goto label08;

     label03:
        $r5 = specialinvoke r0.<androidx.work.ArrayCreatingInputMerger: java.lang.Object createArrayFor(java.lang.Object)>($r5);

        goto label08;

     label04:
        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label06;

        $z0 = virtualinvoke $r14.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label05;

        $r5 = specialinvoke r0.<androidx.work.ArrayCreatingInputMerger: java.lang.Object concatenateArrays(java.lang.Object,java.lang.Object)>($r13, $r5);

        goto label08;

     label05:
        $r5 = specialinvoke r0.<androidx.work.ArrayCreatingInputMerger: java.lang.Object concatenateNonArrays(java.lang.Object,java.lang.Object)>($r13, $r5);

        goto label08;

     label06:
        $z0 = virtualinvoke $r14.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label07;

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.Class getComponentType()>();

        $z0 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label07;

        $r5 = specialinvoke r0.<androidx.work.ArrayCreatingInputMerger: java.lang.Object concatenateArrayAndNonArray(java.lang.Object,java.lang.Object)>($r13, $r5);

        goto label08;

     label07:
        $z0 = virtualinvoke $r12.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label09;

        $r12 = virtualinvoke $r12.<java.lang.Class: java.lang.Class getComponentType()>();

        $z0 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label09;

        $r5 = specialinvoke r0.<androidx.work.ArrayCreatingInputMerger: java.lang.Object concatenateArrayAndNonArray(java.lang.Object,java.lang.Object)>($r5, $r13);

     label08:
        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r5);

        goto label02;

     label09:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r16;

     label10:
        virtualinvoke r2.<androidx.work.Data$Builder: androidx.work.Data$Builder putAll(java.util.Map)>(r3);

        r6 = virtualinvoke r2.<androidx.work.Data$Builder: androidx.work.Data build()>();

        return r6;
    }
}
