public final class kotlinx.coroutines.selects.SelectUnbiasedKt extends java.lang.Object
{

    public static final java.lang.Object selectUnbiased(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.selects.UnbiasedSelectImplementation $r2;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object $r4;
        kotlin.coroutines.CoroutineContext $r3;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = new kotlinx.coroutines.selects.UnbiasedSelectImplementation;

        $r3 = interfaceinvoke $r1.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        specialinvoke $r2.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: void <init>(kotlin.coroutines.CoroutineContext)>($r3);

        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r2.<kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.lang.Object doSelect(kotlin.coroutines.Continuation)>($r1);

        return $r4;
    }

    private static final java.lang.Object selectUnbiased$$forInline(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        kotlinx.coroutines.selects.UnbiasedSelectImplementation $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.NullPointerException r3;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = new kotlinx.coroutines.selects.UnbiasedSelectImplementation;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r3 = new java.lang.NullPointerException;

        specialinvoke r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: interfaceinvoke $u0#4.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r3;
    }
}
