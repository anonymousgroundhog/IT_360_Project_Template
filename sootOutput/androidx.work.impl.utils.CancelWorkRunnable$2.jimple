class androidx.work.impl.utils.CancelWorkRunnable$2 extends androidx.work.impl.utils.CancelWorkRunnable
{
    final java.lang.String val$tag;
    final androidx.work.impl.WorkManagerImpl val$workManagerImpl;

    void <init>(androidx.work.impl.WorkManagerImpl, java.lang.String)
    {
        androidx.work.impl.WorkManagerImpl $r1;
        androidx.work.impl.utils.CancelWorkRunnable$2 r0;
        java.lang.String $r2;

        r0 := @this: androidx.work.impl.utils.CancelWorkRunnable$2;

        $r1 := @parameter0: androidx.work.impl.WorkManagerImpl;

        $r2 := @parameter1: java.lang.String;

        r0.<androidx.work.impl.utils.CancelWorkRunnable$2: androidx.work.impl.WorkManagerImpl val$workManagerImpl> = $r1;

        r0.<androidx.work.impl.utils.CancelWorkRunnable$2: java.lang.String val$tag> = $r2;

        specialinvoke r0.<androidx.work.impl.utils.CancelWorkRunnable: void <init>()>();

        return;
    }

    void runInternal()
    {
        java.lang.Throwable r8;
        java.util.Iterator $r6;
        androidx.work.impl.model.WorkSpecDao $r3;
        androidx.work.impl.utils.CancelWorkRunnable$2 r0;
        java.util.List $r5;
        androidx.work.impl.WorkDatabase $r2;
        androidx.work.impl.WorkManagerImpl $r1;
        java.lang.Object $r7;
        java.lang.String r4;
        boolean $z0;

        r0 := @this: androidx.work.impl.utils.CancelWorkRunnable$2;

        $r1 = r0.<androidx.work.impl.utils.CancelWorkRunnable$2: androidx.work.impl.WorkManagerImpl val$workManagerImpl>;

        $r2 = virtualinvoke $r1.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()>();

        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label1:
        $r3 = virtualinvoke $r2.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()>();

        r4 = r0.<androidx.work.impl.utils.CancelWorkRunnable$2: java.lang.String val$tag>;

        $r5 = interfaceinvoke $r3.<androidx.work.impl.model.WorkSpecDao: java.util.List getUnfinishedWorkWithTag(java.lang.String)>(r4);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label6;

     label4:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r7;

        $r1 = r0.<androidx.work.impl.utils.CancelWorkRunnable$2: androidx.work.impl.WorkManagerImpl val$workManagerImpl>;

        virtualinvoke r0.<androidx.work.impl.utils.CancelWorkRunnable$2: void cancel(androidx.work.impl.WorkManagerImpl,java.lang.String)>($r1, r4);

     label5:
        goto label2;

     label6:
        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label7:
        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        $r1 = r0.<androidx.work.impl.utils.CancelWorkRunnable$2: androidx.work.impl.WorkManagerImpl val$workManagerImpl>;

        virtualinvoke r0.<androidx.work.impl.utils.CancelWorkRunnable$2: void reschedulePendingWorkers(androidx.work.impl.WorkManagerImpl)>($r1);

        return;

     label8:
        r8 := @caughtexception;

        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        throw r8;

        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
}
