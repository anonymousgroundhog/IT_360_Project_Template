public final class kotlinx.coroutines.channels.ChannelIterator$DefaultImpls extends java.lang.Object
{

    public static java.lang.Object next(kotlinx.coroutines.channels.ChannelIterator, kotlin.coroutines.Continuation)
    {
        java.lang.IllegalStateException $r5;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.channels.ChannelIterator$next0$1 $r2;
        kotlinx.coroutines.channels.ChannelIterator $r0;
        kotlinx.coroutines.channels.ClosedReceiveChannelException $r8;
        int $i0;
        java.lang.Boolean $r7;
        java.lang.Object $r3, $r4, $r6;
        boolean $z0;

        $r0 := @parameter0: kotlinx.coroutines.channels.ChannelIterator;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof kotlinx.coroutines.channels.ChannelIterator$next0$1;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.channels.ChannelIterator$next0$1) $r1;

        $i0 = $r2.<kotlinx.coroutines.channels.ChannelIterator$next0$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r2.<kotlinx.coroutines.channels.ChannelIterator$next0$1: int label>;

        $i0 = $i0 - -2147483648;

        $r2.<kotlinx.coroutines.channels.ChannelIterator$next0$1: int label> = $i0;

        goto label2;

     label1:
        $r2 = new kotlinx.coroutines.channels.ChannelIterator$next0$1;

        specialinvoke $r2.<kotlinx.coroutines.channels.ChannelIterator$next0$1: void <init>(kotlin.coroutines.Continuation)>($r1);

     label2:
        $r3 = $r2.<kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r2.<kotlinx.coroutines.channels.ChannelIterator$next0$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            default: goto label3;
        };

     label3:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r5;

     label4:
        $r4 = $r2.<kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object L$0>;

        $r0 = (kotlinx.coroutines.channels.ChannelIterator) $r4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        goto label6;

     label5:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r2.<kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object L$0> = $r0;

        $r2.<kotlinx.coroutines.channels.ChannelIterator$next0$1: int label> = 1;

        $r6 = interfaceinvoke $r0.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>($r2);

        $r3 = $r6;

        if $r6 != $r4 goto label6;

        return $r4;

     label6:
        $r7 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label7;

        $r4 = interfaceinvoke $r0.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

        return $r4;

     label7:
        $r8 = new kotlinx.coroutines.channels.ClosedReceiveChannelException;

        specialinvoke $r8.<kotlinx.coroutines.channels.ClosedReceiveChannelException: void <init>(java.lang.String)>("Channel was closed");

        throw $r8;
    }
}
