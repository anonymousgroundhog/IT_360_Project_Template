public final class kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1 extends java.lang.Object implements kotlinx.coroutines.flow.Flow
{
    final java.lang.Object $initial$inlined;
    final kotlin.jvm.functions.Function3 $operation$inlined;
    final kotlinx.coroutines.flow.Flow $this_runningFold$inlined;

    public void <init>(java.lang.Object, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1 r0;
        kotlin.jvm.functions.Function3 $r3;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter2: kotlin.jvm.functions.Function3;

        r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: java.lang.Object $initial$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_runningFold$inlined> = $r2;

        r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $operation$inlined> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        java.lang.IllegalStateException $r7;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1 $r13;
        kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1 r0, r11;
        int $i0;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef r9;
        kotlin.jvm.functions.Function3 $r14;
        kotlinx.coroutines.flow.Flow $r12;
        kotlin.Unit r15;
        kotlinx.coroutines.flow.FlowCollector $r1, $r10;
        java.lang.Object $r5, $r6, r8;
        kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1 $r3, $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1;

        if $z0 == 0 goto label1;

        $r3 = (kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1) $r2;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: int label> = $i0;

        goto label2;

     label1:
        $r3 = new kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)>(r0, $r2);

     label2:
        $r4 = $r3;

        $r5 = $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object result>;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label6;
            case 1: goto label5;
            case 2: goto label4;
            default: goto label3;
        };

     label3:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        goto label8;

     label5:
        r8 = $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$2>;

        r9 = (kotlin.jvm.internal.Ref$ObjectRef) r8;

        r8 = $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$1>;

        $r10 = (kotlinx.coroutines.flow.FlowCollector) r8;

        r8 = $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        r11 = (kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1) r8;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        goto label7;

     label6:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        r11 = r0;

        $r2 = (kotlin.coroutines.Continuation) $r3;

        $r10 = $r1;

        r9 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r9.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r5 = r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: java.lang.Object $initial$inlined>;

        r9.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r5;

        $r5 = r9.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = r0;

        $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = $r1;

        $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$2> = r9;

        $r3.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: int label> = 1;

        $r5 = interfaceinvoke $r1.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r5, $r3);

        if $r5 != $r6 goto label7;

        return $r6;

     label7:
        $r12 = r11.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_runningFold$inlined>;

        $r13 = new kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1;

        $r14 = r11.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $operation$inlined>;

        specialinvoke $r13.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: void <init>(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)>(r9, $r14, $r10);

        $r1 = (kotlinx.coroutines.flow.FlowCollector) $r13;

        $r4.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = null;

        $r4.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = null;

        $r4.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$2> = null;

        $r4.<kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: int label> = 2;

        $r5 = interfaceinvoke $r12.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r1, $r4);

        if $r5 != $r6 goto label8;

        return $r6;

     label8:
        r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r15;
    }
}
