final class androidx.fragment.app.BackStackRecord extends androidx.fragment.app.FragmentTransaction implements androidx.fragment.app.FragmentManager$BackStackEntry, androidx.fragment.app.FragmentManagerImpl$OpGenerator
{
    static final java.lang.String TAG;
    boolean mCommitted;
    int mIndex;
    final androidx.fragment.app.FragmentManagerImpl mManager;

    public void <init>(androidx.fragment.app.FragmentManagerImpl)
    {
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentManagerImpl $r1;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 := @parameter0: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke r0.<androidx.fragment.app.FragmentTransaction: void <init>()>();

        r0.<androidx.fragment.app.BackStackRecord: int mIndex> = -1;

        r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager> = $r1;

        return;
    }

    private static boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op)
    {
        androidx.fragment.app.FragmentTransaction$Op $r0;
        androidx.fragment.app.Fragment r1;
        android.view.View $r2;
        boolean $z0;

        $r0 := @parameter0: androidx.fragment.app.FragmentTransaction$Op;

        r1 = $r0.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r1 == null goto label1;

        $z0 = r1.<androidx.fragment.app.Fragment: boolean mAdded>;

        if $z0 == 0 goto label1;

        $r2 = r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r2 == null goto label1;

        $z0 = r1.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z0 != 0 goto label1;

        $z0 = r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r1.<androidx.fragment.app.Fragment: boolean isPostponed()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void bumpBackStackNesting(int)
    {
        androidx.fragment.app.FragmentTransaction$Op r5;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r3;
        int $i0, $i1, i2, $i3;
        androidx.fragment.app.Fragment $r6;
        java.lang.StringBuilder r1;
        java.lang.Object $r4;
        java.lang.String $r2;
        boolean z0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $i0 := @parameter0: int;

        z0 = r0.<androidx.fragment.app.BackStackRecord: boolean mAddToBackStack>;

        if z0 != 0 goto label1;

        return;

     label1:
        z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if z0 == 0 goto label2;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bump nesting in ");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r2);

     label2:
        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label3:
        if i2 >= $i1 goto label5;

        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r4 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (androidx.fragment.app.FragmentTransaction$Op) $r4;

        $r6 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if $r6 == null goto label4;

        $r6 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        $i3 = $r6.<androidx.fragment.app.Fragment: int mBackStackNesting>;

        $i3 = $i3 + $i0;

        $r6.<androidx.fragment.app.Fragment: int mBackStackNesting> = $i3;

        z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if z0 == 0 goto label4;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bump nesting of ");

        $r6 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r6 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        $i3 = $r6.<androidx.fragment.app.Fragment: int mBackStackNesting>;

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r2);

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return;
    }

    public int commit()
    {
        androidx.fragment.app.BackStackRecord r0;
        int $i0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $i0 = virtualinvoke r0.<androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>(0);

        return $i0;
    }

    public int commitAllowingStateLoss()
    {
        androidx.fragment.app.BackStackRecord r0;
        int $i0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $i0 = virtualinvoke r0.<androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>(1);

        return $i0;
    }

    int commitInternal(boolean)
    {
        java.io.PrintWriter $r6;
        androidx.fragment.app.FragmentManagerImpl r3;
        java.lang.IllegalStateException $r7;
        androidx.fragment.app.BackStackRecord r0;
        androidx.core.util.LogWriter $r5;
        int $i0;
        java.lang.StringBuilder r1, $r4;
        java.lang.String $r2;
        boolean $z0, z1;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $z0 := @parameter0: boolean;

        z1 = r0.<androidx.fragment.app.BackStackRecord: boolean mCommitted>;

        if z1 != 0 goto label4;

        z1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if z1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commit: ");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r2);

        $r5 = new androidx.core.util.LogWriter;

        specialinvoke $r5.<androidx.core.util.LogWriter: void <init>(java.lang.String)>("FragmentManager");

        $r6 = new java.io.PrintWriter;

        specialinvoke $r6.<java.io.PrintWriter: void <init>(java.io.Writer)>($r5);

        virtualinvoke r0.<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter)>("  ", $r6);

        virtualinvoke $r6.<java.io.PrintWriter: void close()>();

     label1:
        r0.<androidx.fragment.app.BackStackRecord: boolean mCommitted> = 1;

        z1 = r0.<androidx.fragment.app.BackStackRecord: boolean mAddToBackStack>;

        if z1 == 0 goto label2;

        r3 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        $i0 = virtualinvoke r3.<androidx.fragment.app.FragmentManagerImpl: int allocBackStackIndex(androidx.fragment.app.BackStackRecord)>(r0);

        r0.<androidx.fragment.app.BackStackRecord: int mIndex> = $i0;

        goto label3;

     label2:
        r0.<androidx.fragment.app.BackStackRecord: int mIndex> = -1;

     label3:
        r3 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke r3.<androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>(r0, $z0);

        $i0 = r0.<androidx.fragment.app.BackStackRecord: int mIndex>;

        return $i0;

     label4:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("commit already called");

        throw $r7;
    }

    public void commitNow()
    {
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentManagerImpl $r1;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        virtualinvoke r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()>();

        $r1 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentManagerImpl: void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>(r0, 0);

        return;
    }

    public void commitNowAllowingStateLoss()
    {
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentManagerImpl $r1;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        virtualinvoke r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()>();

        $r1 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentManagerImpl: void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>(r0, 1);

        return;
    }

    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r2, $r3;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        if $r2 == null goto label2;

        $r2 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $r3 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        if $r2 != $r3 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot detach Fragment attached to a different FragmentManager. Fragment ");

        $r6 = virtualinvoke $r1.<androidx.fragment.app.Fragment: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already attached to a FragmentManager.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $r7 = specialinvoke r0.<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)>($r1);

        return $r7;
    }

    void doAddOp(int, androidx.fragment.app.Fragment, java.lang.String, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r3;
        androidx.fragment.app.BackStackRecord r0;
        int $i0, $i1;
        androidx.fragment.app.Fragment $r1;
        java.lang.String $r2;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $i0 := @parameter0: int;

        $r1 := @parameter1: androidx.fragment.app.Fragment;

        $r2 := @parameter2: java.lang.String;

        $i1 := @parameter3: int;

        specialinvoke r0.<androidx.fragment.app.FragmentTransaction: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)>($i0, $r1, $r2, $i1);

        $r3 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager> = $r3;

        return;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        androidx.fragment.app.BackStackRecord r0;
        java.io.PrintWriter $r2;
        java.lang.String $r1;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r0.<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>($r1, $r2, 1);

        return;
    }

    public void dump(java.lang.String, java.io.PrintWriter, boolean)
    {
        java.io.PrintWriter $r2;
        java.lang.CharSequence r4;
        androidx.fragment.app.FragmentTransaction$Op r7;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r5;
        int i0, i1, i2;
        androidx.fragment.app.Fragment $r9;
        java.lang.Object $r6;
        java.lang.StringBuilder r8;
        java.lang.String $r1, r3;
        boolean $z0, z1;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.PrintWriter;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label09;

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("mName=");

        r3 = r0.<androidx.fragment.app.BackStackRecord: java.lang.String mName>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" mIndex=");

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mIndex>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" mCommitted=");

        z1 = r0.<androidx.fragment.app.BackStackRecord: boolean mCommitted>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(boolean)>(z1);

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mTransition>;

        if i0 == 0 goto label01;

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("mTransition=#");

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mTransition>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" mTransitionStyle=#");

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mTransitionStyle>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(r3);

     label01:
        i0 = r0.<androidx.fragment.app.BackStackRecord: int mEnterAnim>;

        if i0 != 0 goto label02;

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mExitAnim>;

        if i0 == 0 goto label03;

     label02:
        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("mEnterAnim=#");

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mEnterAnim>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" mExitAnim=#");

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mExitAnim>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(r3);

     label03:
        i0 = r0.<androidx.fragment.app.BackStackRecord: int mPopEnterAnim>;

        if i0 != 0 goto label04;

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mPopExitAnim>;

        if i0 == 0 goto label05;

     label04:
        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("mPopEnterAnim=#");

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mPopEnterAnim>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" mPopExitAnim=#");

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mPopExitAnim>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(r3);

     label05:
        i0 = r0.<androidx.fragment.app.BackStackRecord: int mBreadCrumbTitleRes>;

        if i0 != 0 goto label06;

        r4 = r0.<androidx.fragment.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        if r4 == null goto label07;

     label06:
        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("mBreadCrumbTitleRes=#");

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mBreadCrumbTitleRes>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" mBreadCrumbTitleText=");

        r4 = r0.<androidx.fragment.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

     label07:
        i0 = r0.<androidx.fragment.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        if i0 != 0 goto label08;

        r4 = r0.<androidx.fragment.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        if r4 == null goto label09;

     label08:
        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("mBreadCrumbShortTitleRes=#");

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" mBreadCrumbShortTitleText=");

        r4 = r0.<androidx.fragment.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

     label09:
        r5 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        z1 = virtualinvoke r5.<java.util.ArrayList: boolean isEmpty()>();

        if z1 != 0 goto label28;

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Operations:");

        r5 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i1 = 0;

     label10:
        if i1 >= i0 goto label28;

        r5 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r6 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r7 = (androidx.fragment.app.FragmentTransaction$Op) $r6;

        i2 = r7.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        lookupswitch(i2)
        {
            case 0: goto label22;
            case 1: goto label21;
            case 2: goto label20;
            case 3: goto label19;
            case 4: goto label18;
            case 5: goto label17;
            case 6: goto label16;
            case 7: goto label15;
            case 8: goto label14;
            case 9: goto label13;
            case 10: goto label12;
            default: goto label11;
        };

     label11:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd=");

        i2 = r7.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        r8 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        r3 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label23;

     label12:
        r3 = "OP_SET_MAX_LIFECYCLE";

        goto label23;

     label13:
        r3 = "UNSET_PRIMARY_NAV";

        goto label23;

     label14:
        r3 = "SET_PRIMARY_NAV";

        goto label23;

     label15:
        r3 = "ATTACH";

        goto label23;

     label16:
        r3 = "DETACH";

        goto label23;

     label17:
        r3 = "SHOW";

        goto label23;

     label18:
        r3 = "HIDE";

        goto label23;

     label19:
        r3 = "REMOVE";

        goto label23;

     label20:
        r3 = "REPLACE";

        goto label23;

     label21:
        r3 = "ADD";

        goto label23;

     label22:
        r3 = "NULL";

     label23:
        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("  Op #");

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r9 = r7.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.Object)>($r9);

        if $z0 == 0 goto label27;

        i2 = r7.<androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim>;

        if i2 != 0 goto label24;

        i2 = r7.<androidx.fragment.app.FragmentTransaction$Op: int mExitAnim>;

        if i2 == 0 goto label25;

     label24:
        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("enterAnim=#");

        i2 = r7.<androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" exitAnim=#");

        i2 = r7.<androidx.fragment.app.FragmentTransaction$Op: int mExitAnim>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(r3);

     label25:
        i2 = r7.<androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim>;

        if i2 != 0 goto label26;

        i2 = r7.<androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim>;

        if i2 == 0 goto label27;

     label26:
        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("popEnterAnim=#");

        i2 = r7.<androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" popExitAnim=#");

        i2 = r7.<androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim>;

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(r3);

     label27:
        i1 = i1 + 1;

        goto label10;

     label28:
        return;
    }

    void executeOps()
    {
        androidx.fragment.app.FragmentManagerImpl $r8, r10;
        androidx.fragment.app.FragmentTransaction$Op r4;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r2;
        androidx.fragment.app.Fragment r1;
        int $i0, i1, $i2, $i3;
        java.lang.String $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        androidx.lifecycle.Lifecycle$State $r9;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        r2 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label01:
        if i1 >= $i0 goto label15;

        r2 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (androidx.fragment.app.FragmentTransaction$Op) $r3;

        r1 = r4.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r1 == null goto label02;

        $i2 = r0.<androidx.fragment.app.BackStackRecord: int mTransition>;

        $i3 = r0.<androidx.fragment.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextTransition(int,int)>($i2, $i3);

     label02:
        $i2 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        lookupswitch($i2)
        {
            case 1: goto label12;
            case 2: goto label03;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label04;
            default: goto label03;
        };

     label03:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown cmd: ");

        $i0 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label04:
        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        $r9 = r4.<androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)>(r1, $r9);

        goto label13;

     label05:
        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)>(null);

        goto label13;

     label06:
        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label07:
        $i2 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i2);

        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void attachFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label08:
        $i2 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mExitAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i2);

        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void detachFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label09:
        $i2 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i2);

        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void showFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label10:
        $i2 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mExitAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i2);

        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void hideFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label11:
        $i2 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mExitAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i2);

        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void removeFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label12:
        $i2 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i2);

        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void addFragment(androidx.fragment.app.Fragment,boolean)>(r1, 0);

     label13:
        $z0 = r0.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z0 != 0 goto label14;

        $i2 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        if $i2 == 1 goto label14;

        if r1 == null goto label14;

        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)>(r1);

     label14:
        i1 = i1 + 1;

        goto label01;

     label15:
        $z0 = r0.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z0 != 0 goto label16;

        $r8 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        r10 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        $i0 = r10.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>($i0, 1);

     label16:
        return;
    }

    void executePopOps(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r7, r9;
        androidx.fragment.app.FragmentTransaction$Op r4;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r2;
        androidx.fragment.app.Fragment r1;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r11;
        androidx.lifecycle.Lifecycle$State $r8;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r10;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $z0 := @parameter0: boolean;

        r2 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label01:
        if $i0 < 0 goto label15;

        r2 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r4 = (androidx.fragment.app.FragmentTransaction$Op) $r3;

        r1 = r4.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r1 == null goto label02;

        $i1 = r0.<androidx.fragment.app.BackStackRecord: int mTransition>;

        $i1 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: int reverseTransit(int)>($i1);

        $i2 = r0.<androidx.fragment.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextTransition(int,int)>($i1, $i2);

     label02:
        $i1 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        lookupswitch($i1)
        {
            case 1: goto label12;
            case 2: goto label03;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label04;
            default: goto label03;
        };

     label03:
        $r11 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown cmd: ");

        $i0 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r11;

     label04:
        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        $r8 = r4.<androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)>(r1, $r8);

        goto label13;

     label05:
        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label06:
        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)>(null);

        goto label13;

     label07:
        $i1 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i1);

        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void detachFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label08:
        $i1 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i1);

        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void attachFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label09:
        $i1 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i1);

        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void hideFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label10:
        $i1 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i1);

        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void showFragment(androidx.fragment.app.Fragment)>(r1);

        goto label13;

     label11:
        $i1 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i1);

        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void addFragment(androidx.fragment.app.Fragment,boolean)>(r1, 0);

        goto label13;

     label12:
        $i1 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim>;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void setNextAnim(int)>($i1);

        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void removeFragment(androidx.fragment.app.Fragment)>(r1);

     label13:
        $z1 = r0.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z1 != 0 goto label14;

        $i1 = r4.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        if $i1 == 3 goto label14;

        if r1 == null goto label14;

        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)>(r1);

     label14:
        $i0 = $i0 + -1;

        goto label01;

     label15:
        $z1 = r0.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z1 != 0 goto label16;

        if $z0 == 0 goto label16;

        $r7 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        r9 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        $i0 = r9.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>($i0, 1);

     label16:
        return;
    }

    androidx.fragment.app.Fragment expandOps(java.util.ArrayList, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentTransaction$Op r5, $r8;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r1, r3;
        androidx.fragment.app.Fragment $r2, r6, r7;
        int i0, $i1, $i2, i3;
        java.lang.Object $r4;
        boolean z0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: androidx.fragment.app.Fragment;

        i0 = 0;

     label01:
        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label15;

        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r4 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (androidx.fragment.app.FragmentTransaction$Op) $r4;

        $i1 = r5.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        lookupswitch($i1)
        {
            case 1: goto label13;
            case 2: goto label05;
            case 3: goto label04;
            case 4: goto label02;
            case 5: goto label02;
            case 6: goto label04;
            case 7: goto label13;
            case 8: goto label03;
            default: goto label02;
        };

     label02:
        goto label14;

     label03:
        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r8 = new androidx.fragment.app.FragmentTransaction$Op;

        specialinvoke $r8.<androidx.fragment.app.FragmentTransaction$Op: void <init>(int,androidx.fragment.app.Fragment)>(9, $r2);

        virtualinvoke r3.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, $r8);

        i0 = i0 + 1;

        $r2 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        goto label14;

     label04:
        r6 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r6);

        r6 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r6 != $r2 goto label14;

        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r8 = new androidx.fragment.app.FragmentTransaction$Op;

        $r2 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        specialinvoke $r8.<androidx.fragment.app.FragmentTransaction$Op: void <init>(int,androidx.fragment.app.Fragment)>(9, $r2);

        virtualinvoke r3.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, $r8);

        i0 = i0 + 1;

        $r2 = null;

        goto label14;

     label05:
        r6 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        $i1 = r6.<androidx.fragment.app.Fragment: int mContainerId>;

        z0 = 0;

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $i2 = $i2 - 1;

     label06:
        if $i2 < 0 goto label10;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        r7 = (androidx.fragment.app.Fragment) $r4;

        i3 = r7.<androidx.fragment.app.Fragment: int mContainerId>;

        if i3 != $i1 goto label09;

        if r7 != r6 goto label07;

        z0 = 1;

        goto label09;

     label07:
        if r7 != $r2 goto label08;

        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r8 = new androidx.fragment.app.FragmentTransaction$Op;

        specialinvoke $r8.<androidx.fragment.app.FragmentTransaction$Op: void <init>(int,androidx.fragment.app.Fragment)>(9, r7);

        virtualinvoke r3.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, $r8);

        i0 = i0 + 1;

        $r2 = null;

     label08:
        $r8 = new androidx.fragment.app.FragmentTransaction$Op;

        specialinvoke $r8.<androidx.fragment.app.FragmentTransaction$Op: void <init>(int,androidx.fragment.app.Fragment)>(3, r7);

        i3 = r5.<androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim>;

        $r8.<androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim> = i3;

        i3 = r5.<androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim>;

        $r8.<androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim> = i3;

        i3 = r5.<androidx.fragment.app.FragmentTransaction$Op: int mExitAnim>;

        $r8.<androidx.fragment.app.FragmentTransaction$Op: int mExitAnim> = i3;

        i3 = r5.<androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim>;

        $r8.<androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim> = i3;

        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        virtualinvoke r3.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, $r8);

        virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r7);

        i0 = i0 + 1;

     label09:
        $i2 = $i2 + -1;

        goto label06;

     label10:
        if z0 == 0 goto label11;

        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        i0 = i0 + -1;

        goto label12;

     label11:
        r5.<androidx.fragment.app.FragmentTransaction$Op: int mCmd> = 1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label12:
        goto label14;

     label13:
        r6 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label14:
        i0 = i0 + 1;

        goto label01;

     label15:
        return $r2;
    }

    public boolean generateOps(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManagerImpl $r6;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r1, r2;
        java.lang.Boolean $r5;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Run: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r4);

     label1:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $z0 = r0.<androidx.fragment.app.BackStackRecord: boolean mAddToBackStack>;

        if $z0 == 0 goto label2;

        $r6 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        virtualinvoke $r6.<androidx.fragment.app.FragmentManagerImpl: void addBackStackState(androidx.fragment.app.BackStackRecord)>(r0);

     label2:
        return 1;
    }

    public java.lang.CharSequence getBreadCrumbShortTitle()
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        android.content.Context $r3;
        androidx.fragment.app.FragmentHostCallback $r2;
        java.lang.CharSequence $r4;
        androidx.fragment.app.BackStackRecord r0;
        int $i0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $i0 = r0.<androidx.fragment.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        if $i0 == 0 goto label1;

        $r1 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        $r2 = $r1.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $i0 = r0.<androidx.fragment.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        return $r4;

     label1:
        $r4 = r0.<androidx.fragment.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        return $r4;
    }

    public int getBreadCrumbShortTitleRes()
    {
        androidx.fragment.app.BackStackRecord r0;
        int i0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        return i0;
    }

    public java.lang.CharSequence getBreadCrumbTitle()
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        android.content.Context $r3;
        androidx.fragment.app.FragmentHostCallback $r2;
        java.lang.CharSequence $r4;
        androidx.fragment.app.BackStackRecord r0;
        int $i0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $i0 = r0.<androidx.fragment.app.BackStackRecord: int mBreadCrumbTitleRes>;

        if $i0 == 0 goto label1;

        $r1 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        $r2 = $r1.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $i0 = r0.<androidx.fragment.app.BackStackRecord: int mBreadCrumbTitleRes>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        return $r4;

     label1:
        $r4 = r0.<androidx.fragment.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        return $r4;
    }

    public int getBreadCrumbTitleRes()
    {
        androidx.fragment.app.BackStackRecord r0;
        int i0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mBreadCrumbTitleRes>;

        return i0;
    }

    public int getId()
    {
        androidx.fragment.app.BackStackRecord r0;
        int i0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        i0 = r0.<androidx.fragment.app.BackStackRecord: int mIndex>;

        return i0;
    }

    public java.lang.String getName()
    {
        androidx.fragment.app.BackStackRecord r0;
        java.lang.String r1;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        r1 = r0.<androidx.fragment.app.BackStackRecord: java.lang.String mName>;

        return r1;
    }

    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r2, $r3;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        if $r2 == null goto label2;

        $r2 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $r3 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        if $r2 != $r3 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot hide Fragment attached to a different FragmentManager. Fragment ");

        $r6 = virtualinvoke $r1.<androidx.fragment.app.Fragment: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already attached to a FragmentManager.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $r7 = specialinvoke r0.<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)>($r1);

        return $r7;
    }

    boolean interactsWith(int)
    {
        androidx.fragment.app.FragmentTransaction$Op r3;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r1;
        int $i0, $i1, i2, i3;
        androidx.fragment.app.Fragment $r4;
        java.lang.Object $r2;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $i0 := @parameter0: int;

        r1 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        i3 = 0;

        if i2 >= $i1 goto label4;

        r1 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (androidx.fragment.app.FragmentTransaction$Op) $r2;

        $r4 = r3.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if $r4 == null goto label2;

        $r4 = r3.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        i3 = $r4.<androidx.fragment.app.Fragment: int mContainerId>;

     label2:
        if i3 == 0 goto label3;

        if i3 != $i0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return 0;
    }

    boolean interactsWith(java.util.ArrayList, int, int)
    {
        androidx.fragment.app.FragmentTransaction$Op r4;
        androidx.fragment.app.BackStackRecord r0, r6;
        java.util.ArrayList r1, r2;
        int $i0, $i1, $i2, i3, i4, i5, i6, $i7, i8, i9;
        androidx.fragment.app.Fragment r5;
        java.lang.Object $r3;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        r1 := @parameter0: java.util.ArrayList;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 != $i0 goto label01;

        return 0;

     label01:
        r2 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i3 = -1;

        i4 = 0;

     label02:
        if i4 >= $i2 goto label12;

        r2 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (androidx.fragment.app.FragmentTransaction$Op) $r3;

        r5 = r4.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r5 == null goto label03;

        r5 = r4.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        i5 = r5.<androidx.fragment.app.Fragment: int mContainerId>;

        goto label04;

     label03:
        i5 = 0;

     label04:
        if i5 == 0 goto label11;

        if i5 == i3 goto label11;

        i3 = i5;

        i6 = $i0;

     label05:
        if i6 >= $i1 goto label11;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r6 = (androidx.fragment.app.BackStackRecord) $r3;

        r2 = r6.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i7 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i8 = 0;

     label06:
        if i8 >= $i7 goto label10;

        r2 = r6.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r4 = (androidx.fragment.app.FragmentTransaction$Op) $r3;

        r5 = r4.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r5 == null goto label07;

        r5 = r4.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        i9 = r5.<androidx.fragment.app.Fragment: int mContainerId>;

        goto label08;

     label07:
        i9 = 0;

     label08:
        if i9 != i5 goto label09;

        return 1;

     label09:
        i8 = i8 + 1;

        goto label06;

     label10:
        i6 = i6 + 1;

        goto label05;

     label11:
        i4 = i4 + 1;

        goto label02;

     label12:
        return 0;
    }

    public boolean isEmpty()
    {
        androidx.fragment.app.BackStackRecord r0;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        return $z0;
    }

    boolean isPostponed()
    {
        androidx.fragment.app.FragmentTransaction$Op r3;
        androidx.fragment.app.BackStackRecord r0;
        int i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList r1;
        boolean $z0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        i0 = 0;

     label1:
        r1 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label3;

        r1 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (androidx.fragment.app.FragmentTransaction$Op) $r2;

        $z0 = staticinvoke <androidx.fragment.app.BackStackRecord: boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op)>(r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r2, $r3;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        if $r2 == null goto label2;

        $r2 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $r3 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        if $r2 != $r3 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove Fragment attached to a different FragmentManager. Fragment ");

        $r6 = virtualinvoke $r1.<androidx.fragment.app.Fragment: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already attached to a FragmentManager.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $r7 = specialinvoke r0.<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)>($r1);

        return $r7;
    }

    public void runOnCommitRunnables()
    {
        androidx.fragment.app.BackStackRecord r0;
        int i0, $i1;
        java.lang.Object $r2;
        java.lang.Runnable $r3;
        java.util.ArrayList r1;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        r1 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mCommitRunnables>;

        if r1 == null goto label3;

        i0 = 0;

     label1:
        r1 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mCommitRunnables>;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label2;

        r1 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mCommitRunnables>;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.Runnable) $r2;

        interfaceinvoke $r3.<java.lang.Runnable: void run()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mCommitRunnables> = null;

     label3:
        return;
    }

    public androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment, androidx.lifecycle.Lifecycle$State)
    {
        androidx.fragment.app.FragmentManagerImpl $r3, $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r6;
        java.lang.IllegalArgumentException $r7;
        androidx.lifecycle.Lifecycle$State $r2, $r5;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 := @parameter1: androidx.lifecycle.Lifecycle$State;

        $r3 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $r4 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        if $r3 != $r4 goto label2;

        $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $z0 = virtualinvoke $r2.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r5);

        if $z0 == 0 goto label1;

        $r6 = specialinvoke r0.<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)>($r1, $r2);

        return $r6;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set maximum Lifecycle below ");

        $r2 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot setMaxLifecycle for Fragment not attached to FragmentManager ");

        $r3 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;
    }

    void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
    {
        androidx.fragment.app.Fragment$OnStartEnterTransitionListener $r1;
        androidx.fragment.app.FragmentTransaction$Op r4;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r2;
        int i0, $i1;
        androidx.fragment.app.Fragment $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 := @parameter0: androidx.fragment.app.Fragment$OnStartEnterTransitionListener;

        i0 = 0;

     label1:
        r2 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label3;

        r2 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (androidx.fragment.app.FragmentTransaction$Op) $r3;

        $z0 = staticinvoke <androidx.fragment.app.BackStackRecord: boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op)>(r4);

        if $z0 == 0 goto label2;

        $r5 = r4.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        virtualinvoke $r5.<androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)>($r1);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r2, $r3;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        if $r1 == null goto label2;

        $r2 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        if $r2 == null goto label2;

        $r2 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $r3 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        if $r2 != $r3 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot setPrimaryNavigation for Fragment attached to a different FragmentManager. Fragment ");

        $r6 = virtualinvoke $r1.<androidx.fragment.app.Fragment: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already attached to a FragmentManager.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $r7 = specialinvoke r0.<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)>($r1);

        return $r7;
    }

    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r2, $r3;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        if $r2 == null goto label2;

        $r2 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager>;

        $r3 = r0.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager>;

        if $r2 != $r3 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot show Fragment attached to a different FragmentManager. Fragment ");

        $r6 = virtualinvoke $r1.<androidx.fragment.app.Fragment: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already attached to a FragmentManager.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $r7 = specialinvoke r0.<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)>($r1);

        return $r7;
    }

    public java.lang.String toString()
    {
        androidx.fragment.app.BackStackRecord r0;
        int $i0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BackStackEntry{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i0 = r0.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if $i0 < 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #");

        $i0 = r0.<androidx.fragment.app.BackStackRecord: int mIndex>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

     label1:
        $r2 = r0.<androidx.fragment.app.BackStackRecord: java.lang.String mName>;

        if $r2 == null goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = r0.<androidx.fragment.app.BackStackRecord: java.lang.String mName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentTransaction$Op r5;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r1, r3;
        androidx.lifecycle.Lifecycle$State $r6;
        androidx.fragment.app.Fragment $r2, $r7;
        int $i0, $i1;
        java.lang.Object $r4;

        r0 := @this: androidx.fragment.app.BackStackRecord;

        r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: androidx.fragment.app.Fragment;

        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label9;

        r3 = r0.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r4 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r5 = (androidx.fragment.app.FragmentTransaction$Op) $r4;

        $i1 = r5.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        lookupswitch($i1)
        {
            case 1: goto label7;
            case 2: goto label2;
            case 3: goto label6;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label6;
            case 7: goto label7;
            case 8: goto label5;
            case 9: goto label4;
            case 10: goto label3;
            default: goto label2;
        };

     label2:
        goto label8;

     label3:
        $r6 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState>;

        r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState> = $r6;

        goto label8;

     label4:
        $r2 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        goto label8;

     label5:
        $r2 = null;

        goto label8;

     label6:
        $r7 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label8;

     label7:
        $r7 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>($r7);

     label8:
        $i0 = $i0 + -1;

        goto label1;

     label9:
        return $r2;
    }

    public static void <clinit>()
    {
        <androidx.fragment.app.BackStackRecord: java.lang.String TAG> = "FragmentManager";

        return;
    }
}
