public final class kotlinx.coroutines.ExecutorsKt extends java.lang.Object
{

    public static void CloseableCoroutineDispatcher$annotations()
    {
        return;
    }

    public static final java.util.concurrent.Executor asExecutor(kotlinx.coroutines.CoroutineDispatcher)
    {
        java.util.concurrent.Executor $r1;
        kotlinx.coroutines.ExecutorCoroutineDispatcher $r2;
        kotlinx.coroutines.CoroutineDispatcher $r0;
        kotlinx.coroutines.DispatcherExecutor $r3;
        boolean $z0;

        $r0 := @parameter0: kotlinx.coroutines.CoroutineDispatcher;

        $z0 = $r0 instanceof kotlinx.coroutines.ExecutorCoroutineDispatcher;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.ExecutorCoroutineDispatcher) $r0;

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 == null goto label3;

        $r1 = virtualinvoke $r2.<kotlinx.coroutines.ExecutorCoroutineDispatcher: java.util.concurrent.Executor getExecutor()>();

        if $r1 != null goto label4;

     label3:
        $r3 = new kotlinx.coroutines.DispatcherExecutor;

        specialinvoke $r3.<kotlinx.coroutines.DispatcherExecutor: void <init>(kotlinx.coroutines.CoroutineDispatcher)>($r0);

        $r1 = (java.util.concurrent.Executor) $r3;

     label4:
        return $r1;
    }

    public static final kotlinx.coroutines.CoroutineDispatcher 'from'(java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor $r0;
        kotlinx.coroutines.DispatcherExecutor $r1;
        kotlinx.coroutines.CoroutineDispatcher $r2;
        kotlinx.coroutines.ExecutorCoroutineDispatcherImpl $r3;
        boolean $z0;

        $r0 := @parameter0: java.util.concurrent.Executor;

        $z0 = $r0 instanceof kotlinx.coroutines.DispatcherExecutor;

        if $z0 == 0 goto label1;

        $r1 = (kotlinx.coroutines.DispatcherExecutor) $r0;

        goto label2;

     label1:
        $r1 = null;

     label2:
        if $r1 == null goto label3;

        $r2 = $r1.<kotlinx.coroutines.DispatcherExecutor: kotlinx.coroutines.CoroutineDispatcher dispatcher>;

        if $r2 != null goto label4;

     label3:
        $r3 = new kotlinx.coroutines.ExecutorCoroutineDispatcherImpl;

        specialinvoke $r3.<kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void <init>(java.util.concurrent.Executor)>($r0);

        $r2 = (kotlinx.coroutines.CoroutineDispatcher) $r3;

     label4:
        return $r2;
    }

    public static final kotlinx.coroutines.ExecutorCoroutineDispatcher 'from'(java.util.concurrent.ExecutorService)
    {
        java.util.concurrent.Executor $r2;
        kotlinx.coroutines.ExecutorCoroutineDispatcher $r3;
        kotlinx.coroutines.ExecutorCoroutineDispatcherImpl $r1;
        java.util.concurrent.ExecutorService $r0;

        $r0 := @parameter0: java.util.concurrent.ExecutorService;

        $r1 = new kotlinx.coroutines.ExecutorCoroutineDispatcherImpl;

        $r2 = (java.util.concurrent.Executor) $r0;

        specialinvoke $r1.<kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void <init>(java.util.concurrent.Executor)>($r2);

        $r3 = (kotlinx.coroutines.ExecutorCoroutineDispatcher) $r1;

        return $r3;
    }
}
