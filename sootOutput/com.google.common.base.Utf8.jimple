public final class com.google.common.base.Utf8 extends java.lang.Object
{

    private void <init>()
    {
        com.google.common.base.Utf8 r0;

        r0 := @this: com.google.common.base.Utf8;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int encodedLength(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        char $c3;
        long $l5;
        java.lang.IllegalArgumentException $r4;
        int $i0, i1, i2, $i4;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        i1 = $i0;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(i2);

        $i4 = (int) $c3;

        if $i4 >= 128 goto label2;

        i2 = i2 + 1;

        goto label1;

     label2:
        if i2 >= $i0 goto label4;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(i2);

        $i4 = (int) $c3;

        if $i4 >= 2048 goto label3;

        $i4 = (int) $c3;

        $i4 = 127 - $i4;

        $i4 = $i4 >>> 31;

        i1 = i1 + $i4;

        i2 = i2 + 1;

        goto label2;

     label3:
        i2 = staticinvoke <com.google.common.base.Utf8: int encodedLengthGeneral(java.lang.CharSequence,int)>($r0, i2);

        i1 = i1 + i2;

     label4:
        if i1 < $i0 goto label5;

        return i1;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        $l5 = (long) i1;

        $l5 = $l5 + 4294967296L;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(54);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTF-8 length does not fit in int: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r4;
    }

    private static int encodedLengthGeneral(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        char $c3;
        java.lang.IllegalArgumentException $r2;
        int $i0, $i1, i2, $i4, $i5;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        i2 = 0;

     label1:
        if $i0 >= $i1 goto label5;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $i4 = (int) $c3;

        if $i4 >= 2048 goto label2;

        $i4 = (int) $c3;

        $i4 = 127 - $i4;

        $i4 = $i4 >>> 31;

        i2 = i2 + $i4;

        goto label4;

     label2:
        i2 = i2 + 2;

        $i5 = (int) $c3;

        if 55296 > $i5 goto label4;

        $i4 = (int) $c3;

        if $i4 > 57343 goto label4;

        $i4 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>($r0, $i0);

        $i5 = (int) $c3;

        if $i4 == $i5 goto label3;

        $i0 = $i0 + 1;

        goto label4;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r1 = staticinvoke <com.google.common.base.Utf8: java.lang.String unpairedSurrogateMsg(int)>($i0);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        return i2;
    }

    public static boolean isWellFormed(byte[])
    {
        int $i0;
        byte[] $r0;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $z0 = staticinvoke <com.google.common.base.Utf8: boolean isWellFormed(byte[],int,int)>($r0, 0, $i0);

        return $z0;
    }

    public static boolean isWellFormed(byte[], int, int)
    {
        byte[] $r0;
        byte $b3;
        int $i0, $i1, i2;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = $i0 + $i1;

        i2 = lengthof $r0;

        staticinvoke <com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>($i0, $i1, i2);

     label1:
        if $i0 >= $i1 goto label3;

        $b3 = $r0[$i0];

        i2 = (int) $b3;

        if i2 >= 0 goto label2;

        $z0 = staticinvoke <com.google.common.base.Utf8: boolean isWellFormedSlowPath(byte[],int,int)>($r0, $i0, $i1);

        return $z0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 1;
    }

    private static boolean isWellFormedSlowPath(byte[], int, int)
    {
        byte[] $r0;
        byte b3, b5;
        int $i0, $i1, i2, i4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        i2 = $i0;

     label01:
        if i2 < $i1 goto label02;

        return 1;

     label02:
        $i0 = i2 + 1;

        b3 = $r0[i2];

        i4 = (int) b3;

        if i4 >= 0 goto label13;

        i4 = (int) b3;

        if i4 >= -32 goto label04;

        if $i0 != $i1 goto label03;

        return 0;

     label03:
        i4 = (int) b3;

        if i4 < -62 goto label14;

        i2 = $i0 + 1;

        b3 = $r0[$i0];

        $i0 = (int) b3;

        if $i0 <= -65 goto label01;

        return 0;

     label04:
        i4 = (int) b3;

        if i4 >= -16 goto label10;

        i4 = $i0 + 1;

        if i4 < $i1 goto label05;

        return 0;

     label05:
        i4 = $i0 + 1;

        b5 = $r0[$i0];

        $i0 = (int) b5;

        if $i0 > -65 goto label09;

        $i0 = (int) b3;

        if $i0 != -32 goto label06;

        $i0 = (int) b5;

        if $i0 < -96 goto label14;

     label06:
        $i0 = (int) b3;

        if $i0 != -19 goto label07;

        i2 = (int) b5;

        if -96 <= i2 goto label14;

     label07:
        i2 = i4 + 1;

        b3 = $r0[i4];

        $i0 = (int) b3;

        if $i0 <= -65 goto label08;

        return 0;

     label08:
        goto label01;

     label09:
        return 0;

     label10:
        i4 = $i0 + 2;

        if i4 < $i1 goto label11;

        return 0;

     label11:
        i4 = $i0 + 1;

        b5 = $r0[$i0];

        $i0 = (int) b5;

        if $i0 > -65 goto label12;

        $i0 = (int) b3;

        $i0 = $i0 << 28;

        i2 = (int) b5;

        i2 = i2 + 112;

        $i0 = $i0 + i2;

        $i0 = $i0 >> 30;

        if $i0 != 0 goto label12;

        $i0 = i4 + 1;

        b3 = $r0[i4];

        i4 = (int) b3;

        if i4 > -65 goto label12;

        i2 = $i0 + 1;

        b3 = $r0[$i0];

        $i0 = (int) b3;

        if $i0 <= -65 goto label01;

     label12:
        return 0;

     label13:
        i2 = $i0;

        goto label01;

     label14:
        return 0;
    }

    private static java.lang.String unpairedSurrogateMsg(int)
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(39);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpaired surrogate at index ");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
