public final class kotlinx.coroutines.future.FutureKt extends java.lang.Object
{

    public static java.lang.Object $r8$lambda$CVsR10o-YJP4IN5741Ey9yO9s50(kotlin.jvm.functions.Function2, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        java.lang.Object $r0;
        kotlin.jvm.functions.Function2 $r2;

        $r2 := @parameter0: kotlin.jvm.functions.Function2;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Throwable;

        $r0 = staticinvoke <kotlinx.coroutines.future.FutureKt: java.lang.Object asDeferred$lambda$4(kotlin.jvm.functions.Function2,java.lang.Object,java.lang.Throwable)>($r2, $r0, $r1);

        return $r0;
    }

    public static kotlin.Unit $r8$lambda$nhDb5E9NjAZTF31felWqlfP4Z1A(kotlinx.coroutines.Job, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        kotlin.Unit $r2;
        kotlinx.coroutines.Job $r3;
        java.lang.Object $r0;

        $r3 := @parameter0: kotlinx.coroutines.Job;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Throwable;

        $r2 = staticinvoke <kotlinx.coroutines.future.FutureKt: kotlin.Unit setupCancellation$lambda$2(kotlinx.coroutines.Job,java.lang.Object,java.lang.Throwable)>($r3, $r0, $r1);

        return $r2;
    }

    public static final java.util.concurrent.CompletableFuture asCompletableFuture(kotlinx.coroutines.Deferred)
    {
        kotlinx.coroutines.Deferred $r0;
        kotlinx.coroutines.Job $r2;
        kotlinx.coroutines.future.FutureKt$asCompletableFuture$1 $r3;
        java.util.concurrent.CompletableFuture r1;
        kotlin.jvm.functions.Function1 $r4;

        $r0 := @parameter0: kotlinx.coroutines.Deferred;

        r1 = new java.util.concurrent.CompletableFuture;

        specialinvoke r1.<java.util.concurrent.CompletableFuture: void <init>()>();

        $r2 = (kotlinx.coroutines.Job) $r0;

        staticinvoke <kotlinx.coroutines.future.FutureKt: void setupCancellation(kotlinx.coroutines.Job,java.util.concurrent.CompletableFuture)>($r2, r1);

        $r3 = new kotlinx.coroutines.future.FutureKt$asCompletableFuture$1;

        specialinvoke $r3.<kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: void <init>(java.util.concurrent.CompletableFuture,kotlinx.coroutines.Deferred)>(r1, $r0);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        interfaceinvoke $r0.<kotlinx.coroutines.Deferred: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r4);

        return r1;
    }

    public static final java.util.concurrent.CompletableFuture asCompletableFuture(kotlinx.coroutines.Job)
    {
        kotlinx.coroutines.future.FutureKt$asCompletableFuture$2 $r2;
        kotlinx.coroutines.Job $r0;
        java.util.concurrent.CompletableFuture r1;
        kotlin.jvm.functions.Function1 $r3;

        $r0 := @parameter0: kotlinx.coroutines.Job;

        r1 = new java.util.concurrent.CompletableFuture;

        specialinvoke r1.<java.util.concurrent.CompletableFuture: void <init>()>();

        staticinvoke <kotlinx.coroutines.future.FutureKt: void setupCancellation(kotlinx.coroutines.Job,java.util.concurrent.CompletableFuture)>($r0, r1);

        $r2 = new kotlinx.coroutines.future.FutureKt$asCompletableFuture$2;

        specialinvoke $r2.<kotlinx.coroutines.future.FutureKt$asCompletableFuture$2: void <init>(java.util.concurrent.CompletableFuture)>(r1);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        interfaceinvoke $r0.<kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r3);

        return r1;
    }

    public static final kotlinx.coroutines.Deferred asDeferred(java.util.concurrent.CompletionStage)
    {
        kotlinx.coroutines.CompletableDeferred $r3;
        java.lang.Throwable r5, $r7, r8;
        kotlinx.coroutines.future.FutureKt$$ExternalSyntheticLambda0 r11;
        kotlinx.coroutines.Deferred r4;
        kotlinx.coroutines.Job $r12;
        java.util.concurrent.CompletableFuture $r1;
        kotlin.jvm.functions.Function2 $r10;
        java.util.concurrent.ExecutionException r6;
        java.util.concurrent.Future r13;
        java.util.concurrent.CompletionStage $r0;
        kotlinx.coroutines.future.FutureKt$asDeferred$2 $r9;
        java.lang.Object $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.concurrent.CompletionStage;

        $r1 = interfaceinvoke $r0.<java.util.concurrent.CompletionStage: java.util.concurrent.CompletableFuture toCompletableFuture()>();

        $z0 = virtualinvoke $r1.<java.util.concurrent.CompletableFuture: boolean isDone()>();

        if $z0 == 0 goto label8;

     label1:
        $r2 = virtualinvoke $r1.<java.util.concurrent.CompletableFuture: java.lang.Object get()>();

        $r3 = staticinvoke <kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(java.lang.Object)>($r2);

        r4 = (kotlinx.coroutines.Deferred) $r3;

     label2:
        return r4;

     label3:
        r5 := @caughtexception;

        $z0 = r5 instanceof java.util.concurrent.ExecutionException;

        if $z0 == 0 goto label4;

        r6 = (java.util.concurrent.ExecutionException) r5;

        goto label5;

     label4:
        r6 = null;

     label5:
        if r6 == null goto label6;

        $r7 = virtualinvoke r6.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        r8 = $r7;

        if $r7 != null goto label7;

     label6:
        r8 = r5;

     label7:
        $r3 = staticinvoke <kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        interfaceinvoke $r3.<kotlinx.coroutines.CompletableDeferred: boolean completeExceptionally(java.lang.Throwable)>(r8);

        r4 = (kotlinx.coroutines.Deferred) $r3;

        return r4;

     label8:
        $r3 = staticinvoke <kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r9 = new kotlinx.coroutines.future.FutureKt$asDeferred$2;

        specialinvoke $r9.<kotlinx.coroutines.future.FutureKt$asDeferred$2: void <init>(kotlinx.coroutines.CompletableDeferred)>($r3);

        $r10 = (kotlin.jvm.functions.Function2) $r9;

        r11 = new kotlinx.coroutines.future.FutureKt$$ExternalSyntheticLambda0;

        specialinvoke r11.<kotlinx.coroutines.future.FutureKt$$ExternalSyntheticLambda0: void <init>(kotlin.jvm.functions.Function2)>($r10);

        interfaceinvoke $r0.<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage handle(java.util.function.BiFunction)>(r11);

        $r12 = (kotlinx.coroutines.Job) $r3;

        r13 = (java.util.concurrent.Future) $r1;

        staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.Job,java.util.concurrent.Future)>($r12, r13);

        r4 = (kotlinx.coroutines.Deferred) $r3;

        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static final java.lang.Object asDeferred$lambda$4(kotlin.jvm.functions.Function2, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function2 $r0;

        $r0 := @parameter0: kotlin.jvm.functions.Function2;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Throwable;

        $r1 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $r1;
    }

    public static final java.lang.Object await(java.util.concurrent.CompletionStage, kotlin.coroutines.Continuation)
    {
        java.lang.Throwable $r7, r8;
        kotlin.coroutines.Continuation $r1, $r9;
        java.util.function.BiFunction $r11;
        kotlinx.coroutines.future.FutureKt$await$2$1 $r12;
        java.util.concurrent.CompletableFuture $r4;
        kotlinx.coroutines.CancellableContinuationImpl r2;
        boolean $z0;
        kotlinx.coroutines.future.ContinuationHandler r3;
        kotlin.jvm.functions.Function1 $r13;
        java.util.concurrent.ExecutionException r6;
        java.util.concurrent.CompletionStage $r0;
        kotlinx.coroutines.CancellableContinuation r10;
        java.lang.Object $r5, $r14;

        $r0 := @parameter0: java.util.concurrent.CompletionStage;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = interfaceinvoke $r0.<java.util.concurrent.CompletionStage: java.util.concurrent.CompletableFuture toCompletableFuture()>();

        $z0 = virtualinvoke $r4.<java.util.concurrent.CompletableFuture: boolean isDone()>();

        if $z0 == 0 goto label5;

     label1:
        $r5 = virtualinvoke $r4.<java.util.concurrent.CompletableFuture: java.lang.Object get()>();

     label2:
        return $r5;

     label3:
        r6 := @caughtexception;

        $r7 = virtualinvoke r6.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        r8 = $r7;

        if $r7 != null goto label4;

        r8 = (java.lang.Throwable) r6;

     label4:
        throw r8;

     label5:
        r2 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r9 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r1);

        specialinvoke r2.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r9, 1);

        virtualinvoke r2.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r10 = (kotlinx.coroutines.CancellableContinuation) r2;

        r3 = new kotlinx.coroutines.future.ContinuationHandler;

        $r9 = (kotlin.coroutines.Continuation) r10;

        specialinvoke r3.<kotlinx.coroutines.future.ContinuationHandler: void <init>(kotlin.coroutines.Continuation)>($r9);

        $r11 = (java.util.function.BiFunction) r3;

        interfaceinvoke $r0.<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage handle(java.util.function.BiFunction)>($r11);

        $r12 = new kotlinx.coroutines.future.FutureKt$await$2$1;

        specialinvoke $r12.<kotlinx.coroutines.future.FutureKt$await$2$1: void <init>(java.util.concurrent.CompletableFuture,kotlinx.coroutines.future.ContinuationHandler)>($r4, r3);

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        interfaceinvoke r10.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r13);

        $r5 = virtualinvoke r2.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r14 goto label6;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label6:
        return $r5;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    public static final java.util.concurrent.CompletableFuture future(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function2)
    {
        java.util.function.BiFunction $r6;
        java.util.concurrent.CompletableFuture r4;
        kotlin.jvm.functions.Function2 $r3;
        java.lang.IllegalArgumentException r9;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.CoroutineScope $r0;
        kotlinx.coroutines.future.CompletableFutureCoroutine r5;
        kotlinx.coroutines.CoroutineStart $r2;
        java.lang.StringBuilder r7;
        java.lang.String $r8;
        boolean $z0;

        $r0 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter2: kotlinx.coroutines.CoroutineStart;

        $r3 := @parameter3: kotlin.jvm.functions.Function2;

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.CoroutineStart: boolean isLazy()>();

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)>($r0, $r1);

        r4 = new java.util.concurrent.CompletableFuture;

        specialinvoke r4.<java.util.concurrent.CompletableFuture: void <init>()>();

        r5 = new kotlinx.coroutines.future.CompletableFutureCoroutine;

        specialinvoke r5.<kotlinx.coroutines.future.CompletableFutureCoroutine: void <init>(kotlin.coroutines.CoroutineContext,java.util.concurrent.CompletableFuture)>($r1, r4);

        $r6 = (java.util.function.BiFunction) r5;

        virtualinvoke r4.<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture handle(java.util.function.BiFunction)>($r6);

        virtualinvoke r5.<kotlinx.coroutines.future.CompletableFutureCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)>($r2, r5, $r3);

        return r4;

     label1:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        r7 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        r7 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" start is not supported");

        $r8 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r9 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw r9;
    }

    public static java.util.concurrent.CompletableFuture future$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function2, int, java.lang.Object)
    {
        java.util.concurrent.CompletableFuture $r1;
        kotlin.jvm.functions.Function2 $r0;
        kotlin.coroutines.CoroutineContext $r3;
        kotlinx.coroutines.CoroutineScope $r2;
        kotlin.coroutines.EmptyCoroutineContext $r6;
        kotlinx.coroutines.CoroutineStart $r4;
        int $i0, $i1;
        java.lang.Object $r5;

        $r2 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r3 := @parameter1: kotlin.coroutines.CoroutineContext;

        $r4 := @parameter2: kotlinx.coroutines.CoroutineStart;

        $r0 := @parameter3: kotlin.jvm.functions.Function2;

        $i0 := @parameter4: int;

        $r5 := @parameter5: java.lang.Object;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r6 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r3 = (kotlin.coroutines.CoroutineContext) $r6;

     label1:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $r4 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT>;

     label2:
        $r1 = staticinvoke <kotlinx.coroutines.future.FutureKt: java.util.concurrent.CompletableFuture future(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)>($r2, $r3, $r4, $r0);

        return $r1;
    }

    private static final void setupCancellation(kotlinx.coroutines.Job, java.util.concurrent.CompletableFuture)
    {
        java.util.concurrent.CompletableFuture $r1;
        kotlinx.coroutines.future.FutureKt$$ExternalSyntheticLambda1 $r2;
        kotlinx.coroutines.Job $r0;

        $r0 := @parameter0: kotlinx.coroutines.Job;

        $r1 := @parameter1: java.util.concurrent.CompletableFuture;

        $r2 = new kotlinx.coroutines.future.FutureKt$$ExternalSyntheticLambda1;

        specialinvoke $r2.<kotlinx.coroutines.future.FutureKt$$ExternalSyntheticLambda1: void <init>(kotlinx.coroutines.Job)>($r0);

        virtualinvoke $r1.<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture handle(java.util.function.BiFunction)>($r2);

        return;
    }

    private static final kotlin.Unit setupCancellation$lambda$2(kotlinx.coroutines.Job, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        kotlin.Unit r4;
        java.util.concurrent.CancellationException $r2;
        kotlinx.coroutines.Job $r0;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @parameter0: kotlinx.coroutines.Job;

        $r3 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Throwable;

        $r2 = null;

        if $r1 == null goto label2;

        $z0 = $r1 instanceof java.util.concurrent.CancellationException;

        if $z0 == 0 goto label1;

        $r2 = (java.util.concurrent.CancellationException) $r1;

     label1:
        if $r2 != null goto label2;

        $r2 = staticinvoke <kotlinx.coroutines.ExceptionsKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)>("CompletableFuture was completed exceptionally", $r1);

     label2:
        interfaceinvoke $r0.<kotlinx.coroutines.Job: void cancel(java.util.concurrent.CancellationException)>($r2);

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r4;
    }
}
