public final class com.google.common.io.Closeables extends java.lang.Object
{
    static final java.util.logging.Logger logger;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/google/common/io/Closeables;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.common.io.Closeables: java.util.logging.Logger logger> = $r2;

        return;
    }

    private void <init>()
    {
        com.google.common.io.Closeables r0;

        r0 := @this: com.google.common.io.Closeables;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void close(java.io.Closeable, boolean) throws java.io.IOException
    {
        java.io.Closeable $r0;
        java.io.IOException r1;
        java.util.logging.Logger $r2;
        boolean $z0;
        java.util.logging.Level $r3;

        $r0 := @parameter0: java.io.Closeable;

        $z0 := @parameter1: boolean;

        if $r0 != null goto label1;

        return;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        if $z0 == 0 goto label4;

        $r2 = <com.google.common.io.Closeables: java.util.logging.Logger logger>;

        $r3 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r2.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, "IOException thrown while closing Closeable.", r1);

        return;

     label4:
        throw r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void closeQuietly(java.io.InputStream)
    {
        java.io.IOException r2;
        java.lang.AssertionError $r1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

     label1:
        staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r0, 1);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>(r2);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void closeQuietly(java.io.Reader)
    {
        java.io.IOException r2;
        java.io.Reader $r0;
        java.lang.AssertionError $r1;

        $r0 := @parameter0: java.io.Reader;

     label1:
        staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r0, 1);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>(r2);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
