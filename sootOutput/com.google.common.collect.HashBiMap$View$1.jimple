class com.google.common.collect.HashBiMap$View$1 extends java.lang.Object implements java.util.Iterator
{
    private int expectedModCount;
    private int index;
    private int indexToRemove;
    private int remaining;
    final com.google.common.collect.HashBiMap$View this$0;

    void <init>(com.google.common.collect.HashBiMap$View)
    {
        com.google.common.collect.HashBiMap$View $r1;
        com.google.common.collect.HashBiMap$View$1 r0;
        com.google.common.collect.HashBiMap $r2;
        int $i0;

        r0 := @this: com.google.common.collect.HashBiMap$View$1;

        $r1 := @parameter0: com.google.common.collect.HashBiMap$View;

        r0.<com.google.common.collect.HashBiMap$View$1: com.google.common.collect.HashBiMap$View this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = r0.<com.google.common.collect.HashBiMap$View$1: com.google.common.collect.HashBiMap$View this$0>;

        $r2 = $r1.<com.google.common.collect.HashBiMap$View: com.google.common.collect.HashBiMap biMap>;

        $i0 = staticinvoke <com.google.common.collect.HashBiMap: int access$000(com.google.common.collect.HashBiMap)>($r2);

        r0.<com.google.common.collect.HashBiMap$View$1: int index> = $i0;

        r0.<com.google.common.collect.HashBiMap$View$1: int indexToRemove> = -1;

        $r1 = r0.<com.google.common.collect.HashBiMap$View$1: com.google.common.collect.HashBiMap$View this$0>;

        $r2 = $r1.<com.google.common.collect.HashBiMap$View: com.google.common.collect.HashBiMap biMap>;

        $i0 = $r2.<com.google.common.collect.HashBiMap: int modCount>;

        r0.<com.google.common.collect.HashBiMap$View$1: int expectedModCount> = $i0;

        $r1 = r0.<com.google.common.collect.HashBiMap$View$1: com.google.common.collect.HashBiMap$View this$0>;

        $r2 = $r1.<com.google.common.collect.HashBiMap$View: com.google.common.collect.HashBiMap biMap>;

        $i0 = $r2.<com.google.common.collect.HashBiMap: int size>;

        r0.<com.google.common.collect.HashBiMap$View$1: int remaining> = $i0;

        return;
    }

    private void checkForComodification()
    {
        com.google.common.collect.HashBiMap$View $r1;
        com.google.common.collect.HashBiMap$View$1 r0;
        com.google.common.collect.HashBiMap $r2;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r3;

        r0 := @this: com.google.common.collect.HashBiMap$View$1;

        $r1 = r0.<com.google.common.collect.HashBiMap$View$1: com.google.common.collect.HashBiMap$View this$0>;

        $r2 = $r1.<com.google.common.collect.HashBiMap$View: com.google.common.collect.HashBiMap biMap>;

        $i1 = $r2.<com.google.common.collect.HashBiMap: int modCount>;

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int expectedModCount>;

        if $i1 != $i0 goto label1;

        return;

     label1:
        $r3 = new java.util.ConcurrentModificationException;

        specialinvoke $r3.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r3;
    }

    public boolean hasNext()
    {
        int $i0;
        com.google.common.collect.HashBiMap$View$1 r0;

        r0 := @this: com.google.common.collect.HashBiMap$View$1;

        specialinvoke r0.<com.google.common.collect.HashBiMap$View$1: void checkForComodification()>();

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int index>;

        if $i0 == -2 goto label1;

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int remaining>;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object next()
    {
        com.google.common.collect.HashBiMap$View r1;
        com.google.common.collect.HashBiMap$View$1 r0;
        com.google.common.collect.HashBiMap $r3;
        int[] $r4;
        int $i0;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBiMap$View$1;

        $z0 = virtualinvoke r0.<com.google.common.collect.HashBiMap$View$1: boolean hasNext()>();

        if $z0 == 0 goto label1;

        r1 = r0.<com.google.common.collect.HashBiMap$View$1: com.google.common.collect.HashBiMap$View this$0>;

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int index>;

        $r2 = virtualinvoke r1.<com.google.common.collect.HashBiMap$View: java.lang.Object forEntry(int)>($i0);

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int index>;

        r0.<com.google.common.collect.HashBiMap$View$1: int indexToRemove> = $i0;

        r1 = r0.<com.google.common.collect.HashBiMap$View$1: com.google.common.collect.HashBiMap$View this$0>;

        $r3 = r1.<com.google.common.collect.HashBiMap$View: com.google.common.collect.HashBiMap biMap>;

        $r4 = staticinvoke <com.google.common.collect.HashBiMap: int[] access$100(com.google.common.collect.HashBiMap)>($r3);

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int index>;

        $i0 = $r4[$i0];

        r0.<com.google.common.collect.HashBiMap$View$1: int index> = $i0;

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int remaining>;

        $i0 = $i0 + -1;

        r0.<com.google.common.collect.HashBiMap$View$1: int remaining> = $i0;

        return $r2;

     label1:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;
    }

    public void remove()
    {
        com.google.common.collect.HashBiMap$View $r1;
        com.google.common.collect.HashBiMap$View$1 r0;
        com.google.common.collect.HashBiMap $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashBiMap$View$1;

        specialinvoke r0.<com.google.common.collect.HashBiMap$View$1: void checkForComodification()>();

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int indexToRemove>;

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.collect.CollectPreconditions: void checkRemove(boolean)>($z0);

        $r1 = r0.<com.google.common.collect.HashBiMap$View$1: com.google.common.collect.HashBiMap$View this$0>;

        $r2 = $r1.<com.google.common.collect.HashBiMap$View: com.google.common.collect.HashBiMap biMap>;

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int indexToRemove>;

        virtualinvoke $r2.<com.google.common.collect.HashBiMap: void removeEntry(int)>($i0);

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int index>;

        $r1 = r0.<com.google.common.collect.HashBiMap$View$1: com.google.common.collect.HashBiMap$View this$0>;

        $r2 = $r1.<com.google.common.collect.HashBiMap$View: com.google.common.collect.HashBiMap biMap>;

        $i1 = $r2.<com.google.common.collect.HashBiMap: int size>;

        if $i0 != $i1 goto label3;

        $i0 = r0.<com.google.common.collect.HashBiMap$View$1: int indexToRemove>;

        r0.<com.google.common.collect.HashBiMap$View$1: int index> = $i0;

     label3:
        r0.<com.google.common.collect.HashBiMap$View$1: int indexToRemove> = -1;

        $r1 = r0.<com.google.common.collect.HashBiMap$View$1: com.google.common.collect.HashBiMap$View this$0>;

        $r2 = $r1.<com.google.common.collect.HashBiMap$View: com.google.common.collect.HashBiMap biMap>;

        $i0 = $r2.<com.google.common.collect.HashBiMap: int modCount>;

        r0.<com.google.common.collect.HashBiMap$View$1: int expectedModCount> = $i0;

        return;
    }
}
