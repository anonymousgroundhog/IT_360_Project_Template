public class androidx.work.impl.constraints.WorkConstraintsTracker extends java.lang.Object implements androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback
{
    private static final java.lang.String TAG;
    private final androidx.work.impl.constraints.WorkConstraintsCallback mCallback;
    private final androidx.work.impl.constraints.controllers.ConstraintController[] mConstraintControllers;
    private final java.lang.Object mLock;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("WorkConstraintsTracker");

        <androidx.work.impl.constraints.WorkConstraintsTracker: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>(android.content.Context, androidx.work.impl.utils.taskexecutor.TaskExecutor, androidx.work.impl.constraints.WorkConstraintsCallback)
    {
        android.content.Context $r1;
        androidx.work.impl.constraints.controllers.ConstraintController[] $r4;
        androidx.work.impl.constraints.controllers.StorageNotLowController $r7;
        androidx.work.impl.constraints.controllers.NetworkNotRoamingController $r10;
        androidx.work.impl.constraints.controllers.BatteryChargingController $r5;
        androidx.work.impl.constraints.controllers.NetworkMeteredController $r11;
        androidx.work.impl.constraints.WorkConstraintsCallback $r3;
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r2;
        androidx.work.impl.constraints.WorkConstraintsTracker r0;
        androidx.work.impl.constraints.controllers.NetworkUnmeteredController $r9;
        androidx.work.impl.constraints.controllers.BatteryNotLowController $r6;
        java.lang.Object $r12;
        androidx.work.impl.constraints.controllers.NetworkConnectedController $r8;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTracker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: androidx.work.impl.utils.taskexecutor.TaskExecutor;

        $r3 := @parameter2: androidx.work.impl.constraints.WorkConstraintsCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.WorkConstraintsCallback mCallback> = $r3;

        $r4 = newarray (androidx.work.impl.constraints.controllers.ConstraintController)[7];

        $r5 = new androidx.work.impl.constraints.controllers.BatteryChargingController;

        specialinvoke $r5.<androidx.work.impl.constraints.controllers.BatteryChargingController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>($r1, $r2);

        $r4[0] = $r5;

        $r6 = new androidx.work.impl.constraints.controllers.BatteryNotLowController;

        specialinvoke $r6.<androidx.work.impl.constraints.controllers.BatteryNotLowController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>($r1, $r2);

        $r4[1] = $r6;

        $r7 = new androidx.work.impl.constraints.controllers.StorageNotLowController;

        specialinvoke $r7.<androidx.work.impl.constraints.controllers.StorageNotLowController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>($r1, $r2);

        $r4[2] = $r7;

        $r8 = new androidx.work.impl.constraints.controllers.NetworkConnectedController;

        specialinvoke $r8.<androidx.work.impl.constraints.controllers.NetworkConnectedController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>($r1, $r2);

        $r4[3] = $r8;

        $r9 = new androidx.work.impl.constraints.controllers.NetworkUnmeteredController;

        specialinvoke $r9.<androidx.work.impl.constraints.controllers.NetworkUnmeteredController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>($r1, $r2);

        $r4[4] = $r9;

        $r10 = new androidx.work.impl.constraints.controllers.NetworkNotRoamingController;

        specialinvoke $r10.<androidx.work.impl.constraints.controllers.NetworkNotRoamingController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>($r1, $r2);

        $r4[5] = $r10;

        $r11 = new androidx.work.impl.constraints.controllers.NetworkMeteredController;

        specialinvoke $r11.<androidx.work.impl.constraints.controllers.NetworkMeteredController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>($r1, $r2);

        $r4[6] = $r11;

        r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.controllers.ConstraintController[] mConstraintControllers> = $r4;

        $r12 = new java.lang.Object;

        specialinvoke $r12.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.constraints.WorkConstraintsTracker: java.lang.Object mLock> = $r12;

        return;
    }

    void <init>(androidx.work.impl.constraints.WorkConstraintsCallback, androidx.work.impl.constraints.controllers.ConstraintController[])
    {
        androidx.work.impl.constraints.WorkConstraintsTracker r0;
        androidx.work.impl.constraints.controllers.ConstraintController[] r2;
        java.lang.Object $r3;
        androidx.work.impl.constraints.WorkConstraintsCallback $r1;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTracker;

        $r1 := @parameter0: androidx.work.impl.constraints.WorkConstraintsCallback;

        r2 := @parameter1: androidx.work.impl.constraints.controllers.ConstraintController[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.WorkConstraintsCallback mCallback> = $r1;

        r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.controllers.ConstraintController[] mConstraintControllers> = r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.constraints.WorkConstraintsTracker: java.lang.Object mLock> = $r3;

        return;
    }

    public boolean areAllConstraintsMet(java.lang.String)
    {
        java.lang.Throwable $r10;
        androidx.work.impl.constraints.controllers.ConstraintController[] $r4;
        java.lang.Object[] $r7;
        androidx.work.impl.constraints.controllers.ConstraintController r3;
        androidx.work.Logger $r5;
        androidx.work.impl.constraints.WorkConstraintsTracker r0;
        java.lang.Throwable[] $r9;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Class $r8;
        java.lang.String $r1, $r6;
        boolean $z0;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTracker;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: java.lang.Object mLock>;

        entermonitor $r2;

     label1:
        $r4 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.controllers.ConstraintController[] mConstraintControllers>;

        $i0 = lengthof $r4;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        r3 = $r4[$i1];

        $z0 = virtualinvoke r3.<androidx.work.impl.constraints.controllers.ConstraintController: boolean isWorkSpecConstrained(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

        $r5 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r6 = <androidx.work.impl.constraints.WorkConstraintsTracker: java.lang.String TAG>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r1;

        $r8 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r8.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7[1] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Work %s constrained by %s", $r7);

        $r9 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r5.<androidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])>($r6, $r1, $r9);

        exitmonitor $r2;

     label3:
        return 0;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        exitmonitor $r2;

     label6:
        return 1;

     label7:
        $r10 := @caughtexception;

        exitmonitor $r2;

     label8:
        throw $r10;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void onConstraintMet(java.util.List)
    {
        java.lang.Throwable r13;
        java.lang.Object[] $r9;
        java.util.Iterator $r5;
        java.util.ArrayList r4;
        androidx.work.impl.constraints.WorkConstraintsCallback $r12;
        java.util.List r1;
        androidx.work.Logger $r8;
        androidx.work.impl.constraints.WorkConstraintsTracker r0;
        java.lang.Throwable[] $r11;
        java.lang.Object $r2, $r6;
        java.lang.String $r3, r7, $r10;
        boolean $z0;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTracker;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: java.lang.Object mLock>;

        entermonitor $r2;

     label1:
        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $z0 = virtualinvoke r0.<androidx.work.impl.constraints.WorkConstraintsTracker: boolean areAllConstraintsMet(java.lang.String)>(r7);

        if $z0 == 0 goto label2;

        $r8 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r3 = <androidx.work.impl.constraints.WorkConstraintsTracker: java.lang.String TAG>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r7;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Constraints met for %s", $r9);

        $r11 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r8.<androidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])>($r3, $r10, $r11);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label2;

     label3:
        $r12 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.WorkConstraintsCallback mCallback>;

        if $r12 == null goto label4;

        $r12 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.WorkConstraintsCallback mCallback>;

        interfaceinvoke $r12.<androidx.work.impl.constraints.WorkConstraintsCallback: void onAllConstraintsMet(java.util.List)>(r4);

     label4:
        exitmonitor $r2;

     label5:
        return;

     label6:
        r13 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw r13;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onConstraintNotMet(java.util.List)
    {
        java.lang.Throwable $r4;
        java.util.List r1;
        androidx.work.impl.constraints.WorkConstraintsTracker r0;
        java.lang.Object $r2;
        androidx.work.impl.constraints.WorkConstraintsCallback $r3;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTracker;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: java.lang.Object mLock>;

        entermonitor $r2;

     label1:
        $r3 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.WorkConstraintsCallback mCallback>;

        if $r3 == null goto label2;

        $r3 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.WorkConstraintsCallback mCallback>;

        interfaceinvoke $r3.<androidx.work.impl.constraints.WorkConstraintsCallback: void onAllConstraintsNotMet(java.util.List)>(r1);

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void replace(java.lang.Iterable)
    {
        java.lang.Throwable $r5;
        androidx.work.impl.constraints.controllers.ConstraintController[] $r3;
        java.lang.Iterable r1;
        androidx.work.impl.constraints.controllers.ConstraintController r4;
        androidx.work.impl.constraints.WorkConstraintsTracker r0;
        int $i0, $i1, i2;
        java.lang.Object $r2;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTracker;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: java.lang.Object mLock>;

        entermonitor $r2;

     label01:
        $r3 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.controllers.ConstraintController[] mConstraintControllers>;

        $i0 = lengthof $r3;

        $i1 = 0;

        i2 = 0;

     label02:
        if i2 >= $i0 goto label03;

        r4 = $r3[i2];

        virtualinvoke r4.<androidx.work.impl.constraints.controllers.ConstraintController: void setCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback)>(null);

        i2 = i2 + 1;

        goto label02;

     label03:
        $r3 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.controllers.ConstraintController[] mConstraintControllers>;

        $i0 = lengthof $r3;

        i2 = 0;

     label04:
        if i2 >= $i0 goto label05;

        r4 = $r3[i2];

        virtualinvoke r4.<androidx.work.impl.constraints.controllers.ConstraintController: void replace(java.lang.Iterable)>(r1);

        i2 = i2 + 1;

        goto label04;

     label05:
        $r3 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.controllers.ConstraintController[] mConstraintControllers>;

        $i0 = lengthof $r3;

     label06:
        if $i1 >= $i0 goto label07;

        r4 = $r3[$i1];

        virtualinvoke r4.<androidx.work.impl.constraints.controllers.ConstraintController: void setCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback)>(r0);

        $i1 = $i1 + 1;

        goto label06;

     label07:
        exitmonitor $r2;

     label08:
        return;

     label09:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void reset()
    {
        androidx.work.impl.constraints.controllers.ConstraintController r2;
        java.lang.Throwable $r4;
        androidx.work.impl.constraints.WorkConstraintsTracker r0;
        androidx.work.impl.constraints.controllers.ConstraintController[] $r3;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTracker;

        $r1 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<androidx.work.impl.constraints.WorkConstraintsTracker: androidx.work.impl.constraints.controllers.ConstraintController[] mConstraintControllers>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        r2 = $r3[$i1];

        virtualinvoke r2.<androidx.work.impl.constraints.controllers.ConstraintController: void reset()>();

        $i1 = $i1 + 1;

        goto label2;

     label3:
        exitmonitor $r1;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
