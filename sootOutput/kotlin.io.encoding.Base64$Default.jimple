public final class kotlin.io.encoding.Base64$Default extends kotlin.io.encoding.Base64
{

    private void <init>()
    {
        kotlin.io.encoding.Base64$Default r0;

        r0 := @this: kotlin.io.encoding.Base64$Default;

        specialinvoke r0.<kotlin.io.encoding.Base64: void <init>(boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, null);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.io.encoding.Base64$Default r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: kotlin.io.encoding.Base64$Default;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<kotlin.io.encoding.Base64$Default: void <init>()>();

        return;
    }

    public final kotlin.io.encoding.Base64 getMime()
    {
        kotlin.io.encoding.Base64$Default r0;
        kotlin.io.encoding.Base64 $r1;

        r0 := @this: kotlin.io.encoding.Base64$Default;

        $r1 = staticinvoke <kotlin.io.encoding.Base64: kotlin.io.encoding.Base64 access$getMime$cp()>();

        return $r1;
    }

    public final byte[] getMimeLineSeparatorSymbols$kotlin_stdlib()
    {
        kotlin.io.encoding.Base64$Default r0;
        byte[] $r1;

        r0 := @this: kotlin.io.encoding.Base64$Default;

        $r1 = staticinvoke <kotlin.io.encoding.Base64: byte[] access$getMimeLineSeparatorSymbols$cp()>();

        return $r1;
    }

    public final kotlin.io.encoding.Base64 getUrlSafe()
    {
        kotlin.io.encoding.Base64$Default r0;
        kotlin.io.encoding.Base64 $r1;

        r0 := @this: kotlin.io.encoding.Base64$Default;

        $r1 = staticinvoke <kotlin.io.encoding.Base64: kotlin.io.encoding.Base64 access$getUrlSafe$cp()>();

        return $r1;
    }
}
