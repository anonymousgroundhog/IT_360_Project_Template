public final enum class com.google.common.collect.BoundType extends java.lang.Enum
{
    private static final com.google.common.collect.BoundType[] $VALUES;
    public static final enum com.google.common.collect.BoundType CLOSED;
    public static final enum com.google.common.collect.BoundType OPEN;
    final boolean inclusive;

    private static com.google.common.collect.BoundType[] $values()
    {
        com.google.common.collect.BoundType $r1;
        com.google.common.collect.BoundType[] $r0;

        $r0 = newarray (com.google.common.collect.BoundType)[2];

        $r1 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        $r0[0] = $r1;

        $r1 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType CLOSED>;

        $r0[1] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        com.google.common.collect.BoundType $r1;
        com.google.common.collect.BoundType[] $r0;

        $r1 = new com.google.common.collect.BoundType;

        specialinvoke $r1.<com.google.common.collect.BoundType: void <init>(java.lang.String,int,boolean)>("OPEN", 0, 0);

        <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN> = $r1;

        $r1 = new com.google.common.collect.BoundType;

        specialinvoke $r1.<com.google.common.collect.BoundType: void <init>(java.lang.String,int,boolean)>("CLOSED", 1, 1);

        <com.google.common.collect.BoundType: com.google.common.collect.BoundType CLOSED> = $r1;

        $r0 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType[] $values()>();

        <com.google.common.collect.BoundType: com.google.common.collect.BoundType[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int, boolean)
    {
        com.google.common.collect.BoundType r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.BoundType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<com.google.common.collect.BoundType: boolean inclusive> = $z0;

        return;
    }

    static com.google.common.collect.BoundType forBoolean(boolean)
    {
        com.google.common.collect.BoundType r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        r0 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType CLOSED>;

        return r0;

     label1:
        r0 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        return r0;
    }

    public static com.google.common.collect.BoundType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.google.common.collect.BoundType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/common/collect/BoundType;", $r0);

        $r2 = (com.google.common.collect.BoundType) $r1;

        return $r2;
    }

    public static com.google.common.collect.BoundType[] values()
    {
        java.lang.Object $r0;
        com.google.common.collect.BoundType[] $r1;

        $r1 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.google.common.collect.BoundType[]) $r0;

        return $r1;
    }
}
