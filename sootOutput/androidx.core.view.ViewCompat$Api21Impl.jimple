class androidx.core.view.ViewCompat$Api21Impl extends java.lang.Object
{

    private void <init>()
    {
        androidx.core.view.ViewCompat$Api21Impl r0;

        r0 := @this: androidx.core.view.ViewCompat$Api21Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void callCompatInsetAnimationCallback(android.view.WindowInsets, android.view.View)
    {
        android.view.WindowInsets $r0;
        int i0;
        android.view.View $r1;
        java.lang.Object $r2;
        android.view.View$OnApplyWindowInsetsListener r3;

        $r0 := @parameter0: android.view.WindowInsets;

        $r1 := @parameter1: android.view.View;

        i0 = <androidx.core.R$id: int tag_window_insets_animation_callback>;

        $r2 = virtualinvoke $r1.<android.view.View: java.lang.Object getTag(int)>(i0);

        r3 = (android.view.View$OnApplyWindowInsetsListener) $r2;

        if r3 == null goto label1;

        interfaceinvoke r3.<android.view.View$OnApplyWindowInsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>($r1, $r0);

     label1:
        return;
    }

    static androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View, androidx.core.view.WindowInsetsCompat, android.graphics.Rect)
    {
        android.graphics.Rect $r2;
        android.view.WindowInsets $r3;
        android.view.View $r0;
        androidx.core.view.WindowInsetsCompat $r1;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: androidx.core.view.WindowInsetsCompat;

        $r2 := @parameter2: android.graphics.Rect;

        $r3 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()>();

        if $r3 == null goto label1;

        $r3 = virtualinvoke $r0.<android.view.View: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)>($r3, $r2);

        $r1 = staticinvoke <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)>($r3, $r0);

        return $r1;

     label1:
        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

        return $r1;
    }

    static boolean dispatchNestedFling(android.view.View, float, float, boolean)
    {
        android.view.View $r0;
        float $f0, $f1;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        $z0 = virtualinvoke $r0.<android.view.View: boolean dispatchNestedFling(float,float,boolean)>($f0, $f1, $z0);

        return $z0;
    }

    static boolean dispatchNestedPreFling(android.view.View, float, float)
    {
        android.view.View $r0;
        float $f0, $f1;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 = virtualinvoke $r0.<android.view.View: boolean dispatchNestedPreFling(float,float)>($f0, $f1);

        return $z0;
    }

    static boolean dispatchNestedPreScroll(android.view.View, int, int, int[], int[])
    {
        int[] $r1, $r2;
        int $i0, $i1;
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: int[];

        $r2 := @parameter4: int[];

        $z0 = virtualinvoke $r0.<android.view.View: boolean dispatchNestedPreScroll(int,int,int[],int[])>($i0, $i1, $r1, $r2);

        return $z0;
    }

    static boolean dispatchNestedScroll(android.view.View, int, int, int, int, int[])
    {
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r1 := @parameter5: int[];

        $z0 = virtualinvoke $r0.<android.view.View: boolean dispatchNestedScroll(int,int,int,int,int[])>($i0, $i1, $i2, $i3, $r1);

        return $z0;
    }

    static android.content.res.ColorStateList getBackgroundTintList(android.view.View)
    {
        android.content.res.ColorStateList $r1;
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.res.ColorStateList getBackgroundTintList()>();

        return $r1;
    }

    static android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
    {
        android.view.View $r0;
        android.graphics.PorterDuff$Mode $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r0.<android.view.View: android.graphics.PorterDuff$Mode getBackgroundTintMode()>();

        return $r1;
    }

    static float getElevation(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getElevation()>();

        return $f0;
    }

    public static androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
    {
        android.view.View $r0;
        androidx.core.view.WindowInsetsCompat $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = staticinvoke <androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>($r0);

        return $r1;
    }

    static java.lang.String getTransitionName(android.view.View)
    {
        android.view.View $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r0.<android.view.View: java.lang.String getTransitionName()>();

        return $r1;
    }

    static float getTranslationZ(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getTranslationZ()>();

        return $f0;
    }

    static float getZ(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getZ()>();

        return $f0;
    }

    static boolean hasNestedScrollingParent(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 = virtualinvoke $r0.<android.view.View: boolean hasNestedScrollingParent()>();

        return $z0;
    }

    static boolean isImportantForAccessibility(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isImportantForAccessibility()>();

        return $z0;
    }

    static boolean isNestedScrollingEnabled(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isNestedScrollingEnabled()>();

        return $z0;
    }

    static void setBackgroundTintList(android.view.View, android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.content.res.ColorStateList;

        virtualinvoke $r0.<android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>($r1);

        return;
    }

    static void setBackgroundTintMode(android.view.View, android.graphics.PorterDuff$Mode)
    {
        android.view.View $r0;
        android.graphics.PorterDuff$Mode $r1;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.PorterDuff$Mode;

        virtualinvoke $r0.<android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)>($r1);

        return;
    }

    static void setElevation(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setElevation(float)>($f0);

        return;
    }

    static void setNestedScrollingEnabled(android.view.View, boolean)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        virtualinvoke $r0.<android.view.View: void setNestedScrollingEnabled(boolean)>($z0);

        return;
    }

    static void setOnApplyWindowInsetsListener(android.view.View, androidx.core.view.OnApplyWindowInsetsListener)
    {
        int i0;
        androidx.core.view.ViewCompat$Api21Impl$1 r4;
        android.view.View $r0;
        java.lang.Object $r2;
        androidx.core.view.OnApplyWindowInsetsListener $r1;
        android.view.View$OnApplyWindowInsetsListener r3;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: androidx.core.view.OnApplyWindowInsetsListener;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 >= 30 goto label1;

        i0 = <androidx.core.R$id: int tag_on_apply_window_listener>;

        virtualinvoke $r0.<android.view.View: void setTag(int,java.lang.Object)>(i0, $r1);

     label1:
        if $r1 != null goto label2;

        i0 = <androidx.core.R$id: int tag_window_insets_animation_callback>;

        $r2 = virtualinvoke $r0.<android.view.View: java.lang.Object getTag(int)>(i0);

        r3 = (android.view.View$OnApplyWindowInsetsListener) $r2;

        virtualinvoke $r0.<android.view.View: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>(r3);

        return;

     label2:
        r4 = new androidx.core.view.ViewCompat$Api21Impl$1;

        specialinvoke r4.<androidx.core.view.ViewCompat$Api21Impl$1: void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>($r0, $r1);

        virtualinvoke $r0.<android.view.View: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>(r4);

        return;
    }

    static void setTransitionName(android.view.View, java.lang.String)
    {
        android.view.View $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke $r0.<android.view.View: void setTransitionName(java.lang.String)>($r1);

        return;
    }

    static void setTranslationZ(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setTranslationZ(float)>($f0);

        return;
    }

    static void setZ(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setZ(float)>($f0);

        return;
    }

    static boolean startNestedScroll(android.view.View, int)
    {
        int $i0;
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.view.View: boolean startNestedScroll(int)>($i0);

        return $z0;
    }

    static void stopNestedScroll(android.view.View)
    {
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.view.View: void stopNestedScroll()>();

        return;
    }
}
