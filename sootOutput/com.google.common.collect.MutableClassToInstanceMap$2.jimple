class com.google.common.collect.MutableClassToInstanceMap$2 extends com.google.common.collect.ForwardingSet
{
    final com.google.common.collect.MutableClassToInstanceMap this$0;

    void <init>(com.google.common.collect.MutableClassToInstanceMap)
    {
        com.google.common.collect.MutableClassToInstanceMap $r1;
        com.google.common.collect.MutableClassToInstanceMap$2 r0;

        r0 := @this: com.google.common.collect.MutableClassToInstanceMap$2;

        $r1 := @parameter0: com.google.common.collect.MutableClassToInstanceMap;

        r0.<com.google.common.collect.MutableClassToInstanceMap$2: com.google.common.collect.MutableClassToInstanceMap this$0> = $r1;

        specialinvoke r0.<com.google.common.collect.ForwardingSet: void <init>()>();

        return;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.Set $r1;
        com.google.common.collect.MutableClassToInstanceMap$2 r0;

        r0 := @this: com.google.common.collect.MutableClassToInstanceMap$2;

        $r1 = virtualinvoke r0.<com.google.common.collect.MutableClassToInstanceMap$2: java.util.Set delegate()>();

        return $r1;
    }

    protected volatile java.util.Collection delegate()
    {
        java.util.Set $r1;
        com.google.common.collect.MutableClassToInstanceMap$2 r0;

        r0 := @this: com.google.common.collect.MutableClassToInstanceMap$2;

        $r1 = virtualinvoke r0.<com.google.common.collect.MutableClassToInstanceMap$2: java.util.Set delegate()>();

        return $r1;
    }

    protected java.util.Set delegate()
    {
        com.google.common.collect.MutableClassToInstanceMap $r1;
        com.google.common.collect.MutableClassToInstanceMap$2 r0;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: com.google.common.collect.MutableClassToInstanceMap$2;

        $r1 = r0.<com.google.common.collect.MutableClassToInstanceMap$2: com.google.common.collect.MutableClassToInstanceMap this$0>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.MutableClassToInstanceMap: java.util.Map delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        return $r3;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.MutableClassToInstanceMap$2$1 $r1;
        java.util.Iterator $r3;
        com.google.common.collect.MutableClassToInstanceMap$2 r0;
        java.util.Set $r2;

        r0 := @this: com.google.common.collect.MutableClassToInstanceMap$2;

        $r1 = new com.google.common.collect.MutableClassToInstanceMap$2$1;

        $r2 = virtualinvoke r0.<com.google.common.collect.MutableClassToInstanceMap$2: java.util.Set delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        specialinvoke $r1.<com.google.common.collect.MutableClassToInstanceMap$2$1: void <init>(com.google.common.collect.MutableClassToInstanceMap$2,java.util.Iterator)>(r0, $r3);

        return $r1;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Object[] $r1;
        com.google.common.collect.MutableClassToInstanceMap$2 r0;

        r0 := @this: com.google.common.collect.MutableClassToInstanceMap$2;

        $r1 = virtualinvoke r0.<com.google.common.collect.MutableClassToInstanceMap$2: java.lang.Object[] standardToArray()>();

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] r1;
        com.google.common.collect.MutableClassToInstanceMap$2 r0;

        r0 := @this: com.google.common.collect.MutableClassToInstanceMap$2;

        r1 := @parameter0: java.lang.Object[];

        r1 = virtualinvoke r0.<com.google.common.collect.MutableClassToInstanceMap$2: java.lang.Object[] standardToArray(java.lang.Object[])>(r1);

        return r1;
    }
}
