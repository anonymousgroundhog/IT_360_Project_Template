class androidx.room.MultiInstanceInvalidationClient$2 extends java.lang.Object implements android.content.ServiceConnection
{
    final androidx.room.MultiInstanceInvalidationClient this$0;

    void <init>(androidx.room.MultiInstanceInvalidationClient)
    {
        androidx.room.MultiInstanceInvalidationClient $r1;
        androidx.room.MultiInstanceInvalidationClient$2 r0;

        r0 := @this: androidx.room.MultiInstanceInvalidationClient$2;

        $r1 := @parameter0: androidx.room.MultiInstanceInvalidationClient;

        r0.<androidx.room.MultiInstanceInvalidationClient$2: androidx.room.MultiInstanceInvalidationClient this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        java.util.concurrent.Executor $r5;
        android.content.ComponentName $r1;
        androidx.room.IMultiInstanceInvalidationService $r3;
        androidx.room.MultiInstanceInvalidationClient $r4;
        androidx.room.MultiInstanceInvalidationClient$2 r0;
        java.lang.Runnable $r6;
        android.os.IBinder $r2;

        r0 := @this: androidx.room.MultiInstanceInvalidationClient$2;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        $r4 = r0.<androidx.room.MultiInstanceInvalidationClient$2: androidx.room.MultiInstanceInvalidationClient this$0>;

        $r3 = staticinvoke <androidx.room.IMultiInstanceInvalidationService$Stub: androidx.room.IMultiInstanceInvalidationService asInterface(android.os.IBinder)>($r2);

        $r4.<androidx.room.MultiInstanceInvalidationClient: androidx.room.IMultiInstanceInvalidationService mService> = $r3;

        $r4 = r0.<androidx.room.MultiInstanceInvalidationClient$2: androidx.room.MultiInstanceInvalidationClient this$0>;

        $r5 = $r4.<androidx.room.MultiInstanceInvalidationClient: java.util.concurrent.Executor mExecutor>;

        $r4 = r0.<androidx.room.MultiInstanceInvalidationClient$2: androidx.room.MultiInstanceInvalidationClient this$0>;

        $r6 = $r4.<androidx.room.MultiInstanceInvalidationClient: java.lang.Runnable mSetUpRunnable>;

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        java.util.concurrent.Executor $r3;
        android.content.ComponentName $r1;
        androidx.room.MultiInstanceInvalidationClient $r2;
        androidx.room.MultiInstanceInvalidationClient$2 r0;
        java.lang.Runnable $r4;

        r0 := @this: androidx.room.MultiInstanceInvalidationClient$2;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 = r0.<androidx.room.MultiInstanceInvalidationClient$2: androidx.room.MultiInstanceInvalidationClient this$0>;

        $r3 = $r2.<androidx.room.MultiInstanceInvalidationClient: java.util.concurrent.Executor mExecutor>;

        $r2 = r0.<androidx.room.MultiInstanceInvalidationClient$2: androidx.room.MultiInstanceInvalidationClient this$0>;

        $r4 = $r2.<androidx.room.MultiInstanceInvalidationClient: java.lang.Runnable mRemoveObserverRunnable>;

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        $r2 = r0.<androidx.room.MultiInstanceInvalidationClient$2: androidx.room.MultiInstanceInvalidationClient this$0>;

        $r2.<androidx.room.MultiInstanceInvalidationClient: androidx.room.IMultiInstanceInvalidationService mService> = null;

        return;
    }
}
