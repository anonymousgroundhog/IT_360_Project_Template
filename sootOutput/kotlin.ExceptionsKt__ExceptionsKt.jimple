class kotlin.ExceptionsKt__ExceptionsKt extends java.lang.Object
{

    public void <init>()
    {
        kotlin.ExceptionsKt__ExceptionsKt r0;

        r0 := @this: kotlin.ExceptionsKt__ExceptionsKt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void addSuppressed(java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable $r0, $r1;
        kotlin.internal.PlatformImplementations $r2;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "exception");

        if $r0 == $r1 goto label1;

        $r2 = <kotlin.internal.PlatformImplementationsKt: kotlin.internal.PlatformImplementations IMPLEMENTATIONS>;

        virtualinvoke $r2.<kotlin.internal.PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r0, $r1);

     label1:
        return;
    }

    public static final java.lang.StackTraceElement[] getStackTrace(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        java.lang.StackTraceElement[] $r1;

        $r0 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        return $r1;
    }

    public static void getStackTrace$annotations(java.lang.Throwable)
    {
        java.lang.Throwable $r0;

        $r0 := @parameter0: java.lang.Throwable;

        return;
    }

    public static final java.util.List getSuppressedExceptions(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        kotlin.internal.PlatformImplementations $r2;
        java.util.List $r1;

        $r0 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = <kotlin.internal.PlatformImplementationsKt: kotlin.internal.PlatformImplementations IMPLEMENTATIONS>;

        $r1 = virtualinvoke $r2.<kotlin.internal.PlatformImplementations: java.util.List getSuppressed(java.lang.Throwable)>($r0);

        return $r1;
    }

    public static void getSuppressedExceptions$annotations(java.lang.Throwable)
    {
        java.lang.Throwable $r0;

        $r0 := @parameter0: java.lang.Throwable;

        return;
    }

    private static final void printStackTrace(java.lang.Throwable)
    {
        java.lang.Throwable $r0;

        $r0 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r0.<java.lang.Throwable: void printStackTrace()>();

        return;
    }

    private static final void printStackTrace(java.lang.Throwable, java.io.PrintStream)
    {
        java.lang.Throwable $r0;
        java.io.PrintStream $r1;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.io.PrintStream;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "stream");

        virtualinvoke $r0.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r1);

        return;
    }

    private static final void printStackTrace(java.lang.Throwable, java.io.PrintWriter)
    {
        java.lang.Throwable $r0;
        java.io.PrintWriter $r1;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.io.PrintWriter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "writer");

        virtualinvoke $r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r1);

        return;
    }

    public static final java.lang.String stackTraceToString(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        java.io.PrintWriter r1;
        java.io.StringWriter r3;
        java.io.Writer $r4;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.io.StringWriter;

        specialinvoke r3.<java.io.StringWriter: void <init>()>();

        r1 = new java.io.PrintWriter;

        $r4 = (java.io.Writer) r3;

        specialinvoke r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r4);

        virtualinvoke $r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

        $r2 = virtualinvoke r3.<java.io.StringWriter: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "sw.toString()");

        return $r2;
    }
}
