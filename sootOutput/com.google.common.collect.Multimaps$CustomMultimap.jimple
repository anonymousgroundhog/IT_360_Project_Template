class com.google.common.collect.Multimaps$CustomMultimap extends com.google.common.collect.AbstractMapBasedMultimap
{
    private static final long serialVersionUID;
    transient com.google.common.base.Supplier factory;

    void <init>(java.util.Map, com.google.common.base.Supplier)
    {
        java.util.Map r1;
        com.google.common.base.Supplier r2;
        java.lang.Object $r3;
        com.google.common.collect.Multimaps$CustomMultimap r0;

        r0 := @this: com.google.common.collect.Multimaps$CustomMultimap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: com.google.common.base.Supplier;

        specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultimap: void <init>(java.util.Map)>(r1);

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r2 = (com.google.common.base.Supplier) $r3;

        r0.<com.google.common.collect.Multimaps$CustomMultimap: com.google.common.base.Supplier factory> = r2;

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.Map r4;
        java.io.ObjectInputStream $r1;
        com.google.common.base.Supplier r3;
        java.lang.Object $r2;
        com.google.common.collect.Multimaps$CustomMultimap r0;

        r0 := @this: com.google.common.collect.Multimaps$CustomMultimap;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r3 = (com.google.common.base.Supplier) $r2;

        r0.<com.google.common.collect.Multimaps$CustomMultimap: com.google.common.base.Supplier factory> = r3;

        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r4 = (java.util.Map) $r2;

        virtualinvoke r0.<com.google.common.collect.Multimaps$CustomMultimap: void setMap(java.util.Map)>(r4);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Map $r2;
        com.google.common.base.Supplier $r3;
        java.io.ObjectOutputStream $r1;
        com.google.common.collect.Multimaps$CustomMultimap r0;

        r0 := @this: com.google.common.collect.Multimaps$CustomMultimap;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r3 = r0.<com.google.common.collect.Multimaps$CustomMultimap: com.google.common.base.Supplier factory>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

        $r2 = virtualinvoke r0.<com.google.common.collect.Multimaps$CustomMultimap: java.util.Map backingMap()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }

    java.util.Map createAsMap()
    {
        com.google.common.collect.Multimaps$CustomMultimap r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.Multimaps$CustomMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multimaps$CustomMultimap: java.util.Map createMaybeNavigableAsMap()>();

        return $r1;
    }

    protected java.util.Collection createCollection()
    {
        java.util.Collection $r3;
        com.google.common.base.Supplier $r2;
        java.lang.Object $r1;
        com.google.common.collect.Multimaps$CustomMultimap r0;

        r0 := @this: com.google.common.collect.Multimaps$CustomMultimap;

        $r2 = r0.<com.google.common.collect.Multimaps$CustomMultimap: com.google.common.base.Supplier factory>;

        $r1 = interfaceinvoke $r2.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r3 = (java.util.Collection) $r1;

        return $r3;
    }

    java.util.Set createKeySet()
    {
        java.util.Set $r1;
        com.google.common.collect.Multimaps$CustomMultimap r0;

        r0 := @this: com.google.common.collect.Multimaps$CustomMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multimaps$CustomMultimap: java.util.Set createMaybeNavigableKeySet()>();

        return $r1;
    }

    java.util.Collection unmodifiableCollectionSubclass(java.util.Collection)
    {
        java.util.List $r5;
        java.util.SortedSet $r3;
        java.util.Collection r1;
        java.util.Set $r4;
        java.util.NavigableSet $r2;
        com.google.common.collect.Multimaps$CustomMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multimaps$CustomMultimap;

        r1 := @parameter0: java.util.Collection;

        $z0 = r1 instanceof java.util.NavigableSet;

        if $z0 == 0 goto label1;

        $r2 = (java.util.NavigableSet) r1;

        $r2 = staticinvoke <com.google.common.collect.Sets: java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet)>($r2);

        return $r2;

     label1:
        $z0 = r1 instanceof java.util.SortedSet;

        if $z0 == 0 goto label2;

        $r3 = (java.util.SortedSet) r1;

        $r3 = staticinvoke <java.util.Collections: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>($r3);

        return $r3;

     label2:
        $z0 = r1 instanceof java.util.Set;

        if $z0 == 0 goto label3;

        $r4 = (java.util.Set) r1;

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r4);

        return $r4;

     label3:
        $z0 = r1 instanceof java.util.List;

        if $z0 == 0 goto label4;

        $r5 = (java.util.List) r1;

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        return $r5;

     label4:
        r1 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>(r1);

        return r1;
    }

    java.util.Collection wrapCollection(java.lang.Object, java.util.Collection)
    {
        java.util.SortedSet $r7;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedSet $r8;
        java.util.Collection r2;
        java.util.Set $r9;
        java.util.NavigableSet $r5;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection $r10;
        com.google.common.collect.Multimaps$CustomMultimap r0;
        java.util.List $r3;
        java.lang.Object r1;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet $r4;
        com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet $r6;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multimaps$CustomMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Collection;

        $z0 = r2 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r3 = (java.util.List) r2;

        $r3 = virtualinvoke r0.<com.google.common.collect.Multimaps$CustomMultimap: java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>(r1, $r3, null);

        return $r3;

     label1:
        $z0 = r2 instanceof java.util.NavigableSet;

        if $z0 == 0 goto label2;

        $r4 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet;

        $r5 = (java.util.NavigableSet) r2;

        specialinvoke $r4.<com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.NavigableSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>(r0, r1, $r5, null);

        return $r4;

     label2:
        $z0 = r2 instanceof java.util.SortedSet;

        if $z0 == 0 goto label3;

        $r6 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet;

        $r7 = (java.util.SortedSet) r2;

        specialinvoke $r6.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>(r0, r1, $r7, null);

        return $r6;

     label3:
        $z0 = r2 instanceof java.util.Set;

        if $z0 == 0 goto label4;

        $r8 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedSet;

        $r9 = (java.util.Set) r2;

        specialinvoke $r8.<com.google.common.collect.AbstractMapBasedMultimap$WrappedSet: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Set)>(r0, r1, $r9);

        return $r8;

     label4:
        $r10 = new com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection;

        specialinvoke $r10.<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection)>(r0, r1, r2, null);

        return $r10;
    }
}
