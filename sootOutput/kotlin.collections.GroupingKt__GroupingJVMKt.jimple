class kotlin.collections.GroupingKt__GroupingJVMKt extends java.lang.Object
{

    public void <init>()
    {
        kotlin.collections.GroupingKt__GroupingJVMKt r0;

        r0 := @this: kotlin.collections.GroupingKt__GroupingJVMKt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.util.Map eachCount(kotlin.collections.Grouping)
    {
        java.util.Map$Entry $r8, $r9;
        java.util.Iterator $r2;
        kotlin.jvm.internal.Ref$IntRef r5;
        java.util.Set $r6;
        java.lang.Integer $r10;
        java.lang.Iterable $r7;
        java.util.LinkedHashMap $r11;
        kotlin.collections.Grouping $r0;
        java.util.Map r1;
        int $i0;
        java.lang.Object $r3, $r4;
        boolean $z0;

        $r0 := @parameter0: kotlin.collections.Grouping;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r11 = new java.util.LinkedHashMap;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>()>();

        r1 = (java.util.Map) $r11;

        $r2 = interfaceinvoke $r0.<kotlin.collections.Grouping: java.util.Iterator sourceIterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.collections.Grouping: java.lang.Object keyOf(java.lang.Object)>($r3);

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 != null goto label2;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        r5 = new kotlin.jvm.internal.Ref$IntRef;

        $r4 = r5;

        specialinvoke r5.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        goto label4;

     label4:
        r5 = (kotlin.jvm.internal.Ref$IntRef) $r4;

        $i0 = r5.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i0 = $i0 + 1;

        r5.<kotlin.jvm.internal.Ref$IntRef: int element> = $i0;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r5);

        goto label1;

     label5:
        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r7 = (java.lang.Iterable) $r6;

        $r2 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type kotlin.collections.MutableMap.MutableEntry<K of kotlin.collections.GroupingKt__GroupingJVMKt.mapValuesInPlace$lambda$4, R of kotlin.collections.GroupingKt__GroupingJVMKt.mapValuesInPlace$lambda$4>");

        $r9 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry asMutableMapEntry(java.lang.Object)>($r8);

        $r3 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (kotlin.jvm.internal.Ref$IntRef) $r3;

        $i0 = r5.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r10);

        goto label6;

     label7:
        r1 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object)>(r1);

        return r1;
    }

    private static final java.util.Map mapValuesInPlace(java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.util.Map$Entry r6, $r7;
        java.util.Iterator $r4;
        java.util.Set $r2;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r3;
        java.util.Map $r0;
        java.lang.Object $r5;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "f");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r6, "null cannot be cast to non-null type kotlin.collections.MutableMap.MutableEntry<K of kotlin.collections.GroupingKt__GroupingJVMKt.mapValuesInPlace$lambda$4, R of kotlin.collections.GroupingKt__GroupingJVMKt.mapValuesInPlace$lambda$4>");

        $r7 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry asMutableMapEntry(java.lang.Object)>(r6);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r0 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object)>($r0);

        return $r0;
    }
}
