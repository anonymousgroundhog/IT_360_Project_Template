public abstract class androidx.sqlite.db.SupportSQLiteOpenHelper$Callback extends java.lang.Object
{
    private static final java.lang.String TAG;
    public final int version;

    public void <init>(int)
    {
        int $i0;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Callback r0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: int version> = $i0;

        return;
    }

    private void deleteDatabaseFile(java.lang.String)
    {
        java.io.File r4;
        java.lang.Exception r5;
        int $i0;
        java.lang.StringBuilder r3;
        java.lang.String $r1, $r2;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Callback r0;
        boolean $z0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(":memory:");

        if $z0 != 0 goto label5;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleting the database file: ");

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SupportSQLite", $r2);

        r4 = new java.io.File;

     label2:
        specialinvoke r4.<java.io.File: void <init>(java.lang.String)>($r1);

        staticinvoke <android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>(r4);

     label3:
        return;

     label4:
        r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SupportSQLite", "delete failed: ", r5);

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.sqlite.db.SupportSQLiteDatabase $r1;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Callback r0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback;

        $r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        return;
    }

    public void onCorruption(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        java.lang.Throwable $r6;
        java.util.Iterator $r8;
        android.util.Pair r10;
        java.io.IOException $r11;
        java.util.List r4, $r5;
        android.database.sqlite.SQLiteException $r7;
        androidx.sqlite.db.SupportSQLiteDatabase $r1;
        java.lang.StringBuilder r2;
        java.lang.Object $r9;
        java.lang.String $r3;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Callback r0;
        boolean $z0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback;

        $r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corruption reported by sqlite on database: ");

        $r3 = interfaceinvoke $r1.<androidx.sqlite.db.SupportSQLiteDatabase: java.lang.String getPath()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SupportSQLite", $r3);

        $z0 = interfaceinvoke $r1.<androidx.sqlite.db.SupportSQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label01;

        $r3 = interfaceinvoke $r1.<androidx.sqlite.db.SupportSQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void deleteDatabaseFile(java.lang.String)>($r3);

        return;

     label01:
        r4 = null;

     label02:
        $r5 = interfaceinvoke $r1.<androidx.sqlite.db.SupportSQLiteDatabase: java.util.List getAttachedDbs()>();

     label03:
        r4 = $r5;

        goto label06;

     label04:
        $r6 := @caughtexception;

        goto label08;

     label05:
        $r7 := @caughtexception;

     label06:
        interfaceinvoke $r1.<androidx.sqlite.db.SupportSQLiteDatabase: void close()>();

     label07:
        goto label14;

     label08:
        if r4 == null goto label11;

        $r8 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.util.Pair) $r9;

        $r9 = r10.<android.util.Pair: java.lang.Object second>;

        $r3 = (java.lang.String) $r9;

        specialinvoke r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void deleteDatabaseFile(java.lang.String)>($r3);

        goto label09;

     label10:
        goto label12;

     label11:
        $r3 = interfaceinvoke $r1.<androidx.sqlite.db.SupportSQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void deleteDatabaseFile(java.lang.String)>($r3);

     label12:
        throw $r6;

     label13:
        $r11 := @caughtexception;

     label14:
        if r4 == null goto label17;

        $r8 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.util.Pair) $r9;

        $r9 = r10.<android.util.Pair: java.lang.Object second>;

        $r3 = (java.lang.String) $r9;

        specialinvoke r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void deleteDatabaseFile(java.lang.String)>($r3);

        goto label15;

     label16:
        return;

     label17:
        $r3 = interfaceinvoke $r1.<androidx.sqlite.db.SupportSQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void deleteDatabaseFile(java.lang.String)>($r3);

        return;

        catch android.database.sqlite.SQLiteException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.io.IOException from label06 to label07 with label13;
        catch java.lang.Throwable from label06 to label07 with label04;
    }

    public abstract void onCreate(androidx.sqlite.db.SupportSQLiteDatabase);

    public void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteException $r2;
        androidx.sqlite.db.SupportSQLiteDatabase $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Callback r0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback;

        $r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new android.database.sqlite.SQLiteException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t downgrade database from version ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    public void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
    {
        androidx.sqlite.db.SupportSQLiteDatabase $r1;
        androidx.sqlite.db.SupportSQLiteOpenHelper$Callback r0;

        r0 := @this: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback;

        $r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        return;
    }

    public abstract void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase, int, int);

    public static void <clinit>()
    {
        <androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: java.lang.String TAG> = "SupportSQLite";

        return;
    }
}
