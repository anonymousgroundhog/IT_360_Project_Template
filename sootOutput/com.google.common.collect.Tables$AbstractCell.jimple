abstract class com.google.common.collect.Tables$AbstractCell extends java.lang.Object implements com.google.common.collect.Table$Cell
{

    void <init>()
    {
        com.google.common.collect.Tables$AbstractCell r0;

        r0 := @this: com.google.common.collect.Tables$AbstractCell;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.Tables$AbstractCell r0;
        com.google.common.collect.Table$Cell r2;
        java.lang.Object $r1, $r3;
        boolean z0;

        r0 := @this: com.google.common.collect.Tables$AbstractCell;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        z0 = $r1 instanceof com.google.common.collect.Table$Cell;

        if z0 == 0 goto label2;

        r2 = (com.google.common.collect.Table$Cell) $r1;

        $r1 = virtualinvoke r0.<com.google.common.collect.Tables$AbstractCell: java.lang.Object getRowKey()>();

        $r3 = interfaceinvoke r2.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r3);

        if z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<com.google.common.collect.Tables$AbstractCell: java.lang.Object getColumnKey()>();

        $r3 = interfaceinvoke r2.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r3);

        if z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<com.google.common.collect.Tables$AbstractCell: java.lang.Object getValue()>();

        $r3 = interfaceinvoke r2.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>();

        z0 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r3);

        if z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        java.lang.Object[] $r4;
        com.google.common.collect.Tables$AbstractCell r0;
        int $i0;
        java.lang.Object $r1, $r2, $r3;

        r0 := @this: com.google.common.collect.Tables$AbstractCell;

        $r1 = virtualinvoke r0.<com.google.common.collect.Tables$AbstractCell: java.lang.Object getRowKey()>();

        $r2 = virtualinvoke r0.<com.google.common.collect.Tables$AbstractCell: java.lang.Object getColumnKey()>();

        $r3 = virtualinvoke r0.<com.google.common.collect.Tables$AbstractCell: java.lang.Object getValue()>();

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = $r1;

        $r4[1] = $r2;

        $r4[2] = $r3;

        $i0 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r4);

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.Tables$AbstractCell r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.StringBuilder $r6;
        java.lang.String $r2, $r3, $r4, $r5;

        r0 := @this: com.google.common.collect.Tables$AbstractCell;

        $r1 = virtualinvoke r0.<com.google.common.collect.Tables$AbstractCell: java.lang.Object getRowKey()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r1 = virtualinvoke r0.<com.google.common.collect.Tables$AbstractCell: java.lang.Object getColumnKey()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r1 = virtualinvoke r0.<com.google.common.collect.Tables$AbstractCell: java.lang.Object getValue()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + 4;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
