public final class com.google.android.gms.internal.ads.zzamj extends java.lang.Object
{
    private static final java.util.regex.Pattern zza;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^NOTE([ \t].*)?$");

        <com.google.android.gms.internal.ads.zzamj: java.util.regex.Pattern zza> = $r0;

        return;
    }

    public static float zza(java.lang.String) throws java.lang.NumberFormatException
    {
        int $i0;
        float $f0;
        java.lang.NumberFormatException $r1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("%");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r0);

        $f0 = $f0 / 100.0F;

        return $f0;

     label1:
        $r1 = new java.lang.NumberFormatException;

        specialinvoke $r1.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Percentages must end with %");

        throw $r1;
    }

    public static long zzb(java.lang.String) throws java.lang.NumberFormatException
    {
        int $i0, $i1;
        java.lang.String[] $r1, $r2;
        long $l2, $l3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = <com.google.android.gms.internal.ads.zzfy: int zza>;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", 2);

        $i0 = 0;

        $r0 = $r1[0];

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", -1);

        $i1 = lengthof $r2;

        $l2 = 0L;

     label1:
        if $i0 >= $i1 goto label2;

        $r0 = $r2[$i0];

        $l2 = $l2 * 60L;

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        $l2 = $l2 + $l3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $l2 = $l2 * 1000L;

        $i0 = lengthof $r1;

        if $i0 != 2 goto label3;

        $r0 = $r1[1];

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        $l2 = $l2 + $l3;

        goto label3;

     label3:
        $l2 = $l2 * 1000L;

        return $l2;
    }
}
