final class com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException extends java.util.concurrent.TimeoutException
{

    private void <init>(java.lang.String)
    {
        com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r1);

        return;
    }

    void <init>(java.lang.String, com.google.common.util.concurrent.TimeoutFuture$1)
    {
        com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException r0;
        java.lang.String $r1;
        com.google.common.util.concurrent.TimeoutFuture$1 $r2;

        r0 := @this: com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.common.util.concurrent.TimeoutFuture$1;

        specialinvoke r0.<com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException: void <init>(java.lang.String)>($r1);

        return;
    }

    public java.lang.Throwable fillInStackTrace()
    {
        java.lang.Throwable $r2;
        com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException r0;
        java.lang.StackTraceElement[] $r1;

        r0 := @this: com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException;

        entermonitor r0;

     label1:
        $r1 = newarray (java.lang.StackTraceElement)[0];

        virtualinvoke r0.<com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException: void setStackTrace(java.lang.StackTraceElement[])>($r1);

     label2:
        exitmonitor r0;

        return r0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
