public final class kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1 extends java.lang.Object implements kotlinx.coroutines.flow.Flow
{
    final kotlin.jvm.functions.Function4 $predicate$inlined;
    final kotlinx.coroutines.flow.Flow $this_retryWhen$inlined;

    public void <init>(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function4)
    {
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.jvm.functions.Function4 $r2;
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1 r0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: kotlin.jvm.functions.Function4;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_retryWhen$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function4 $predicate$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        java.lang.Throwable r9;
        java.lang.IllegalStateException $r8;
        kotlin.coroutines.Continuation $r2;
        long l1;
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1 r0;
        java.lang.Long $r12;
        int $i0;
        java.lang.Boolean $r13;
        boolean $z0;
        kotlin.jvm.functions.Function4 r11;
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1 $r3, $r4;
        kotlinx.coroutines.flow.Flow r10;
        kotlin.Unit r14;
        kotlinx.coroutines.flow.FlowCollector $r1;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1;

        if $z0 == 0 goto label01;

        $r3 = (kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1) $r2;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label01;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label> = $i0;

        goto label02;

     label01:
        $r3 = new kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: void <init>(kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)>(r0, $r2);

     label02:
        $r4 = $r3;

        $r5 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object result>;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $r7 = $r6;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label06;
            case 1: goto label05;
            case 2: goto label04;
            default: goto label03;
        };

     label03:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;

     label04:
        l1 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0>;

        $r7 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$2>;

        r9 = (java.lang.Throwable) $r7;

        $r7 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1>;

        $r1 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r7 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        r0 = (kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1) $r7;

        goto label10;

     label05:
        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int I$0>;

        l1 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0>;

        $r7 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1>;

        $r1 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r7 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        r0 = (kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1) $r7;

        goto label09;

     label06:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        $r2 = (kotlin.coroutines.Continuation) $r3;

        l1 = 0L;

     label07:
        $i0 = 0;

        r10 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_retryWhen$inlined>;

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = r0;

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = $r1;

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$2> = null;

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0> = l1;

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int I$0> = 0;

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label> = 1;

        $r5 = staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Object catchImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>(r10, $r1, $r4);

        if $r5 != $r7 goto label08;

        return $r7;

     label08:
        $r6 = $r7;

     label09:
        r9 = (java.lang.Throwable) $r5;

        if r9 == null goto label12;

        r11 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function4 $predicate$inlined>;

        $r12 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Long boxLong(long)>(l1);

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = r0;

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = $r1;

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$2> = r9;

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0> = l1;

        $r4.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label> = 2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(6);

        $r5 = interfaceinvoke r11.<kotlin.jvm.functions.Function4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r9, $r12, $r4);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(7);

        if $r5 != $r6 goto label10;

        return $r6;

     label10:
        $r13 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label11;

        l1 = l1 + 1L;

        $i0 = 1;

        $r7 = $r6;

        goto label13;

     label11:
        throw r9;

     label12:
        $r7 = $r6;

     label13:
        if $i0 != 0 goto label07;

        r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r14;
    }
}
