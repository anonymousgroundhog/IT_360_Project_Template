final class kotlinx.coroutines.flow.FlowKt__CollectKt extends java.lang.Object
{

    public static final java.lang.Object collect(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.coroutines.Continuation $r1;
        kotlin.Unit r6;
        kotlinx.coroutines.flow.FlowCollector $r3;
        java.lang.Object $r4, $r5;
        kotlinx.coroutines.flow.internal.NopCollector $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = <kotlinx.coroutines.flow.internal.NopCollector: kotlinx.coroutines.flow.internal.NopCollector INSTANCE>;

        $r3 = (kotlinx.coroutines.flow.FlowCollector) $r2;

        $r4 = interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r3, $r1);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label1;

        return $r4;

     label1:
        r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r6;
    }

    public static final java.lang.Object collect(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.functions.Function2 $r1;
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.Unit r7;
        kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3 $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: void <init>(kotlin.jvm.functions.Function2)>($r1);

        $r4 = (kotlinx.coroutines.flow.FlowCollector) $r3;

        $r5 = interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r2);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r7;
    }

    private static final java.lang.Object collect$$forInline(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit r5;
        kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3 $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlin.jvm.functions.Function2 $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: void <init>(kotlin.jvm.functions.Function2)>($r1);

        $r4 = (kotlinx.coroutines.flow.FlowCollector) $r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r2);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r5;
    }

    public static final java.lang.Object collectIndexed(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.functions.Function3 $r1;
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.Unit r7;
        kotlinx.coroutines.flow.FlowCollector $r4;
        java.lang.Object $r5, $r6;
        kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2 $r3;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: void <init>(kotlin.jvm.functions.Function3)>($r1);

        $r4 = (kotlinx.coroutines.flow.FlowCollector) $r3;

        $r5 = interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r2);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r7;
    }

    private static final java.lang.Object collectIndexed$$forInline(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit r5;
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlin.jvm.functions.Function3 $r1;
        kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2 $r3;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: void <init>(kotlin.jvm.functions.Function3)>($r1);

        $r4 = (kotlinx.coroutines.flow.FlowCollector) $r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r2);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r5;
    }

    public static final java.lang.Object collectLatest(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit r5;
        java.lang.Object $r3, $r4;
        kotlin.jvm.functions.Function2 $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow mapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>($r0, $r1);

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)>($r0, 0, null, 2, null);

        $r3 = staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)>($r0, $r2);

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r3 != $r4 goto label1;

        return $r3;

     label1:
        r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r5;
    }

    public static final java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector, kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit r5;
        kotlinx.coroutines.flow.FlowCollector $r0;
        java.lang.Object $r3, $r4;

        $r0 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: void ensureActive(kotlinx.coroutines.flow.FlowCollector)>($r0);

        $r3 = interfaceinvoke $r1.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r0, $r2);

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r3 != $r4 goto label1;

        return $r3;

     label1:
        r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r5;
    }

    public static final kotlinx.coroutines.Job launchIn(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.CoroutineScope)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlinx.coroutines.Job $r2;
        kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1 $r3;
        kotlin.jvm.functions.Function2 $r4;
        kotlinx.coroutines.CoroutineScope $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlinx.coroutines.CoroutineScope;

        $r3 = new kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)>($r0, null);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $r2 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r1, null, null, $r4, 3, null);

        return $r2;
    }
}
