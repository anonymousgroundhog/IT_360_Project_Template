public final class androidx.work.impl.model.DependencyDao_Impl extends java.lang.Object implements androidx.work.impl.model.DependencyDao
{
    private final androidx.room.RoomDatabase __db;
    private final androidx.room.EntityInsertionAdapter __insertionAdapterOfDependency;

    public void <init>(androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.DependencyDao_Impl r0;
        androidx.work.impl.model.DependencyDao_Impl$1 $r2;
        androidx.room.RoomDatabase $r1;

        r0 := @this: androidx.work.impl.model.DependencyDao_Impl;

        $r1 := @parameter0: androidx.room.RoomDatabase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db> = $r1;

        $r2 = new androidx.work.impl.model.DependencyDao_Impl$1;

        specialinvoke $r2.<androidx.work.impl.model.DependencyDao_Impl$1: void <init>(androidx.work.impl.model.DependencyDao_Impl,androidx.room.RoomDatabase)>(r0, $r1);

        r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.EntityInsertionAdapter __insertionAdapterOfDependency> = $r2;

        return;
    }

    public java.util.List getDependentWorkIds(java.lang.String)
    {
        java.lang.Throwable r6;
        androidx.room.RoomSQLiteQuery $r2;
        androidx.room.RoomDatabase r3;
        java.util.ArrayList r5;
        int $i0;
        androidx.work.impl.model.DependencyDao_Impl r0;
        java.lang.String $r1;
        android.database.Cursor $r4;
        boolean $z0;

        r0 := @this: androidx.work.impl.model.DependencyDao_Impl;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT work_spec_id FROM dependency WHERE prerequisite_id=?", 1);

        if $r1 != null goto label1;

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(1);

        goto label2;

     label1:
        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(1, $r1);

     label2:
        r3 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke r3.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        r3 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        $r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>(r3, $r2, 0, null);

     label3:
        r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getCount()>();

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

     label4:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

     label5:
        if $z0 == 0 goto label8;

     label6:
        $r1 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

     label7:
        goto label4;

     label8:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return r5;

     label9:
        r6 := @caughtexception;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r6;

        catch java.lang.Throwable from label3 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public java.util.List getPrerequisites(java.lang.String)
    {
        java.lang.Throwable r6;
        androidx.room.RoomSQLiteQuery $r2;
        androidx.room.RoomDatabase r3;
        java.util.ArrayList r5;
        int $i0;
        androidx.work.impl.model.DependencyDao_Impl r0;
        java.lang.String $r1;
        android.database.Cursor $r4;
        boolean $z0;

        r0 := @this: androidx.work.impl.model.DependencyDao_Impl;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT prerequisite_id FROM dependency WHERE work_spec_id=?", 1);

        if $r1 != null goto label1;

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(1);

        goto label2;

     label1:
        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(1, $r1);

     label2:
        r3 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke r3.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        r3 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        $r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>(r3, $r2, 0, null);

     label3:
        r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getCount()>();

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

     label4:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

     label5:
        if $z0 == 0 goto label8;

     label6:
        $r1 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

     label7:
        goto label4;

     label8:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return r5;

     label9:
        r6 := @caughtexception;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r6;

        catch java.lang.Throwable from label3 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public boolean hasCompletedAllPrerequisites(java.lang.String)
    {
        java.lang.Throwable r5;
        androidx.room.RoomSQLiteQuery $r2;
        androidx.room.RoomDatabase r3;
        int $i0;
        androidx.work.impl.model.DependencyDao_Impl r0;
        java.lang.String $r1;
        boolean z0, $z1;
        android.database.Cursor $r4;

        r0 := @this: androidx.work.impl.model.DependencyDao_Impl;

        $r1 := @parameter0: java.lang.String;

        z0 = 1;

        $r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT COUNT(*)=0 FROM dependency WHERE work_spec_id=? AND prerequisite_id IN (SELECT id FROM workspec WHERE state!=2)", 1);

        if $r1 != null goto label01;

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(1);

        goto label02;

     label01:
        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(1, $r1);

     label02:
        r3 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke r3.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        r3 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        $r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>(r3, $r2, 0, null);

     label03:
        $z1 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z1 == 0 goto label09;

     label05:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>(0);

     label06:
        if $i0 == 0 goto label07;

        goto label08;

     label07:
        z0 = 0;

     label08:
        goto label10;

     label09:
        z0 = 0;

     label10:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return z0;

     label11:
        r5 := @caughtexception;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r5;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
    }

    public boolean hasDependents(java.lang.String)
    {
        java.lang.Throwable r5;
        androidx.room.RoomSQLiteQuery $r2;
        androidx.room.RoomDatabase r3;
        int $i0;
        androidx.work.impl.model.DependencyDao_Impl r0;
        java.lang.String $r1;
        boolean z0, $z1;
        android.database.Cursor $r4;

        r0 := @this: androidx.work.impl.model.DependencyDao_Impl;

        $r1 := @parameter0: java.lang.String;

        z0 = 1;

        $r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT COUNT(*)>0 FROM dependency WHERE prerequisite_id=?", 1);

        if $r1 != null goto label01;

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(1);

        goto label02;

     label01:
        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(1, $r1);

     label02:
        r3 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke r3.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        r3 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        $r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>(r3, $r2, 0, null);

     label03:
        $z1 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z1 == 0 goto label09;

     label05:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>(0);

     label06:
        if $i0 == 0 goto label07;

        goto label08;

     label07:
        z0 = 0;

     label08:
        goto label10;

     label09:
        z0 = 0;

     label10:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return z0;

     label11:
        r5 := @caughtexception;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        virtualinvoke $r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r5;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
    }

    public void insertDependency(androidx.work.impl.model.Dependency)
    {
        java.lang.Throwable $r4;
        androidx.work.impl.model.Dependency $r1;
        androidx.room.RoomDatabase $r2;
        androidx.room.EntityInsertionAdapter $r3;
        androidx.work.impl.model.DependencyDao_Impl r0;

        r0 := @this: androidx.work.impl.model.DependencyDao_Impl;

        $r1 := @parameter0: androidx.work.impl.model.Dependency;

        $r2 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r2.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r2 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r2.<androidx.room.RoomDatabase: void beginTransaction()>();

     label1:
        $r3 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.EntityInsertionAdapter __insertionAdapterOfDependency>;

        virtualinvoke $r3.<androidx.room.EntityInsertionAdapter: void insert(java.lang.Object)>($r1);

        $r2 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r2.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

     label2:
        $r2 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r2.<androidx.room.RoomDatabase: void endTransaction()>();

        return;

     label3:
        $r4 := @caughtexception;

        $r2 = r0.<androidx.work.impl.model.DependencyDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r2.<androidx.room.RoomDatabase: void endTransaction()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
