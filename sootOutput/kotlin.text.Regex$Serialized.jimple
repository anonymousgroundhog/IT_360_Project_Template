final class kotlin.text.Regex$Serialized extends java.lang.Object implements java.io.Serializable
{
    public static final kotlin.text.Regex$Serialized$Companion Companion;
    private static final long serialVersionUID;
    private final int flags;
    private final java.lang.String pattern;

    static void <clinit>()
    {
        kotlin.text.Regex$Serialized$Companion $r0;

        $r0 = new kotlin.text.Regex$Serialized$Companion;

        specialinvoke $r0.<kotlin.text.Regex$Serialized$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.text.Regex$Serialized: kotlin.text.Regex$Serialized$Companion Companion> = $r0;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int $i0;
        kotlin.text.Regex$Serialized r0;
        java.lang.String $r1;

        r0 := @this: kotlin.text.Regex$Serialized;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "pattern");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.text.Regex$Serialized: java.lang.String pattern> = $r1;

        r0.<kotlin.text.Regex$Serialized: int flags> = $i0;

        return;
    }

    private final java.lang.Object readResolve()
    {
        kotlin.text.Regex$Serialized r0;
        int $i0;
        java.util.regex.Pattern $r2;
        java.lang.String $r3;
        kotlin.text.Regex $r1;

        r0 := @this: kotlin.text.Regex$Serialized;

        $r1 = new kotlin.text.Regex;

        $r3 = r0.<kotlin.text.Regex$Serialized: java.lang.String pattern>;

        $i0 = r0.<kotlin.text.Regex$Serialized: int flags>;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r3, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "compile(pattern, flags)");

        specialinvoke $r1.<kotlin.text.Regex: void <init>(java.util.regex.Pattern)>($r2);

        return $r1;
    }

    public final int getFlags()
    {
        int i0;
        kotlin.text.Regex$Serialized r0;

        r0 := @this: kotlin.text.Regex$Serialized;

        i0 = r0.<kotlin.text.Regex$Serialized: int flags>;

        return i0;
    }

    public final java.lang.String getPattern()
    {
        kotlin.text.Regex$Serialized r0;
        java.lang.String r1;

        r0 := @this: kotlin.text.Regex$Serialized;

        r1 = r0.<kotlin.text.Regex$Serialized: java.lang.String pattern>;

        return r1;
    }
}
