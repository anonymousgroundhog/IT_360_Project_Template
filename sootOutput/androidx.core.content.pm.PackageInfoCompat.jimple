public final class androidx.core.content.pm.PackageInfoCompat extends java.lang.Object
{

    private void <init>()
    {
        androidx.core.content.pm.PackageInfoCompat r0;

        r0 := @this: androidx.core.content.pm.PackageInfoCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean byteArrayContains(byte[][], byte[])
    {
        byte[] $r1, r2;
        byte[][] $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: byte[][];

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r2 = $r0[$i1];

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r1, r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static byte[] computeSHA256Digest(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest $r2;
        java.security.NoSuchAlgorithmException r3;
        java.lang.RuntimeException $r1;

        $r0 := @parameter0: byte[];

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA256");

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

     label2:
        return $r0;

     label3:
        r3 := @caughtexception;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Device doesn\'t support SHA256 cert checking", r3);

        throw $r1;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static long getLongVersionCode(android.content.pm.PackageInfo)
    {
        int $i1;
        long $l0;
        android.content.pm.PackageInfo $r0;

        $r0 := @parameter0: android.content.pm.PackageInfo;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 28 goto label1;

        $l0 = staticinvoke <androidx.core.content.pm.PackageInfoCompat$Api28Impl: long getLongVersionCode(android.content.pm.PackageInfo)>($r0);

        return $l0;

     label1:
        $i1 = $r0.<android.content.pm.PackageInfo: int versionCode>;

        $l0 = (long) $i1;

        return $l0;
    }

    public static java.util.List getSignatures(android.content.pm.PackageManager, java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.PackageManager $r0;
        android.content.pm.PackageInfo $r2;
        android.content.pm.Signature[] $r4;
        java.util.List $r5;
        int i0;
        java.lang.String $r1;
        android.content.pm.SigningInfo r3;
        boolean $z0;

        $r0 := @parameter0: android.content.pm.PackageManager;

        $r1 := @parameter1: java.lang.String;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 28 goto label3;

        $r2 = virtualinvoke $r0.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, 134217728);

        r3 = $r2.<android.content.pm.PackageInfo: android.content.pm.SigningInfo signingInfo>;

        $z0 = staticinvoke <androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasMultipleSigners(android.content.pm.SigningInfo)>(r3);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo)>(r3);

        goto label2;

     label1:
        $r4 = staticinvoke <androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo)>(r3);

     label2:
        goto label4;

     label3:
        $r2 = virtualinvoke $r0.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, 64);

        $r4 = $r2.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

     label4:
        if $r4 != null goto label5;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label5:
        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        return $r5;
    }

    public static boolean hasSignatures(android.content.pm.PackageManager, java.lang.String, java.util.Map, boolean) throws android.content.pm.PackageManager$NameNotFoundException
    {
        byte[] r6;
        android.content.pm.PackageManager $r0;
        java.lang.Integer r7;
        java.util.Map r2;
        int $i0, $i1;
        java.lang.String $r1;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.IllegalArgumentException $r8;
        java.util.List $r10;
        byte[][] r11;
        java.lang.Object $r5;
        java.lang.StringBuilder r9;
        android.content.pm.Signature r12;

        $r0 := @parameter0: android.content.pm.PackageManager;

        $r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Map;

        $z0 := @parameter3: boolean;

        $z1 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label01;

        return 0;

     label01:
        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (byte[]) $r5;

        if r6 == null goto label06;

        $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.lang.Integer) $r5;

        if r7 == null goto label05;

        $i0 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label04;
            default: goto label03;
        };

     label03:
        $r8 = new java.lang.IllegalArgumentException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported certificate type ");

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when verifying ");

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label04:
        goto label02;

     label05:
        $r8 = new java.lang.IllegalArgumentException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type must be specified for cert when verifying ");

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label06:
        $r8 = new java.lang.IllegalArgumentException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cert byte array cannot be null when verifying ");

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label07:
        $r10 = staticinvoke <androidx.core.content.pm.PackageInfoCompat: java.util.List getSignatures(android.content.pm.PackageManager,java.lang.String)>($r0, $r1);

        if $z0 != 0 goto label10;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label10;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (byte[]) $r5;

        $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

        $z0 = staticinvoke <androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int)>($r0, $r1, r6, $i0);

        if $z0 != 0 goto label08;

        return 0;

     label09:
        return 1;

     label10:
        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i0 == 0 goto label18;

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i0 > $i1 goto label18;

        if $z0 == 0 goto label11;

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i0 == $i1 goto label11;

        return 0;

     label11:
        r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $z0 = interfaceinvoke r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r7);

        r11 = null;

        if $z0 == 0 goto label13;

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        r11 = newarray (byte[])[$i0];

        $i0 = 0;

     label12:
        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i0 >= $i1 goto label13;

        $r5 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i0);

        r12 = (android.content.pm.Signature) $r5;

        r6 = virtualinvoke r12.<android.content.pm.Signature: byte[] toByteArray()>();

        r6 = staticinvoke <androidx.core.content.pm.PackageInfoCompat: byte[] computeSHA256Digest(byte[])>(r6);

        r11[$i0] = r6;

        $i0 = $i0 + 1;

        goto label12;

     label13:
        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (byte[]) $r5;

        $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

        lookupswitch($i0)
        {
            case 0: goto label16;
            case 1: goto label15;
            default: goto label14;
        };

     label14:
        $r8 = new java.lang.IllegalArgumentException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported certificate type ");

        r9 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r1 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label15:
        $z0 = staticinvoke <androidx.core.content.pm.PackageInfoCompat: boolean byteArrayContains(byte[][],byte[])>(r11, r6);

        if $z0 != 0 goto label17;

        return 0;

     label16:
        r12 = new android.content.pm.Signature;

        specialinvoke r12.<android.content.pm.Signature: void <init>(byte[])>(r6);

        $z0 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>(r12);

        if $z0 != 0 goto label19;

        return 0;

     label17:
        return 1;

     label18:
        return 0;

     label19:
        return 1;
    }
}
