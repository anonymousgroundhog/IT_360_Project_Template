class androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong extends java.lang.Object implements androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
{
    static final androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE;

    static void <clinit>()
    {
        androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong $r0;

        $r0 = new androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong;

        specialinvoke $r0.<androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: void <init>()>();

        <androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong r0;

        r0 := @this: androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int checkRtl(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence $r1;
        char $c4;
        byte $b5;
        androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong r0;
        int $i0, $i1, i2, i3;

        r0 := @this: androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        i2 = 2;

        i3 = $i0;

        $i0 = $i0 + $i1;

     label1:
        if i3 >= $i0 goto label2;

        if i2 != 2 goto label2;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(i3);

        $b5 = staticinvoke <java.lang.Character: byte getDirectionality(char)>($c4);

        $i1 = (int) $b5;

        i2 = staticinvoke <androidx.core.text.TextDirectionHeuristicsCompat: int isRtlTextOrFormat(int)>($i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }
}
