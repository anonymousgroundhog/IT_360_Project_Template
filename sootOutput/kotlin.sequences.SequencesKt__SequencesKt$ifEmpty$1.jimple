final class kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1 extends kotlin.coroutines.jvm.internal.RestrictedSuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlin.jvm.functions.Function0 $defaultValue;
    final kotlin.sequences.Sequence $this_ifEmpty;
    private java.lang.Object L$0;
    int label;

    void <init>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r3;
        kotlin.sequences.Sequence $r1;
        kotlin.jvm.functions.Function0 $r2;
        kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1 r0;

        r0 := @this: kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1;

        $r1 := @parameter0: kotlin.sequences.Sequence;

        $r2 := @parameter1: kotlin.jvm.functions.Function0;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.sequences.Sequence $this_ifEmpty> = $r1;

        r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.jvm.functions.Function0 $defaultValue> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.sequences.Sequence $r3;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function0 $r4;
        kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1 r0, $r5;

        r0 := @this: kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r5 = new kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1;

        $r3 = r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.sequences.Sequence $this_ifEmpty>;

        $r4 = r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.jvm.functions.Function0 $defaultValue>;

        specialinvoke $r5.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r3, $r4, $r2);

        $r5.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r5;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r4;
        java.lang.Object $r1, $r2;
        kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1 r0;
        kotlin.sequences.SequenceScope $r3;

        r0 := @this: kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.sequences.SequenceScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlin.sequences.SequenceScope, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;
        kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1 r0;
        kotlin.sequences.SequenceScope $r1;

        r0 := @this: kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1;

        $r1 := @parameter0: kotlin.sequences.SequenceScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        java.lang.IllegalStateException $r3;
        kotlin.coroutines.Continuation $r7;
        java.util.Iterator $r6;
        kotlin.sequences.Sequence r5;
        kotlin.jvm.functions.Function0 r8;
        kotlin.Unit r9;
        int i0;
        java.lang.Object $r1, $r2;
        kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1 r0;
        kotlin.sequences.SequenceScope $r4;
        boolean $z0;

        r0 := @this: kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        i0 = r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: int label>;

        lookupswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label7;

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label5;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r1 = r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object L$0>;

        $r4 = (kotlin.sequences.SequenceScope) $r1;

        r5 = r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.sequences.Sequence $this_ifEmpty>;

        $r6 = interfaceinvoke r5.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: int label> = 1;

        $r1 = virtualinvoke $r4.<kotlin.sequences.SequenceScope: java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation)>($r6, $r7);

        if $r1 != $r2 goto label5;

        return $r2;

     label5:
        goto label7;

     label6:
        r8 = r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.jvm.functions.Function0 $defaultValue>;

        $r1 = interfaceinvoke r8.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r5 = (kotlin.sequences.Sequence) $r1;

        $r7 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: int label> = 2;

        $r1 = virtualinvoke $r4.<kotlin.sequences.SequenceScope: java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.Continuation)>(r5, $r7);

        if $r1 != $r2 goto label7;

        return $r2;

     label7:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r9;
    }
}
