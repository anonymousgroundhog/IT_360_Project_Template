final class kotlinx.coroutines.internal.LimitedDispatcher$Worker extends java.lang.Object implements java.lang.Runnable
{
    private java.lang.Runnable currentTask;
    final kotlinx.coroutines.internal.LimitedDispatcher this$0;

    public void <init>(kotlinx.coroutines.internal.LimitedDispatcher, java.lang.Runnable)
    {
        kotlinx.coroutines.internal.LimitedDispatcher$Worker r0;
        kotlinx.coroutines.internal.LimitedDispatcher $r1;
        java.lang.Runnable $r2;

        r0 := @this: kotlinx.coroutines.internal.LimitedDispatcher$Worker;

        $r1 := @parameter0: kotlinx.coroutines.internal.LimitedDispatcher;

        $r2 := @parameter1: java.lang.Runnable;

        r0.<kotlinx.coroutines.internal.LimitedDispatcher$Worker: kotlinx.coroutines.internal.LimitedDispatcher this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.internal.LimitedDispatcher$Worker: java.lang.Runnable currentTask> = $r2;

        return;
    }

    public void run()
    {
        java.lang.Throwable r2;
        kotlinx.coroutines.internal.LimitedDispatcher$Worker r0;
        kotlinx.coroutines.CoroutineDispatcher $r6;
        java.lang.Runnable r1;
        kotlin.coroutines.CoroutineContext $r4;
        kotlinx.coroutines.internal.LimitedDispatcher r5;
        kotlin.coroutines.EmptyCoroutineContext $r3;
        int i0;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.internal.LimitedDispatcher$Worker;

        i0 = 0;

     label1:
        r1 = r0.<kotlinx.coroutines.internal.LimitedDispatcher$Worker: java.lang.Runnable currentTask>;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label2:
        goto label4;

     label3:
        r2 := @caughtexception;

        $r3 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r4 = (kotlin.coroutines.CoroutineContext) $r3;

        staticinvoke <kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)>($r4, r2);

     label4:
        r5 = r0.<kotlinx.coroutines.internal.LimitedDispatcher$Worker: kotlinx.coroutines.internal.LimitedDispatcher this$0>;

        r1 = staticinvoke <kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Runnable access$obtainTaskOrDeallocateWorker(kotlinx.coroutines.internal.LimitedDispatcher)>(r5);

        if r1 != null goto label5;

        return;

     label5:
        r0.<kotlinx.coroutines.internal.LimitedDispatcher$Worker: java.lang.Runnable currentTask> = r1;

        i0 = i0 + 1;

        if i0 < 16 goto label1;

        r5 = r0.<kotlinx.coroutines.internal.LimitedDispatcher$Worker: kotlinx.coroutines.internal.LimitedDispatcher this$0>;

        $r6 = staticinvoke <kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(kotlinx.coroutines.internal.LimitedDispatcher)>(r5);

        r5 = r0.<kotlinx.coroutines.internal.LimitedDispatcher$Worker: kotlinx.coroutines.internal.LimitedDispatcher this$0>;

        $r4 = (kotlin.coroutines.CoroutineContext) r5;

        $z0 = virtualinvoke $r6.<kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r4);

        if $z0 == 0 goto label1;

        r5 = r0.<kotlinx.coroutines.internal.LimitedDispatcher$Worker: kotlinx.coroutines.internal.LimitedDispatcher this$0>;

        $r6 = staticinvoke <kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(kotlinx.coroutines.internal.LimitedDispatcher)>(r5);

        r5 = r0.<kotlinx.coroutines.internal.LimitedDispatcher$Worker: kotlinx.coroutines.internal.LimitedDispatcher this$0>;

        $r4 = (kotlin.coroutines.CoroutineContext) r5;

        r1 = (java.lang.Runnable) r0;

        virtualinvoke $r6.<kotlinx.coroutines.CoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>($r4, r1);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
