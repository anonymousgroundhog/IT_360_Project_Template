final class kotlinx.coroutines.future.FutureKt$asDeferred$2 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function2
{
    final kotlinx.coroutines.CompletableDeferred $result;

    void <init>(kotlinx.coroutines.CompletableDeferred)
    {
        kotlinx.coroutines.CompletableDeferred $r1;
        kotlinx.coroutines.future.FutureKt$asDeferred$2 r0;

        r0 := @this: kotlinx.coroutines.future.FutureKt$asDeferred$2;

        $r1 := @parameter0: kotlinx.coroutines.CompletableDeferred;

        r0.<kotlinx.coroutines.future.FutureKt$asDeferred$2: kotlinx.coroutines.CompletableDeferred $result> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r3;
        kotlinx.coroutines.future.FutureKt$asDeferred$2 r0;
        java.lang.Object $r1, $r2;

        r0 := @this: kotlinx.coroutines.future.FutureKt$asDeferred$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Throwable) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.future.FutureKt$asDeferred$2: java.lang.Object invoke(java.lang.Object,java.lang.Throwable)>($r1, $r3);

        return $r1;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable $r2, $r5, $r6;
        kotlinx.coroutines.CompletableDeferred r3;
        java.util.concurrent.CompletionException $r4;
        kotlin.coroutines.CoroutineContext $r9;
        kotlin.Unit $r10;
        kotlin.coroutines.EmptyCoroutineContext $r8;
        kotlinx.coroutines.future.FutureKt$asDeferred$2 r0;
        java.lang.Boolean $r7;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.future.FutureKt$asDeferred$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Throwable;

        if $r2 != null goto label03;

     label01:
        r3 = r0.<kotlinx.coroutines.future.FutureKt$asDeferred$2: kotlinx.coroutines.CompletableDeferred $result>;

        $z0 = interfaceinvoke r3.<kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)>($r1);

     label02:
        goto label13;

     label03:
        r3 = r0.<kotlinx.coroutines.future.FutureKt$asDeferred$2: kotlinx.coroutines.CompletableDeferred $result>;

        $z0 = $r2 instanceof java.util.concurrent.CompletionException;

     label04:
        if $z0 == 0 goto label07;

     label05:
        $r4 = (java.util.concurrent.CompletionException) $r2;

     label06:
        goto label08;

     label07:
        $r4 = null;

     label08:
        if $r4 == null goto label11;

     label09:
        $r5 = virtualinvoke $r4.<java.util.concurrent.CompletionException: java.lang.Throwable getCause()>();

     label10:
        $r6 = $r5;

        if $r5 != null goto label12;

     label11:
        $r6 = $r2;

     label12:
        $z0 = interfaceinvoke r3.<kotlinx.coroutines.CompletableDeferred: boolean completeExceptionally(java.lang.Throwable)>($r6);

     label13:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

     label14:
        return $r7;

     label15:
        $r5 := @caughtexception;

        $r8 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r9 = (kotlin.coroutines.CoroutineContext) $r8;

        staticinvoke <kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)>($r9, $r5);

        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r10;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }
}
