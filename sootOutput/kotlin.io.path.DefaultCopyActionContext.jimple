final class kotlin.io.path.DefaultCopyActionContext extends java.lang.Object implements kotlin.io.path.CopyActionContext
{
    public static final kotlin.io.path.DefaultCopyActionContext INSTANCE;

    static void <clinit>()
    {
        kotlin.io.path.DefaultCopyActionContext $r0;

        $r0 = new kotlin.io.path.DefaultCopyActionContext;

        specialinvoke $r0.<kotlin.io.path.DefaultCopyActionContext: void <init>()>();

        <kotlin.io.path.DefaultCopyActionContext: kotlin.io.path.DefaultCopyActionContext INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        kotlin.io.path.DefaultCopyActionContext r0;

        r0 := @this: kotlin.io.path.DefaultCopyActionContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public kotlin.io.path.CopyActionResult copyToIgnoringExistingDirectory(java.nio.file.Path, java.nio.file.Path, boolean)
    {
        java.nio.file.CopyOption[] $r8;
        java.lang.Object[] $r6;
        java.nio.file.LinkOption[] $r5, $r7;
        kotlin.io.path.CopyActionResult r9;
        java.nio.file.LinkOption $r3;
        kotlin.io.path.LinkFollowing r4;
        kotlin.io.path.DefaultCopyActionContext r0;
        int $i0;
        java.nio.file.Path $r1, $r2;
        boolean $z0;

        r0 := @this: kotlin.io.path.DefaultCopyActionContext;

        $r1 := @parameter0: java.nio.file.Path;

        $r2 := @parameter1: java.nio.file.Path;

        $z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "target");

        r4 = <kotlin.io.path.LinkFollowing: kotlin.io.path.LinkFollowing INSTANCE>;

        $r5 = virtualinvoke r4.<kotlin.io.path.LinkFollowing: java.nio.file.LinkOption[] toLinkOptions(boolean)>($z0);

        $i0 = lengthof $r5;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r5, $i0);

        $r7 = (java.nio.file.LinkOption[]) $r6;

        $i0 = lengthof $r7;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r7, $i0);

        $r7 = (java.nio.file.LinkOption[]) $r6;

        $z0 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>($r1, $r7);

        if $z0 == 0 goto label1;

        $r7 = newarray (java.nio.file.LinkOption)[1];

        $r3 = <java.nio.file.LinkOption: java.nio.file.LinkOption NOFOLLOW_LINKS>;

        $r7[0] = $r3;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r7, 1);

        $r7 = (java.nio.file.LinkOption[]) $r6;

        $z0 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>($r2, $r7);

        if $z0 != 0 goto label2;

     label1:
        $i0 = lengthof $r5;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r5, $i0);

        $r8 = (java.nio.file.CopyOption[]) $r6;

        $i0 = lengthof $r8;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r8, $i0);

        $r8 = (java.nio.file.CopyOption[]) $r6;

        $r1 = staticinvoke <java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>($r1, $r2, $r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "copy(this, target, *options)");

     label2:
        r9 = <kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult CONTINUE>;

        return r9;
    }
}
