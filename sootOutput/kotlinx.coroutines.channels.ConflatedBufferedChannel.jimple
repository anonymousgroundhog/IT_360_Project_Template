public class kotlinx.coroutines.channels.ConflatedBufferedChannel extends kotlinx.coroutines.channels.BufferedChannel
{
    private final int capacity;
    private final kotlinx.coroutines.channels.BufferOverflow onBufferOverflow;

    public void <init>(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;
        kotlin.reflect.KClass $r7;
        kotlinx.coroutines.channels.BufferOverflow $r1, $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.IllegalArgumentException $r6;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        boolean $z0, $z1;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $i0 := @parameter0: int;

        $r1 := @parameter1: kotlinx.coroutines.channels.BufferOverflow;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        specialinvoke r0.<kotlinx.coroutines.channels.BufferedChannel: void <init>(int,kotlin.jvm.functions.Function1)>($i0, $r2);

        r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: int capacity> = $i0;

        r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow> = $r1;

        $r1 = r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow>;

        $r3 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        $z0 = 0;

        if $r1 == $r3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label5;

        $i0 = r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: int capacity>;

        if $i0 < 1 goto label3;

        $z0 = 1;

     label3:
        if $z0 == 0 goto label4;

        return;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Buffered channel capacity must be at least 1, but ");

        $i0 = r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: int capacity>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was specified");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This implementation does not support suspension for senders, use ");

        $r7 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lkotlinx/coroutines/channels/BufferedChannel;");

        $r5 = interfaceinvoke $r7.<kotlin.reflect.KClass: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r6;
    }

    public void <init>(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;
        int $i0, $i1;
        kotlinx.coroutines.channels.BufferOverflow $r1;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $i0 := @parameter0: int;

        $r1 := @parameter1: kotlinx.coroutines.channels.BufferOverflow;

        $r3 := @parameter2: kotlin.jvm.functions.Function1;

        $i1 := @parameter3: int;

        $r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = $i1 & 4;

        if $i1 == 0 goto label1;

        $r3 = null;

     label1:
        specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)>($i0, $r1, $r3);

        return;
    }

    static java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel, java.lang.Object, kotlin.coroutines.Continuation)
    {
        java.lang.Throwable $r6, $r7;
        kotlinx.coroutines.channels.ConflatedBufferedChannel $r0;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.internal.UndeliveredElementException $r5;
        kotlin.jvm.functions.Function1 r4;
        kotlin.Unit r8;
        java.lang.Object $r1, $r3;
        boolean z0;

        $r0 := @parameter0: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = specialinvoke $r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendImpl-Mj0NB7M(java.lang.Object,boolean)>($r1, 1);

        z0 = $r3 instanceof kotlinx.coroutines.channels.ChannelResult$Closed;

        if z0 == 0 goto label2;

        staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r3);

        r4 = $r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: kotlin.jvm.functions.Function1 onUndeliveredElement>;

        if r4 == null goto label1;

        $r5 = staticinvoke <kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object)>(r4, $r1, null, 2, null);

        if $r5 == null goto label1;

        $r6 = (java.lang.Throwable) $r5;

        $r7 = virtualinvoke $r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Throwable getSendException()>();

        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r6, $r7);

        throw $r5;

     label1:
        $r6 = virtualinvoke $r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Throwable getSendException()>();

        throw $r6;

     label2:
        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r8;
    }

    static java.lang.Object sendBroadcast$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel, java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.channels.ConflatedBufferedChannel $r0;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit r3;
        java.lang.Boolean $r4;
        java.lang.Object $r1;
        boolean z0;

        $r0 := @parameter0: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r1 = specialinvoke $r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendImpl-Mj0NB7M(java.lang.Object,boolean)>($r1, 1);

        z0 = $r1 instanceof kotlinx.coroutines.channels.ChannelResult$Failed;

        if z0 != 0 goto label1;

        r3 = (kotlin.Unit) $r1;

        $r4 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)>(1);

        return $r4;

     label1:
        $r4 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)>(0);

        return $r4;
    }

    private final java.lang.Object trySendDropLatest-Mj0NB7M(java.lang.Object, boolean)
    {
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;
        kotlinx.coroutines.internal.UndeliveredElementException $r4;
        kotlinx.coroutines.channels.ChannelResult$Companion r5;
        kotlin.jvm.functions.Function1 r3;
        kotlin.Unit $r6;
        java.lang.Object $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<kotlinx.coroutines.channels.BufferedChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)>($r1);

        $z1 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: boolean isSuccess-impl(java.lang.Object)>($r2);

        if $z1 != 0 goto label4;

        $z1 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: boolean isClosed-impl(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        return $r2;

     label1:
        if $z0 == 0 goto label3;

        r3 = r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: kotlin.jvm.functions.Function1 onUndeliveredElement>;

        if r3 == null goto label3;

        $r4 = staticinvoke <kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object)>(r3, $r1, null, 2, null);

        if $r4 != null goto label2;

        goto label3;

     label2:
        throw $r4;

     label3:
        r5 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r1 = virtualinvoke r5.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)>($r6);

        return $r1;

     label4:
        return $r2;
    }

    private final java.lang.Object trySendDropOldest-JP2dKIU(java.lang.Object)
    {
        java.lang.Throwable $r10;
        java.lang.IllegalStateException $r14;
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;
        kotlinx.coroutines.channels.ChannelResult$Companion r9;
        kotlinx.coroutines.channels.ChannelSegment r3, $r8;
        long $l0, $l1, $l3;
        byte $b4;
        int $i2, $i5;
        java.lang.String r11;
        boolean $z0;
        kotlinx.coroutines.internal.Symbol r2;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        java.util.concurrent.atomic.AtomicLongFieldUpdater $r7;
        kotlinx.coroutines.Waiter r12;
        kotlin.Unit r13;
        java.lang.Object $r1, $r6;
        kotlinx.coroutines.channels.BufferedChannel $r5;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $r1 := @parameter0: java.lang.Object;

        r2 = <kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol BUFFERED>;

        $r4 = staticinvoke <kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getSendSegment$FU$p()>();

        $r5 = (kotlinx.coroutines.channels.BufferedChannel) r0;

        $r6 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (kotlinx.coroutines.channels.ChannelSegment) $r6;

     label01:
        $r7 = staticinvoke <kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater access$getSendersAndCloseStatus$FU$p()>();

        $r5 = (kotlinx.coroutines.channels.BufferedChannel) r0;

        $l0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndIncrement(java.lang.Object)>($r5);

        $l1 = $l0 & 1152921504606846975L;

        $r5 = (kotlinx.coroutines.channels.BufferedChannel) r0;

        $z0 = staticinvoke <kotlinx.coroutines.channels.BufferedChannel: boolean access$isClosedForSend0(kotlinx.coroutines.channels.BufferedChannel,long)>($r5, $l0);

        $i2 = <kotlinx.coroutines.channels.BufferedChannelKt: int SEGMENT_SIZE>;

        $l0 = (long) $i2;

        $l0 = $l1 / $l0;

        $i2 = <kotlinx.coroutines.channels.BufferedChannelKt: int SEGMENT_SIZE>;

        $l3 = (long) $i2;

        $l3 = $l1 % $l3;

        $i2 = (int) $l3;

        $l3 = r3.<kotlinx.coroutines.channels.ChannelSegment: long id>;

        $b4 = $l3 cmp $l0;

        if $b4 == 0 goto label03;

        $r5 = (kotlinx.coroutines.channels.BufferedChannel) r0;

        $r8 = staticinvoke <kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment access$findSegmentSend(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment)>($r5, $l0, r3);

        if $r8 != null goto label02;

        if $z0 == 0 goto label01;

        r9 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        $r10 = virtualinvoke r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Throwable getSendException()>();

        $r1 = virtualinvoke r9.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)>($r10);

        return $r1;

     label02:
        goto label04;

     label03:
        $r8 = r3;

     label04:
        $r5 = (kotlinx.coroutines.channels.BufferedChannel) r0;

        r3 = $r8;

        $i5 = staticinvoke <kotlinx.coroutines.channels.BufferedChannel: int access$updateCellSend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean)>($r5, $r8, $i2, $r1, $l1, r2, $z0);

        lookupswitch($i5)
        {
            case 0: goto label17;
            case 1: goto label16;
            case 2: goto label10;
            case 3: goto label09;
            case 4: goto label07;
            case 5: goto label06;
            default: goto label05;
        };

     label05:
        r3 = $r8;

        goto label18;

     label06:
        virtualinvoke $r8.<kotlinx.coroutines.channels.ChannelSegment: void cleanPrev()>();

        r3 = $r8;

        goto label18;

     label07:
        $r5 = (kotlinx.coroutines.channels.BufferedChannel) r0;

        $l0 = virtualinvoke $r5.<kotlinx.coroutines.channels.BufferedChannel: long getReceiversCounter$kotlinx_coroutines_core()>();

        $b4 = $l1 cmp $l0;

        $i2 = (int) $b4;

        if $i2 >= 0 goto label08;

        virtualinvoke $r8.<kotlinx.coroutines.channels.ChannelSegment: void cleanPrev()>();

     label08:
        r9 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        $r10 = virtualinvoke r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Throwable getSendException()>();

        $r1 = virtualinvoke r9.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)>($r10);

        return $r1;

     label09:
        $r14 = new java.lang.IllegalStateException;

        r11 = "unexpected";

        r11 = virtualinvoke r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r11);

        throw $r14;

     label10:
        if $z0 == 0 goto label11;

        virtualinvoke $r8.<kotlinx.coroutines.channels.ChannelSegment: void onSlotCleaned()>();

        goto label08;

     label11:
        $z0 = r2 instanceof kotlinx.coroutines.Waiter;

        if $z0 == 0 goto label12;

        r12 = (kotlinx.coroutines.Waiter) r2;

        goto label13;

     label12:
        r12 = null;

     label13:
        if r12 == null goto label14;

        $r5 = (kotlinx.coroutines.channels.BufferedChannel) r0;

        $r8 = r3;

        staticinvoke <kotlinx.coroutines.channels.BufferedChannel: void access$prepareSenderForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int)>($r5, r12, r3, $i2);

        goto label15;

     label14:
        $r8 = r3;

     label15:
        $l1 = $r8.<kotlinx.coroutines.channels.ChannelSegment: long id>;

        $i5 = <kotlinx.coroutines.channels.BufferedChannelKt: int SEGMENT_SIZE>;

        $l0 = (long) $i5;

        $l1 = $l1 * $l0;

        $l0 = (long) $i2;

        $l1 = $l1 + $l0;

        virtualinvoke r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: void dropFirstElementUntilTheSpecifiedCellIsInTheBuffer(long)>($l1);

        r9 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r1 = virtualinvoke r9.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)>(r13);

        return $r1;

     label16:
        r9 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r1 = virtualinvoke r9.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)>(r13);

        return $r1;

     label17:
        virtualinvoke $r8.<kotlinx.coroutines.channels.ChannelSegment: void cleanPrev()>();

        goto label16;

     label18:
        goto label01;
    }

    private final java.lang.Object trySendImpl-Mj0NB7M(java.lang.Object, boolean)
    {
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;
        kotlinx.coroutines.channels.BufferOverflow $r2, $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow>;

        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_LATEST>;

        if $r3 != $r2 goto label1;

        $r1 = specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendDropLatest-Mj0NB7M(java.lang.Object,boolean)>($r1, $z0);

        return $r1;

     label1:
        $r1 = specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendDropOldest-JP2dKIU(java.lang.Object)>($r1);

        return $r1;
    }

    protected boolean isConflatedDropOldest()
    {
        kotlinx.coroutines.channels.BufferOverflow $r1, $r2;
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $r2 = r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow>;

        $r1 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void registerSelectForSend(kotlinx.coroutines.selects.SelectInstance, java.lang.Object)
    {
        kotlinx.coroutines.internal.Symbol $r4;
        java.lang.IllegalStateException r5;
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;
        kotlin.Unit r3;
        kotlinx.coroutines.selects.SelectInstance $r1;
        java.lang.Object $r2;
        java.lang.String $r6;
        boolean z0;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $r1 := @parameter0: kotlinx.coroutines.selects.SelectInstance;

        $r2 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)>($r2);

        z0 = $r2 instanceof kotlinx.coroutines.channels.ChannelResult$Failed;

        if z0 != 0 goto label1;

        r3 = (kotlin.Unit) $r2;

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: void selectInRegistrationPhase(java.lang.Object)>(r3);

        return;

     label1:
        z0 = $r2 instanceof kotlinx.coroutines.channels.ChannelResult$Closed;

        if z0 == 0 goto label2;

        staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r2);

        $r4 = staticinvoke <kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol getCHANNEL_CLOSED()>();

        interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: void selectInRegistrationPhase(java.lang.Object)>($r4);

        return;

     label2:
        r5 = new java.lang.IllegalStateException;

        $r6 = "unreachable";

        $r6 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw r5;
    }

    public java.lang.Object send(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = staticinvoke <kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)>(r0, $r1, $r2);

        return $r1;
    }

    public java.lang.Object sendBroadcast$kotlinx_coroutines_core(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = staticinvoke <kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object sendBroadcast$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)>(r0, $r1, $r2);

        return $r1;
    }

    public boolean shouldSendSuspend$kotlinx_coroutines_core()
    {
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        return 0;
    }

    public java.lang.Object trySend-JP2dKIU(java.lang.Object)
    {
        kotlinx.coroutines.channels.ConflatedBufferedChannel r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBufferedChannel;

        $r1 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendImpl-Mj0NB7M(java.lang.Object,boolean)>($r1, 0);

        return $r1;
    }
}
