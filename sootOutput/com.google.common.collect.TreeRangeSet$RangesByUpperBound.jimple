final class com.google.common.collect.TreeRangeSet$RangesByUpperBound extends com.google.common.collect.AbstractNavigableMap
{
    private final java.util.NavigableMap rangesByLowerBound;
    private final com.google.common.collect.Range upperBoundWindow;

    void <init>(java.util.NavigableMap)
    {
        com.google.common.collect.Range $r2;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap r1;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        r1 := @parameter0: java.util.NavigableMap;

        specialinvoke r0.<com.google.common.collect.AbstractNavigableMap: void <init>()>();

        r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound> = r1;

        $r2 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range all()>();

        r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow> = $r2;

        return;
    }

    private void <init>(java.util.NavigableMap, com.google.common.collect.Range)
    {
        com.google.common.collect.Range r2;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap r1;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        r1 := @parameter0: java.util.NavigableMap;

        r2 := @parameter1: com.google.common.collect.Range;

        specialinvoke r0.<com.google.common.collect.AbstractNavigableMap: void <init>()>();

        r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound> = r1;

        r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow> = r2;

        return;
    }

    static com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound)
    {
        com.google.common.collect.Range r1;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound $r0;

        $r0 := @parameter0: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        r1 = $r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        return r1;
    }

    private java.util.NavigableMap subMap(com.google.common.collect.Range)
    {
        com.google.common.collect.Range r1, $r3;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0, $r4;
        java.util.NavigableMap $r2;
        com.google.common.collect.ImmutableSortedMap $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        r1 := @parameter0: com.google.common.collect.Range;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        $z0 = virtualinvoke r1.<com.google.common.collect.Range: boolean isConnected(com.google.common.collect.Range)>($r3);

        if $z0 == 0 goto label1;

        $r4 = new com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r2 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        r1 = virtualinvoke r1.<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)>($r3);

        specialinvoke $r4.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: void <init>(java.util.NavigableMap,com.google.common.collect.Range)>($r2, r1);

        return $r4;

     label1:
        $r5 = staticinvoke <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap of()>();

        return $r5;
    }

    public java.util.Comparator comparator()
    {
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        com.google.common.collect.Ordering $r1;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        return $r1;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.Range $r2;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range get(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    java.util.Iterator descendingEntryIterator()
    {
        com.google.common.collect.Cut r4, $r9;
        java.util.Iterator $r6;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 $r10;
        java.util.Collection $r5;
        com.google.common.collect.Range r1;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap r2;
        com.google.common.collect.PeekingIterator $r7;
        java.lang.Comparable $r3;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        r1 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        $z0 = virtualinvoke r1.<com.google.common.collect.Range: boolean hasUpperBound()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

        r1 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        $r3 = virtualinvoke r1.<com.google.common.collect.Range: java.lang.Comparable upperEndpoint()>();

        r4 = (com.google.common.collect.Cut) $r3;

        r2 = interfaceinvoke r2.<java.util.NavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>(r4, 0);

        r2 = interfaceinvoke r2.<java.util.NavigableMap: java.util.NavigableMap descendingMap()>();

        $r5 = interfaceinvoke r2.<java.util.NavigableMap: java.util.Collection values()>();

        goto label2;

     label1:
        r2 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

        r2 = interfaceinvoke r2.<java.util.NavigableMap: java.util.NavigableMap descendingMap()>();

        $r5 = interfaceinvoke r2.<java.util.NavigableMap: java.util.Collection values()>();

     label2:
        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

        $r7 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator)>($r6);

        $z0 = interfaceinvoke $r7.<com.google.common.collect.PeekingIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r1 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        r4 = r1.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $r8 = interfaceinvoke $r7.<com.google.common.collect.PeekingIterator: java.lang.Object peek()>();

        r1 = (com.google.common.collect.Range) $r8;

        $r9 = r1.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $z0 = virtualinvoke r4.<com.google.common.collect.Cut: boolean isLessThan(java.lang.Comparable)>($r9);

        if $z0 == 0 goto label3;

        interfaceinvoke $r7.<com.google.common.collect.PeekingIterator: java.lang.Object next()>();

     label3:
        $r10 = new com.google.common.collect.TreeRangeSet$RangesByUpperBound$2;

        specialinvoke $r10.<com.google.common.collect.TreeRangeSet$RangesByUpperBound$2: void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,com.google.common.collect.PeekingIterator)>(r0, $r7);

        return $r10;
    }

    java.util.Iterator entryIterator()
    {
        com.google.common.collect.Cut r6, $r9;
        java.util.Map$Entry $r7;
        java.util.Iterator $r4;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound$1 r10;
        java.util.Collection $r3;
        com.google.common.collect.Range r1;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap r2;
        java.lang.Comparable $r5;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        r1 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        $z0 = virtualinvoke r1.<com.google.common.collect.Range: boolean hasLowerBound()>();

        if $z0 != 0 goto label1;

        r2 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

        $r3 = interfaceinvoke r2.<java.util.NavigableMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

        goto label4;

     label1:
        r2 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

        r1 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        $r5 = virtualinvoke r1.<com.google.common.collect.Range: java.lang.Comparable lowerEndpoint()>();

        r6 = (com.google.common.collect.Cut) $r5;

        $r7 = interfaceinvoke r2.<java.util.NavigableMap: java.util.Map$Entry lowerEntry(java.lang.Object)>(r6);

        if $r7 != null goto label2;

        r2 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

        $r3 = interfaceinvoke r2.<java.util.NavigableMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

        goto label4;

     label2:
        r1 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        r6 = r1.<com.google.common.collect.Range: com.google.common.collect.Cut lowerBound>;

        $r8 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r1 = (com.google.common.collect.Range) $r8;

        $r9 = r1.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

        $z0 = virtualinvoke r6.<com.google.common.collect.Cut: boolean isLessThan(java.lang.Comparable)>($r9);

        if $z0 == 0 goto label3;

        r2 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

        $r8 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (com.google.common.collect.Cut) $r8;

        r2 = interfaceinvoke r2.<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>(r6, 1);

        $r3 = interfaceinvoke r2.<java.util.NavigableMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

        goto label4;

     label3:
        r2 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

        r1 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        $r5 = virtualinvoke r1.<com.google.common.collect.Range: java.lang.Comparable lowerEndpoint()>();

        r6 = (com.google.common.collect.Cut) $r5;

        r2 = interfaceinvoke r2.<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>(r6, 1);

        $r3 = interfaceinvoke r2.<java.util.NavigableMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        r10 = new com.google.common.collect.TreeRangeSet$RangesByUpperBound$1;

        specialinvoke r10.<com.google.common.collect.TreeRangeSet$RangesByUpperBound$1: void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,java.util.Iterator)>(r0, $r4);

        return r10;
    }

    public com.google.common.collect.Range get(java.lang.Object)
    {
        com.google.common.collect.Cut r2, $r6;
        java.util.Map$Entry $r5;
        com.google.common.collect.Range r3;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap r4;
        java.lang.ClassCastException r7;
        java.lang.Object $r1;
        boolean z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r1 := @parameter0: java.lang.Object;

        z0 = $r1 instanceof com.google.common.collect.Cut;

        if z0 == 0 goto label16;

     label01:
        r2 = (com.google.common.collect.Cut) $r1;

     label02:
        r3 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

     label03:
        z0 = virtualinvoke r3.<com.google.common.collect.Range: boolean contains(java.lang.Comparable)>(r2);

     label04:
        if z0 != 0 goto label05;

        return null;

     label05:
        r4 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

     label06:
        $r5 = interfaceinvoke r4.<java.util.NavigableMap: java.util.Map$Entry lowerEntry(java.lang.Object)>(r2);

     label07:
        if $r5 == null goto label14;

     label08:
        $r1 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (com.google.common.collect.Range) $r1;

     label09:
        $r6 = r3.<com.google.common.collect.Range: com.google.common.collect.Cut upperBound>;

     label10:
        z0 = virtualinvoke $r6.<com.google.common.collect.Cut: boolean equals(java.lang.Object)>(r2);

     label11:
        if z0 == 0 goto label14;

     label12:
        $r1 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (com.google.common.collect.Range) $r1;

     label13:
        return r3;

     label14:
        return null;

     label15:
        r7 := @caughtexception;

     label16:
        return null;

        catch java.lang.ClassCastException from label01 to label02 with label15;
        catch java.lang.ClassCastException from label03 to label04 with label15;
        catch java.lang.ClassCastException from label06 to label07 with label15;
        catch java.lang.ClassCastException from label08 to label09 with label15;
        catch java.lang.ClassCastException from label10 to label11 with label15;
        catch java.lang.ClassCastException from label12 to label13 with label15;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.Range $r1;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range get(java.lang.Object)>($r2);

        return $r1;
    }

    public java.util.NavigableMap headMap(com.google.common.collect.Cut, boolean)
    {
        com.google.common.collect.Cut r1;
        com.google.common.collect.BoundType $r2;
        com.google.common.collect.Range $r3;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        r1 := @parameter0: com.google.common.collect.Cut;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType)>(r1, $r2);

        $r4 = specialinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap subMap(com.google.common.collect.Range)>($r3);

        return $r4;
    }

    public volatile java.util.NavigableMap headMap(java.lang.Object, boolean)
    {
        com.google.common.collect.Cut $r3;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.lang.Object $r2;
        java.util.NavigableMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = (com.google.common.collect.Cut) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean)>($r3, $z0);

        return $r1;
    }

    public boolean isEmpty()
    {
        java.util.Iterator $r4;
        com.google.common.collect.Range $r1, $r2;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        $r2 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range all()>();

        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

        $z0 = interfaceinvoke $r3.<java.util.NavigableMap: boolean isEmpty()>();

        return $z0;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.Iterator entryIterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public int size()
    {
        java.util.Iterator $r4;
        com.google.common.collect.Range $r1, $r2;
        int $i0;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r1 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: com.google.common.collect.Range upperBoundWindow>;

        $r2 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range all()>();

        $z0 = virtualinvoke $r1.<com.google.common.collect.Range: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap rangesByLowerBound>;

        $i0 = interfaceinvoke $r3.<java.util.NavigableMap: int size()>();

        return $i0;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.Iterator entryIterator()>();

        $i0 = staticinvoke <com.google.common.collect.Iterators: int size(java.util.Iterator)>($r4);

        return $i0;
    }

    public java.util.NavigableMap subMap(com.google.common.collect.Cut, boolean, com.google.common.collect.Cut, boolean)
    {
        com.google.common.collect.Cut r1, r2;
        com.google.common.collect.Range $r5;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap $r6;
        com.google.common.collect.BoundType $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        r1 := @parameter0: com.google.common.collect.Cut;

        $z0 := @parameter1: boolean;

        r2 := @parameter2: com.google.common.collect.Cut;

        $z1 := @parameter3: boolean;

        $r3 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r4 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z1);

        $r5 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType)>(r1, $r3, r2, $r4);

        $r6 = specialinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap subMap(com.google.common.collect.Range)>($r5);

        return $r6;
    }

    public volatile java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean)
    {
        com.google.common.collect.Cut $r4, $r5;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap $r1;
        java.lang.Object $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 := @parameter2: java.lang.Object;

        $z1 := @parameter3: boolean;

        $r4 = (com.google.common.collect.Cut) $r2;

        $r5 = (com.google.common.collect.Cut) $r3;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean)>($r4, $z0, $r5, $z1);

        return $r1;
    }

    public java.util.NavigableMap tailMap(com.google.common.collect.Cut, boolean)
    {
        com.google.common.collect.Cut r1;
        com.google.common.collect.BoundType $r2;
        com.google.common.collect.Range $r3;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.util.NavigableMap $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        r1 := @parameter0: com.google.common.collect.Cut;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.google.common.collect.BoundType: com.google.common.collect.BoundType forBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.collect.Range: com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType)>(r1, $r2);

        $r4 = specialinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap subMap(com.google.common.collect.Range)>($r3);

        return $r4;
    }

    public volatile java.util.NavigableMap tailMap(java.lang.Object, boolean)
    {
        com.google.common.collect.Cut $r3;
        com.google.common.collect.TreeRangeSet$RangesByUpperBound r0;
        java.lang.Object $r2;
        java.util.NavigableMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.TreeRangeSet$RangesByUpperBound;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r3 = (com.google.common.collect.Cut) $r2;

        $r1 = virtualinvoke r0.<com.google.common.collect.TreeRangeSet$RangesByUpperBound: java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean)>($r3, $z0);

        return $r1;
    }
}
