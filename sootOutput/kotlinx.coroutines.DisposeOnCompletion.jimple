public final class kotlinx.coroutines.DisposeOnCompletion extends kotlinx.coroutines.JobNode
{
    private final kotlinx.coroutines.DisposableHandle handle;

    public void <init>(kotlinx.coroutines.DisposableHandle)
    {
        kotlinx.coroutines.DisposableHandle $r1;
        kotlinx.coroutines.DisposeOnCompletion r0;

        r0 := @this: kotlinx.coroutines.DisposeOnCompletion;

        $r1 := @parameter0: kotlinx.coroutines.DisposableHandle;

        specialinvoke r0.<kotlinx.coroutines.JobNode: void <init>()>();

        r0.<kotlinx.coroutines.DisposeOnCompletion: kotlinx.coroutines.DisposableHandle handle> = $r1;

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        java.lang.Throwable $r2;
        kotlinx.coroutines.DisposeOnCompletion r0;
        kotlin.Unit r3;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.DisposeOnCompletion;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) $r1;

        virtualinvoke r0.<kotlinx.coroutines.DisposeOnCompletion: void invoke(java.lang.Throwable)>($r2);

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r3;
    }

    public void invoke(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        kotlinx.coroutines.DisposableHandle $r2;
        kotlinx.coroutines.DisposeOnCompletion r0;

        r0 := @this: kotlinx.coroutines.DisposeOnCompletion;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<kotlinx.coroutines.DisposeOnCompletion: kotlinx.coroutines.DisposableHandle handle>;

        interfaceinvoke $r2.<kotlinx.coroutines.DisposableHandle: void dispose()>();

        return;
    }
}
