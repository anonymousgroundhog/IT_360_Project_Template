public abstract class kotlinx.coroutines.internal.OpDescriptor extends java.lang.Object
{

    public void <init>()
    {
        kotlinx.coroutines.internal.OpDescriptor r0;

        r0 := @this: kotlinx.coroutines.internal.OpDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract kotlinx.coroutines.internal.AtomicOp getAtomicOp();

    public abstract java.lang.Object perform(java.lang.Object);

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        kotlinx.coroutines.internal.OpDescriptor r0;

        r0 := @this: kotlinx.coroutines.internal.OpDescriptor;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)>(r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $r2 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)>(r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
