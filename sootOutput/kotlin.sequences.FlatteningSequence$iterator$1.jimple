public final class kotlin.sequences.FlatteningSequence$iterator$1 extends java.lang.Object implements java.util.Iterator, kotlin.jvm.internal.markers.KMappedMarker
{
    private java.util.Iterator itemIterator;
    private final java.util.Iterator iterator;
    final kotlin.sequences.FlatteningSequence this$0;

    void <init>(kotlin.sequences.FlatteningSequence)
    {
        kotlin.sequences.FlatteningSequence$iterator$1 r0;
        java.util.Iterator $r3;
        kotlin.sequences.Sequence $r2;
        kotlin.sequences.FlatteningSequence $r1;

        r0 := @this: kotlin.sequences.FlatteningSequence$iterator$1;

        $r1 := @parameter0: kotlin.sequences.FlatteningSequence;

        r0.<kotlin.sequences.FlatteningSequence$iterator$1: kotlin.sequences.FlatteningSequence this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <kotlin.sequences.FlatteningSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FlatteningSequence)>($r1);

        $r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

        r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator iterator> = $r3;

        return;
    }

    private final boolean ensureItemIterator()
    {
        kotlin.sequences.FlatteningSequence$iterator$1 r0;
        java.util.Iterator r1;
        java.lang.Object $r2;
        kotlin.jvm.functions.Function1 $r4, $r5;
        kotlin.sequences.FlatteningSequence r3;
        boolean $z0;

        r0 := @this: kotlin.sequences.FlatteningSequence$iterator$1;

        r1 = r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator itemIterator>;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator itemIterator> = null;

     label3:
        r1 = r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator itemIterator>;

        if r1 != null goto label5;

        r1 = r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator iterator>;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        return 0;

     label4:
        r1 = r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator iterator>;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = r0.<kotlin.sequences.FlatteningSequence$iterator$1: kotlin.sequences.FlatteningSequence this$0>;

        $r4 = staticinvoke <kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 access$getIterator$p(kotlin.sequences.FlatteningSequence)>(r3);

        r3 = r0.<kotlin.sequences.FlatteningSequence$iterator$1: kotlin.sequences.FlatteningSequence this$0>;

        $r5 = staticinvoke <kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.FlatteningSequence)>(r3);

        $r2 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        r1 = (java.util.Iterator) $r2;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator itemIterator> = r1;

     label5:
        return 1;
    }

    public final java.util.Iterator getItemIterator()
    {
        kotlin.sequences.FlatteningSequence$iterator$1 r0;
        java.util.Iterator r1;

        r0 := @this: kotlin.sequences.FlatteningSequence$iterator$1;

        r1 = r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator itemIterator>;

        return r1;
    }

    public final java.util.Iterator getIterator()
    {
        kotlin.sequences.FlatteningSequence$iterator$1 r0;
        java.util.Iterator r1;

        r0 := @this: kotlin.sequences.FlatteningSequence$iterator$1;

        r1 = r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator iterator>;

        return r1;
    }

    public boolean hasNext()
    {
        kotlin.sequences.FlatteningSequence$iterator$1 r0;
        boolean $z0;

        r0 := @this: kotlin.sequences.FlatteningSequence$iterator$1;

        $z0 = specialinvoke r0.<kotlin.sequences.FlatteningSequence$iterator$1: boolean ensureItemIterator()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        kotlin.sequences.FlatteningSequence$iterator$1 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;
        boolean $z0;

        r0 := @this: kotlin.sequences.FlatteningSequence$iterator$1;

        $z0 = specialinvoke r0.<kotlin.sequences.FlatteningSequence$iterator$1: boolean ensureItemIterator()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator itemIterator>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        return $r2;

     label1:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        kotlin.sequences.FlatteningSequence$iterator$1 r0;

        r0 := @this: kotlin.sequences.FlatteningSequence$iterator$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }

    public final void setItemIterator(java.util.Iterator)
    {
        kotlin.sequences.FlatteningSequence$iterator$1 r0;
        java.util.Iterator $r1;

        r0 := @this: kotlin.sequences.FlatteningSequence$iterator$1;

        $r1 := @parameter0: java.util.Iterator;

        r0.<kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator itemIterator> = $r1;

        return;
    }
}
