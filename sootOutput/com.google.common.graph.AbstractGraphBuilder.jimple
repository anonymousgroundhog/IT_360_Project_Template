abstract class com.google.common.graph.AbstractGraphBuilder extends java.lang.Object
{
    boolean allowsSelfLoops;
    final boolean directed;
    com.google.common.base.Optional expectedNodeCount;
    com.google.common.graph.ElementOrder incidentEdgeOrder;
    com.google.common.graph.ElementOrder nodeOrder;

    void <init>(boolean)
    {
        com.google.common.graph.ElementOrder $r1;
        com.google.common.base.Optional $r2;
        com.google.common.graph.AbstractGraphBuilder r0;
        boolean $z0;

        r0 := @this: com.google.common.graph.AbstractGraphBuilder;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.graph.AbstractGraphBuilder: boolean allowsSelfLoops> = 0;

        $r1 = staticinvoke <com.google.common.graph.ElementOrder: com.google.common.graph.ElementOrder insertion()>();

        r0.<com.google.common.graph.AbstractGraphBuilder: com.google.common.graph.ElementOrder nodeOrder> = $r1;

        $r1 = staticinvoke <com.google.common.graph.ElementOrder: com.google.common.graph.ElementOrder unordered()>();

        r0.<com.google.common.graph.AbstractGraphBuilder: com.google.common.graph.ElementOrder incidentEdgeOrder> = $r1;

        $r2 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>();

        r0.<com.google.common.graph.AbstractGraphBuilder: com.google.common.base.Optional expectedNodeCount> = $r2;

        r0.<com.google.common.graph.AbstractGraphBuilder: boolean directed> = $z0;

        return;
    }
}
