public class androidx.room.util.TableInfo extends java.lang.Object
{
    public static final int CREATED_FROM_DATABASE;
    public static final int CREATED_FROM_ENTITY;
    public static final int CREATED_FROM_UNKNOWN;
    public final java.util.Map columns;
    public final java.util.Set foreignKeys;
    public final java.util.Set indices;
    public final java.lang.String name;

    public void <init>(java.lang.String, java.util.Map, java.util.Set)
    {
        java.util.Map r2;
        androidx.room.util.TableInfo r0;
        java.util.Set r3, $r4;
        java.lang.String $r1;

        r0 := @this: androidx.room.util.TableInfo;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        $r4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        specialinvoke r0.<androidx.room.util.TableInfo: void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set)>($r1, r2, r3, $r4);

        return;
    }

    public void <init>(java.lang.String, java.util.Map, java.util.Set, java.util.Set)
    {
        java.util.Map r2;
        androidx.room.util.TableInfo r0;
        java.util.Set r3, r4;
        java.lang.String $r1;

        r0 := @this: androidx.room.util.TableInfo;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        r4 := @parameter3: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.util.TableInfo: java.lang.String name> = $r1;

        r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r2);

        r0.<androidx.room.util.TableInfo: java.util.Map columns> = r2;

        r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r3);

        r0.<androidx.room.util.TableInfo: java.util.Set foreignKeys> = r3;

        if r4 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r4);

     label2:
        r0.<androidx.room.util.TableInfo: java.util.Set indices> = r3;

        return;
    }

    public static androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        androidx.sqlite.db.SupportSQLiteDatabase $r0;
        java.util.Map $r3;
        androidx.room.util.TableInfo $r2;
        java.util.Set $r4, $r5;
        java.lang.String $r1;

        $r0 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <androidx.room.util.TableInfo: java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>($r0, $r1);

        $r4 = staticinvoke <androidx.room.util.TableInfo: java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>($r0, $r1);

        $r5 = staticinvoke <androidx.room.util.TableInfo: java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>($r0, $r1);

        $r2 = new androidx.room.util.TableInfo;

        specialinvoke $r2.<androidx.room.util.TableInfo: void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set)>($r1, $r3, $r4, $r5);

        return $r2;
    }

    private static java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        java.lang.Throwable r8;
        java.util.HashMap r4;
        androidx.sqlite.db.SupportSQLiteDatabase $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r1, $r5, $r6;
        android.database.Cursor $r3;
        boolean $z0;
        androidx.room.util.TableInfo$Column $r7;
        java.lang.StringBuilder r2;

        $r0 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        $r1 := @parameter1: java.lang.String;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PRAGMA table_info(`");

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("`)");

        $r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)>($r1);

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

     label01:
        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnCount()>();

     label02:
        if $i0 <= 0 goto label12;

     label03:
        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

     label04:
        $i1 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("type");

        $i2 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("notnull");

        $i3 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("pk");

        $i4 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("dflt_value");

     label05:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

     label06:
        if $z0 == 0 goto label12;

     label07:
        $r1 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r5 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i5 = interfaceinvoke $r3.<android.database.Cursor: int getInt(int)>($i2);

     label08:
        if $i5 == 0 goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        $i5 = interfaceinvoke $r3.<android.database.Cursor: int getInt(int)>($i3);

        $r6 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i4);

        $r7 = new androidx.room.util.TableInfo$Column;

        specialinvoke $r7.<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>($r1, $r5, $z0, $i5, $r6, 2);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label11:
        goto label05;

     label12:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return r4;

     label13:
        r8 := @caughtexception;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        throw r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    private static java.util.List readForeignKeyFieldMappings(android.database.Cursor)
    {
        java.util.ArrayList r1;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7;
        androidx.room.util.TableInfo$ForeignKeyWithSequence $r2;
        java.lang.String $r3, $r4;
        android.database.Cursor $r0;

        $r0 := @parameter0: android.database.Cursor;

        $i0 = interfaceinvoke $r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("id");

        $i1 = interfaceinvoke $r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("seq");

        $i2 = interfaceinvoke $r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("from");

        $i3 = interfaceinvoke $r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("to");

        $i4 = interfaceinvoke $r0.<android.database.Cursor: int getCount()>();

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        i5 = 0;

     label1:
        if i5 >= $i4 goto label2;

        interfaceinvoke $r0.<android.database.Cursor: boolean moveToPosition(int)>(i5);

        $r2 = new androidx.room.util.TableInfo$ForeignKeyWithSequence;

        $i6 = interfaceinvoke $r0.<android.database.Cursor: int getInt(int)>($i0);

        $i7 = interfaceinvoke $r0.<android.database.Cursor: int getInt(int)>($i1);

        $r3 = interfaceinvoke $r0.<android.database.Cursor: java.lang.String getString(int)>($i2);

        $r4 = interfaceinvoke $r0.<android.database.Cursor: java.lang.String getString(int)>($i3);

        specialinvoke $r2.<androidx.room.util.TableInfo$ForeignKeyWithSequence: void <init>(int,int,java.lang.String,java.lang.String)>($i6, $i7, $r3, $r4);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i5 = i5 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r1);

        return r1;
    }

    private static java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        androidx.room.util.TableInfo$ForeignKey r11;
        java.lang.Throwable r14;
        java.util.ArrayList r2, r7;
        java.util.HashSet r3;
        androidx.sqlite.db.SupportSQLiteDatabase $r0;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, $i7, i8;
        androidx.room.util.TableInfo$ForeignKeyWithSequence $r10;
        java.lang.String $r1, $r12, $r13;
        android.database.Cursor $r5;
        boolean $z0;
        java.util.Iterator $r8;
        java.util.List $r6;
        java.lang.StringBuilder r4;
        java.lang.Object $r9;

        $r0 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        $r1 := @parameter1: java.lang.String;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        r4 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PRAGMA foreign_key_list(`");

        r4 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        r4 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("`)");

        $r1 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)>($r1);

     label01:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("id");

     label02:
        i1 = $i0;

     label03:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("seq");

        $i2 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("table");

        $i3 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("on_delete");

        $i4 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("on_update");

        $r6 = staticinvoke <androidx.room.util.TableInfo: java.util.List readForeignKeyFieldMappings(android.database.Cursor)>($r5);

        $i5 = interfaceinvoke $r5.<android.database.Cursor: int getCount()>();

     label04:
        i6 = 0;

     label05:
        if i6 >= $i5 goto label19;

     label06:
        interfaceinvoke $r5.<android.database.Cursor: boolean moveToPosition(int)>(i6);

        $i7 = interfaceinvoke $r5.<android.database.Cursor: int getInt(int)>($i0);

     label07:
        if $i7 == 0 goto label08;

        $i7 = i1;

        goto label18;

     label08:
        $i7 = interfaceinvoke $r5.<android.database.Cursor: int getInt(int)>(i1);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r8 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

     label10:
        if $z0 == 0 goto label16;

     label11:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (androidx.room.util.TableInfo$ForeignKeyWithSequence) $r9;

     label12:
        i8 = $r10.<androidx.room.util.TableInfo$ForeignKeyWithSequence: int mId>;

     label13:
        if i8 != $i7 goto label15;

     label14:
        $r1 = $r10.<androidx.room.util.TableInfo$ForeignKeyWithSequence: java.lang.String mFrom>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r1 = $r10.<androidx.room.util.TableInfo$ForeignKeyWithSequence: java.lang.String mTo>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r1);

     label15:
        goto label09;

     label16:
        $i7 = i1;

     label17:
        r11 = new androidx.room.util.TableInfo$ForeignKey;

        $r1 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>($i2);

        $r12 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>($i3);

        $r13 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>($i4);

        specialinvoke r11.<androidx.room.util.TableInfo$ForeignKey: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)>($r1, $r12, $r13, r2, r7);

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r11);

     label18:
        i6 = i6 + 1;

        i1 = $i7;

        goto label05;

     label19:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return r3;

     label20:
        r14 := @caughtexception;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
    }

    private static androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String, boolean)
    {
        java.lang.Throwable r7;
        java.lang.Integer $r5;
        java.util.ArrayList $r10;
        androidx.sqlite.db.SupportSQLiteDatabase $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;
        android.database.Cursor $r4;
        java.util.Collection $r6;
        java.util.TreeMap $r9;
        androidx.room.util.TableInfo$Index $r11;
        java.lang.StringBuilder r2, $r8;

        $r0 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PRAGMA index_xinfo(`");

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("`)");

        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)>($r3);

     label01:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("seqno");

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("cid");

        $i2 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

     label02:
        if $i0 == -1 goto label15;

        if $i1 == -1 goto label15;

        if $i2 != -1 goto label03;

        goto label15;

     label03:
        $r9 = new java.util.TreeMap;

     label04:
        specialinvoke $r9.<java.util.TreeMap: void <init>()>();

     label05:
        $z1 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

     label06:
        if $z1 == 0 goto label11;

     label07:
        $i3 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i1);

     label08:
        if $i3 >= 0 goto label09;

        goto label05;

     label09:
        $i3 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i0);

        $r3 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i2);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r9.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r3);

     label10:
        goto label05;

     label11:
        $r10 = new java.util.ArrayList;

     label12:
        $i0 = virtualinvoke $r9.<java.util.TreeMap: int size()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        $r6 = virtualinvoke $r9.<java.util.TreeMap: java.util.Collection values()>();

        interfaceinvoke $r10.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        $r11 = new androidx.room.util.TableInfo$Index;

     label13:
        specialinvoke $r11.<androidx.room.util.TableInfo$Index: void <init>(java.lang.String,boolean,java.util.List)>($r1, $z0, $r10);

     label14:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $r11;

     label15:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return null;

     label16:
        r7 := @caughtexception;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        throw r7;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
    }

    private static java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        java.lang.Throwable r6;
        java.util.HashSet $r8;
        androidx.sqlite.db.SupportSQLiteDatabase $r0;
        androidx.room.util.TableInfo$Index $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder r2, $r7;
        java.lang.String $r1, r4;
        android.database.Cursor $r3;
        boolean $z0;

        $r0 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        $r1 := @parameter1: java.lang.String;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PRAGMA index_list(`");

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("`)");

        $r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = interfaceinvoke $r0.<androidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)>($r1);

     label01:
        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

        $i1 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("origin");

        $i2 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("unique");

     label02:
        if $i0 == -1 goto label19;

        if $i1 == -1 goto label19;

        if $i2 != -1 goto label03;

        goto label19;

     label03:
        $r8 = new java.util.HashSet;

     label04:
        specialinvoke $r8.<java.util.HashSet: void <init>()>();

     label05:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

     label06:
        if $z0 == 0 goto label18;

     label07:
        $r1 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i1);

     label08:
        r4 = "c";

     label09:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label10:
        if $z0 != 0 goto label11;

        goto label05;

     label11:
        $r1 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i3 = interfaceinvoke $r3.<android.database.Cursor: int getInt(int)>($i2);

     label12:
        $z0 = 1;

        if $i3 != 1 goto label13;

        goto label14;

     label13:
        $z0 = 0;

     label14:
        $r5 = staticinvoke <androidx.room.util.TableInfo: androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean)>($r0, $r1, $z0);

     label15:
        if $r5 != null goto label16;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return null;

     label16:
        virtualinvoke $r8.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

     label17:
        goto label05;

     label18:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return $r8;

     label19:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return null;

     label20:
        r6 := @caughtexception;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        throw r6;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label04 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.room.util.TableInfo r0, r4;
        java.util.Set $r9, $r10;
        java.util.Map $r7, $r8;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: androidx.room.util.TableInfo;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label01;

        return 1;

     label01:
        if $r1 == null goto label11;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label02;

        return 0;

     label02:
        r4 = (androidx.room.util.TableInfo) $r1;

        $r5 = r0.<androidx.room.util.TableInfo: java.lang.String name>;

        if $r5 == null goto label03;

        $r5 = r0.<androidx.room.util.TableInfo: java.lang.String name>;

        $r6 = r4.<androidx.room.util.TableInfo: java.lang.String name>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label04;

        return 0;

     label03:
        $r5 = r4.<androidx.room.util.TableInfo: java.lang.String name>;

        if $r5 == null goto label04;

        return 0;

     label04:
        $r7 = r0.<androidx.room.util.TableInfo: java.util.Map columns>;

        if $r7 == null goto label05;

        $r7 = r0.<androidx.room.util.TableInfo: java.util.Map columns>;

        $r8 = r4.<androidx.room.util.TableInfo: java.util.Map columns>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label06;

        return 0;

     label05:
        $r7 = r4.<androidx.room.util.TableInfo: java.util.Map columns>;

        if $r7 == null goto label06;

        return 0;

     label06:
        $r9 = r0.<androidx.room.util.TableInfo: java.util.Set foreignKeys>;

        if $r9 == null goto label07;

        $r9 = r0.<androidx.room.util.TableInfo: java.util.Set foreignKeys>;

        $r10 = r4.<androidx.room.util.TableInfo: java.util.Set foreignKeys>;

        $z0 = interfaceinvoke $r9.<java.util.Set: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label08;

        return 0;

     label07:
        $r9 = r4.<androidx.room.util.TableInfo: java.util.Set foreignKeys>;

        if $r9 == null goto label08;

        return 0;

     label08:
        $r9 = r0.<androidx.room.util.TableInfo: java.util.Set indices>;

        if $r9 == null goto label10;

        $r9 = r4.<androidx.room.util.TableInfo: java.util.Set indices>;

        if $r9 != null goto label09;

        return 1;

     label09:
        $r9 = r0.<androidx.room.util.TableInfo: java.util.Set indices>;

        $r10 = r4.<androidx.room.util.TableInfo: java.util.Set indices>;

        $z0 = interfaceinvoke $r9.<java.util.Set: boolean equals(java.lang.Object)>($r10);

        return $z0;

     label10:
        return 1;

     label11:
        return 0;
    }

    public int hashCode()
    {
        java.util.Map $r2;
        androidx.room.util.TableInfo r0;
        int $i0, $i1, $i2;
        java.util.Set $r3;
        java.lang.String r1;

        r0 := @this: androidx.room.util.TableInfo;

        r1 = r0.<androidx.room.util.TableInfo: java.lang.String name>;

        $i0 = 0;

        if r1 == null goto label1;

        r1 = r0.<androidx.room.util.TableInfo: java.lang.String name>;

        $i1 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $i1 = $i1 * 31;

        $r2 = r0.<androidx.room.util.TableInfo: java.util.Map columns>;

        if $r2 == null goto label3;

        $r2 = r0.<androidx.room.util.TableInfo: java.util.Map columns>;

        $i2 = interfaceinvoke $r2.<java.util.Map: int hashCode()>();

        goto label4;

     label3:
        $i2 = 0;

     label4:
        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r3 = r0.<androidx.room.util.TableInfo: java.util.Set foreignKeys>;

        if $r3 == null goto label5;

        $r3 = r0.<androidx.room.util.TableInfo: java.util.Set foreignKeys>;

        $i0 = interfaceinvoke $r3.<java.util.Set: int hashCode()>();

     label5:
        $i0 = $i1 + $i0;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.util.Map $r3;
        androidx.room.util.TableInfo r0;
        java.util.Set $r4;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: androidx.room.util.TableInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TableInfo{name=\'");

        $r2 = r0.<androidx.room.util.TableInfo: java.lang.String name>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", columns=");

        $r3 = r0.<androidx.room.util.TableInfo: java.util.Map columns>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", foreignKeys=");

        $r4 = r0.<androidx.room.util.TableInfo: java.util.Set foreignKeys>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", indices=");

        $r4 = r0.<androidx.room.util.TableInfo: java.util.Set indices>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <androidx.room.util.TableInfo: int CREATED_FROM_ENTITY> = 1;

        <androidx.room.util.TableInfo: int CREATED_FROM_DATABASE> = 2;

        return;
    }
}
