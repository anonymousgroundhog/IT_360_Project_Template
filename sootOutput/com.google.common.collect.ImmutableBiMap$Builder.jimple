public final class com.google.common.collect.ImmutableBiMap$Builder extends com.google.common.collect.ImmutableMap$Builder
{

    public void <init>()
    {
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        specialinvoke r0.<com.google.common.collect.ImmutableMap$Builder: void <init>()>();

        return;
    }

    void <init>(int)
    {
        int $i0;
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.common.collect.ImmutableMap$Builder: void <init>(int)>($i0);

        return;
    }

    public com.google.common.collect.ImmutableBiMap build()
    {
        com.google.common.collect.ImmutableBiMap $r1;
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap buildOrThrow()>();

        return $r1;
    }

    public volatile com.google.common.collect.ImmutableMap build()
    {
        com.google.common.collect.ImmutableBiMap $r1;
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap build()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableBiMap buildKeepingLast()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not supported for bimaps");

        throw $r1;
    }

    public volatile com.google.common.collect.ImmutableMap buildKeepingLast()
    {
        com.google.common.collect.ImmutableBiMap $r1;
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap buildKeepingLast()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableBiMap buildOrThrow()
    {
        com.google.common.collect.ImmutableBiMap $r1;
        java.lang.Object[] $r3;
        com.google.common.collect.ImmutableBiMap$Builder r0;
        com.google.common.collect.RegularImmutableBiMap $r4;
        int $i0;
        java.util.Comparator $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $i0 = r0.<com.google.common.collect.ImmutableBiMap$Builder: int size>;

        if $i0 != 0 goto label1;

        $r1 = staticinvoke <com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap of()>();

        return $r1;

     label1:
        $r2 = r0.<com.google.common.collect.ImmutableBiMap$Builder: java.util.Comparator valueComparator>;

        if $r2 == null goto label3;

        $z0 = r0.<com.google.common.collect.ImmutableBiMap$Builder: boolean entriesUsed>;

        if $z0 == 0 goto label2;

        $r3 = r0.<com.google.common.collect.ImmutableBiMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        $i0 = r0.<com.google.common.collect.ImmutableBiMap$Builder: int size>;

        $i0 = $i0 * 2;

        $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r3, $i0);

        r0.<com.google.common.collect.ImmutableBiMap$Builder: java.lang.Object[] alternatingKeysAndValues> = $r3;

     label2:
        $r3 = r0.<com.google.common.collect.ImmutableBiMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        $i0 = r0.<com.google.common.collect.ImmutableBiMap$Builder: int size>;

        $r2 = r0.<com.google.common.collect.ImmutableBiMap$Builder: java.util.Comparator valueComparator>;

        staticinvoke <com.google.common.collect.ImmutableBiMap$Builder: void sortEntries(java.lang.Object[],int,java.util.Comparator)>($r3, $i0, $r2);

     label3:
        r0.<com.google.common.collect.ImmutableBiMap$Builder: boolean entriesUsed> = 1;

        $r4 = new com.google.common.collect.RegularImmutableBiMap;

        $r3 = r0.<com.google.common.collect.ImmutableBiMap$Builder: java.lang.Object[] alternatingKeysAndValues>;

        $i0 = r0.<com.google.common.collect.ImmutableBiMap$Builder: int size>;

        specialinvoke $r4.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r3, $i0);

        return $r4;
    }

    public volatile com.google.common.collect.ImmutableMap buildOrThrow()
    {
        com.google.common.collect.ImmutableBiMap $r1;
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap buildOrThrow()>();

        return $r1;
    }

    com.google.common.collect.ImmutableBiMap$Builder combine(com.google.common.collect.ImmutableMap$Builder)
    {
        com.google.common.collect.ImmutableBiMap$Builder r0;
        com.google.common.collect.ImmutableMap$Builder r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        r1 := @parameter0: com.google.common.collect.ImmutableMap$Builder;

        specialinvoke r0.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder combine(com.google.common.collect.ImmutableMap$Builder)>(r1);

        return r0;
    }

    volatile com.google.common.collect.ImmutableMap$Builder combine(com.google.common.collect.ImmutableMap$Builder)
    {
        com.google.common.collect.ImmutableBiMap$Builder r0;
        com.google.common.collect.ImmutableMap$Builder $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r1 := @parameter0: com.google.common.collect.ImmutableMap$Builder;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder combine(com.google.common.collect.ImmutableMap$Builder)>($r1);

        return r0;
    }

    public com.google.common.collect.ImmutableBiMap$Builder orderEntriesByValue(java.util.Comparator)
    {
        com.google.common.collect.ImmutableBiMap$Builder r0;
        java.util.Comparator r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder orderEntriesByValue(java.util.Comparator)>(r1);

        return r0;
    }

    public volatile com.google.common.collect.ImmutableMap$Builder orderEntriesByValue(java.util.Comparator)
    {
        com.google.common.collect.ImmutableBiMap$Builder r0;
        java.util.Comparator $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r1 := @parameter0: java.util.Comparator;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder orderEntriesByValue(java.util.Comparator)>($r1);

        return r0;
    }

    public com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r0;
    }

    public com.google.common.collect.ImmutableBiMap$Builder put(java.util.Map$Entry)
    {
        java.util.Map$Entry r1;
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        r1 := @parameter0: java.util.Map$Entry;

        specialinvoke r0.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry)>(r1);

        return r0;
    }

    public volatile com.google.common.collect.ImmutableMap$Builder put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>($r2, $r1);

        return r0;
    }

    public volatile com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry)
    {
        java.util.Map$Entry $r1;
        com.google.common.collect.ImmutableBiMap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r1 := @parameter0: java.util.Map$Entry;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.util.Map$Entry)>($r1);

        return r0;
    }

    public com.google.common.collect.ImmutableBiMap$Builder putAll(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableBiMap$Builder r0;
        java.lang.Iterable r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable)>(r1);

        return r0;
    }

    public com.google.common.collect.ImmutableBiMap$Builder putAll(java.util.Map)
    {
        com.google.common.collect.ImmutableBiMap$Builder r0;
        java.util.Map r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map)>(r1);

        return r0;
    }

    public volatile com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableBiMap$Builder r0;
        java.lang.Iterable $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r1 := @parameter0: java.lang.Iterable;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder putAll(java.lang.Iterable)>($r1);

        return r0;
    }

    public volatile com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map)
    {
        com.google.common.collect.ImmutableBiMap$Builder r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap$Builder;

        $r1 := @parameter0: java.util.Map;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder putAll(java.util.Map)>($r1);

        return r0;
    }
}
