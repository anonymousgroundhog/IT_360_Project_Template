public final class com.google.android.gms.internal.ads.zzfxy extends java.lang.Object
{
    private static final java.lang.Object zza;
    private static final java.lang.reflect.Method zzb;
    private static final java.lang.reflect.Method zzc;

    static void <clinit>()
    {
        java.lang.Class[] $r3;
        java.lang.Object $r0;
        java.lang.Class $r4;
        java.lang.reflect.Method $r1, $r2;

        $r0 = staticinvoke <com.google.android.gms.internal.ads.zzfxy: java.lang.Object zza()>();

        <com.google.android.gms.internal.ads.zzfxy: java.lang.Object zza> = $r0;

        $r0 = <com.google.android.gms.internal.ads.zzfxy: java.lang.Object zza>;

        $r1 = null;

        if $r0 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = class "Ljava/lang/Throwable;";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[1] = $r4;

        $r2 = staticinvoke <com.google.android.gms.internal.ads.zzfxy: java.lang.reflect.Method zzb(java.lang.String,java.lang.Class[])>("getStackTraceElement", $r3);

     label2:
        <com.google.android.gms.internal.ads.zzfxy: java.lang.reflect.Method zzb> = $r2;

        $r0 = <com.google.android.gms.internal.ads.zzfxy: java.lang.Object zza>;

        if $r0 != null goto label3;

        goto label4;

     label3:
        $r1 = staticinvoke <com.google.android.gms.internal.ads.zzfxy: java.lang.reflect.Method zzc(java.lang.Object)>($r0);

     label4:
        <com.google.android.gms.internal.ads.zzfxy: java.lang.reflect.Method zzc> = $r1;

        return;
    }

    private static java.lang.Object zza()
    {
        java.lang.Throwable $r5;
        java.lang.Object[] $r3;
        java.lang.Class[] $r0;
        java.lang.Class $r1;
        java.lang.Object $r4;
        java.lang.reflect.Method $r2;
        java.lang.ThreadDeath $r6;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("sun.misc.SharedSecrets", 0, null);

     label2:
        $r0 = newarray (java.lang.Class)[0];

     label3:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getJavaLangAccess", $r0);

     label4:
        $r3 = newarray (java.lang.Object)[0];

     label5:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

     label6:
        return $r4;

     label7:
        $r5 := @caughtexception;

        return null;

     label8:
        $r6 := @caughtexception;

        throw $r6;

        catch java.lang.ThreadDeath from label1 to label2 with label8;
        catch java.lang.ThreadDeath from label3 to label4 with label8;
        catch java.lang.ThreadDeath from label5 to label6 with label8;
        catch java.lang.Throwable from label1 to label6 with label7;
    }

    private static transient java.lang.reflect.Method zzb(java.lang.String, java.lang.Class[]) throws java.lang.ThreadDeath
    {
        java.lang.Throwable $r4;
        java.lang.Class[] $r0;
        java.lang.Class $r2;
        java.lang.String $r1;
        java.lang.reflect.Method $r3;
        java.lang.ThreadDeath $r5;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Class[];

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("sun.misc.JavaLangAccess", 0, null);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r1, $r0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        throw $r5;

        catch java.lang.ThreadDeath from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static java.lang.reflect.Method zzc(java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.lang.UnsupportedOperationException $r7;
        java.lang.IllegalAccessException $r6;
        java.lang.Object[] $r3;
        java.lang.Class[] $r2;
        java.lang.reflect.InvocationTargetException $r5;
        java.lang.Object $r1;
        java.lang.reflect.Method $r0;

        $r1 := @parameter0: java.lang.Object;

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/Throwable;";

     label01:
        $r0 = staticinvoke <com.google.android.gms.internal.ads.zzfxy: java.lang.reflect.Method zzb(java.lang.String,java.lang.Class[])>("getStackTraceDepth", $r2);

     label02:
        if $r0 != null goto label03;

        return null;

     label03:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = new java.lang.Throwable;

     label04:
        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

     label05:
        $r3[0] = $r4;

     label06:
        virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r3);

     label07:
        return $r0;

     label08:
        $r5 := @caughtexception;

        return null;

     label09:
        $r6 := @caughtexception;

        return null;

     label10:
        $r7 := @caughtexception;

        return null;

        catch java.lang.UnsupportedOperationException from label01 to label02 with label10;
        catch java.lang.UnsupportedOperationException from label04 to label05 with label10;
        catch java.lang.UnsupportedOperationException from label06 to label07 with label10;
        catch java.lang.IllegalAccessException from label01 to label02 with label09;
        catch java.lang.IllegalAccessException from label04 to label05 with label09;
        catch java.lang.IllegalAccessException from label06 to label07 with label09;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label08;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label08;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label08;
    }
}
