public final class kotlin.time.MeasureTimeKt extends java.lang.Object
{

    public static final long measureTime(kotlin.jvm.functions.Function0)
    {
        long $l0;
        kotlin.jvm.functions.Function0 $r0;
        kotlin.time.TimeSource$Monotonic $r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "block");

        $r1 = <kotlin.time.TimeSource$Monotonic: kotlin.time.TimeSource$Monotonic INSTANCE>;

        $l0 = virtualinvoke $r1.<kotlin.time.TimeSource$Monotonic: long markNow-z9LOYto()>();

        interfaceinvoke $r0.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $l0 = staticinvoke <kotlin.time.TimeSource$Monotonic$ValueTimeMark: long elapsedNow-UwyO8pc(long)>($l0);

        return $l0;
    }

    public static final long measureTime(kotlin.time.TimeSource$Monotonic, kotlin.jvm.functions.Function0)
    {
        long $l0;
        kotlin.time.TimeSource$Monotonic $r0;
        kotlin.jvm.functions.Function0 $r1;

        $r0 := @parameter0: kotlin.time.TimeSource$Monotonic;

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        $l0 = virtualinvoke $r0.<kotlin.time.TimeSource$Monotonic: long markNow-z9LOYto()>();

        interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $l0 = staticinvoke <kotlin.time.TimeSource$Monotonic$ValueTimeMark: long elapsedNow-UwyO8pc(long)>($l0);

        return $l0;
    }

    public static final long measureTime(kotlin.time.TimeSource, kotlin.jvm.functions.Function0)
    {
        kotlin.time.TimeSource $r0;
        long $l0;
        kotlin.time.TimeMark $r2;
        kotlin.jvm.functions.Function0 $r1;

        $r0 := @parameter0: kotlin.time.TimeSource;

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        $r2 = interfaceinvoke $r0.<kotlin.time.TimeSource: kotlin.time.TimeMark markNow()>();

        interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $l0 = interfaceinvoke $r2.<kotlin.time.TimeMark: long elapsedNow-UwyO8pc()>();

        return $l0;
    }

    public static final kotlin.time.TimedValue measureTimedValue(kotlin.jvm.functions.Function0)
    {
        kotlin.time.TimeSource$Monotonic $r1;
        long $l0;
        java.lang.Object $r3;
        kotlin.jvm.functions.Function0 $r0;
        kotlin.time.TimedValue $r2;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "block");

        $r1 = <kotlin.time.TimeSource$Monotonic: kotlin.time.TimeSource$Monotonic INSTANCE>;

        $l0 = virtualinvoke $r1.<kotlin.time.TimeSource$Monotonic: long markNow-z9LOYto()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r2 = new kotlin.time.TimedValue;

        $l0 = staticinvoke <kotlin.time.TimeSource$Monotonic$ValueTimeMark: long elapsedNow-UwyO8pc(long)>($l0);

        specialinvoke $r2.<kotlin.time.TimedValue: void <init>(java.lang.Object,long,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, $l0, null);

        return $r2;
    }

    public static final kotlin.time.TimedValue measureTimedValue(kotlin.time.TimeSource$Monotonic, kotlin.jvm.functions.Function0)
    {
        kotlin.time.TimeSource$Monotonic $r0;
        long $l0;
        java.lang.Object $r3;
        kotlin.jvm.functions.Function0 $r1;
        kotlin.time.TimedValue $r2;

        $r0 := @parameter0: kotlin.time.TimeSource$Monotonic;

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        $l0 = virtualinvoke $r0.<kotlin.time.TimeSource$Monotonic: long markNow-z9LOYto()>();

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r2 = new kotlin.time.TimedValue;

        $l0 = staticinvoke <kotlin.time.TimeSource$Monotonic$ValueTimeMark: long elapsedNow-UwyO8pc(long)>($l0);

        specialinvoke $r2.<kotlin.time.TimedValue: void <init>(java.lang.Object,long,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, $l0, null);

        return $r2;
    }

    public static final kotlin.time.TimedValue measureTimedValue(kotlin.time.TimeSource, kotlin.jvm.functions.Function0)
    {
        kotlin.time.TimeSource $r0;
        java.lang.Object $r4;
        long $l0;
        kotlin.time.TimeMark $r3;
        kotlin.jvm.functions.Function0 $r1;
        kotlin.time.TimedValue $r2;

        $r0 := @parameter0: kotlin.time.TimeSource;

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        $r3 = interfaceinvoke $r0.<kotlin.time.TimeSource: kotlin.time.TimeMark markNow()>();

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r2 = new kotlin.time.TimedValue;

        $l0 = interfaceinvoke $r3.<kotlin.time.TimeMark: long elapsedNow-UwyO8pc()>();

        specialinvoke $r2.<kotlin.time.TimedValue: void <init>(java.lang.Object,long,kotlin.jvm.internal.DefaultConstructorMarker)>($r4, $l0, null);

        return $r2;
    }
}
