class kotlin.collections.SetsKt___SetsKt extends kotlin.collections.SetsKt__SetsKt
{

    public void <init>()
    {
        kotlin.collections.SetsKt___SetsKt r0;

        r0 := @this: kotlin.collections.SetsKt___SetsKt;

        specialinvoke r0.<kotlin.collections.SetsKt__SetsKt: void <init>()>();

        return;
    }

    public static final java.util.Set minus(java.util.Set, java.lang.Iterable)
    {
        java.util.Iterator $r5;
        java.util.Collection $r2, r4;
        java.util.Set $r0;
        java.lang.Iterable $r1;
        java.lang.Object $r6;
        java.util.LinkedHashSet r3;
        boolean $z0;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection convertToListIfNotCollection(java.lang.Iterable)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = (java.lang.Iterable) $r0;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r1);

        return $r0;

     label1:
        $z0 = $r2 instanceof java.util.Set;

        if $z0 == 0 goto label4;

        $r1 = (java.lang.Iterable) $r0;

        r3 = new java.util.LinkedHashSet;

        specialinvoke r3.<java.util.LinkedHashSet: void <init>()>();

        r4 = (java.util.Collection) r3;

        $r5 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r0 = (java.util.Set) r4;

        return $r0;

     label4:
        r3 = new java.util.LinkedHashSet;

        r4 = (java.util.Collection) $r0;

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r4);

        virtualinvoke r3.<java.util.LinkedHashSet: boolean removeAll(java.util.Collection)>($r2);

        $r0 = (java.util.Set) r3;

        return $r0;
    }

    public static final java.util.Set minus(java.util.Set, java.lang.Object)
    {
        java.util.Iterator $r4;
        java.util.Collection r6;
        java.util.Set $r0;
        java.lang.Iterable $r3;
        int $i0;
        java.lang.Object $r1, $r5;
        java.util.LinkedHashSet r2;
        boolean z0, $z1;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r2 = new java.util.LinkedHashSet;

        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r2.<java.util.LinkedHashSet: void <init>(int)>($i0);

        z0 = 0;

        $r3 = (java.lang.Iterable) $r0;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if z0 != 0 goto label2;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r1);

        if $z1 == 0 goto label2;

        z0 = 1;

        $z1 = 0;

        goto label3;

     label2:
        $z1 = 1;

     label3:
        if $z1 == 0 goto label1;

        r6 = (java.util.Collection) r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        goto label1;

     label4:
        r6 = (java.util.Collection) r2;

        $r0 = (java.util.Set) r6;

        return $r0;
    }

    public static final java.util.Set minus(java.util.Set, kotlin.sequences.Sequence)
    {
        kotlin.sequences.Sequence $r1;
        java.util.Collection $r3;
        java.util.Set $r0;
        java.util.LinkedHashSet r2;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        r2 = new java.util.LinkedHashSet;

        $r3 = (java.util.Collection) $r0;

        specialinvoke r2.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r3);

        $r3 = (java.util.Collection) r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,kotlin.sequences.Sequence)>($r3, $r1);

        $r0 = (java.util.Set) r2;

        return $r0;
    }

    public static final java.util.Set minus(java.util.Set, java.lang.Object[])
    {
        java.lang.Object[] $r1;
        java.util.Collection $r3;
        java.util.Set $r0;
        java.util.LinkedHashSet r2;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        r2 = new java.util.LinkedHashSet;

        $r3 = (java.util.Collection) $r0;

        specialinvoke r2.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r3);

        $r3 = (java.util.Collection) r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Object[])>($r3, $r1);

        $r0 = (java.util.Set) r2;

        return $r0;
    }

    private static final java.util.Set minusElement(java.util.Set, java.lang.Object)
    {
        java.util.Set $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = staticinvoke <kotlin.collections.SetsKt: java.util.Set minus(java.util.Set,java.lang.Object)>($r0, $r1);

        return $r0;
    }

    public static final java.util.Set plus(java.util.Set, java.lang.Iterable)
    {
        java.util.Collection $r5;
        java.util.Set $r0;
        java.lang.Integer $r2;
        java.lang.Iterable $r1;
        int $i0, $i1;
        java.lang.Number r3;
        java.util.LinkedHashSet $r4;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Integer collectionSizeOrNull(java.lang.Iterable)>($r1);

        if $r2 == null goto label1;

        r3 = (java.lang.Number) $r2;

        $i0 = virtualinvoke r3.<java.lang.Number: int intValue()>();

        $i1 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $i0 = $i1 + $i0;

        goto label2;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $i0 = $i0 * 2;

     label2:
        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r5 = (java.util.Collection) $r0;

        virtualinvoke $r4.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r5);

        $r5 = (java.util.Collection) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r5, $r1);

        $r0 = (java.util.Set) $r4;

        return $r0;
    }

    public static final java.util.Set plus(java.util.Set, java.lang.Object)
    {
        java.util.Collection $r3;
        int $i0;
        java.util.Set $r0;
        java.lang.Object $r1;
        java.util.LinkedHashSet r2;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r2 = new java.util.LinkedHashSet;

        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $i0 = $i0 + 1;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r2.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r3 = (java.util.Collection) $r0;

        virtualinvoke r2.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r3);

        virtualinvoke r2.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r1);

        $r0 = (java.util.Set) r2;

        return $r0;
    }

    public static final java.util.Set plus(java.util.Set, kotlin.sequences.Sequence)
    {
        kotlin.sequences.Sequence $r1;
        java.util.Collection $r3;
        int $i0;
        java.util.Set $r0;
        java.util.LinkedHashSet r2;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        r2 = new java.util.LinkedHashSet;

        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $i0 = $i0 * 2;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r2.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r3 = (java.util.Collection) $r0;

        virtualinvoke r2.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r3);

        $r3 = (java.util.Collection) r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>($r3, $r1);

        $r0 = (java.util.Set) r2;

        return $r0;
    }

    public static final java.util.Set plus(java.util.Set, java.lang.Object[])
    {
        java.lang.Object[] $r1;
        java.util.Collection $r3;
        int $i0, $i1;
        java.util.Set $r0;
        java.util.LinkedHashSet r2;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        r2 = new java.util.LinkedHashSet;

        $i1 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $i0 = lengthof $r1;

        $i0 = $i1 + $i0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r2.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r3 = (java.util.Collection) $r0;

        virtualinvoke r2.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r3);

        $r3 = (java.util.Collection) r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Object[])>($r3, $r1);

        $r0 = (java.util.Set) r2;

        return $r0;
    }

    private static final java.util.Set plusElement(java.util.Set, java.lang.Object)
    {
        java.util.Set $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Object)>($r0, $r1);

        return $r0;
    }
}
