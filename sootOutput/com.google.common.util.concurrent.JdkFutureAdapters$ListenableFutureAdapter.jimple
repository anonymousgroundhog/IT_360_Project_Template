class com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter extends com.google.common.util.concurrent.ForwardingFuture implements com.google.common.util.concurrent.ListenableFuture
{
    private static final java.util.concurrent.Executor defaultAdapterExecutor;
    private static final java.util.concurrent.ThreadFactory threadFactory;
    private final java.util.concurrent.Executor adapterExecutor;
    private final java.util.concurrent.Future delegate;
    private final com.google.common.util.concurrent.ExecutionList executionList;
    private final java.util.concurrent.atomic.AtomicBoolean hasListeners;

    static void <clinit>()
    {
        com.google.common.util.concurrent.ThreadFactoryBuilder $r0;
        java.util.concurrent.ThreadFactory $r1;
        java.util.concurrent.ExecutorService $r2;

        $r0 = new com.google.common.util.concurrent.ThreadFactoryBuilder;

        specialinvoke $r0.<com.google.common.util.concurrent.ThreadFactoryBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean)>(1);

        $r0 = virtualinvoke $r0.<com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)>("ListenableFutureAdapter-thread-%d");

        $r1 = virtualinvoke $r0.<com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory build()>();

        <com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.ThreadFactory threadFactory> = $r1;

        $r1 = <com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.ThreadFactory threadFactory>;

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>($r1);

        <com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.Executor defaultAdapterExecutor> = $r2;

        return;
    }

    void <init>(java.util.concurrent.Future)
    {
        java.util.concurrent.Future r1;
        com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter r0;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter;

        r1 := @parameter0: java.util.concurrent.Future;

        $r2 = <com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.Executor defaultAdapterExecutor>;

        specialinvoke r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: void <init>(java.util.concurrent.Future,java.util.concurrent.Executor)>(r1, $r2);

        return;
    }

    void <init>(java.util.concurrent.Future, java.util.concurrent.Executor)
    {
        java.util.concurrent.Future r1;
        com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter r0;
        java.util.concurrent.Executor $r2;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        java.lang.Object $r5;
        com.google.common.util.concurrent.ExecutionList $r3;

        r0 := @this: com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter;

        r1 := @parameter0: java.util.concurrent.Future;

        $r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<com.google.common.util.concurrent.ForwardingFuture: void <init>()>();

        $r3 = new com.google.common.util.concurrent.ExecutionList;

        specialinvoke $r3.<com.google.common.util.concurrent.ExecutionList: void <init>()>();

        r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: com.google.common.util.concurrent.ExecutionList executionList> = $r3;

        $r4 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.atomic.AtomicBoolean hasListeners> = $r4;

        $r5 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r1 = (java.util.concurrent.Future) $r5;

        r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.Future delegate> = r1;

        $r5 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (java.util.concurrent.Executor) $r5;

        r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.Executor adapterExecutor> = $r2;

        return;
    }

    public void addListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter r0;
        java.util.concurrent.Executor $r2;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$$ExternalSyntheticLambda0 $r6;
        java.lang.Runnable $r1;
        java.util.concurrent.Future $r5;
        com.google.common.util.concurrent.ExecutionList $r3;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: com.google.common.util.concurrent.ExecutionList executionList>;

        virtualinvoke $r3.<com.google.common.util.concurrent.ExecutionList: void add(java.lang.Runnable,java.util.concurrent.Executor)>($r1, $r2);

        $r4 = r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.atomic.AtomicBoolean hasListeners>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.Future delegate>;

        $z0 = interfaceinvoke $r5.<java.util.concurrent.Future: boolean isDone()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: com.google.common.util.concurrent.ExecutionList executionList>;

        virtualinvoke $r3.<com.google.common.util.concurrent.ExecutionList: void execute()>();

        return;

     label1:
        $r2 = r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.Executor adapterExecutor>;

        $r6 = new com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$$ExternalSyntheticLambda0;

        specialinvoke $r6.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$$ExternalSyntheticLambda0: void <init>(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter)>(r0);

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label2:
        return;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.concurrent.Future $r1;
        com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter r0;

        r0 := @this: com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.Future delegate()>();

        return $r1;
    }

    protected java.util.concurrent.Future delegate()
    {
        java.util.concurrent.Future r1;
        com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter r0;

        r0 := @this: com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter;

        r1 = r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.Future delegate>;

        return r1;
    }

    void lambda$addListener$0$com-google-common-util-concurrent-JdkFutureAdapters$ListenableFutureAdapter()
    {
        java.lang.Throwable $r2;
        java.util.concurrent.Future $r1;
        com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter r0;
        com.google.common.util.concurrent.ExecutionList $r3;

        r0 := @this: com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter;

     label1:
        $r1 = r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: java.util.concurrent.Future delegate>;

        staticinvoke <com.google.common.util.concurrent.Uninterruptibles: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>($r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        $r3 = r0.<com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter: com.google.common.util.concurrent.ExecutionList executionList>;

        virtualinvoke $r3.<com.google.common.util.concurrent.ExecutionList: void execute()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
