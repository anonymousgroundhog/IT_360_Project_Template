public final class kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlinx.coroutines.flow.FlowCollector $$this$flow;
    final kotlin.jvm.functions.Function3 $transform;

    public void <init>(kotlin.jvm.functions.Function3, kotlinx.coroutines.flow.FlowCollector)
    {
        kotlin.jvm.functions.Function3 $r1;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1 r0;
        kotlinx.coroutines.flow.FlowCollector $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function3;

        $r2 := @parameter1: kotlinx.coroutines.flow.FlowCollector;

        r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlin.jvm.functions.Function3 $transform> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        java.lang.IllegalStateException r8;
        kotlin.coroutines.Continuation $r4;
        kotlin.jvm.functions.Function3 $r1;
        kotlin.Unit r9;
        kotlinx.coroutines.flow.FlowCollector $r2;
        int $i0;
        java.lang.Object r3, $r6, $r7;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1 r0;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1 $r5;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1;

        r3 := @parameter0: java.lang.Object;

        $r4 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r4 instanceof kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1;

        if $z0 == 0 goto label1;

        $r5 = (kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1) $r4;

        $i0 = $r5.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r5.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: int label>;

        $i0 = $i0 - -2147483648;

        $r5.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: int label> = $i0;

        goto label2;

     label1:
        $r5 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1,kotlin.coroutines.Continuation)>(r0, $r4);

     label2:
        $r6 = $r5.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: java.lang.Object result>;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r5.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            default: goto label3;
        };

     label3:
        r8 = new java.lang.IllegalStateException;

        specialinvoke r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r8;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        goto label6;

     label5:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlin.jvm.functions.Function3 $transform>;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow>;

        $r5.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: int label> = 1;

        r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r3, $r5);

        if r3 != $r7 goto label6;

        return $r7;

     label6:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r9;
    }

    public final java.lang.Object emit$$forInline(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit r6;
        kotlinx.coroutines.flow.FlowCollector $r3;
        kotlin.jvm.functions.Function3 $r5;
        java.lang.Object $r1;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1 r0;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1 $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(4);

        $r4 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1;

        specialinvoke $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1,kotlin.coroutines.Continuation)>(r0, $r2);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(5);

        $r5 = r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlin.jvm.functions.Function3 $transform>;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow>;

        interfaceinvoke $r5.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r1, $r2);

        r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r6;
    }
}
