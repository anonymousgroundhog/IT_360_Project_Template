public final class kotlin.jvm.internal.LongSpreadBuilder extends kotlin.jvm.internal.PrimitiveSpreadBuilder
{
    private final long[] values;

    public void <init>(int)
    {
        int $i0;
        kotlin.jvm.internal.LongSpreadBuilder r0;
        long[] $r1;

        r0 := @this: kotlin.jvm.internal.LongSpreadBuilder;

        $i0 := @parameter0: int;

        specialinvoke r0.<kotlin.jvm.internal.PrimitiveSpreadBuilder: void <init>(int)>($i0);

        $r1 = newarray (long)[$i0];

        r0.<kotlin.jvm.internal.LongSpreadBuilder: long[] values> = $r1;

        return;
    }

    public final void add(long)
    {
        long[] $r1;
        int $i1, $i2;
        kotlin.jvm.internal.LongSpreadBuilder r0;
        long $l0;

        r0 := @this: kotlin.jvm.internal.LongSpreadBuilder;

        $l0 := @parameter0: long;

        $r1 = r0.<kotlin.jvm.internal.LongSpreadBuilder: long[] values>;

        $i2 = virtualinvoke r0.<kotlin.jvm.internal.LongSpreadBuilder: int getPosition()>();

        $i1 = $i2 + 1;

        virtualinvoke r0.<kotlin.jvm.internal.LongSpreadBuilder: void setPosition(int)>($i1);

        $r1[$i2] = $l0;

        return;
    }

    public volatile int getSize(java.lang.Object)
    {
        long[] $r2;
        int $i0;
        kotlin.jvm.internal.LongSpreadBuilder r0;
        java.lang.Object $r1;

        r0 := @this: kotlin.jvm.internal.LongSpreadBuilder;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (long[]) $r1;

        $i0 = virtualinvoke r0.<kotlin.jvm.internal.LongSpreadBuilder: int getSize(long[])>($r2);

        return $i0;
    }

    protected int getSize(long[])
    {
        int $i0;
        kotlin.jvm.internal.LongSpreadBuilder r0;
        long[] $r1;

        r0 := @this: kotlin.jvm.internal.LongSpreadBuilder;

        $r1 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        return $i0;
    }

    public final long[] toArray()
    {
        long[] $r1, $r2;
        int $i0;
        kotlin.jvm.internal.LongSpreadBuilder r0;
        java.lang.Object $r3;

        r0 := @this: kotlin.jvm.internal.LongSpreadBuilder;

        $r1 = r0.<kotlin.jvm.internal.LongSpreadBuilder: long[] values>;

        $i0 = virtualinvoke r0.<kotlin.jvm.internal.LongSpreadBuilder: int size()>();

        $r2 = newarray (long)[$i0];

        $r3 = virtualinvoke r0.<kotlin.jvm.internal.LongSpreadBuilder: java.lang.Object toArray(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r1 = (long[]) $r3;

        return $r1;
    }
}
