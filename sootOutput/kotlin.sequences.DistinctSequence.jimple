public final class kotlin.sequences.DistinctSequence extends java.lang.Object implements kotlin.sequences.Sequence
{
    private final kotlin.jvm.functions.Function1 keySelector;
    private final kotlin.sequences.Sequence source;

    public void <init>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1)
    {
        kotlin.sequences.DistinctSequence r0;
        kotlin.jvm.functions.Function1 $r2;
        kotlin.sequences.Sequence $r1;

        r0 := @this: kotlin.sequences.DistinctSequence;

        $r1 := @parameter0: kotlin.sequences.Sequence;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.sequences.DistinctSequence: kotlin.sequences.Sequence source> = $r1;

        r0.<kotlin.sequences.DistinctSequence: kotlin.jvm.functions.Function1 keySelector> = $r2;

        return;
    }

    public java.util.Iterator iterator()
    {
        kotlin.sequences.DistinctIterator $r3;
        kotlin.sequences.DistinctSequence r0;
        java.util.Iterator $r2;
        kotlin.sequences.Sequence $r4;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: kotlin.sequences.DistinctSequence;

        $r3 = new kotlin.sequences.DistinctIterator;

        $r4 = r0.<kotlin.sequences.DistinctSequence: kotlin.sequences.Sequence source>;

        $r2 = interfaceinvoke $r4.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

        $r1 = r0.<kotlin.sequences.DistinctSequence: kotlin.jvm.functions.Function1 keySelector>;

        specialinvoke $r3.<kotlin.sequences.DistinctIterator: void <init>(java.util.Iterator,kotlin.jvm.functions.Function1)>($r2, $r1);

        $r2 = (java.util.Iterator) $r3;

        return $r2;
    }
}
