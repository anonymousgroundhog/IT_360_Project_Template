final class kotlinx.coroutines.future.CompletableFutureCoroutine extends kotlinx.coroutines.AbstractCoroutine implements java.util.function.BiFunction
{
    private final java.util.concurrent.CompletableFuture future;

    public void <init>(kotlin.coroutines.CoroutineContext, java.util.concurrent.CompletableFuture)
    {
        java.util.concurrent.CompletableFuture $r2;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.future.CompletableFutureCoroutine r0;

        r0 := @this: kotlinx.coroutines.future.CompletableFutureCoroutine;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter1: java.util.concurrent.CompletableFuture;

        specialinvoke r0.<kotlinx.coroutines.AbstractCoroutine: void <init>(kotlin.coroutines.CoroutineContext,boolean,boolean)>($r1, 1, 1);

        r0.<kotlinx.coroutines.future.CompletableFutureCoroutine: java.util.concurrent.CompletableFuture future> = $r2;

        return;
    }

    public volatile java.lang.Object apply(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r3;
        kotlin.Unit r4;
        kotlinx.coroutines.future.CompletableFutureCoroutine r0;
        java.lang.Object $r1, $r2;

        r0 := @this: kotlinx.coroutines.future.CompletableFutureCoroutine;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Throwable) $r2;

        virtualinvoke r0.<kotlinx.coroutines.future.CompletableFutureCoroutine: void apply(java.lang.Object,java.lang.Throwable)>($r1, $r3);

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r4;
    }

    public void apply(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        kotlinx.coroutines.Job $r3;
        kotlinx.coroutines.future.CompletableFutureCoroutine r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.future.CompletableFutureCoroutine;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = (kotlinx.coroutines.Job) r0;

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>($r3, null, 1, null);

        return;
    }

    protected void onCancelled(java.lang.Throwable, boolean)
    {
        java.lang.Throwable $r1;
        kotlinx.coroutines.future.CompletableFutureCoroutine r0;
        java.util.concurrent.CompletableFuture $r2;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.future.CompletableFutureCoroutine;

        $r1 := @parameter0: java.lang.Throwable;

        $z0 := @parameter1: boolean;

        $r2 = r0.<kotlinx.coroutines.future.CompletableFutureCoroutine: java.util.concurrent.CompletableFuture future>;

        virtualinvoke $r2.<java.util.concurrent.CompletableFuture: boolean completeExceptionally(java.lang.Throwable)>($r1);

        return;
    }

    protected void onCompleted(java.lang.Object)
    {
        java.lang.Object $r1;
        java.util.concurrent.CompletableFuture $r2;
        kotlinx.coroutines.future.CompletableFutureCoroutine r0;

        r0 := @this: kotlinx.coroutines.future.CompletableFutureCoroutine;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<kotlinx.coroutines.future.CompletableFutureCoroutine: java.util.concurrent.CompletableFuture future>;

        virtualinvoke $r2.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>($r1);

        return;
    }
}
