public final class kotlin.io.path.FileVisitorBuilderImpl extends java.lang.Object implements kotlin.io.path.FileVisitorBuilder
{
    private boolean isBuilt;
    private kotlin.jvm.functions.Function2 onPostVisitDirectory;
    private kotlin.jvm.functions.Function2 onPreVisitDirectory;
    private kotlin.jvm.functions.Function2 onVisitFile;
    private kotlin.jvm.functions.Function2 onVisitFileFailed;

    public void <init>()
    {
        kotlin.io.path.FileVisitorBuilderImpl r0;

        r0 := @this: kotlin.io.path.FileVisitorBuilderImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final void checkIsNotBuilt()
    {
        java.lang.IllegalStateException $r1;
        kotlin.io.path.FileVisitorBuilderImpl r0;
        boolean $z0;

        r0 := @this: kotlin.io.path.FileVisitorBuilderImpl;

        $z0 = r0.<kotlin.io.path.FileVisitorBuilderImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This builder was already built");

        throw $r1;
    }

    private final void checkNotDefined(java.lang.Object, java.lang.String)
    {
        java.lang.IllegalStateException $r3;
        kotlin.io.path.FileVisitorBuilderImpl r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;

        r0 := @this: kotlin.io.path.FileVisitorBuilderImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was already defined");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public final java.nio.file.FileVisitor build()
    {
        java.nio.file.FileVisitor $r6;
        kotlin.io.path.FileVisitorBuilderImpl r0;
        kotlin.jvm.functions.Function2 $r1, $r2, $r3, $r4;
        kotlin.io.path.FileVisitorImpl $r5;

        r0 := @this: kotlin.io.path.FileVisitorBuilderImpl;

        specialinvoke r0.<kotlin.io.path.FileVisitorBuilderImpl: void checkIsNotBuilt()>();

        r0.<kotlin.io.path.FileVisitorBuilderImpl: boolean isBuilt> = 1;

        $r5 = new kotlin.io.path.FileVisitorImpl;

        $r1 = r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onPreVisitDirectory>;

        $r2 = r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onVisitFile>;

        $r3 = r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onVisitFileFailed>;

        $r4 = r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onPostVisitDirectory>;

        specialinvoke $r5.<kotlin.io.path.FileVisitorImpl: void <init>(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)>($r1, $r2, $r3, $r4);

        $r6 = (java.nio.file.FileVisitor) $r5;

        return $r6;
    }

    public void onPostVisitDirectory(kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r1, $r2;
        kotlin.io.path.FileVisitorBuilderImpl r0;

        r0 := @this: kotlin.io.path.FileVisitorBuilderImpl;

        $r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "function");

        specialinvoke r0.<kotlin.io.path.FileVisitorBuilderImpl: void checkIsNotBuilt()>();

        $r2 = r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onPostVisitDirectory>;

        specialinvoke r0.<kotlin.io.path.FileVisitorBuilderImpl: void checkNotDefined(java.lang.Object,java.lang.String)>($r2, "onPostVisitDirectory");

        r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onPostVisitDirectory> = $r1;

        return;
    }

    public void onPreVisitDirectory(kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r1, $r2;
        kotlin.io.path.FileVisitorBuilderImpl r0;

        r0 := @this: kotlin.io.path.FileVisitorBuilderImpl;

        $r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "function");

        specialinvoke r0.<kotlin.io.path.FileVisitorBuilderImpl: void checkIsNotBuilt()>();

        $r2 = r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onPreVisitDirectory>;

        specialinvoke r0.<kotlin.io.path.FileVisitorBuilderImpl: void checkNotDefined(java.lang.Object,java.lang.String)>($r2, "onPreVisitDirectory");

        r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onPreVisitDirectory> = $r1;

        return;
    }

    public void onVisitFile(kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r1, $r2;
        kotlin.io.path.FileVisitorBuilderImpl r0;

        r0 := @this: kotlin.io.path.FileVisitorBuilderImpl;

        $r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "function");

        specialinvoke r0.<kotlin.io.path.FileVisitorBuilderImpl: void checkIsNotBuilt()>();

        $r2 = r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onVisitFile>;

        specialinvoke r0.<kotlin.io.path.FileVisitorBuilderImpl: void checkNotDefined(java.lang.Object,java.lang.String)>($r2, "onVisitFile");

        r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onVisitFile> = $r1;

        return;
    }

    public void onVisitFileFailed(kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r1, $r2;
        kotlin.io.path.FileVisitorBuilderImpl r0;

        r0 := @this: kotlin.io.path.FileVisitorBuilderImpl;

        $r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "function");

        specialinvoke r0.<kotlin.io.path.FileVisitorBuilderImpl: void checkIsNotBuilt()>();

        $r2 = r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onVisitFileFailed>;

        specialinvoke r0.<kotlin.io.path.FileVisitorBuilderImpl: void checkNotDefined(java.lang.Object,java.lang.String)>($r2, "onVisitFileFailed");

        r0.<kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onVisitFileFailed> = $r1;

        return;
    }
}
