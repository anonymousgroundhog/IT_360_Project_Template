public final enum class kotlin.'annotation'.AnnotationRetention extends java.lang.Enum
{
    private static final kotlin.'annotation'.AnnotationRetention[] $VALUES;
    public static final enum kotlin.'annotation'.AnnotationRetention BINARY;
    public static final enum kotlin.'annotation'.AnnotationRetention RUNTIME;
    public static final enum kotlin.'annotation'.AnnotationRetention SOURCE;

    private static final kotlin.'annotation'.AnnotationRetention[] $values()
    {
        kotlin.'annotation'.AnnotationRetention[] $r0;
        kotlin.'annotation'.AnnotationRetention $r1;

        $r0 = newarray (kotlin.'annotation'.AnnotationRetention)[3];

        $r1 = <kotlin.'annotation'.AnnotationRetention: kotlin.'annotation'.AnnotationRetention SOURCE>;

        $r0[0] = $r1;

        $r1 = <kotlin.'annotation'.AnnotationRetention: kotlin.'annotation'.AnnotationRetention BINARY>;

        $r0[1] = $r1;

        $r1 = <kotlin.'annotation'.AnnotationRetention: kotlin.'annotation'.AnnotationRetention RUNTIME>;

        $r0[2] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        kotlin.'annotation'.AnnotationRetention[] $r0;
        kotlin.'annotation'.AnnotationRetention $r1;

        $r1 = new kotlin.'annotation'.AnnotationRetention;

        specialinvoke $r1.<kotlin.'annotation'.AnnotationRetention: void <init>(java.lang.String,int)>("SOURCE", 0);

        <kotlin.'annotation'.AnnotationRetention: kotlin.'annotation'.AnnotationRetention SOURCE> = $r1;

        $r1 = new kotlin.'annotation'.AnnotationRetention;

        specialinvoke $r1.<kotlin.'annotation'.AnnotationRetention: void <init>(java.lang.String,int)>("BINARY", 1);

        <kotlin.'annotation'.AnnotationRetention: kotlin.'annotation'.AnnotationRetention BINARY> = $r1;

        $r1 = new kotlin.'annotation'.AnnotationRetention;

        specialinvoke $r1.<kotlin.'annotation'.AnnotationRetention: void <init>(java.lang.String,int)>("RUNTIME", 2);

        <kotlin.'annotation'.AnnotationRetention: kotlin.'annotation'.AnnotationRetention RUNTIME> = $r1;

        $r0 = staticinvoke <kotlin.'annotation'.AnnotationRetention: kotlin.'annotation'.AnnotationRetention[] $values()>();

        <kotlin.'annotation'.AnnotationRetention: kotlin.'annotation'.AnnotationRetention[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        kotlin.'annotation'.AnnotationRetention r0;

        r0 := @this: kotlin.'annotation'.AnnotationRetention;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static kotlin.'annotation'.AnnotationRetention valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        kotlin.'annotation'.AnnotationRetention $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lkotlin/annotation/AnnotationRetention;", $r0);

        $r2 = (kotlin.'annotation'.AnnotationRetention) $r1;

        return $r2;
    }

    public static kotlin.'annotation'.AnnotationRetention[] values()
    {
        kotlin.'annotation'.AnnotationRetention[] $r1;
        java.lang.Object $r0;

        $r1 = <kotlin.'annotation'.AnnotationRetention: kotlin.'annotation'.AnnotationRetention[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (kotlin.'annotation'.AnnotationRetention[]) $r0;

        return $r1;
    }
}
