public class androidx.core.view.MenuHostHelper extends java.lang.Object
{
    private final java.util.concurrent.CopyOnWriteArrayList mMenuProviders;
    private final java.lang.Runnable mOnInvalidateMenuCallback;
    private final java.util.Map mProviderToLifecycleContainers;

    public void <init>(java.lang.Runnable)
    {
        androidx.core.view.MenuHostHelper r0;
        java.util.HashMap $r3;
        java.lang.Runnable $r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers> = $r3;

        r0.<androidx.core.view.MenuHostHelper: java.lang.Runnable mOnInvalidateMenuCallback> = $r1;

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider)
    {
        androidx.core.view.MenuHostHelper r0;
        androidx.core.view.MenuProvider $r1;
        java.lang.Runnable $r3;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: androidx.core.view.MenuProvider;

        $r2 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<androidx.core.view.MenuHostHelper: java.lang.Runnable mOnInvalidateMenuCallback>;

        interfaceinvoke $r3.<java.lang.Runnable: void run()>();

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner)
    {
        androidx.core.view.MenuHostHelper$LifecycleContainer $r5;
        androidx.lifecycle.Lifecycle $r6;
        androidx.core.view.MenuHostHelper r0;
        androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda1 r3;
        androidx.lifecycle.LifecycleOwner $r2;
        androidx.core.view.MenuProvider $r1;
        java.util.Map $r4;
        java.lang.Object $r7;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: androidx.core.view.MenuProvider;

        $r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        virtualinvoke r0.<androidx.core.view.MenuHostHelper: void addMenuProvider(androidx.core.view.MenuProvider)>($r1);

        $r6 = interfaceinvoke $r2.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r4 = r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>;

        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        $r5 = (androidx.core.view.MenuHostHelper$LifecycleContainer) $r7;

        if $r5 == null goto label1;

        virtualinvoke $r5.<androidx.core.view.MenuHostHelper$LifecycleContainer: void clearObservers()>();

     label1:
        r3 = new androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda1;

        specialinvoke r3.<androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda1: void <init>(androidx.core.view.MenuHostHelper,androidx.core.view.MenuProvider)>(r0, $r1);

        $r4 = r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>;

        $r5 = new androidx.core.view.MenuHostHelper$LifecycleContainer;

        specialinvoke $r5.<androidx.core.view.MenuHostHelper$LifecycleContainer: void <init>(androidx.lifecycle.Lifecycle,androidx.lifecycle.LifecycleEventObserver)>($r6, r3);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$State)
    {
        androidx.core.view.MenuHostHelper$LifecycleContainer $r6;
        androidx.lifecycle.Lifecycle $r7;
        androidx.lifecycle.Lifecycle$State $r3;
        androidx.core.view.MenuHostHelper r0;
        androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda0 r4;
        androidx.lifecycle.LifecycleOwner $r2;
        androidx.core.view.MenuProvider $r1;
        java.util.Map $r5;
        java.lang.Object $r8;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: androidx.core.view.MenuProvider;

        $r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        $r3 := @parameter2: androidx.lifecycle.Lifecycle$State;

        $r7 = interfaceinvoke $r2.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r5 = r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>;

        $r8 = interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        $r6 = (androidx.core.view.MenuHostHelper$LifecycleContainer) $r8;

        if $r6 == null goto label1;

        virtualinvoke $r6.<androidx.core.view.MenuHostHelper$LifecycleContainer: void clearObservers()>();

     label1:
        r4 = new androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda0;

        specialinvoke r4.<androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda0: void <init>(androidx.core.view.MenuHostHelper,androidx.lifecycle.Lifecycle$State,androidx.core.view.MenuProvider)>(r0, $r3, $r1);

        $r5 = r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>;

        $r6 = new androidx.core.view.MenuHostHelper$LifecycleContainer;

        specialinvoke $r6.<androidx.core.view.MenuHostHelper$LifecycleContainer: void <init>(androidx.lifecycle.Lifecycle,androidx.lifecycle.LifecycleEventObserver)>($r7, r4);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

        return;
    }

    void lambda$addMenuProvider$0$androidx-core-view-MenuHostHelper(androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.core.view.MenuHostHelper r0;
        androidx.lifecycle.LifecycleOwner $r2;
        androidx.core.view.MenuProvider $r1;
        androidx.lifecycle.Lifecycle$Event $r3, $r4;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: androidx.core.view.MenuProvider;

        $r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        $r3 := @parameter2: androidx.lifecycle.Lifecycle$Event;

        $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if $r3 != $r4 goto label1;

        virtualinvoke r0.<androidx.core.view.MenuHostHelper: void removeMenuProvider(androidx.core.view.MenuProvider)>($r1);

     label1:
        return;
    }

    void lambda$addMenuProvider$1$androidx-core-view-MenuHostHelper(androidx.lifecycle.Lifecycle$State, androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        java.lang.Runnable $r7;
        androidx.lifecycle.Lifecycle$Event $r4, $r5;
        androidx.lifecycle.Lifecycle$State $r1;
        androidx.core.view.MenuHostHelper r0;
        androidx.lifecycle.LifecycleOwner $r3;
        androidx.core.view.MenuProvider $r2;
        java.util.concurrent.CopyOnWriteArrayList $r6;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: androidx.lifecycle.Lifecycle$State;

        $r2 := @parameter1: androidx.core.view.MenuProvider;

        $r3 := @parameter2: androidx.lifecycle.LifecycleOwner;

        $r4 := @parameter3: androidx.lifecycle.Lifecycle$Event;

        $r5 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State)>($r1);

        if $r4 != $r5 goto label1;

        virtualinvoke r0.<androidx.core.view.MenuHostHelper: void addMenuProvider(androidx.core.view.MenuProvider)>($r2);

        return;

     label1:
        $r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if $r4 != $r5 goto label2;

        virtualinvoke r0.<androidx.core.view.MenuHostHelper: void removeMenuProvider(androidx.core.view.MenuProvider)>($r2);

        return;

     label2:
        $r5 = staticinvoke <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)>($r1);

        if $r4 != $r5 goto label3;

        $r6 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r2);

        $r7 = r0.<androidx.core.view.MenuHostHelper: java.lang.Runnable mOnInvalidateMenuCallback>;

        interfaceinvoke $r7.<java.lang.Runnable: void run()>();

     label3:
        return;
    }

    public void onCreateMenu(android.view.Menu, android.view.MenuInflater)
    {
        java.util.Iterator $r4;
        androidx.core.view.MenuHostHelper r0;
        android.view.MenuInflater $r2;
        androidx.core.view.MenuProvider r6;
        android.view.Menu $r1;
        java.lang.Object $r5;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: android.view.Menu;

        $r2 := @parameter1: android.view.MenuInflater;

        $r3 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.core.view.MenuProvider) $r5;

        interfaceinvoke r6.<androidx.core.view.MenuProvider: void onCreateMenu(android.view.Menu,android.view.MenuInflater)>($r1, $r2);

        goto label1;

     label2:
        return;
    }

    public void onMenuClosed(android.view.Menu)
    {
        androidx.core.view.MenuHostHelper r0;
        java.util.Iterator $r3;
        androidx.core.view.MenuProvider r5;
        android.view.Menu $r1;
        java.lang.Object $r4;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: android.view.Menu;

        $r2 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.core.view.MenuProvider) $r4;

        interfaceinvoke r5.<androidx.core.view.MenuProvider: void onMenuClosed(android.view.Menu)>($r1);

        goto label1;

     label2:
        return;
    }

    public boolean onMenuItemSelected(android.view.MenuItem)
    {
        androidx.core.view.MenuHostHelper r0;
        java.util.Iterator $r3;
        androidx.core.view.MenuProvider r5;
        java.lang.Object $r4;
        android.view.MenuItem $r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: android.view.MenuItem;

        $r2 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.core.view.MenuProvider) $r4;

        $z0 = interfaceinvoke r5.<androidx.core.view.MenuProvider: boolean onMenuItemSelected(android.view.MenuItem)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public void onPrepareMenu(android.view.Menu)
    {
        androidx.core.view.MenuHostHelper r0;
        java.util.Iterator $r3;
        androidx.core.view.MenuProvider r5;
        android.view.Menu $r1;
        java.lang.Object $r4;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: android.view.Menu;

        $r2 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.core.view.MenuProvider) $r4;

        interfaceinvoke r5.<androidx.core.view.MenuProvider: void onPrepareMenu(android.view.Menu)>($r1);

        goto label1;

     label2:
        return;
    }

    public void removeMenuProvider(androidx.core.view.MenuProvider)
    {
        androidx.core.view.MenuHostHelper r0;
        androidx.core.view.MenuProvider $r1;
        java.util.Map r5;
        java.lang.Object $r3;
        androidx.core.view.MenuHostHelper$LifecycleContainer r6;
        java.lang.Runnable $r2;
        java.util.concurrent.CopyOnWriteArrayList r4;

        r0 := @this: androidx.core.view.MenuHostHelper;

        $r1 := @parameter0: androidx.core.view.MenuProvider;

        r4 = r0.<androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders>;

        virtualinvoke r4.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r1);

        r5 = r0.<androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers>;

        $r3 = interfaceinvoke r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        r6 = (androidx.core.view.MenuHostHelper$LifecycleContainer) $r3;

        if r6 == null goto label1;

        virtualinvoke r6.<androidx.core.view.MenuHostHelper$LifecycleContainer: void clearObservers()>();

     label1:
        $r2 = r0.<androidx.core.view.MenuHostHelper: java.lang.Runnable mOnInvalidateMenuCallback>;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

        return;
    }
}
