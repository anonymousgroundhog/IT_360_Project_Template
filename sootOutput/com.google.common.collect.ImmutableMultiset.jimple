public abstract class com.google.common.collect.ImmutableMultiset extends com.google.common.collect.ImmutableMultisetGwtSerializationDependencies implements com.google.common.collect.Multiset
{
    private transient com.google.common.collect.ImmutableList asList;
    private transient com.google.common.collect.ImmutableSet entrySet;

    void <init>()
    {
        com.google.common.collect.ImmutableMultiset r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        specialinvoke r0.<com.google.common.collect.ImmutableMultisetGwtSerializationDependencies: void <init>()>();

        return;
    }

    public static com.google.common.collect.ImmutableMultiset$Builder builder()
    {
        com.google.common.collect.ImmutableMultiset$Builder $r0;

        $r0 = new com.google.common.collect.ImmutableMultiset$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableMultiset$Builder: void <init>()>();

        return $r0;
    }

    private static transient com.google.common.collect.ImmutableMultiset copyFromElements(java.lang.Object[])
    {
        java.lang.Object[] r0;
        com.google.common.collect.ImmutableMultiset$Builder $r1;
        com.google.common.collect.ImmutableMultiset $r2;

        r0 := @parameter0: java.lang.Object[];

        $r1 = new com.google.common.collect.ImmutableMultiset$Builder;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultiset$Builder: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[])>(r0);

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset build()>();

        return $r2;
    }

    static com.google.common.collect.ImmutableMultiset copyFromEntries(java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection r0;
        com.google.common.collect.Multiset$Entry r4;
        com.google.common.collect.ImmutableMultiset$Builder r1;
        com.google.common.collect.ImmutableMultiset $r5;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        r1 = new com.google.common.collect.ImmutableMultiset$Builder;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        specialinvoke r1.<com.google.common.collect.ImmutableMultiset$Builder: void <init>(int)>($i0);

        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.common.collect.Multiset$Entry) $r3;

        $r3 = interfaceinvoke r4.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke r4.<com.google.common.collect.Multiset$Entry: int getCount()>();

        virtualinvoke r1.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int)>($r3, $i0);

        goto label1;

     label2:
        $r5 = virtualinvoke r1.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset build()>();

        return $r5;
    }

    public static com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableMultiset$Builder r2;
        com.google.common.collect.ImmutableMultiset r1;
        int $i0;
        java.lang.Iterable r0;
        boolean z0;

        r0 := @parameter0: java.lang.Iterable;

        z0 = r0 instanceof com.google.common.collect.ImmutableMultiset;

        if z0 == 0 goto label1;

        r1 = (com.google.common.collect.ImmutableMultiset) r0;

        z0 = virtualinvoke r1.<com.google.common.collect.ImmutableMultiset: boolean isPartialView()>();

        if z0 != 0 goto label1;

        return r1;

     label1:
        r2 = new com.google.common.collect.ImmutableMultiset$Builder;

        $i0 = staticinvoke <com.google.common.collect.Multisets: int inferDistinctElements(java.lang.Iterable)>(r0);

        specialinvoke r2.<com.google.common.collect.ImmutableMultiset$Builder: void <init>(int)>($i0);

        virtualinvoke r2.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable)>(r0);

        r1 = virtualinvoke r2.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset build()>();

        return r1;
    }

    public static com.google.common.collect.ImmutableMultiset copyOf(java.util.Iterator)
    {
        com.google.common.collect.ImmutableMultiset$Builder $r1;
        java.util.Iterator r0;
        com.google.common.collect.ImmutableMultiset $r2;

        r0 := @parameter0: java.util.Iterator;

        $r1 = new com.google.common.collect.ImmutableMultiset$Builder;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultiset$Builder: void <init>()>();

        $r1 = virtualinvoke $r1.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator)>(r0);

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset build()>();

        return $r2;
    }

    public static com.google.common.collect.ImmutableMultiset copyOf(java.lang.Object[])
    {
        java.lang.Object[] r0;
        com.google.common.collect.ImmutableMultiset $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset copyFromElements(java.lang.Object[])>(r0);

        return $r1;
    }

    private com.google.common.collect.ImmutableSet createEntrySet()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableMultiset$EntrySet $r2;
        com.google.common.collect.ImmutableMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $z0 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>();

        return $r1;

     label1:
        $r2 = new com.google.common.collect.ImmutableMultiset$EntrySet;

        specialinvoke $r2.<com.google.common.collect.ImmutableMultiset$EntrySet: void <init>(com.google.common.collect.ImmutableMultiset,com.google.common.collect.ImmutableMultiset$1)>(r0, null);

        return $r2;
    }

    public static com.google.common.collect.ImmutableMultiset of()
    {
        com.google.common.collect.RegularImmutableMultiset r0;

        r0 = <com.google.common.collect.RegularImmutableMultiset: com.google.common.collect.RegularImmutableMultiset EMPTY>;

        return r0;
    }

    public static com.google.common.collect.ImmutableMultiset of(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Object[] $r2;
        com.google.common.collect.ImmutableMultiset $r1;

        r0 := @parameter0: java.lang.Object;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r0;

        $r1 = staticinvoke <com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset copyFromElements(java.lang.Object[])>($r2);

        return $r1;
    }

    public static com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r3;
        com.google.common.collect.ImmutableMultiset $r2;
        java.lang.Object r0, r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r0;

        $r3[1] = r1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset copyFromElements(java.lang.Object[])>($r3);

        return $r2;
    }

    public static com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r4;
        com.google.common.collect.ImmutableMultiset $r3;
        java.lang.Object r0, r1, r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r0;

        $r4[1] = r1;

        $r4[2] = r2;

        $r3 = staticinvoke <com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset copyFromElements(java.lang.Object[])>($r4);

        return $r3;
    }

    public static com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r5;
        com.google.common.collect.ImmutableMultiset $r4;
        java.lang.Object r0, r1, r2, r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r5 = newarray (java.lang.Object)[4];

        $r5[0] = r0;

        $r5[1] = r1;

        $r5[2] = r2;

        $r5[3] = r3;

        $r4 = staticinvoke <com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset copyFromElements(java.lang.Object[])>($r5);

        return $r4;
    }

    public static com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r6;
        com.google.common.collect.ImmutableMultiset $r5;
        java.lang.Object r0, r1, r2, r3, r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        $r6 = newarray (java.lang.Object)[5];

        $r6[0] = r0;

        $r6[1] = r1;

        $r6[2] = r2;

        $r6[3] = r3;

        $r6[4] = r4;

        $r5 = staticinvoke <com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset copyFromElements(java.lang.Object[])>($r6);

        return $r5;
    }

    public static transient com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r6;
        com.google.common.collect.ImmutableMultiset$Builder $r7;
        com.google.common.collect.ImmutableMultiset $r8;
        java.lang.Object r0, r1, r2, r3, r4, r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object[];

        $r7 = new com.google.common.collect.ImmutableMultiset$Builder;

        specialinvoke $r7.<com.google.common.collect.ImmutableMultiset$Builder: void <init>()>();

        $r7 = virtualinvoke $r7.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r7.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r7.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r7.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object)>(r3);

        $r7 = virtualinvoke $r7.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object)>(r4);

        $r7 = virtualinvoke $r7.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r7.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[])>(r6);

        $r8 = virtualinvoke $r7.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset build()>();

        return $r8;
    }

    public final int add(java.lang.Object, int)
    {
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableMultiset r0;
        int $i0;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public com.google.common.collect.ImmutableList asList()
    {
        com.google.common.collect.ImmutableList r1;
        com.google.common.collect.ImmutableMultiset r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        r1 = r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableList asList>;

        if r1 != null goto label1;

        r1 = specialinvoke r0.<com.google.common.collect.ImmutableMultisetGwtSerializationDependencies: com.google.common.collect.ImmutableList asList()>();

        r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableList asList> = r1;

     label1:
        return r1;
    }

    public boolean contains(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.common.collect.ImmutableMultiset r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset: int count(java.lang.Object)>($r1);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    int copyIntoArray(java.lang.Object[], int)
    {
        java.lang.Object[] $r1;
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.collect.Multiset$Entry r5;
        com.google.common.collect.ImmutableMultiset r0;
        int $i0, $i1;
        java.lang.Object $r4;
        com.google.common.collect.UnmodifiableIterator $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableSet entrySet()>();

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.common.collect.Multiset$Entry) $r4;

        $i1 = interfaceinvoke r5.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $i1 = $i1 + $i0;

        $r4 = interfaceinvoke r5.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>($r1, $i0, $i1, $r4);

        $i1 = interfaceinvoke r5.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return $i0;
    }

    public abstract com.google.common.collect.ImmutableSet elementSet();

    public volatile java.util.Set elementSet()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableMultiset r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableSet elementSet()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSet entrySet()
    {
        com.google.common.collect.ImmutableSet r1;
        com.google.common.collect.ImmutableMultiset r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        r1 = r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableSet entrySet>;

        if r1 != null goto label1;

        r1 = specialinvoke r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableSet createEntrySet()>();

        r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableSet entrySet> = r1;

     label1:
        return r1;
    }

    public volatile java.util.Set entrySet()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableMultiset r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableSet entrySet()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.common.collect.ImmutableMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <com.google.common.collect.Multisets: boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object)>(r0, $r1);

        return $z0;
    }

    abstract com.google.common.collect.Multiset$Entry getEntry(int);

    public int hashCode()
    {
        int $i0;
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableMultiset r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableSet entrySet()>();

        $i0 = staticinvoke <com.google.common.collect.Sets: int hashCodeImpl(java.util.Set)>($r1);

        return $i0;
    }

    public com.google.common.collect.UnmodifiableIterator iterator()
    {
        com.google.common.collect.ImmutableSet $r2;
        com.google.common.collect.ImmutableMultiset r0;
        com.google.common.collect.ImmutableMultiset$1 $r1;
        com.google.common.collect.UnmodifiableIterator $r3;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableSet entrySet()>();

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>();

        $r1 = new com.google.common.collect.ImmutableMultiset$1;

        specialinvoke $r1.<com.google.common.collect.ImmutableMultiset$1: void <init>(com.google.common.collect.ImmutableMultiset,java.util.Iterator)>(r0, $r3);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.UnmodifiableIterator $r1;
        com.google.common.collect.ImmutableMultiset r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    public final int remove(java.lang.Object, int)
    {
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableMultiset r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final int setCount(java.lang.Object, int)
    {
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableMultiset r0;
        int $i0;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean setCount(java.lang.Object, int, int)
    {
        java.lang.UnsupportedOperationException $r2;
        com.google.common.collect.ImmutableMultiset r0;
        int $i0, $i1;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.ImmutableSet $r1;
        java.lang.String $r2;
        com.google.common.collect.ImmutableMultiset r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableSet entrySet()>();

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableSet: java.lang.String toString()>();

        return $r2;
    }

    abstract java.lang.Object writeReplace();
}
