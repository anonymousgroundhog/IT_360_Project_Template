public final class androidx.work.PeriodicWorkRequest$Builder extends androidx.work.WorkRequest$Builder
{

    public void <init>(java.lang.Class, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r2;
        androidx.work.PeriodicWorkRequest$Builder r0;
        java.lang.Class r1;
        long $l0;
        androidx.work.impl.model.WorkSpec $r3;

        r0 := @this: androidx.work.PeriodicWorkRequest$Builder;

        r1 := @parameter0: java.lang.Class;

        $l0 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        specialinvoke r0.<androidx.work.WorkRequest$Builder: void <init>(java.lang.Class)>(r1);

        $r3 = r0.<androidx.work.PeriodicWorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        virtualinvoke $r3.<androidx.work.impl.model.WorkSpec: void setPeriodic(long)>($l0);

        return;
    }

    public void <init>(java.lang.Class, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r2, $r3;
        androidx.work.PeriodicWorkRequest$Builder r0;
        java.lang.Class r1;
        long $l0, $l1;
        androidx.work.impl.model.WorkSpec $r4;

        r0 := @this: androidx.work.PeriodicWorkRequest$Builder;

        r1 := @parameter0: java.lang.Class;

        $l0 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        $l1 := @parameter3: long;

        $r3 := @parameter4: java.util.concurrent.TimeUnit;

        specialinvoke r0.<androidx.work.WorkRequest$Builder: void <init>(java.lang.Class)>(r1);

        $r4 = r0.<androidx.work.PeriodicWorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $l1 = virtualinvoke $r3.<java.util.concurrent.TimeUnit: long toMillis(long)>($l1);

        virtualinvoke $r4.<androidx.work.impl.model.WorkSpec: void setPeriodic(long,long)>($l0, $l1);

        return;
    }

    public void <init>(java.lang.Class, java.time.Duration)
    {
        androidx.work.PeriodicWorkRequest$Builder r0;
        java.time.Duration $r2;
        java.lang.Class r1;
        long $l0;
        androidx.work.impl.model.WorkSpec $r3;

        r0 := @this: androidx.work.PeriodicWorkRequest$Builder;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.time.Duration;

        specialinvoke r0.<androidx.work.WorkRequest$Builder: void <init>(java.lang.Class)>(r1);

        $r3 = r0.<androidx.work.PeriodicWorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r2.<java.time.Duration: long toMillis()>();

        virtualinvoke $r3.<androidx.work.impl.model.WorkSpec: void setPeriodic(long)>($l0);

        return;
    }

    public void <init>(java.lang.Class, java.time.Duration, java.time.Duration)
    {
        androidx.work.PeriodicWorkRequest$Builder r0;
        java.time.Duration $r2, $r3;
        java.lang.Class r1;
        long $l0, $l1;
        androidx.work.impl.model.WorkSpec $r4;

        r0 := @this: androidx.work.PeriodicWorkRequest$Builder;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.time.Duration;

        $r3 := @parameter2: java.time.Duration;

        specialinvoke r0.<androidx.work.WorkRequest$Builder: void <init>(java.lang.Class)>(r1);

        $r4 = r0.<androidx.work.PeriodicWorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r2.<java.time.Duration: long toMillis()>();

        $l1 = virtualinvoke $r3.<java.time.Duration: long toMillis()>();

        virtualinvoke $r4.<androidx.work.impl.model.WorkSpec: void setPeriodic(long,long)>($l0, $l1);

        return;
    }

    androidx.work.PeriodicWorkRequest buildInternal()
    {
        androidx.work.PeriodicWorkRequest $r4;
        androidx.work.PeriodicWorkRequest$Builder r0;
        androidx.work.Constraints $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        androidx.work.impl.model.WorkSpec $r1;
        boolean $z0;

        r0 := @this: androidx.work.PeriodicWorkRequest$Builder;

        $z0 = r0.<androidx.work.PeriodicWorkRequest$Builder: boolean mBackoffCriteriaSet>;

        if $z0 == 0 goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label2;

        $r1 = r0.<androidx.work.PeriodicWorkRequest$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r2 = $r1.<androidx.work.impl.model.WorkSpec: androidx.work.Constraints constraints>;

        $z0 = virtualinvoke $r2.<androidx.work.Constraints: boolean requiresDeviceIdle()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot set backoff criteria on an idle mode job");

        throw $r3;

     label2:
        $r4 = new androidx.work.PeriodicWorkRequest;

        specialinvoke $r4.<androidx.work.PeriodicWorkRequest: void <init>(androidx.work.PeriodicWorkRequest$Builder)>(r0);

        return $r4;
    }

    volatile androidx.work.WorkRequest buildInternal()
    {
        androidx.work.PeriodicWorkRequest $r1;
        androidx.work.PeriodicWorkRequest$Builder r0;

        r0 := @this: androidx.work.PeriodicWorkRequest$Builder;

        $r1 = virtualinvoke r0.<androidx.work.PeriodicWorkRequest$Builder: androidx.work.PeriodicWorkRequest buildInternal()>();

        return $r1;
    }

    androidx.work.PeriodicWorkRequest$Builder getThis()
    {
        androidx.work.PeriodicWorkRequest$Builder r0;

        r0 := @this: androidx.work.PeriodicWorkRequest$Builder;

        return r0;
    }

    volatile androidx.work.WorkRequest$Builder getThis()
    {
        androidx.work.PeriodicWorkRequest$Builder r0;

        r0 := @this: androidx.work.PeriodicWorkRequest$Builder;

        r0 = virtualinvoke r0.<androidx.work.PeriodicWorkRequest$Builder: androidx.work.PeriodicWorkRequest$Builder getThis()>();

        return r0;
    }
}
