class androidx.browser.trusted.PackageIdentityUtils extends java.lang.Object
{
    private static final java.lang.String TAG;

    private void <init>()
    {
        androidx.browser.trusted.PackageIdentityUtils r0;

        r0 := @this: androidx.browser.trusted.PackageIdentityUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static byte[] getCertificateSHA256Fingerprint(android.content.pm.Signature)
    {
        byte[] $r2;
        java.security.MessageDigest $r1;
        java.security.NoSuchAlgorithmException r3;
        android.content.pm.Signature $r0;

        $r0 := @parameter0: android.content.pm.Signature;

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA256");

        $r2 = virtualinvoke $r0.<android.content.pm.Signature: byte[] toByteArray()>();

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

     label2:
        return $r2;

     label3:
        r3 := @caughtexception;

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    static java.util.List getFingerprintsForPackage(java.lang.String, android.content.pm.PackageManager)
    {
        java.util.List $r3;
        androidx.browser.trusted.PackageIdentityUtils$SignaturesCompat $r2;
        android.content.pm.PackageManager $r1;
        android.content.pm.PackageManager$NameNotFoundException r4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.pm.PackageManager;

     label1:
        $r2 = staticinvoke <androidx.browser.trusted.PackageIdentityUtils: androidx.browser.trusted.PackageIdentityUtils$SignaturesCompat getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.browser.trusted.PackageIdentityUtils$SignaturesCompat: java.util.List getFingerprintsForPackage(java.lang.String,android.content.pm.PackageManager)>($r0, $r1);

     label2:
        return $r3;

     label3:
        r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageIdentity", "Could not get fingerprint for package.", r4);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private static androidx.browser.trusted.PackageIdentityUtils$SignaturesCompat getImpl()
    {
        int $i0;
        androidx.browser.trusted.PackageIdentityUtils$Pre28Implementation $r1;
        androidx.browser.trusted.PackageIdentityUtils$Api28Implementation $r0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r0 = new androidx.browser.trusted.PackageIdentityUtils$Api28Implementation;

        specialinvoke $r0.<androidx.browser.trusted.PackageIdentityUtils$Api28Implementation: void <init>()>();

        return $r0;

     label1:
        $r1 = new androidx.browser.trusted.PackageIdentityUtils$Pre28Implementation;

        specialinvoke $r1.<androidx.browser.trusted.PackageIdentityUtils$Pre28Implementation: void <init>()>();

        return $r1;
    }

    static boolean packageMatchesToken(java.lang.String, android.content.pm.PackageManager, androidx.browser.trusted.TokenContents)
    {
        androidx.browser.trusted.PackageIdentityUtils$SignaturesCompat $r3;
        android.content.pm.PackageManager $r1;
        androidx.browser.trusted.TokenContents $r2;
        java.lang.String $r0;
        java.lang.Exception r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.pm.PackageManager;

        $r2 := @parameter2: androidx.browser.trusted.TokenContents;

     label1:
        $r3 = staticinvoke <androidx.browser.trusted.PackageIdentityUtils: androidx.browser.trusted.PackageIdentityUtils$SignaturesCompat getImpl()>();

        $z0 = interfaceinvoke $r3.<androidx.browser.trusted.PackageIdentityUtils$SignaturesCompat: boolean packageMatchesToken(java.lang.String,android.content.pm.PackageManager,androidx.browser.trusted.TokenContents)>($r0, $r1, $r2);

     label2:
        return $z0;

     label3:
        r4 := @caughtexception;

        goto label5;

     label4:
        r4 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageIdentity", "Could not check if package matches token.", r4);

        return 0;

        catch java.io.IOException from label1 to label2 with label4;
        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <androidx.browser.trusted.PackageIdentityUtils: java.lang.String TAG> = "PackageIdentity";

        return;
    }
}
