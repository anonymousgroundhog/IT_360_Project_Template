public abstract class com.google.common.collect.ImmutableBiMap extends com.google.common.collect.ImmutableMap implements com.google.common.collect.BiMap
{

    void <init>()
    {
        com.google.common.collect.ImmutableBiMap r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        specialinvoke r0.<com.google.common.collect.ImmutableMap: void <init>()>();

        return;
    }

    public static com.google.common.collect.ImmutableBiMap$Builder builder()
    {
        com.google.common.collect.ImmutableBiMap$Builder $r0;

        $r0 = new com.google.common.collect.ImmutableBiMap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableBiMap$Builder: void <init>()>();

        return $r0;
    }

    public static com.google.common.collect.ImmutableBiMap$Builder builderWithExpectedSize(int)
    {
        int $i0;
        com.google.common.collect.ImmutableBiMap$Builder $r0;

        $i0 := @parameter0: int;

        staticinvoke <com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>($i0, "expectedSize");

        $r0 = new com.google.common.collect.ImmutableBiMap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableBiMap$Builder: void <init>(int)>($i0);

        return $r0;
    }

    public static com.google.common.collect.ImmutableBiMap copyOf(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableBiMap $r3;
        com.google.common.collect.ImmutableBiMap$Builder $r2;
        java.util.Collection r1;
        int $i0;
        java.lang.Iterable r0;
        boolean z0;

        r0 := @parameter0: java.lang.Iterable;

        z0 = r0 instanceof java.util.Collection;

        if z0 == 0 goto label1;

        r1 = (java.util.Collection) r0;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        goto label2;

     label1:
        $i0 = 4;

     label2:
        $r2 = new com.google.common.collect.ImmutableBiMap$Builder;

        specialinvoke $r2.<com.google.common.collect.ImmutableBiMap$Builder: void <init>(int)>($i0);

        $r2 = virtualinvoke $r2.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder putAll(java.lang.Iterable)>(r0);

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap build()>();

        return $r3;
    }

    public static com.google.common.collect.ImmutableBiMap copyOf(java.util.Map)
    {
        com.google.common.collect.ImmutableBiMap r1;
        java.util.Map r0;
        java.util.Set $r2;
        boolean z0;

        r0 := @parameter0: java.util.Map;

        z0 = r0 instanceof com.google.common.collect.ImmutableBiMap;

        if z0 == 0 goto label1;

        r1 = (com.google.common.collect.ImmutableBiMap) r0;

        z0 = virtualinvoke r1.<com.google.common.collect.ImmutableBiMap: boolean isPartialView()>();

        if z0 != 0 goto label1;

        return r1;

     label1:
        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r1 = staticinvoke <com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap copyOf(java.lang.Iterable)>($r2);

        return r1;
    }

    public static com.google.common.collect.ImmutableBiMap of()
    {
        com.google.common.collect.RegularImmutableBiMap r0;

        r0 = <com.google.common.collect.RegularImmutableBiMap: com.google.common.collect.RegularImmutableBiMap EMPTY>;

        return r0;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r3;
        com.google.common.collect.RegularImmutableBiMap $r2;
        java.lang.Object r0, r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        $r2 = new com.google.common.collect.RegularImmutableBiMap;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r0;

        $r3[1] = r1;

        specialinvoke $r2.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r3, 1);

        return $r2;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r5;
        com.google.common.collect.RegularImmutableBiMap $r4;
        java.lang.Object r0, r1, r2, r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r2, r3);

        $r4 = new com.google.common.collect.RegularImmutableBiMap;

        $r5 = newarray (java.lang.Object)[4];

        $r5[0] = r0;

        $r5[1] = r1;

        $r5[2] = r2;

        $r5[3] = r3;

        specialinvoke $r4.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r5, 2);

        return $r4;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r7;
        com.google.common.collect.RegularImmutableBiMap $r6;
        java.lang.Object r0, r1, r2, r3, r4, r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r2, r3);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r4, r5);

        $r6 = new com.google.common.collect.RegularImmutableBiMap;

        $r7 = newarray (java.lang.Object)[6];

        $r7[0] = r0;

        $r7[1] = r1;

        $r7[2] = r2;

        $r7[3] = r3;

        $r7[4] = r4;

        $r7[5] = r5;

        specialinvoke $r6.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r7, 3);

        return $r6;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r9;
        com.google.common.collect.RegularImmutableBiMap $r8;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r2, r3);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r4, r5);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r6, r7);

        $r8 = new com.google.common.collect.RegularImmutableBiMap;

        $r9 = newarray (java.lang.Object)[8];

        $r9[0] = r0;

        $r9[1] = r1;

        $r9[2] = r2;

        $r9[3] = r3;

        $r9[4] = r4;

        $r9[5] = r5;

        $r9[6] = r6;

        $r9[7] = r7;

        specialinvoke $r8.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r9, 4);

        return $r8;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r11;
        com.google.common.collect.RegularImmutableBiMap $r10;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7, r8, r9;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        r8 := @parameter8: java.lang.Object;

        r9 := @parameter9: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r2, r3);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r4, r5);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r6, r7);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r8, r9);

        $r10 = new com.google.common.collect.RegularImmutableBiMap;

        $r11 = newarray (java.lang.Object)[10];

        $r11[0] = r0;

        $r11[1] = r1;

        $r11[2] = r2;

        $r11[3] = r3;

        $r11[4] = r4;

        $r11[5] = r5;

        $r11[6] = r6;

        $r11[7] = r7;

        $r11[8] = r8;

        $r11[9] = r9;

        specialinvoke $r10.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r11, 5);

        return $r10;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r13;
        com.google.common.collect.RegularImmutableBiMap $r12;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        r8 := @parameter8: java.lang.Object;

        r9 := @parameter9: java.lang.Object;

        r10 := @parameter10: java.lang.Object;

        r11 := @parameter11: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r2, r3);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r4, r5);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r6, r7);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r8, r9);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r10, r11);

        $r12 = new com.google.common.collect.RegularImmutableBiMap;

        $r13 = newarray (java.lang.Object)[12];

        $r13[0] = r0;

        $r13[1] = r1;

        $r13[2] = r2;

        $r13[3] = r3;

        $r13[4] = r4;

        $r13[5] = r5;

        $r13[6] = r6;

        $r13[7] = r7;

        $r13[8] = r8;

        $r13[9] = r9;

        $r13[10] = r10;

        $r13[11] = r11;

        specialinvoke $r12.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r13, 6);

        return $r12;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r15;
        com.google.common.collect.RegularImmutableBiMap $r14;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        r8 := @parameter8: java.lang.Object;

        r9 := @parameter9: java.lang.Object;

        r10 := @parameter10: java.lang.Object;

        r11 := @parameter11: java.lang.Object;

        r12 := @parameter12: java.lang.Object;

        r13 := @parameter13: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r2, r3);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r4, r5);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r6, r7);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r8, r9);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r10, r11);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r12, r13);

        $r14 = new com.google.common.collect.RegularImmutableBiMap;

        $r15 = newarray (java.lang.Object)[14];

        $r15[0] = r0;

        $r15[1] = r1;

        $r15[2] = r2;

        $r15[3] = r3;

        $r15[4] = r4;

        $r15[5] = r5;

        $r15[6] = r6;

        $r15[7] = r7;

        $r15[8] = r8;

        $r15[9] = r9;

        $r15[10] = r10;

        $r15[11] = r11;

        $r15[12] = r12;

        $r15[13] = r13;

        specialinvoke $r14.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r15, 7);

        return $r14;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r17;
        com.google.common.collect.RegularImmutableBiMap $r16;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        r8 := @parameter8: java.lang.Object;

        r9 := @parameter9: java.lang.Object;

        r10 := @parameter10: java.lang.Object;

        r11 := @parameter11: java.lang.Object;

        r12 := @parameter12: java.lang.Object;

        r13 := @parameter13: java.lang.Object;

        r14 := @parameter14: java.lang.Object;

        r15 := @parameter15: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r2, r3);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r4, r5);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r6, r7);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r8, r9);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r10, r11);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r12, r13);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r14, r15);

        $r16 = new com.google.common.collect.RegularImmutableBiMap;

        $r17 = newarray (java.lang.Object)[16];

        $r17[0] = r0;

        $r17[1] = r1;

        $r17[2] = r2;

        $r17[3] = r3;

        $r17[4] = r4;

        $r17[5] = r5;

        $r17[6] = r6;

        $r17[7] = r7;

        $r17[8] = r8;

        $r17[9] = r9;

        $r17[10] = r10;

        $r17[11] = r11;

        $r17[12] = r12;

        $r17[13] = r13;

        $r17[14] = r14;

        $r17[15] = r15;

        specialinvoke $r16.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r17, 8);

        return $r16;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r19;
        com.google.common.collect.RegularImmutableBiMap $r18;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        r8 := @parameter8: java.lang.Object;

        r9 := @parameter9: java.lang.Object;

        r10 := @parameter10: java.lang.Object;

        r11 := @parameter11: java.lang.Object;

        r12 := @parameter12: java.lang.Object;

        r13 := @parameter13: java.lang.Object;

        r14 := @parameter14: java.lang.Object;

        r15 := @parameter15: java.lang.Object;

        r16 := @parameter16: java.lang.Object;

        r17 := @parameter17: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r2, r3);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r4, r5);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r6, r7);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r8, r9);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r10, r11);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r12, r13);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r14, r15);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r16, r17);

        $r18 = new com.google.common.collect.RegularImmutableBiMap;

        $r19 = newarray (java.lang.Object)[18];

        $r19[0] = r0;

        $r19[1] = r1;

        $r19[2] = r2;

        $r19[3] = r3;

        $r19[4] = r4;

        $r19[5] = r5;

        $r19[6] = r6;

        $r19[7] = r7;

        $r19[8] = r8;

        $r19[9] = r9;

        $r19[10] = r10;

        $r19[11] = r11;

        $r19[12] = r12;

        $r19[13] = r13;

        $r19[14] = r14;

        $r19[15] = r15;

        $r19[16] = r16;

        $r19[17] = r17;

        specialinvoke $r18.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r19, 9);

        return $r18;
    }

    public static com.google.common.collect.ImmutableBiMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r21;
        com.google.common.collect.RegularImmutableBiMap $r20;
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        r8 := @parameter8: java.lang.Object;

        r9 := @parameter9: java.lang.Object;

        r10 := @parameter10: java.lang.Object;

        r11 := @parameter11: java.lang.Object;

        r12 := @parameter12: java.lang.Object;

        r13 := @parameter13: java.lang.Object;

        r14 := @parameter14: java.lang.Object;

        r15 := @parameter15: java.lang.Object;

        r16 := @parameter16: java.lang.Object;

        r17 := @parameter17: java.lang.Object;

        r18 := @parameter18: java.lang.Object;

        r19 := @parameter19: java.lang.Object;

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r2, r3);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r4, r5);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r6, r7);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r8, r9);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r10, r11);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r12, r13);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r14, r15);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r16, r17);

        staticinvoke <com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r18, r19);

        $r20 = new com.google.common.collect.RegularImmutableBiMap;

        $r21 = newarray (java.lang.Object)[20];

        $r21[0] = r0;

        $r21[1] = r1;

        $r21[2] = r2;

        $r21[3] = r3;

        $r21[4] = r4;

        $r21[5] = r5;

        $r21[6] = r6;

        $r21[7] = r7;

        $r21[8] = r8;

        $r21[9] = r9;

        $r21[10] = r10;

        $r21[11] = r11;

        $r21[12] = r12;

        $r21[13] = r13;

        $r21[14] = r14;

        $r21[15] = r15;

        $r21[16] = r16;

        $r21[17] = r17;

        $r21[18] = r18;

        $r21[19] = r19;

        specialinvoke $r20.<com.google.common.collect.RegularImmutableBiMap: void <init>(java.lang.Object[],int)>($r21, 10);

        return $r20;
    }

    public static transient com.google.common.collect.ImmutableBiMap ofEntries(java.util.Map$Entry[])
    {
        com.google.common.collect.ImmutableBiMap $r2;
        java.util.List $r1;
        java.util.Map$Entry[] r0;

        r0 := @parameter0: java.util.Map$Entry[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap copyOf(java.lang.Iterable)>($r1);

        return $r2;
    }

    volatile com.google.common.collect.ImmutableCollection createValues()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet createValues()>();

        return $r1;
    }

    final com.google.common.collect.ImmutableSet createValues()
    {
        com.google.common.collect.ImmutableBiMap r0;
        java.lang.AssertionError $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("should never be called");

        throw $r1;
    }

    public final java.lang.Object forcePut(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableBiMap r0;
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object r1, r2;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public volatile com.google.common.collect.BiMap inverse()
    {
        com.google.common.collect.ImmutableBiMap r0;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        return r0;
    }

    public abstract com.google.common.collect.ImmutableBiMap inverse();

    public volatile com.google.common.collect.ImmutableCollection values()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet values()>();

        return $r1;
    }

    public com.google.common.collect.ImmutableSet values()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        r0 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet keySet()>();

        return $r1;
    }

    public volatile java.util.Collection values()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet values()>();

        return $r1;
    }

    public volatile java.util.Set values()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet values()>();

        return $r1;
    }

    java.lang.Object writeReplace()
    {
        com.google.common.collect.ImmutableBiMap r0;
        com.google.common.collect.ImmutableBiMap$SerializedForm $r1;

        r0 := @this: com.google.common.collect.ImmutableBiMap;

        $r1 = new com.google.common.collect.ImmutableBiMap$SerializedForm;

        specialinvoke $r1.<com.google.common.collect.ImmutableBiMap$SerializedForm: void <init>(com.google.common.collect.ImmutableBiMap)>(r0);

        return $r1;
    }
}
