public final class androidx.core.graphics.BitmapKt extends java.lang.Object
{

    public static final android.graphics.Bitmap applyCanvas(android.graphics.Bitmap, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r1;
        android.graphics.Canvas r2;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        r2 = new android.graphics.Canvas;

        specialinvoke r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        return $r0;
    }

    public static final boolean contains(android.graphics.Bitmap, android.graphics.Point)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1;
        android.graphics.Point $r1;
        boolean $z0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $r1 := @parameter1: android.graphics.Point;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "p");

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = $r1.<android.graphics.Point: int x>;

        if $i1 < 0 goto label1;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i0 = $r1.<android.graphics.Point: int y>;

        if $i0 < 0 goto label3;

        $i0 = $r1.<android.graphics.Point: int y>;

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        if $i0 >= $i1 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static final boolean contains(android.graphics.Bitmap, android.graphics.PointF)
    {
        android.graphics.PointF $r1;
        byte $b0;
        android.graphics.Bitmap $r0;
        int $i1;
        float $f0, $f1;

        $r0 := @parameter0: android.graphics.Bitmap;

        $r1 := @parameter1: android.graphics.PointF;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "p");

        $f0 = $r1.<android.graphics.PointF: float x>;

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 < 0 goto label1;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i1;

        $b0 = $f0 cmpg $f1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $f0 = $r1.<android.graphics.PointF: float y>;

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 < 0 goto label1;

        $f0 = $r1.<android.graphics.PointF: float y>;

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i1;

        $b0 = $f0 cmpg $f1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final android.graphics.Bitmap createBitmap(int, int, android.graphics.Bitmap$Config)
    {
        android.graphics.Bitmap $r1;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: android.graphics.Bitmap$Config;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "config");

        $r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "createBitmap(width, height, config)");

        return $r1;
    }

    public static final android.graphics.Bitmap createBitmap(int, int, android.graphics.Bitmap$Config, boolean, android.graphics.ColorSpace)
    {
        android.graphics.Bitmap $r2;
        int $i0, $i1;
        android.graphics.ColorSpace $r1;
        android.graphics.Bitmap$Config $r0;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: android.graphics.Bitmap$Config;

        $z0 := @parameter3: boolean;

        $r1 := @parameter4: android.graphics.ColorSpace;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "colorSpace");

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace)>($i0, $i1, $r0, $z0, $r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "createBitmap(width, heig\u2026ig, hasAlpha, colorSpace)");

        return $r2;
    }

    public static android.graphics.Bitmap createBitmap$default(int, int, android.graphics.Bitmap$Config, int, java.lang.Object)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        android.graphics.Bitmap$Config $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Bitmap$Config;

        $i2 := @parameter3: int;

        $r2 := @parameter4: java.lang.Object;

        $i2 = $i2 & 4;

        if $i2 == 0 goto label1;

        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "config");

        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "createBitmap(width, height, config)");

        return $r0;
    }

    public static android.graphics.Bitmap createBitmap$default(int, int, android.graphics.Bitmap$Config, boolean, android.graphics.ColorSpace, int, java.lang.Object)
    {
        android.graphics.ColorSpace$Named $r3;
        android.graphics.Bitmap$Config $r0;
        android.graphics.Bitmap $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        android.graphics.ColorSpace $r1;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: android.graphics.Bitmap$Config;

        $z0 := @parameter3: boolean;

        $r1 := @parameter4: android.graphics.ColorSpace;

        $i2 := @parameter5: int;

        $r2 := @parameter6: java.lang.Object;

        $i3 = $i2 & 4;

        if $i3 == 0 goto label1;

        $r0 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label1:
        $i3 = $i2 & 8;

        if $i3 == 0 goto label2;

        $z0 = 1;

     label2:
        $i2 = $i2 & 16;

        if $i2 == 0 goto label3;

        $r3 = <android.graphics.ColorSpace$Named: android.graphics.ColorSpace$Named SRGB>;

        $r1 = staticinvoke <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "get(ColorSpace.Named.SRGB)");

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "colorSpace");

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace)>($i0, $i1, $r0, $z0, $r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "createBitmap(width, heig\u2026ig, hasAlpha, colorSpace)");

        return $r4;
    }

    public static final int get(android.graphics.Bitmap, int, int)
    {
        int $i0, $i1;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getPixel(int,int)>($i0, $i1);

        return $i0;
    }

    public static final android.graphics.Bitmap scale(android.graphics.Bitmap, int, int, boolean)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, $i0, $i1, $z0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "createScaledBitmap(this, width, height, filter)");

        return $r0;
    }

    public static android.graphics.Bitmap scale$default(android.graphics.Bitmap, int, int, boolean, int, java.lang.Object)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        $r1 := @parameter5: java.lang.Object;

        $i2 = $i2 & 4;

        if $i2 == 0 goto label1;

        $z0 = 1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, $i0, $i1, $z0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "createScaledBitmap(this, width, height, filter)");

        return $r0;
    }

    public static final void set(android.graphics.Bitmap, int, int, int)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1, $i2;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r0.<android.graphics.Bitmap: void setPixel(int,int,int)>($i0, $i1, $i2);

        return;
    }
}
