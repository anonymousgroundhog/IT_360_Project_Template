public final class androidx.core.content.res.ColorStateListInflaterCompat extends java.lang.Object
{
    private static final java.lang.ThreadLocal sTempTypedValue;

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue> = $r0;

        return;
    }

    private void <init>()
    {
        androidx.core.content.res.ColorStateListInflaterCompat r0;

        r0 := @this: androidx.core.content.res.ColorStateListInflaterCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.res.ColorStateList createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.ColorStateList $r4;
        org.xmlpull.v1.XmlPullParserException $r5;
        android.util.AttributeSet $r3;
        int $i0;
        android.content.res.Resources$Theme $r2;
        android.content.res.Resources $r0;
        org.xmlpull.v1.XmlPullParser $r1;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r1);

     label1:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 2 goto label2;

        if $i0 == 1 goto label2;

        goto label1;

     label2:
        if $i0 != 2 goto label3;

        $r4 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r1, $r3, $r2);

        return $r4;

     label3:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r5;
    }

    public static android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.ColorStateList $r5;
        org.xmlpull.v1.XmlPullParserException $r6;
        android.util.AttributeSet $r2;
        java.lang.StringBuilder $r7;
        java.lang.String $r4, $r8;
        android.content.res.Resources$Theme $r3;
        android.content.res.Resources $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.util.AttributeSet;

        $r3 := @parameter3: android.content.res.Resources$Theme;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("selector");

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r1, $r2, $r3);

        return $r5;

     label1:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid color state list tag ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4);

        throw $r6;
    }

    private static android.util.TypedValue getTypedValue()
    {
        java.lang.Object $r0;
        java.lang.ThreadLocal r1;
        android.util.TypedValue r2;

        r1 = <androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue>;

        $r0 = virtualinvoke r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (android.util.TypedValue) $r0;

        if r2 != null goto label1;

        r2 = new android.util.TypedValue;

        specialinvoke r2.<android.util.TypedValue: void <init>()>();

        r1 = <androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue>;

        virtualinvoke r1.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

     label1:
        return r2;
    }

    public static android.content.res.ColorStateList inflate(android.content.res.Resources, int, android.content.res.Resources$Theme)
    {
        android.content.res.ColorStateList $r3;
        int $i0;
        android.content.res.XmlResourceParser $r2;
        android.content.res.Resources$Theme $r1;
        java.lang.Exception r4;
        android.content.res.Resources $r0;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.content.res.Resources$Theme;

     label1:
        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

        $r3 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>($r0, $r2, $r1);

     label2:
        return $r3;

     label3:
        r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CSLCompat", "Failed to inflate ColorStateList.", r4);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static android.content.res.ColorStateList inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int[][] r6, r15;
        java.lang.Object[] $r14;
        android.content.res.XmlResourceParser $r11;
        android.content.res.TypedArray $r10;
        android.content.res.ColorStateList $r12, $r16;
        android.util.AttributeSet $r2;
        int[] r7, r9;
        int $i0, i1, $i2, $i3, $i4, i5, $i6, i7;
        java.lang.String $r8;
        android.content.res.Resources$Theme $r3, r5;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;
        java.lang.Exception r13;
        float f0, $f1;
        android.content.res.Resources $r0, r4;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.util.AttributeSet;

        $r3 := @parameter3: android.content.res.Resources$Theme;

        r4 = $r0;

        r5 = $r3;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i1 = $i0 + 1;

        r6 = newarray (int[])[20];

        $i0 = lengthof r6;

        r7 = newarray (int)[$i0];

        $i0 = 0;

     label01:
        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i2 == 1 goto label21;

        $i3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 >= i1 goto label03;

        if $i2 == 3 goto label02;

        goto label03;

     label02:
        goto label21;

     label03:
        if $i2 != 2 goto label20;

        if $i3 > i1 goto label20;

        $r8 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label04;

        goto label20;

     label04:
        r9 = <androidx.core.R$styleable: int[] ColorStateListItem>;

        $r10 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r4, r5, $r2, r9);

        $i2 = <androidx.core.R$styleable: int ColorStateListItem_android_color>;

        $i2 = virtualinvoke $r10.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, -1);

        if $i2 == -1 goto label09;

        $z0 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)>(r4, $i2);

        if $z0 != 0 goto label09;

     label05:
        $r11 = virtualinvoke r4.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i2);

        $r12 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>(r4, $r11, r5);

        $i2 = virtualinvoke $r12.<android.content.res.ColorStateList: int getDefaultColor()>();

     label06:
        goto label08;

     label07:
        r13 := @caughtexception;

        $i2 = <androidx.core.R$styleable: int ColorStateListItem_android_color>;

        $i2 = virtualinvoke $r10.<android.content.res.TypedArray: int getColor(int,int)>($i2, -65281);

     label08:
        goto label10;

     label09:
        $i2 = <androidx.core.R$styleable: int ColorStateListItem_android_color>;

        $i2 = virtualinvoke $r10.<android.content.res.TypedArray: int getColor(int,int)>($i2, -65281);

     label10:
        f0 = 1.0F;

        $i3 = <androidx.core.R$styleable: int ColorStateListItem_android_alpha>;

        $z0 = virtualinvoke $r10.<android.content.res.TypedArray: boolean hasValue(int)>($i3);

        if $z0 == 0 goto label11;

        $i3 = <androidx.core.R$styleable: int ColorStateListItem_android_alpha>;

        f0 = virtualinvoke $r10.<android.content.res.TypedArray: float getFloat(int,float)>($i3, 1.0F);

        goto label12;

     label11:
        $i3 = <androidx.core.R$styleable: int ColorStateListItem_alpha>;

        $z0 = virtualinvoke $r10.<android.content.res.TypedArray: boolean hasValue(int)>($i3);

        if $z0 == 0 goto label12;

        $i3 = <androidx.core.R$styleable: int ColorStateListItem_alpha>;

        f0 = virtualinvoke $r10.<android.content.res.TypedArray: float getFloat(int,float)>($i3, 1.0F);

     label12:
        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 31 goto label13;

        $i3 = <androidx.core.R$styleable: int ColorStateListItem_android_lStar>;

        $z0 = virtualinvoke $r10.<android.content.res.TypedArray: boolean hasValue(int)>($i3);

        if $z0 == 0 goto label13;

        $i3 = <androidx.core.R$styleable: int ColorStateListItem_android_lStar>;

        $f1 = virtualinvoke $r10.<android.content.res.TypedArray: float getFloat(int,float)>($i3, -1.0F);

        goto label14;

     label13:
        $i3 = <androidx.core.R$styleable: int ColorStateListItem_lStar>;

        $f1 = virtualinvoke $r10.<android.content.res.TypedArray: float getFloat(int,float)>($i3, -1.0F);

     label14:
        virtualinvoke $r10.<android.content.res.TypedArray: void recycle()>();

        $i3 = 0;

        $i4 = interfaceinvoke $r2.<android.util.AttributeSet: int getAttributeCount()>();

        r9 = newarray (int)[$i4];

        i5 = 0;

     label15:
        if i5 >= $i4 goto label19;

        $i6 = interfaceinvoke $r2.<android.util.AttributeSet: int getAttributeNameResource(int)>(i5);

        if $i6 == 16843173 goto label18;

        if $i6 == 16843551 goto label18;

        i7 = <androidx.core.R$attr: int alpha>;

        if $i6 == i7 goto label18;

        i7 = <androidx.core.R$attr: int lStar>;

        if $i6 == i7 goto label18;

        i7 = $i3 + 1;

        $z0 = interfaceinvoke $r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i5, 0);

        if $z0 == 0 goto label16;

        goto label17;

     label16:
        $i6 = neg $i6;

     label17:
        r9[$i3] = $i6;

        $i3 = i7;

     label18:
        i5 = i5 + 1;

        goto label15;

     label19:
        r9 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>(r9, $i3);

        $i2 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)>($i2, f0, $f1);

        r7 = staticinvoke <androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)>(r7, $i0, $i2);

        $r14 = staticinvoke <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>(r6, $i0, r9);

        r6 = (int[][]) $r14;

        $i0 = $i0 + 1;

        r4 = $r0;

        r5 = $r3;

        goto label01;

     label20:
        r4 = $r0;

        r5 = $r3;

        goto label01;

     label21:
        r9 = newarray (int)[$i0];

        r15 = newarray (int[])[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r9, 0, $i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r15, 0, $i0);

        $r16 = new android.content.res.ColorStateList;

        specialinvoke $r16.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r15, r9);

        return $r16;

        catch java.lang.Exception from label05 to label06 with label07;
    }

    private static boolean isColorInt(android.content.res.Resources, int)
    {
        int $i0;
        android.util.TypedValue $r1;
        android.content.res.Resources $r0;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()>();

        virtualinvoke $r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $i0 = $r1.<android.util.TypedValue: int type>;

        if $i0 < 28 goto label1;

        $i0 = $r1.<android.util.TypedValue: int type>;

        if $i0 > 31 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static int modulateColorAlpha(int, float, float)
    {
        androidx.core.content.res.CamColor $r0;
        byte b1;
        int $i0, $i2;
        float $f0, $f1, f2;
        boolean z0;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        b1 = $f1 cmpl 0.0F;

        $i2 = (int) b1;

        if $i2 < 0 goto label1;

        b1 = $f1 cmpg 100.0F;

        $i2 = (int) b1;

        if $i2 > 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        b1 = $f0 cmpl 1.0F;

        if b1 != 0 goto label3;

        if z0 != 0 goto label3;

        return $i0;

     label3:
        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        f2 = (float) $i2;

        $f0 = f2 * $f0;

        $f0 = $f0 + 0.5F;

        $i2 = (int) $f0;

        $i2 = staticinvoke <androidx.core.math.MathUtils: int clamp(int,int,int)>($i2, 0, 255);

        if z0 == 0 goto label4;

        $r0 = staticinvoke <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColor(int)>($i0);

        $f0 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getHue()>();

        f2 = virtualinvoke $r0.<androidx.core.content.res.CamColor: float getChroma()>();

        $i0 = staticinvoke <androidx.core.content.res.CamColor: int toColor(float,float,float)>($f0, f2, $f1);

     label4:
        $i0 = 16777215 & $i0;

        $i2 = $i2 << 24;

        $i0 = $i0 | $i2;

        return $i0;
    }

    private static android.content.res.TypedArray obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[])
    {
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.Resources$Theme $r1;
        android.content.res.Resources $r0;
        android.content.res.TypedArray $r4;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: android.content.res.Resources$Theme;

        $r2 := @parameter2: android.util.AttributeSet;

        $r3 := @parameter3: int[];

        if $r1 != null goto label1;

        $r4 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        return $r4;

     label1:
        $r4 = virtualinvoke $r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, 0, 0);

        return $r4;
    }
}
