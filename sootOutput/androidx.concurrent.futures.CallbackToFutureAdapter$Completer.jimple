public final class androidx.concurrent.futures.CallbackToFutureAdapter$Completer extends java.lang.Object
{
    private boolean attemptedSetting;
    private androidx.concurrent.futures.ResolvableFuture cancellationFuture;
    androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture future;
    java.lang.Object tag;

    void <init>()
    {
        androidx.concurrent.futures.ResolvableFuture $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r0;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.ResolvableFuture cancellationFuture> = $r1;

        return;
    }

    private void setCompletedNormally()
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r0;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: java.lang.Object tag> = null;

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture future> = null;

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.ResolvableFuture cancellationFuture> = null;

        return;
    }

    public void addCancellationListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r0;
        java.util.concurrent.Executor $r2;
        androidx.concurrent.futures.ResolvableFuture r3;
        java.lang.Runnable $r1;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 := @parameter1: java.util.concurrent.Executor;

        r3 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.ResolvableFuture cancellationFuture>;

        if r3 == null goto label1;

        interfaceinvoke r3.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r1, $r2);

     label1:
        return;
    }

    protected void finalize()
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException r2;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r1;
        androidx.concurrent.futures.ResolvableFuture r6;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r0;
        java.lang.StringBuilder $r3;
        java.lang.Object $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r1 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture future>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean isDone()>();

        if $z0 != 0 goto label1;

        r2 = new androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The completer object was garbage collected - this future would otherwise never complete. The tag was: ");

        $r4 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: java.lang.Object tag>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException: void <init>(java.lang.String)>($r5);

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean setException(java.lang.Throwable)>(r2);

     label1:
        $z0 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean attemptedSetting>;

        if $z0 != 0 goto label2;

        r6 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.ResolvableFuture cancellationFuture>;

        if r6 == null goto label2;

        virtualinvoke r6.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>(null);

     label2:
        return;
    }

    void fireCancellationListeners()
    {
        androidx.concurrent.futures.ResolvableFuture $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r0;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: java.lang.Object tag> = null;

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture future> = null;

        $r1 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.ResolvableFuture cancellationFuture>;

        virtualinvoke $r1.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>(null);

        return;
    }

    public boolean set(java.lang.Object)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r2;
        java.lang.Object r1;
        boolean $z0, z1;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r1 := @parameter0: java.lang.Object;

        z1 = 1;

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean attemptedSetting> = 1;

        r2 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture future>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean set(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label3;

        specialinvoke r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void setCompletedNormally()>();

     label3:
        return z1;
    }

    public boolean setCancelled()
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r1;
        boolean $z0, z1;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        z1 = 1;

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean attemptedSetting> = 1;

        r1 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture future>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean cancelWithoutNotifyingCompleter(boolean)>(1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label3;

        specialinvoke r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void setCompletedNormally()>();

     label3:
        return z1;
    }

    public boolean setException(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r2;
        boolean $z0, z1;

        r0 := @this: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r1 := @parameter0: java.lang.Throwable;

        z1 = 1;

        r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean attemptedSetting> = 1;

        r2 = r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture future>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean setException(java.lang.Throwable)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label3;

        specialinvoke r0.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void setCompletedNormally()>();

     label3:
        return z1;
    }
}
