public final class com.google.common.util.concurrent.ListeningScheduledExecutorService$-CC extends java.lang.Object
{

    public static volatile java.util.concurrent.ScheduledFuture $default$schedule(com.google.common.util.concurrent.ListeningScheduledExecutorService, java.lang.Runnable, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.ListenableScheduledFuture $r2;
        long $l0;
        com.google.common.util.concurrent.ListeningScheduledExecutorService $r0;
        java.lang.Runnable $r3;

        $r0 := @parameter0: com.google.common.util.concurrent.ListeningScheduledExecutorService;

        $r3 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $r1 := @parameter3: java.util.concurrent.TimeUnit;

        $r2 = interfaceinvoke $r0.<com.google.common.util.concurrent.ListeningScheduledExecutorService: com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r3, $l0, $r1);

        return $r2;
    }

    public static volatile java.util.concurrent.ScheduledFuture $default$schedule(com.google.common.util.concurrent.ListeningScheduledExecutorService, java.util.concurrent.Callable, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.ListenableScheduledFuture $r2;
        long $l0;
        java.util.concurrent.Callable $r3;
        com.google.common.util.concurrent.ListeningScheduledExecutorService $r0;

        $r0 := @parameter0: com.google.common.util.concurrent.ListeningScheduledExecutorService;

        $r3 := @parameter1: java.util.concurrent.Callable;

        $l0 := @parameter2: long;

        $r1 := @parameter3: java.util.concurrent.TimeUnit;

        $r2 = interfaceinvoke $r0.<com.google.common.util.concurrent.ListeningScheduledExecutorService: com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>($r3, $l0, $r1);

        return $r2;
    }

    public static volatile java.util.concurrent.ScheduledFuture $default$scheduleAtFixedRate(com.google.common.util.concurrent.ListeningScheduledExecutorService, java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.ListenableScheduledFuture $r2;
        long $l0, $l1;
        com.google.common.util.concurrent.ListeningScheduledExecutorService $r0;
        java.lang.Runnable $r3;

        $r0 := @parameter0: com.google.common.util.concurrent.ListeningScheduledExecutorService;

        $r3 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $l1 := @parameter3: long;

        $r1 := @parameter4: java.util.concurrent.TimeUnit;

        $r2 = interfaceinvoke $r0.<com.google.common.util.concurrent.ListeningScheduledExecutorService: com.google.common.util.concurrent.ListenableScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r3, $l0, $l1, $r1);

        return $r2;
    }

    public static volatile java.util.concurrent.ScheduledFuture $default$scheduleWithFixedDelay(com.google.common.util.concurrent.ListeningScheduledExecutorService, java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.ListenableScheduledFuture $r2;
        long $l0, $l1;
        com.google.common.util.concurrent.ListeningScheduledExecutorService $r0;
        java.lang.Runnable $r3;

        $r0 := @parameter0: com.google.common.util.concurrent.ListeningScheduledExecutorService;

        $r3 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $l1 := @parameter3: long;

        $r1 := @parameter4: java.util.concurrent.TimeUnit;

        $r2 = interfaceinvoke $r0.<com.google.common.util.concurrent.ListeningScheduledExecutorService: com.google.common.util.concurrent.ListenableScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r3, $l0, $l1, $r1);

        return $r2;
    }
}
