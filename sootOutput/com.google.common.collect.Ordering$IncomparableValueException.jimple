class com.google.common.collect.Ordering$IncomparableValueException extends java.lang.ClassCastException
{
    private static final long serialVersionUID;
    final java.lang.Object value;

    void <init>(java.lang.Object)
    {
        com.google.common.collect.Ordering$IncomparableValueException r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.google.common.collect.Ordering$IncomparableValueException;

        $r1 := @parameter0: java.lang.Object;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + 22;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot compare value: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.ClassCastException: void <init>(java.lang.String)>($r3);

        r0.<com.google.common.collect.Ordering$IncomparableValueException: java.lang.Object value> = $r1;

        return;
    }
}
