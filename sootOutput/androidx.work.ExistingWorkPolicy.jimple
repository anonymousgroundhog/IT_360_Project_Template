public final enum class androidx.work.ExistingWorkPolicy extends java.lang.Enum
{
    private static final androidx.work.ExistingWorkPolicy[] $VALUES;
    public static final enum androidx.work.ExistingWorkPolicy APPEND;
    public static final enum androidx.work.ExistingWorkPolicy APPEND_OR_REPLACE;
    public static final enum androidx.work.ExistingWorkPolicy KEEP;
    public static final enum androidx.work.ExistingWorkPolicy REPLACE;

    static void <clinit>()
    {
        androidx.work.ExistingWorkPolicy $r0;
        androidx.work.ExistingWorkPolicy[] $r1;

        $r0 = new androidx.work.ExistingWorkPolicy;

        specialinvoke $r0.<androidx.work.ExistingWorkPolicy: void <init>(java.lang.String,int)>("REPLACE", 0);

        <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy REPLACE> = $r0;

        $r0 = new androidx.work.ExistingWorkPolicy;

        specialinvoke $r0.<androidx.work.ExistingWorkPolicy: void <init>(java.lang.String,int)>("KEEP", 1);

        <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy KEEP> = $r0;

        $r0 = new androidx.work.ExistingWorkPolicy;

        specialinvoke $r0.<androidx.work.ExistingWorkPolicy: void <init>(java.lang.String,int)>("APPEND", 2);

        <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND> = $r0;

        $r0 = new androidx.work.ExistingWorkPolicy;

        specialinvoke $r0.<androidx.work.ExistingWorkPolicy: void <init>(java.lang.String,int)>("APPEND_OR_REPLACE", 3);

        <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND_OR_REPLACE> = $r0;

        $r1 = newarray (androidx.work.ExistingWorkPolicy)[4];

        $r0 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy REPLACE>;

        $r1[0] = $r0;

        $r0 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy KEEP>;

        $r1[1] = $r0;

        $r0 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND>;

        $r1[2] = $r0;

        $r0 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND_OR_REPLACE>;

        $r1[3] = $r0;

        <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        androidx.work.ExistingWorkPolicy r0;

        r0 := @this: androidx.work.ExistingWorkPolicy;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        androidx.work.ExistingWorkPolicy $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/work/ExistingWorkPolicy;", $r0);

        $r2 = (androidx.work.ExistingWorkPolicy) $r1;

        return $r2;
    }

    public static androidx.work.ExistingWorkPolicy[] values()
    {
        java.lang.Object $r0;
        androidx.work.ExistingWorkPolicy[] $r1;

        $r1 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (androidx.work.ExistingWorkPolicy[]) $r0;

        return $r1;
    }
}
