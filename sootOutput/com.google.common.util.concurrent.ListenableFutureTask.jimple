public class com.google.common.util.concurrent.ListenableFutureTask extends java.util.concurrent.FutureTask implements com.google.common.util.concurrent.ListenableFuture
{
    private final com.google.common.util.concurrent.ExecutionList executionList;

    void <init>(java.lang.Runnable, java.lang.Object)
    {
        com.google.common.util.concurrent.ListenableFutureTask r0;
        java.lang.Object r2;
        com.google.common.util.concurrent.ExecutionList $r3;
        java.lang.Runnable $r1;

        r0 := @this: com.google.common.util.concurrent.ListenableFutureTask;

        $r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.lang.Runnable,java.lang.Object)>($r1, r2);

        $r3 = new com.google.common.util.concurrent.ExecutionList;

        specialinvoke $r3.<com.google.common.util.concurrent.ExecutionList: void <init>()>();

        r0.<com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ExecutionList executionList> = $r3;

        return;
    }

    void <init>(java.util.concurrent.Callable)
    {
        java.util.concurrent.Callable r1;
        com.google.common.util.concurrent.ListenableFutureTask r0;
        com.google.common.util.concurrent.ExecutionList $r2;

        r0 := @this: com.google.common.util.concurrent.ListenableFutureTask;

        r1 := @parameter0: java.util.concurrent.Callable;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r1);

        $r2 = new com.google.common.util.concurrent.ExecutionList;

        specialinvoke $r2.<com.google.common.util.concurrent.ExecutionList: void <init>()>();

        r0.<com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ExecutionList executionList> = $r2;

        return;
    }

    public static com.google.common.util.concurrent.ListenableFutureTask create(java.lang.Runnable, java.lang.Object)
    {
        java.lang.Object r1;
        com.google.common.util.concurrent.ListenableFutureTask $r2;
        java.lang.Runnable $r0;

        $r0 := @parameter0: java.lang.Runnable;

        r1 := @parameter1: java.lang.Object;

        $r2 = new com.google.common.util.concurrent.ListenableFutureTask;

        specialinvoke $r2.<com.google.common.util.concurrent.ListenableFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>($r0, r1);

        return $r2;
    }

    public static com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)
    {
        java.util.concurrent.Callable r0;
        com.google.common.util.concurrent.ListenableFutureTask $r1;

        r0 := @parameter0: java.util.concurrent.Callable;

        $r1 = new com.google.common.util.concurrent.ListenableFutureTask;

        specialinvoke $r1.<com.google.common.util.concurrent.ListenableFutureTask: void <init>(java.util.concurrent.Callable)>(r0);

        return $r1;
    }

    public void addListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ListenableFutureTask r0;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.ExecutionList $r3;
        java.lang.Runnable $r1;

        r0 := @this: com.google.common.util.concurrent.ListenableFutureTask;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = r0.<com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ExecutionList executionList>;

        virtualinvoke $r3.<com.google.common.util.concurrent.ExecutionList: void add(java.lang.Runnable,java.util.concurrent.Executor)>($r1, $r2);

        return;
    }

    protected void done()
    {
        com.google.common.util.concurrent.ListenableFutureTask r0;
        com.google.common.util.concurrent.ExecutionList $r1;

        r0 := @this: com.google.common.util.concurrent.ListenableFutureTask;

        $r1 = r0.<com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ExecutionList executionList>;

        virtualinvoke $r1.<com.google.common.util.concurrent.ExecutionList: void execute()>();

        return;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException, java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.util.concurrent.TimeUnit $r1;
        com.google.common.util.concurrent.ListenableFutureTask r0;
        byte $b2;
        int $i3;
        long $l0, $l1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.util.concurrent.ListenableFutureTask;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $l1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toNanos(long)>($l0);

        $b2 = $l1 cmp 2147483647999999999L;

        $i3 = (int) $b2;

        if $i3 > 0 goto label1;

        $r2 = specialinvoke r0.<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return $r2;

     label1:
        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l1, 2147483647999999999L);

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r2 = specialinvoke r0.<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return $r2;
    }
}
