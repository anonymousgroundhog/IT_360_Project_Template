final enum class com.google.common.util.concurrent.ExecutionSequencer$RunningState extends java.lang.Enum
{
    private static final com.google.common.util.concurrent.ExecutionSequencer$RunningState[] $VALUES;
    public static final enum com.google.common.util.concurrent.ExecutionSequencer$RunningState CANCELLED;
    public static final enum com.google.common.util.concurrent.ExecutionSequencer$RunningState NOT_RUN;
    public static final enum com.google.common.util.concurrent.ExecutionSequencer$RunningState STARTED;

    private static com.google.common.util.concurrent.ExecutionSequencer$RunningState[] $values()
    {
        com.google.common.util.concurrent.ExecutionSequencer$RunningState[] $r0;
        com.google.common.util.concurrent.ExecutionSequencer$RunningState $r1;

        $r0 = newarray (com.google.common.util.concurrent.ExecutionSequencer$RunningState)[3];

        $r1 = <com.google.common.util.concurrent.ExecutionSequencer$RunningState: com.google.common.util.concurrent.ExecutionSequencer$RunningState NOT_RUN>;

        $r0[0] = $r1;

        $r1 = <com.google.common.util.concurrent.ExecutionSequencer$RunningState: com.google.common.util.concurrent.ExecutionSequencer$RunningState CANCELLED>;

        $r0[1] = $r1;

        $r1 = <com.google.common.util.concurrent.ExecutionSequencer$RunningState: com.google.common.util.concurrent.ExecutionSequencer$RunningState STARTED>;

        $r0[2] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        com.google.common.util.concurrent.ExecutionSequencer$RunningState[] $r0;
        com.google.common.util.concurrent.ExecutionSequencer$RunningState $r1;

        $r1 = new com.google.common.util.concurrent.ExecutionSequencer$RunningState;

        specialinvoke $r1.<com.google.common.util.concurrent.ExecutionSequencer$RunningState: void <init>(java.lang.String,int)>("NOT_RUN", 0);

        <com.google.common.util.concurrent.ExecutionSequencer$RunningState: com.google.common.util.concurrent.ExecutionSequencer$RunningState NOT_RUN> = $r1;

        $r1 = new com.google.common.util.concurrent.ExecutionSequencer$RunningState;

        specialinvoke $r1.<com.google.common.util.concurrent.ExecutionSequencer$RunningState: void <init>(java.lang.String,int)>("CANCELLED", 1);

        <com.google.common.util.concurrent.ExecutionSequencer$RunningState: com.google.common.util.concurrent.ExecutionSequencer$RunningState CANCELLED> = $r1;

        $r1 = new com.google.common.util.concurrent.ExecutionSequencer$RunningState;

        specialinvoke $r1.<com.google.common.util.concurrent.ExecutionSequencer$RunningState: void <init>(java.lang.String,int)>("STARTED", 2);

        <com.google.common.util.concurrent.ExecutionSequencer$RunningState: com.google.common.util.concurrent.ExecutionSequencer$RunningState STARTED> = $r1;

        $r0 = staticinvoke <com.google.common.util.concurrent.ExecutionSequencer$RunningState: com.google.common.util.concurrent.ExecutionSequencer$RunningState[] $values()>();

        <com.google.common.util.concurrent.ExecutionSequencer$RunningState: com.google.common.util.concurrent.ExecutionSequencer$RunningState[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        com.google.common.util.concurrent.ExecutionSequencer$RunningState r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.util.concurrent.ExecutionSequencer$RunningState;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.google.common.util.concurrent.ExecutionSequencer$RunningState valueOf(java.lang.String)
    {
        java.lang.String $r0;
        com.google.common.util.concurrent.ExecutionSequencer$RunningState $r2;
        java.lang.Enum $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;", $r0);

        $r2 = (com.google.common.util.concurrent.ExecutionSequencer$RunningState) $r1;

        return $r2;
    }

    public static com.google.common.util.concurrent.ExecutionSequencer$RunningState[] values()
    {
        java.lang.Object $r0;
        com.google.common.util.concurrent.ExecutionSequencer$RunningState[] $r1;

        $r1 = <com.google.common.util.concurrent.ExecutionSequencer$RunningState: com.google.common.util.concurrent.ExecutionSequencer$RunningState[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.google.common.util.concurrent.ExecutionSequencer$RunningState[]) $r0;

        return $r1;
    }
}
