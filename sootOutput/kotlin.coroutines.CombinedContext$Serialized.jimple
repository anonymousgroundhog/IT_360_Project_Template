final class kotlin.coroutines.CombinedContext$Serialized extends java.lang.Object implements java.io.Serializable
{
    public static final kotlin.coroutines.CombinedContext$Serialized$Companion Companion;
    private static final long serialVersionUID;
    private final kotlin.coroutines.CoroutineContext[] elements;

    static void <clinit>()
    {
        kotlin.coroutines.CombinedContext$Serialized$Companion $r0;

        $r0 = new kotlin.coroutines.CombinedContext$Serialized$Companion;

        specialinvoke $r0.<kotlin.coroutines.CombinedContext$Serialized$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CombinedContext$Serialized$Companion Companion> = $r0;

        return;
    }

    public void <init>(kotlin.coroutines.CoroutineContext[])
    {
        kotlin.coroutines.CombinedContext$Serialized r0;
        kotlin.coroutines.CoroutineContext[] $r1;

        r0 := @this: kotlin.coroutines.CombinedContext$Serialized;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CoroutineContext[] elements> = $r1;

        return;
    }

    private final java.lang.Object readResolve()
    {
        kotlin.coroutines.CombinedContext$Serialized r0;
        kotlin.coroutines.CoroutineContext[] $r1;
        int $i0, $i1;
        kotlin.coroutines.CoroutineContext r2, r3;

        r0 := @this: kotlin.coroutines.CombinedContext$Serialized;

        $r1 = r0.<kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CoroutineContext[] elements>;

        r3 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r1[$i1];

        r3 = interfaceinvoke r3.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>(r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return r3;
    }

    public final kotlin.coroutines.CoroutineContext[] getElements()
    {
        kotlin.coroutines.CombinedContext$Serialized r0;
        kotlin.coroutines.CoroutineContext[] r1;

        r0 := @this: kotlin.coroutines.CombinedContext$Serialized;

        r1 = r0.<kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CoroutineContext[] elements>;

        return r1;
    }
}
